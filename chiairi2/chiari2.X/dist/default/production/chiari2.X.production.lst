

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Jun 28 19:47:47 2025

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    22                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24   000000                     
    25                           ; Version 2.40
    26                           ; Generated 17/11/2021 GMT
    27                           ; 
    28                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F4550 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60   000000                     _EECON2	set	4007
    61   000000                     _EEDATA	set	4008
    62   000000                     _ADRESL	set	4035
    63   000000                     _ADRESH	set	4036
    64   000000                     _TMR1L	set	4046
    65   000000                     _TMR1H	set	4047
    66   000000                     _TMR0L	set	4054
    67   000000                     _TMR0H	set	4055
    68   000000                     _INTCON2bits	set	4081
    69   000000                     _TMR0IF	set	32658
    70   000000                     _UCONbits	set	3949
    71   000000                     _CMCON	set	4020
    72   000000                     _OSCCONbits	set	4051
    73   000000                     _T0CONbits	set	4053
    74   000000                     _BAUDCONbits	set	4024
    75   000000                     _CCP2CONbits	set	4026
    76   000000                     _CCP1CONbits	set	4029
    77   000000                     _T2CONbits	set	4042
    78   000000                     _T1CONbits	set	4045
    79   000000                     _RCONbits	set	4048
    80   000000                     _UCFGbits	set	3951
    81   000000                     _PORTBbits	set	3969
    82   000000                     _PORTCbits	set	3970
    83   000000                     _PORTDbits	set	3971
    84   000000                     _TRISAbits	set	3986
    85   000000                     _TRISBbits	set	3987
    86   000000                     _TRISCbits	set	3988
    87   000000                     _INTCONbits	set	4082
    88   000000                     _PR2	set	4043
    89   000000                     _ADCON2bits	set	4032
    90   000000                     _ADCON1bits	set	4033
    91   000000                     _ADCON0bits	set	4034
    92   000000                     _CCPR1L	set	4030
    93   000000                     _CCPR2L	set	4027
    94   000000                     _EECON1bits	set	4006
    95   000000                     _EEADR	set	4009
    96   000000                     _TRISEbits	set	3990
    97   000000                     _TRISDbits	set	3989
    98   000000                     _RCSTAbits	set	4011
    99   000000                     _TXSTAbits	set	4012
   100   000000                     _SPBRG	set	4015
   101   000000                     _TXIF	set	31988
   102   000000                     _EEIF	set	32012
   103   000000                     _SPBRGH	set	4016
   104   000000                     _TXREG	set	4013
   105                           
   106                           ; #config settings
   107                           
   108                           	psect	cinit
   109   000692                     __pcinit:
   110                           	callstack 0
   111   000692                     start_initialization:
   112                           	callstack 0
   113   000692                     __initialization:
   114                           	callstack 0
   115                           
   116                           ; Clear objects allocated to BANK1 (256 bytes)
   117   000692  EE01  F000         	lfsr	0,__pbssBANK1
   118   000696  EE11 F000          	lfsr	1,256
   119   00069A                     clear_0:
   120   00069A  6AEE               	clrf	postinc0,c
   121   00069C  50E5               	movf	postdec1,w,c
   122   00069E  50E1               	movf	fsr1l,w,c
   123   0006A0  E1FC               	bnz	clear_0
   124   0006A2  50E2               	movf	fsr1h,w,c
   125   0006A4  E1FA               	bnz	clear_0
   126                           
   127                           ; Clear objects allocated to COMRAM (68 bytes)
   128   0006A6  EE00  F001         	lfsr	0,__pbssCOMRAM
   129   0006AA  0E44               	movlw	68
   130   0006AC                     clear_1:
   131   0006AC  6AEE               	clrf	postinc0,c
   132   0006AE  06E8               	decf	wreg,f,c
   133   0006B0  E1FD               	bnz	clear_1
   134   0006B2                     end_of_initialization:
   135                           	callstack 0
   136   0006B2                     __end_of__initialization:
   137                           	callstack 0
   138   0006B2  9058               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   139   0006B4  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   140   0006B6  0100               	movlb	0
   141   0006B8  EF6F  F003         	goto	_main	;jump to C main() function
   142                           
   143                           	psect	bssCOMRAM
   144   000001                     __pbssCOMRAM:
   145                           	callstack 0
   146   000001                     _counter:
   147                           	callstack 0
   148   000001                     	ds	40
   149   000029                     _an_input:
   150                           	callstack 0
   151   000029                     	ds	20
   152   00003D                     _pwm:
   153                           	callstack 0
   154   00003D                     	ds	4
   155   000041                     _value:
   156                           	callstack 0
   157   000041                     	ds	2
   158   000043                     _flag_b2:
   159                           	callstack 0
   160   000043                     	ds	1
   161   000044                     _flag_b1:
   162                           	callstack 0
   163   000044                     	ds	1
   164                           
   165                           	psect	bssBANK1
   166   000100                     __pbssBANK1:
   167                           	callstack 0
   168   000100                     _persisted_data:
   169                           	callstack 0
   170   000100                     	ds	256
   171                           
   172                           	psect	cstackCOMRAM
   173   000045                     __pcstackCOMRAM:
   174                           	callstack 0
   175   000045                     ??_enc:
   176   000045                     
   177                           ; 1 bytes @ 0x0
   178   000045                     	ds	4
   179   000049                     enc@i:
   180                           	callstack 0
   181                           
   182                           ; 2 bytes @ 0x4
   183   000049                     	ds	2
   184   00004B                     ??_init_vars:
   185   00004B                     ??_loop:
   186   00004B                     ?___awdiv:
   187                           	callstack 0
   188   00004B                     ___awdiv@dividend:
   189                           	callstack 0
   190                           
   191                           ; 2 bytes @ 0x6
   192   00004B                     	ds	2
   193   00004D                     init_vars@i:
   194                           	callstack 0
   195   00004D                     ___awdiv@divisor:
   196                           	callstack 0
   197                           
   198                           ; 2 bytes @ 0x8
   199   00004D                     	ds	2
   200   00004F                     ___awdiv@counter:
   201                           	callstack 0
   202                           
   203                           ; 1 bytes @ 0xA
   204   00004F                     	ds	1
   205   000050                     ___awdiv@sign:
   206                           	callstack 0
   207                           
   208                           ; 1 bytes @ 0xB
   209   000050                     	ds	1
   210   000051                     ___awdiv@quotient:
   211                           	callstack 0
   212                           
   213                           ; 2 bytes @ 0xC
   214   000051                     	ds	2
   215   000053                     ??_read_analog:
   216   000053                     ??_update_pwm:
   217                           
   218                           ; 1 bytes @ 0xE
   219   000053                     	ds	1
   220   000054                     read_analog@aux:
   221                           	callstack 0
   222   000054                     update_pwm@pwm0:
   223                           	callstack 0
   224                           
   225                           ; 2 bytes @ 0xF
   226   000054                     	ds	2
   227   000056                     read_analog@i:
   228                           	callstack 0
   229   000056                     update_pwm@pwm1:
   230                           	callstack 0
   231                           
   232                           ; 2 bytes @ 0x11
   233   000056                     	ds	2
   234   000058                     
   235                           ; 1 bytes @ 0x13
   236 ;;
   237 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   238 ;;
   239 ;; *************** function _main *****************
   240 ;; Defined at:
   241 ;;		line 400 in file "main.c"
   242 ;; Parameters:    Size  Location     Type
   243 ;;		None
   244 ;; Auto vars:     Size  Location     Type
   245 ;;		None
   246 ;; Return value:  Size  Location     Type
   247 ;;                  1    wreg      void 
   248 ;; Registers used:
   249 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   250 ;; Tracked objects:
   251 ;;		On entry : 0/0
   252 ;;		On exit  : 0/0
   253 ;;		Unchanged: 0/0
   254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   255 ;;      Params:         0       0       0       0       0       0       0       0       0
   256 ;;      Locals:         0       0       0       0       0       0       0       0       0
   257 ;;      Temps:          0       0       0       0       0       0       0       0       0
   258 ;;      Totals:         0       0       0       0       0       0       0       0       0
   259 ;;Total ram usage:        0 bytes
   260 ;; Hardware stack levels required when called: 3
   261 ;; This function calls:
   262 ;;		_config_micro
   263 ;;		_init
   264 ;;		_init_vars
   265 ;;		_loop
   266 ;;		_read_analog
   267 ;;		_update_pwm
   268 ;; This function is called by:
   269 ;;		Startup code after reset
   270 ;; This function uses a non-reentrant model
   271 ;;
   272                           
   273                           	psect	text0
   274   0006DE                     __ptext0:
   275                           	callstack 0
   276   0006DE                     _main:
   277                           	callstack 28
   278   0006DE                     
   279                           ;main.c: 401:     config_micro();
   280   0006DE  ECB7  F001         	call	_config_micro	;wreg free
   281   0006E2                     
   282                           ;main.c: 402:     init_vars();
   283   0006E2  EC15  F003         	call	_init_vars	;wreg free
   284   0006E6                     
   285                           ;main.c: 404:     init();
   286   0006E6  EC5E  F003         	call	_init	;wreg free
   287   0006EA                     l1313:
   288                           
   289                           ;main.c: 407:         update_pwm();
   290   0006EA  EC09  F000         	call	_update_pwm	;wreg free
   291   0006EE                     
   292                           ;main.c: 408:         read_analog();
   293   0006EE  ECD7  F002         	call	_read_analog	;wreg free
   294   0006F2                     
   295                           ;main.c: 410:         loop();
   296   0006F2  ECFA  F000         	call	_loop	;wreg free
   297   0006F6  EF75  F003         	goto	l1313
   298   0006FA  EF07  F000         	goto	start
   299   0006FE                     __end_of_main:
   300                           	callstack 0
   301                           
   302 ;; *************** function _update_pwm *****************
   303 ;; Defined at:
   304 ;;		line 309 in file "main.c"
   305 ;; Parameters:    Size  Location     Type
   306 ;;		None
   307 ;; Auto vars:     Size  Location     Type
   308 ;;  pwm1            2   17[COMRAM] int 
   309 ;;  pwm0            2   15[COMRAM] int 
   310 ;; Return value:  Size  Location     Type
   311 ;;                  1    wreg      void 
   312 ;; Registers used:
   313 ;;		wreg, status,2, status,0, cstack
   314 ;; Tracked objects:
   315 ;;		On entry : 0/0
   316 ;;		On exit  : 0/0
   317 ;;		Unchanged: 0/0
   318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   319 ;;      Params:         0       0       0       0       0       0       0       0       0
   320 ;;      Locals:         4       0       0       0       0       0       0       0       0
   321 ;;      Temps:          1       0       0       0       0       0       0       0       0
   322 ;;      Totals:         5       0       0       0       0       0       0       0       0
   323 ;;Total ram usage:        5 bytes
   324 ;; Hardware stack levels used: 1
   325 ;; Hardware stack levels required when called: 2
   326 ;; This function calls:
   327 ;;		___awdiv
   328 ;; This function is called by:
   329 ;;		_main
   330 ;; This function uses a non-reentrant model
   331 ;;
   332                           
   333                           	psect	text1
   334   000012                     __ptext1:
   335                           	callstack 0
   336   000012                     _update_pwm:
   337                           	callstack 28
   338   000012                     
   339                           ;main.c: 310:     int pwm0, pwm1;;main.c: 312:     if (pwm[0] > 600){
   340   000012  BE3E               	btfsc	(_pwm+1)^0,7,c
   341   000014  EF15  F000         	goto	u611
   342   000018  0E59               	movlw	89
   343   00001A  5C3D               	subwf	_pwm^0,w,c
   344   00001C  0E02               	movlw	2
   345   00001E  583E               	subwfb	(_pwm+1)^0,w,c
   346   000020  A0D8               	btfss	status,0,c
   347   000022  EF15  F000         	goto	u611
   348   000026  EF17  F000         	goto	u610
   349   00002A                     u611:
   350   00002A  EF1D  F000         	goto	l1279
   351   00002E                     u610:
   352   00002E                     
   353                           ;main.c: 313:         pwm0 = 600;
   354   00002E  0E02               	movlw	2
   355   000030  6E55               	movwf	(update_pwm@pwm0+1)^0,c
   356   000032  0E58               	movlw	88
   357   000034  6E54               	movwf	update_pwm@pwm0^0,c
   358                           
   359                           ;main.c: 314:     }else if (pwm[0] < -600){
   360   000036  EF35  F000         	goto	l1283
   361   00003A                     l1279:
   362   00003A  AE3E               	btfss	(_pwm+1)^0,7,c
   363   00003C  EF29  F000         	goto	u621
   364   000040  0EA8               	movlw	168
   365   000042  5C3D               	subwf	_pwm^0,w,c
   366   000044  0EFD               	movlw	253
   367   000046  583E               	subwfb	(_pwm+1)^0,w,c
   368   000048  B0D8               	btfsc	status,0,c
   369   00004A  EF29  F000         	goto	u621
   370   00004E  EF2B  F000         	goto	u620
   371   000052                     u621:
   372   000052  EF31  F000         	goto	l150
   373   000056                     u620:
   374   000056                     
   375                           ;main.c: 315:         pwm0 = -600;
   376   000056  0EFD               	movlw	253
   377   000058  6E55               	movwf	(update_pwm@pwm0+1)^0,c
   378   00005A  0EA8               	movlw	168
   379   00005C  6E54               	movwf	update_pwm@pwm0^0,c
   380                           
   381                           ;main.c: 316:     }else{
   382   00005E  EF35  F000         	goto	l1283
   383   000062                     l150:
   384                           
   385                           ;main.c: 317:         pwm0 = pwm[0];
   386   000062  C03D  F054         	movff	_pwm,update_pwm@pwm0
   387   000066  C03E  F055         	movff	_pwm+1,update_pwm@pwm0+1
   388   00006A                     l1283:
   389                           
   390                           ;main.c: 320:     PORTDbits.RD1 = pwm0 > 0 ? 0 : 1;
   391   00006A  BE55               	btfsc	(update_pwm@pwm0+1)^0,7,c
   392   00006C  EF40  F000         	goto	u631
   393   000070  5055               	movf	(update_pwm@pwm0+1)^0,w,c
   394   000072  E10A               	bnz	u630
   395   000074  0454               	decf	update_pwm@pwm0^0,w,c
   396   000076  A0D8               	btfss	status,0,c
   397   000078  EF40  F000         	goto	u631
   398   00007C  EF44  F000         	goto	u630
   399   000080                     u631:
   400   000080  6A53               	clrf	??_update_pwm^0,c
   401   000082  2A53               	incf	??_update_pwm^0,f,c
   402   000084  EF45  F000         	goto	u648
   403   000088                     u630:
   404   000088  6A53               	clrf	??_update_pwm^0,c
   405   00008A                     u648:
   406   00008A  4653               	rlncf	??_update_pwm^0,f,c
   407   00008C  5083               	movf	131,w,c	;volatile
   408   00008E  1853               	xorwf	??_update_pwm^0,w,c
   409   000090  0BFD               	andlw	-3
   410   000092  1853               	xorwf	??_update_pwm^0,w,c
   411   000094  6E83               	movwf	131,c	;volatile
   412                           
   413                           ;main.c: 321:     PORTDbits.RD0 = pwm0 < 0 ? 0 : 1;
   414   000096  BE55               	btfsc	(update_pwm@pwm0+1)^0,7,c
   415   000098  EF54  F000         	goto	u650
   416   00009C  EF50  F000         	goto	u651
   417   0000A0                     u651:
   418   0000A0  6A53               	clrf	??_update_pwm^0,c
   419   0000A2  2A53               	incf	??_update_pwm^0,f,c
   420   0000A4  EF55  F000         	goto	u668
   421   0000A8                     u650:
   422   0000A8  6A53               	clrf	??_update_pwm^0,c
   423   0000AA                     u668:
   424   0000AA  5083               	movf	131,w,c	;volatile
   425   0000AC  1853               	xorwf	??_update_pwm^0,w,c
   426   0000AE  0BFE               	andlw	-2
   427   0000B0  1853               	xorwf	??_update_pwm^0,w,c
   428   0000B2  6E83               	movwf	131,c	;volatile
   429                           
   430                           ;main.c: 322:     pwm0 = pwm0 > 0 ? pwm0 : (-pwm0);
   431   0000B4  BE55               	btfsc	(update_pwm@pwm0+1)^0,7,c
   432   0000B6  EF67  F000         	goto	u670
   433   0000BA  5055               	movf	(update_pwm@pwm0+1)^0,w,c
   434   0000BC  E106               	bnz	u671
   435   0000BE  0454               	decf	update_pwm@pwm0^0,w,c
   436   0000C0  B0D8               	btfsc	status,0,c
   437   0000C2  EF65  F000         	goto	u671
   438   0000C6  EF67  F000         	goto	u670
   439   0000CA                     u671:
   440   0000CA  EF6B  F000         	goto	l1287
   441   0000CE                     u670:
   442   0000CE  6C54               	negf	update_pwm@pwm0^0,c
   443   0000D0  1E55               	comf	(update_pwm@pwm0+1)^0,f,c
   444   0000D2  B0D8               	btfsc	status,0,c
   445   0000D4  2A55               	incf	(update_pwm@pwm0+1)^0,f,c
   446   0000D6                     l1287:
   447                           
   448                           ;main.c: 324:     CCP1CONbits.DC1B = pwm0 % 4;
   449   0000D6  C054  F053         	movff	update_pwm@pwm0,??_update_pwm
   450   0000DA  0E03               	movlw	3
   451   0000DC  1653               	andwf	??_update_pwm^0,f,c
   452   0000DE  3A53               	swapf	??_update_pwm^0,f,c
   453   0000E0  50BD               	movf	189,w,c	;volatile
   454   0000E2  1853               	xorwf	??_update_pwm^0,w,c
   455   0000E4  0BCF               	andlw	-49
   456   0000E6  1853               	xorwf	??_update_pwm^0,w,c
   457   0000E8  6EBD               	movwf	189,c	;volatile
   458   0000EA                     
   459                           ;main.c: 325:     CCPR1L = pwm0 / 4;
   460   0000EA  C054  F04B         	movff	update_pwm@pwm0,___awdiv@dividend
   461   0000EE  C055  F04C         	movff	update_pwm@pwm0+1,___awdiv@dividend+1
   462   0000F2  0E00               	movlw	0
   463   0000F4  6E4E               	movwf	(___awdiv@divisor+1)^0,c
   464   0000F6  0E04               	movlw	4
   465   0000F8  6E4D               	movwf	___awdiv@divisor^0,c
   466   0000FA  EC2E  F002         	call	___awdiv	;wreg free
   467   0000FE  504B               	movf	?___awdiv^0,w,c
   468   000100  6EBE               	movwf	190,c	;volatile
   469   000102                     
   470                           ;main.c: 327:     if (pwm[1] > 600){
   471   000102  BE40               	btfsc	(_pwm+3)^0,7,c
   472   000104  EF8D  F000         	goto	u681
   473   000108  0E59               	movlw	89
   474   00010A  5C3F               	subwf	(_pwm+2)^0,w,c
   475   00010C  0E02               	movlw	2
   476   00010E  5840               	subwfb	(_pwm+3)^0,w,c
   477   000110  A0D8               	btfss	status,0,c
   478   000112  EF8D  F000         	goto	u681
   479   000116  EF8F  F000         	goto	u680
   480   00011A                     u681:
   481   00011A  EF95  F000         	goto	l1295
   482   00011E                     u680:
   483   00011E                     
   484                           ;main.c: 328:         pwm1 = 600;
   485   00011E  0E02               	movlw	2
   486   000120  6E57               	movwf	(update_pwm@pwm1+1)^0,c
   487   000122  0E58               	movlw	88
   488   000124  6E56               	movwf	update_pwm@pwm1^0,c
   489                           
   490                           ;main.c: 329:     }else if (pwm[1] < -600){
   491   000126  EFAD  F000         	goto	l1299
   492   00012A                     l1295:
   493   00012A  AE40               	btfss	(_pwm+3)^0,7,c
   494   00012C  EFA1  F000         	goto	u691
   495   000130  0EA8               	movlw	168
   496   000132  5C3F               	subwf	(_pwm+2)^0,w,c
   497   000134  0EFD               	movlw	253
   498   000136  5840               	subwfb	(_pwm+3)^0,w,c
   499   000138  B0D8               	btfsc	status,0,c
   500   00013A  EFA1  F000         	goto	u691
   501   00013E  EFA3  F000         	goto	u690
   502   000142                     u691:
   503   000142  EFA9  F000         	goto	l158
   504   000146                     u690:
   505   000146                     
   506                           ;main.c: 330:         pwm1 = -600;
   507   000146  0EFD               	movlw	253
   508   000148  6E57               	movwf	(update_pwm@pwm1+1)^0,c
   509   00014A  0EA8               	movlw	168
   510   00014C  6E56               	movwf	update_pwm@pwm1^0,c
   511                           
   512                           ;main.c: 331:     }else{
   513   00014E  EFAD  F000         	goto	l1299
   514   000152                     l158:
   515                           
   516                           ;main.c: 332:         pwm1 = pwm[1];
   517   000152  C03F  F056         	movff	_pwm+2,update_pwm@pwm1
   518   000156  C040  F057         	movff	_pwm+3,update_pwm@pwm1+1
   519   00015A                     l1299:
   520                           
   521                           ;main.c: 335:     PORTCbits.RC1 = pwm1 > 0 ? 0 : 1;
   522   00015A  BE57               	btfsc	(update_pwm@pwm1+1)^0,7,c
   523   00015C  EFB8  F000         	goto	u701
   524   000160  5057               	movf	(update_pwm@pwm1+1)^0,w,c
   525   000162  E10A               	bnz	u700
   526   000164  0456               	decf	update_pwm@pwm1^0,w,c
   527   000166  A0D8               	btfss	status,0,c
   528   000168  EFB8  F000         	goto	u701
   529   00016C  EFBC  F000         	goto	u700
   530   000170                     u701:
   531   000170  6A53               	clrf	??_update_pwm^0,c
   532   000172  2A53               	incf	??_update_pwm^0,f,c
   533   000174  EFBD  F000         	goto	u718
   534   000178                     u700:
   535   000178  6A53               	clrf	??_update_pwm^0,c
   536   00017A                     u718:
   537   00017A  4653               	rlncf	??_update_pwm^0,f,c
   538   00017C  5082               	movf	130,w,c	;volatile
   539   00017E  1853               	xorwf	??_update_pwm^0,w,c
   540   000180  0BFD               	andlw	-3
   541   000182  1853               	xorwf	??_update_pwm^0,w,c
   542   000184  6E82               	movwf	130,c	;volatile
   543                           
   544                           ;main.c: 336:     PORTCbits.RC0 = pwm1 < 0 ? 0 : 1;
   545   000186  BE57               	btfsc	(update_pwm@pwm1+1)^0,7,c
   546   000188  EFCC  F000         	goto	u720
   547   00018C  EFC8  F000         	goto	u721
   548   000190                     u721:
   549   000190  6A53               	clrf	??_update_pwm^0,c
   550   000192  2A53               	incf	??_update_pwm^0,f,c
   551   000194  EFCD  F000         	goto	u738
   552   000198                     u720:
   553   000198  6A53               	clrf	??_update_pwm^0,c
   554   00019A                     u738:
   555   00019A  5082               	movf	130,w,c	;volatile
   556   00019C  1853               	xorwf	??_update_pwm^0,w,c
   557   00019E  0BFE               	andlw	-2
   558   0001A0  1853               	xorwf	??_update_pwm^0,w,c
   559   0001A2  6E82               	movwf	130,c	;volatile
   560                           
   561                           ;main.c: 337:     pwm1 = pwm1 > 0 ? pwm1 : (-pwm1);
   562   0001A4  BE57               	btfsc	(update_pwm@pwm1+1)^0,7,c
   563   0001A6  EFDF  F000         	goto	u740
   564   0001AA  5057               	movf	(update_pwm@pwm1+1)^0,w,c
   565   0001AC  E106               	bnz	u741
   566   0001AE  0456               	decf	update_pwm@pwm1^0,w,c
   567   0001B0  B0D8               	btfsc	status,0,c
   568   0001B2  EFDD  F000         	goto	u741
   569   0001B6  EFDF  F000         	goto	u740
   570   0001BA                     u741:
   571   0001BA  EFE3  F000         	goto	l1303
   572   0001BE                     u740:
   573   0001BE  6C56               	negf	update_pwm@pwm1^0,c
   574   0001C0  1E57               	comf	(update_pwm@pwm1+1)^0,f,c
   575   0001C2  B0D8               	btfsc	status,0,c
   576   0001C4  2A57               	incf	(update_pwm@pwm1+1)^0,f,c
   577   0001C6                     l1303:
   578                           
   579                           ;main.c: 339:     CCP2CONbits.DC2B = pwm1 % 4;
   580   0001C6  C056  F053         	movff	update_pwm@pwm1,??_update_pwm
   581   0001CA  0E03               	movlw	3
   582   0001CC  1653               	andwf	??_update_pwm^0,f,c
   583   0001CE  3A53               	swapf	??_update_pwm^0,f,c
   584   0001D0  50BA               	movf	186,w,c	;volatile
   585   0001D2  1853               	xorwf	??_update_pwm^0,w,c
   586   0001D4  0BCF               	andlw	-49
   587   0001D6  1853               	xorwf	??_update_pwm^0,w,c
   588   0001D8  6EBA               	movwf	186,c	;volatile
   589   0001DA                     
   590                           ;main.c: 340:     CCPR2L = pwm1 / 4;
   591   0001DA  C056  F04B         	movff	update_pwm@pwm1,___awdiv@dividend
   592   0001DE  C057  F04C         	movff	update_pwm@pwm1+1,___awdiv@dividend+1
   593   0001E2  0E00               	movlw	0
   594   0001E4  6E4E               	movwf	(___awdiv@divisor+1)^0,c
   595   0001E6  0E04               	movlw	4
   596   0001E8  6E4D               	movwf	___awdiv@divisor^0,c
   597   0001EA  EC2E  F002         	call	___awdiv	;wreg free
   598   0001EE  504B               	movf	?___awdiv^0,w,c
   599   0001F0  6EBB               	movwf	187,c	;volatile
   600   0001F2  0012               	return		;funcret
   601   0001F4                     __end_of_update_pwm:
   602                           	callstack 0
   603                           
   604 ;; *************** function _read_analog *****************
   605 ;; Defined at:
   606 ;;		line 206 in file "main.c"
   607 ;; Parameters:    Size  Location     Type
   608 ;;		None
   609 ;; Auto vars:     Size  Location     Type
   610 ;;  aux             2   15[COMRAM] unsigned int 
   611 ;;  i               1   17[COMRAM] unsigned char 
   612 ;; Return value:  Size  Location     Type
   613 ;;                  1    wreg      void 
   614 ;; Registers used:
   615 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   616 ;; Tracked objects:
   617 ;;		On entry : 0/0
   618 ;;		On exit  : 0/0
   619 ;;		Unchanged: 0/0
   620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   621 ;;      Params:         0       0       0       0       0       0       0       0       0
   622 ;;      Locals:         3       0       0       0       0       0       0       0       0
   623 ;;      Temps:          1       0       0       0       0       0       0       0       0
   624 ;;      Totals:         4       0       0       0       0       0       0       0       0
   625 ;;Total ram usage:        4 bytes
   626 ;; Hardware stack levels used: 1
   627 ;; Hardware stack levels required when called: 2
   628 ;; This function calls:
   629 ;;		___awdiv
   630 ;; This function is called by:
   631 ;;		_main
   632 ;; This function uses a non-reentrant model
   633 ;;
   634                           
   635                           	psect	text2
   636   0005AE                     __ptext2:
   637                           	callstack 0
   638   0005AE                     _read_analog:
   639                           	callstack 28
   640   0005AE                     
   641                           ;main.c: 207:     unsigned int aux;;main.c: 208:     unsigned char i;;main.c: 209:     f
      +                          or (i=0;i<=5;i++){
   642   0005AE  0E00               	movlw	0
   643   0005B0  6E56               	movwf	read_analog@i^0,c
   644   0005B2                     l1261:
   645                           
   646                           ;main.c: 210:         ADCON0bits.CHS=i;
   647   0005B2  C056  F053         	movff	read_analog@i,??_read_analog
   648   0005B6  4653               	rlncf	??_read_analog^0,f,c
   649   0005B8  4653               	rlncf	??_read_analog^0,f,c
   650   0005BA  50C2               	movf	194,w,c	;volatile
   651   0005BC  1853               	xorwf	??_read_analog^0,w,c
   652   0005BE  0BC3               	andlw	-61
   653   0005C0  1853               	xorwf	??_read_analog^0,w,c
   654   0005C2  6EC2               	movwf	194,c	;volatile
   655   0005C4                     
   656                           ;main.c: 211:         ADCON0bits.GODONE=1;
   657   0005C4  82C2               	bsf	194,1,c	;volatile
   658   0005C6                     l106:
   659   0005C6  B2C2               	btfsc	194,1,c	;volatile
   660   0005C8  EFE8  F002         	goto	u591
   661   0005CC  EFEA  F002         	goto	u590
   662   0005D0                     u591:
   663   0005D0  EFE3  F002         	goto	l106
   664   0005D4                     u590:
   665   0005D4                     
   666                           ;main.c: 213:         aux=ADRESH*4;
   667   0005D4  50C4               	movf	196,w,c	;volatile
   668   0005D6  0D04               	mullw	4
   669   0005D8  CFF3 F054          	movff	prodl,read_analog@aux
   670   0005DC  CFF4 F055          	movff	prodh,read_analog@aux+1
   671   0005E0                     
   672                           ;main.c: 214:         aux=aux+ADRESL/64;
   673   0005E0  CFC3 F04B          	movff	4035,___awdiv@dividend	;volatile
   674   0005E4  6A4C               	clrf	(___awdiv@dividend+1)^0,c
   675   0005E6  0E00               	movlw	0
   676   0005E8  6E4E               	movwf	(___awdiv@divisor+1)^0,c
   677   0005EA  0E40               	movlw	64
   678   0005EC  6E4D               	movwf	___awdiv@divisor^0,c
   679   0005EE  EC2E  F002         	call	___awdiv	;wreg free
   680   0005F2  5054               	movf	read_analog@aux^0,w,c
   681   0005F4  244B               	addwf	?___awdiv^0,w,c
   682   0005F6  6E54               	movwf	read_analog@aux^0,c
   683   0005F8  5055               	movf	(read_analog@aux+1)^0,w,c
   684   0005FA  204C               	addwfc	(?___awdiv+1)^0,w,c
   685   0005FC  6E55               	movwf	(read_analog@aux+1)^0,c
   686   0005FE                     
   687                           ;main.c: 215:         an_input[i]=aux;
   688   0005FE  5056               	movf	read_analog@i^0,w,c
   689   000600  0D02               	mullw	2
   690   000602  0E29               	movlw	low _an_input
   691   000604  24F3               	addwf	243,w,c
   692   000606  6ED9               	movwf	fsr2l,c
   693   000608  0E00               	movlw	high _an_input
   694   00060A  20F4               	addwfc	prodh,w,c
   695   00060C  6EDA               	movwf	fsr2h,c
   696   00060E  C054  FFDE         	movff	read_analog@aux,postinc2
   697   000612  C055  FFDD         	movff	read_analog@aux+1,postdec2
   698   000616                     
   699                           ;main.c: 216:     }
   700   000616  2A56               	incf	read_analog@i^0,f,c
   701   000618  0E05               	movlw	5
   702   00061A  6456               	cpfsgt	read_analog@i^0,c
   703   00061C  EF12  F003         	goto	u601
   704   000620  EF14  F003         	goto	u600
   705   000624                     u601:
   706   000624  EFD9  F002         	goto	l1261
   707   000628                     u600:
   708   000628  0012               	return		;funcret
   709   00062A                     __end_of_read_analog:
   710                           	callstack 0
   711                           
   712 ;; *************** function ___awdiv *****************
   713 ;; Defined at:
   714 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
   715 ;; Parameters:    Size  Location     Type
   716 ;;  dividend        2    6[COMRAM] int 
   717 ;;  divisor         2    8[COMRAM] int 
   718 ;; Auto vars:     Size  Location     Type
   719 ;;  quotient        2   12[COMRAM] int 
   720 ;;  sign            1   11[COMRAM] unsigned char 
   721 ;;  counter         1   10[COMRAM] unsigned char 
   722 ;; Return value:  Size  Location     Type
   723 ;;                  2    6[COMRAM] int 
   724 ;; Registers used:
   725 ;;		wreg, status,2, status,0
   726 ;; Tracked objects:
   727 ;;		On entry : 0/0
   728 ;;		On exit  : 0/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   731 ;;      Params:         4       0       0       0       0       0       0       0       0
   732 ;;      Locals:         4       0       0       0       0       0       0       0       0
   733 ;;      Temps:          0       0       0       0       0       0       0       0       0
   734 ;;      Totals:         8       0       0       0       0       0       0       0       0
   735 ;;Total ram usage:        8 bytes
   736 ;; Hardware stack levels used: 1
   737 ;; Hardware stack levels required when called: 1
   738 ;; This function calls:
   739 ;;		Nothing
   740 ;; This function is called by:
   741 ;;		_read_analog
   742 ;;		_update_pwm
   743 ;; This function uses a non-reentrant model
   744 ;;
   745                           
   746                           	psect	text3
   747   00045C                     __ptext3:
   748                           	callstack 0
   749   00045C                     ___awdiv:
   750                           	callstack 28
   751   00045C  0E00               	movlw	0
   752   00045E  6E50               	movwf	___awdiv@sign^0,c
   753   000460  BE4E               	btfsc	(___awdiv@divisor+1)^0,7,c
   754   000462  EF37  F002         	goto	u530
   755   000466  EF35  F002         	goto	u531
   756   00046A                     u531:
   757   00046A  EF3D  F002         	goto	l1219
   758   00046E                     u530:
   759   00046E  6C4D               	negf	___awdiv@divisor^0,c
   760   000470  1E4E               	comf	(___awdiv@divisor+1)^0,f,c
   761   000472  B0D8               	btfsc	status,0,c
   762   000474  2A4E               	incf	(___awdiv@divisor+1)^0,f,c
   763   000476  0E01               	movlw	1
   764   000478  6E50               	movwf	___awdiv@sign^0,c
   765   00047A                     l1219:
   766   00047A  BE4C               	btfsc	(___awdiv@dividend+1)^0,7,c
   767   00047C  EF44  F002         	goto	u540
   768   000480  EF42  F002         	goto	u541
   769   000484                     u541:
   770   000484  EF4A  F002         	goto	l1225
   771   000488                     u540:
   772   000488  6C4B               	negf	___awdiv@dividend^0,c
   773   00048A  1E4C               	comf	(___awdiv@dividend+1)^0,f,c
   774   00048C  B0D8               	btfsc	status,0,c
   775   00048E  2A4C               	incf	(___awdiv@dividend+1)^0,f,c
   776   000490  0E01               	movlw	1
   777   000492  1A50               	xorwf	___awdiv@sign^0,f,c
   778   000494                     l1225:
   779   000494  0E00               	movlw	0
   780   000496  6E52               	movwf	(___awdiv@quotient+1)^0,c
   781   000498  0E00               	movlw	0
   782   00049A  6E51               	movwf	___awdiv@quotient^0,c
   783   00049C  504D               	movf	___awdiv@divisor^0,w,c
   784   00049E  104E               	iorwf	(___awdiv@divisor+1)^0,w,c
   785   0004A0  B4D8               	btfsc	status,2,c
   786   0004A2  EF55  F002         	goto	u551
   787   0004A6  EF57  F002         	goto	u550
   788   0004AA                     u551:
   789   0004AA  EF7F  F002         	goto	l1247
   790   0004AE                     u550:
   791   0004AE  0E01               	movlw	1
   792   0004B0  6E4F               	movwf	___awdiv@counter^0,c
   793   0004B2  EF5F  F002         	goto	l1233
   794   0004B6                     l1231:
   795   0004B6  90D8               	bcf	status,0,c
   796   0004B8  364D               	rlcf	___awdiv@divisor^0,f,c
   797   0004BA  364E               	rlcf	(___awdiv@divisor+1)^0,f,c
   798   0004BC  2A4F               	incf	___awdiv@counter^0,f,c
   799   0004BE                     l1233:
   800   0004BE  AE4E               	btfss	(___awdiv@divisor+1)^0,7,c
   801   0004C0  EF64  F002         	goto	u561
   802   0004C4  EF66  F002         	goto	u560
   803   0004C8                     u561:
   804   0004C8  EF5B  F002         	goto	l1231
   805   0004CC                     u560:
   806   0004CC                     l1235:
   807   0004CC  90D8               	bcf	status,0,c
   808   0004CE  3651               	rlcf	___awdiv@quotient^0,f,c
   809   0004D0  3652               	rlcf	(___awdiv@quotient+1)^0,f,c
   810   0004D2  504D               	movf	___awdiv@divisor^0,w,c
   811   0004D4  5C4B               	subwf	___awdiv@dividend^0,w,c
   812   0004D6  504E               	movf	(___awdiv@divisor+1)^0,w,c
   813   0004D8  584C               	subwfb	(___awdiv@dividend+1)^0,w,c
   814   0004DA  A0D8               	btfss	status,0,c
   815   0004DC  EF72  F002         	goto	u571
   816   0004E0  EF74  F002         	goto	u570
   817   0004E4                     u571:
   818   0004E4  EF79  F002         	goto	l1243
   819   0004E8                     u570:
   820   0004E8  504D               	movf	___awdiv@divisor^0,w,c
   821   0004EA  5E4B               	subwf	___awdiv@dividend^0,f,c
   822   0004EC  504E               	movf	(___awdiv@divisor+1)^0,w,c
   823   0004EE  5A4C               	subwfb	(___awdiv@dividend+1)^0,f,c
   824   0004F0  8051               	bsf	___awdiv@quotient^0,0,c
   825   0004F2                     l1243:
   826   0004F2  90D8               	bcf	status,0,c
   827   0004F4  324E               	rrcf	(___awdiv@divisor+1)^0,f,c
   828   0004F6  324D               	rrcf	___awdiv@divisor^0,f,c
   829   0004F8  2E4F               	decfsz	___awdiv@counter^0,f,c
   830   0004FA  EF66  F002         	goto	l1235
   831   0004FE                     l1247:
   832   0004FE  5050               	movf	___awdiv@sign^0,w,c
   833   000500  B4D8               	btfsc	status,2,c
   834   000502  EF85  F002         	goto	u581
   835   000506  EF87  F002         	goto	u580
   836   00050A                     u581:
   837   00050A  EF8B  F002         	goto	l1251
   838   00050E                     u580:
   839   00050E  6C51               	negf	___awdiv@quotient^0,c
   840   000510  1E52               	comf	(___awdiv@quotient+1)^0,f,c
   841   000512  B0D8               	btfsc	status,0,c
   842   000514  2A52               	incf	(___awdiv@quotient+1)^0,f,c
   843   000516                     l1251:
   844   000516  C051  F04B         	movff	___awdiv@quotient,?___awdiv
   845   00051A  C052  F04C         	movff	___awdiv@quotient+1,?___awdiv+1
   846   00051E  0012               	return		;funcret
   847   000520                     __end_of___awdiv:
   848                           	callstack 0
   849                           
   850 ;; *************** function _loop *****************
   851 ;; Defined at:
   852 ;;		line 360 in file "main.c"
   853 ;; Parameters:    Size  Location     Type
   854 ;;		None
   855 ;; Auto vars:     Size  Location     Type
   856 ;;		None
   857 ;; Return value:  Size  Location     Type
   858 ;;                  1    wreg      void 
   859 ;; Registers used:
   860 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   861 ;; Tracked objects:
   862 ;;		On entry : 0/0
   863 ;;		On exit  : 0/0
   864 ;;		Unchanged: 0/0
   865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   866 ;;      Params:         0       0       0       0       0       0       0       0       0
   867 ;;      Locals:         0       0       0       0       0       0       0       0       0
   868 ;;      Temps:          1       0       0       0       0       0       0       0       0
   869 ;;      Totals:         1       0       0       0       0       0       0       0       0
   870 ;;Total ram usage:        1 bytes
   871 ;; Hardware stack levels used: 1
   872 ;; Hardware stack levels required when called: 1
   873 ;; This function calls:
   874 ;;		Nothing
   875 ;; This function is called by:
   876 ;;		_main
   877 ;; This function uses a non-reentrant model
   878 ;;
   879                           
   880                           	psect	text4
   881   0001F4                     __ptext4:
   882                           	callstack 0
   883   0001F4                     _loop:
   884                           	callstack 29
   885   0001F4                     
   886                           ;main.c: 361:     if (counter[0] >= 1000){
   887   0001F4  BE08               	btfsc	(_counter+7)^0,7,c
   888   0001F6  EF0D  F001         	goto	u251
   889   0001FA  5008               	movf	(_counter+7)^0,w,c
   890   0001FC  1007               	iorwf	(_counter+6)^0,w,c
   891   0001FE  1006               	iorwf	(_counter+5)^0,w,c
   892   000200  1005               	iorwf	(_counter+4)^0,w,c
   893   000202  1004               	iorwf	(_counter+3)^0,w,c
   894   000204  1003               	iorwf	(_counter+2)^0,w,c
   895   000206  E10B               	bnz	u250
   896   000208  0EE8               	movlw	232
   897   00020A  5C01               	subwf	_counter^0,w,c
   898   00020C  0E03               	movlw	3
   899   00020E  5802               	subwfb	(_counter+1)^0,w,c
   900   000210  A0D8               	btfss	status,0,c
   901   000212  EF0D  F001         	goto	u251
   902   000216  EF0F  F001         	goto	u250
   903   00021A                     u251:
   904   00021A  EF29  F001         	goto	l1109
   905   00021E                     u250:
   906   00021E                     
   907                           ;main.c: 362:         counter[0] = 0;
   908   00021E  EE20  F001         	lfsr	2,_counter
   909   000222  0E07               	movlw	7
   910   000224                     u261:
   911   000224  6ADE               	clrf	postinc2,c
   912   000226  06E8               	decf	wreg,f,c
   913   000228  E2FD               	bc	u261
   914   00022A                     
   915                           ;main.c: 363:         value ++;
   916   00022A  4A41               	infsnz	_value^0,f,c
   917   00022C  2A42               	incf	(_value+1)^0,f,c
   918   00022E                     
   919                           ;main.c: 364:         if (value >= 32){
   920   00022E  BE42               	btfsc	(_value+1)^0,7,c
   921   000230  EF23  F001         	goto	u271
   922   000234  5042               	movf	(_value+1)^0,w,c
   923   000236  E109               	bnz	u270
   924   000238  0E20               	movlw	32
   925   00023A  5C41               	subwf	_value^0,w,c
   926   00023C  A0D8               	btfss	status,0,c
   927   00023E  EF23  F001         	goto	u271
   928   000242  EF25  F001         	goto	u270
   929   000246                     u271:
   930   000246  EF29  F001         	goto	l1109
   931   00024A                     u270:
   932   00024A                     
   933                           ;main.c: 365:             value = 0;
   934   00024A  0E00               	movlw	0
   935   00024C  6E42               	movwf	(_value+1)^0,c
   936   00024E  0E00               	movlw	0
   937   000250  6E41               	movwf	_value^0,c
   938   000252                     l1109:
   939                           
   940                           ;main.c: 370:     PORTBbits.RB0 = !PORTDbits.RD2;
   941   000252  A483               	btfss	131,2,c	;volatile
   942   000254  EF2E  F001         	goto	u281
   943   000258  EF32  F001         	goto	u280
   944   00025C                     u281:
   945   00025C  6A4B               	clrf	??_loop^0,c
   946   00025E  2A4B               	incf	??_loop^0,f,c
   947   000260  EF33  F001         	goto	u298
   948   000264                     u280:
   949   000264  6A4B               	clrf	??_loop^0,c
   950   000266                     u298:
   951   000266  5081               	movf	129,w,c	;volatile
   952   000268  184B               	xorwf	??_loop^0,w,c
   953   00026A  0BFE               	andlw	-2
   954   00026C  184B               	xorwf	??_loop^0,w,c
   955   00026E  6E81               	movwf	129,c	;volatile
   956   000270                     
   957                           ;main.c: 371:     PORTBbits.RB1 = !PORTDbits.RD2;
   958   000270  A483               	btfss	131,2,c	;volatile
   959   000272  EF3D  F001         	goto	u301
   960   000276  EF41  F001         	goto	u300
   961   00027A                     u301:
   962   00027A  6A4B               	clrf	??_loop^0,c
   963   00027C  2A4B               	incf	??_loop^0,f,c
   964   00027E  EF42  F001         	goto	u318
   965   000282                     u300:
   966   000282  6A4B               	clrf	??_loop^0,c
   967   000284                     u318:
   968   000284  464B               	rlncf	??_loop^0,f,c
   969   000286  5081               	movf	129,w,c	;volatile
   970   000288  184B               	xorwf	??_loop^0,w,c
   971   00028A  0BFD               	andlw	-3
   972   00028C  184B               	xorwf	??_loop^0,w,c
   973   00028E  6E81               	movwf	129,c	;volatile
   974   000290                     
   975                           ;main.c: 372:     PORTBbits.RB2 = !PORTDbits.RD2;
   976   000290  A483               	btfss	131,2,c	;volatile
   977   000292  EF4D  F001         	goto	u321
   978   000296  EF51  F001         	goto	u320
   979   00029A                     u321:
   980   00029A  6A4B               	clrf	??_loop^0,c
   981   00029C  2A4B               	incf	??_loop^0,f,c
   982   00029E  EF52  F001         	goto	u338
   983   0002A2                     u320:
   984   0002A2  6A4B               	clrf	??_loop^0,c
   985   0002A4                     u338:
   986   0002A4  464B               	rlncf	??_loop^0,f,c
   987   0002A6  464B               	rlncf	??_loop^0,f,c
   988   0002A8  5081               	movf	129,w,c	;volatile
   989   0002AA  184B               	xorwf	??_loop^0,w,c
   990   0002AC  0BFB               	andlw	-5
   991   0002AE  184B               	xorwf	??_loop^0,w,c
   992   0002B0  6E81               	movwf	129,c	;volatile
   993   0002B2                     
   994                           ;main.c: 373:     PORTBbits.RB4 = !PORTDbits.RD2;
   995   0002B2  A483               	btfss	131,2,c	;volatile
   996   0002B4  EF5E  F001         	goto	u341
   997   0002B8  EF62  F001         	goto	u340
   998   0002BC                     u341:
   999   0002BC  6A4B               	clrf	??_loop^0,c
  1000   0002BE  2A4B               	incf	??_loop^0,f,c
  1001   0002C0  EF63  F001         	goto	u358
  1002   0002C4                     u340:
  1003   0002C4  6A4B               	clrf	??_loop^0,c
  1004   0002C6                     u358:
  1005   0002C6  3A4B               	swapf	??_loop^0,f,c
  1006   0002C8  5081               	movf	129,w,c	;volatile
  1007   0002CA  184B               	xorwf	??_loop^0,w,c
  1008   0002CC  0BEF               	andlw	-17
  1009   0002CE  184B               	xorwf	??_loop^0,w,c
  1010   0002D0  6E81               	movwf	129,c	;volatile
  1011   0002D2                     
  1012                           ;main.c: 374:     PORTBbits.RB5 = !PORTDbits.RD2;
  1013   0002D2  A483               	btfss	131,2,c	;volatile
  1014   0002D4  EF6E  F001         	goto	u361
  1015   0002D8  EF72  F001         	goto	u360
  1016   0002DC                     u361:
  1017   0002DC  6A4B               	clrf	??_loop^0,c
  1018   0002DE  2A4B               	incf	??_loop^0,f,c
  1019   0002E0  EF73  F001         	goto	u378
  1020   0002E4                     u360:
  1021   0002E4  6A4B               	clrf	??_loop^0,c
  1022   0002E6                     u378:
  1023   0002E6  3A4B               	swapf	??_loop^0,f,c
  1024   0002E8  464B               	rlncf	??_loop^0,f,c
  1025   0002EA  5081               	movf	129,w,c	;volatile
  1026   0002EC  184B               	xorwf	??_loop^0,w,c
  1027   0002EE  0BDF               	andlw	-33
  1028   0002F0  184B               	xorwf	??_loop^0,w,c
  1029   0002F2  6E81               	movwf	129,c	;volatile
  1030   0002F4                     
  1031                           ;main.c: 376:     if (!PORTDbits.RD2 && flag_b1 == 0){
  1032   0002F4  B483               	btfsc	131,2,c	;volatile
  1033   0002F6  EF7F  F001         	goto	u381
  1034   0002FA  EF81  F001         	goto	u380
  1035   0002FE                     u381:
  1036   0002FE  EF8B  F001         	goto	l178
  1037   000302                     u380:
  1038   000302  5044               	movf	_flag_b1^0,w,c
  1039   000304  A4D8               	btfss	status,2,c
  1040   000306  EF87  F001         	goto	u391
  1041   00030A  EF89  F001         	goto	u390
  1042   00030E                     u391:
  1043   00030E  EF8B  F001         	goto	l178
  1044   000312                     u390:
  1045   000312  EF8C  F001         	goto	l179
  1046   000316                     l178:
  1047   000316  5083               	movf	131,w,c	;volatile
  1048   000318                     l179:
  1049                           
  1050                           ;main.c: 382:     if (!PORTDbits.RD3 && flag_b2 == 0){
  1051   000318  B683               	btfsc	131,3,c	;volatile
  1052   00031A  EF91  F001         	goto	u401
  1053   00031E  EF93  F001         	goto	u400
  1054   000322                     u401:
  1055   000322  EF9D  F001         	goto	l181
  1056   000326                     u400:
  1057   000326  5043               	movf	_flag_b2^0,w,c
  1058   000328  A4D8               	btfss	status,2,c
  1059   00032A  EF99  F001         	goto	u411
  1060   00032E  EF9B  F001         	goto	u410
  1061   000332                     u411:
  1062   000332  EF9D  F001         	goto	l181
  1063   000336                     u410:
  1064   000336  EF9E  F001         	goto	l182
  1065   00033A                     l181:
  1066   00033A  5083               	movf	131,w,c	;volatile
  1067   00033C                     l182:
  1068                           
  1069                           ;main.c: 387:     if (!PORTDbits.RD3 && !PORTDbits.RD2){
  1070   00033C  B683               	btfsc	131,3,c	;volatile
  1071   00033E  EFA3  F001         	goto	u421
  1072   000342  EFA5  F001         	goto	u420
  1073   000346                     u421:
  1074   000346  EFAE  F001         	goto	l184
  1075   00034A                     u420:
  1076   00034A  B483               	btfsc	131,2,c	;volatile
  1077   00034C  EFAA  F001         	goto	u431
  1078   000350  EFAC  F001         	goto	u430
  1079   000354                     u431:
  1080   000354  EFAE  F001         	goto	l184
  1081   000358                     u430:
  1082   000358  EFB6  F001         	goto	l189
  1083   00035C                     l184:
  1084   00035C  B683               	btfsc	131,3,c	;volatile
  1085   00035E  EFB3  F001         	goto	u441
  1086   000362  EFB5  F001         	goto	u440
  1087   000366                     u441:
  1088   000366  EFB6  F001         	goto	l189
  1089   00036A                     u440:
  1090   00036A  5083               	movf	131,w,c	;volatile
  1091   00036C                     l189:
  1092   00036C  0012               	return		;funcret
  1093   00036E                     __end_of_loop:
  1094                           	callstack 0
  1095                           
  1096 ;; *************** function _init_vars *****************
  1097 ;; Defined at:
  1098 ;;		line 300 in file "main.c"
  1099 ;; Parameters:    Size  Location     Type
  1100 ;;		None
  1101 ;; Auto vars:     Size  Location     Type
  1102 ;;  i               2    8[COMRAM] int 
  1103 ;; Return value:  Size  Location     Type
  1104 ;;                  1    wreg      void 
  1105 ;; Registers used:
  1106 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1107 ;; Tracked objects:
  1108 ;;		On entry : 0/0
  1109 ;;		On exit  : 0/0
  1110 ;;		Unchanged: 0/0
  1111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1112 ;;      Params:         0       0       0       0       0       0       0       0       0
  1113 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1114 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1115 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1116 ;;Total ram usage:        4 bytes
  1117 ;; Hardware stack levels used: 1
  1118 ;; Hardware stack levels required when called: 1
  1119 ;; This function calls:
  1120 ;;		Nothing
  1121 ;; This function is called by:
  1122 ;;		_main
  1123 ;; This function uses a non-reentrant model
  1124 ;;
  1125                           
  1126                           	psect	text5
  1127   00062A                     __ptext5:
  1128                           	callstack 0
  1129   00062A                     _init_vars:
  1130                           	callstack 29
  1131   00062A                     
  1132                           ;main.c: 301:     int i;;main.c: 302:     for (i=0;i<5;i++){
  1133   00062A  0E00               	movlw	0
  1134   00062C  6E4E               	movwf	(init_vars@i+1)^0,c
  1135   00062E  0E00               	movlw	0
  1136   000630  6E4D               	movwf	init_vars@i^0,c
  1137   000632                     l1057:
  1138                           
  1139                           ;main.c: 303:         counter[i] = 0;
  1140   000632  C04D  F04B         	movff	init_vars@i,??_init_vars
  1141   000636  C04E  F04C         	movff	init_vars@i+1,??_init_vars+1
  1142   00063A  90D8               	bcf	status,0,c
  1143   00063C  364B               	rlcf	??_init_vars^0,f,c
  1144   00063E  364C               	rlcf	(??_init_vars+1)^0,f,c
  1145   000640  90D8               	bcf	status,0,c
  1146   000642  364B               	rlcf	??_init_vars^0,f,c
  1147   000644  364C               	rlcf	(??_init_vars+1)^0,f,c
  1148   000646  90D8               	bcf	status,0,c
  1149   000648  364B               	rlcf	??_init_vars^0,f,c
  1150   00064A  364C               	rlcf	(??_init_vars+1)^0,f,c
  1151   00064C  0E01               	movlw	low _counter
  1152   00064E  244B               	addwf	??_init_vars^0,w,c
  1153   000650  6ED9               	movwf	fsr2l,c
  1154   000652  0E00               	movlw	high _counter
  1155   000654  204C               	addwfc	(??_init_vars+1)^0,w,c
  1156   000656  6EDA               	movwf	fsr2h,c
  1157   000658  0E07               	movlw	7
  1158   00065A                     u91:
  1159   00065A  6ADE               	clrf	postinc2,c
  1160   00065C  06E8               	decf	wreg,f,c
  1161   00065E  E2FD               	bc	u91
  1162   000660                     
  1163                           ;main.c: 304:     }
  1164   000660  4A4D               	infsnz	init_vars@i^0,f,c
  1165   000662  2A4E               	incf	(init_vars@i+1)^0,f,c
  1166   000664  BE4E               	btfsc	(init_vars@i+1)^0,7,c
  1167   000666  EF3E  F003         	goto	u101
  1168   00066A  504E               	movf	(init_vars@i+1)^0,w,c
  1169   00066C  E109               	bnz	u100
  1170   00066E  0E05               	movlw	5
  1171   000670  5C4D               	subwf	init_vars@i^0,w,c
  1172   000672  A0D8               	btfss	status,0,c
  1173   000674  EF3E  F003         	goto	u101
  1174   000678  EF40  F003         	goto	u100
  1175   00067C                     u101:
  1176   00067C  EF19  F003         	goto	l1057
  1177   000680                     u100:
  1178   000680                     
  1179                           ;main.c: 305:     pwm[0] = 0;
  1180   000680  0E00               	movlw	0
  1181   000682  6E3E               	movwf	(_pwm+1)^0,c
  1182   000684  0E00               	movlw	0
  1183   000686  6E3D               	movwf	_pwm^0,c
  1184                           
  1185                           ;main.c: 306:     pwm[1] = 0;
  1186   000688  0E00               	movlw	0
  1187   00068A  6E40               	movwf	(_pwm+3)^0,c
  1188   00068C  0E00               	movlw	0
  1189   00068E  6E3F               	movwf	(_pwm+2)^0,c
  1190   000690  0012               	return		;funcret
  1191   000692                     __end_of_init_vars:
  1192                           	callstack 0
  1193                           
  1194 ;; *************** function _init *****************
  1195 ;; Defined at:
  1196 ;;		line 352 in file "main.c"
  1197 ;; Parameters:    Size  Location     Type
  1198 ;;		None
  1199 ;; Auto vars:     Size  Location     Type
  1200 ;;		None
  1201 ;; Return value:  Size  Location     Type
  1202 ;;                  1    wreg      void 
  1203 ;; Registers used:
  1204 ;;		wreg, status,2
  1205 ;; Tracked objects:
  1206 ;;		On entry : 0/0
  1207 ;;		On exit  : 0/0
  1208 ;;		Unchanged: 0/0
  1209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1210 ;;      Params:         0       0       0       0       0       0       0       0       0
  1211 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1212 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1213 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1214 ;;Total ram usage:        0 bytes
  1215 ;; Hardware stack levels used: 1
  1216 ;; Hardware stack levels required when called: 1
  1217 ;; This function calls:
  1218 ;;		Nothing
  1219 ;; This function is called by:
  1220 ;;		_main
  1221 ;; This function uses a non-reentrant model
  1222 ;;
  1223                           
  1224                           	psect	text6
  1225   0006BC                     __ptext6:
  1226                           	callstack 0
  1227   0006BC                     _init:
  1228                           	callstack 29
  1229   0006BC                     
  1230                           ;main.c: 353:     pwm[0] = 250;
  1231   0006BC  0E00               	movlw	0
  1232   0006BE  6E3E               	movwf	(_pwm+1)^0,c
  1233   0006C0  0EFA               	movlw	250
  1234   0006C2  6E3D               	movwf	_pwm^0,c
  1235                           
  1236                           ;main.c: 354:     pwm[1] = 600;
  1237   0006C4  0E02               	movlw	2
  1238   0006C6  6E40               	movwf	(_pwm+3)^0,c
  1239   0006C8  0E58               	movlw	88
  1240   0006CA  6E3F               	movwf	(_pwm+2)^0,c
  1241                           
  1242                           ;main.c: 355:     flag_b1 = 0;
  1243   0006CC  0E00               	movlw	0
  1244   0006CE  6E44               	movwf	_flag_b1^0,c
  1245                           
  1246                           ;main.c: 356:     flag_b2 = 0;
  1247   0006D0  0E00               	movlw	0
  1248   0006D2  6E43               	movwf	_flag_b2^0,c
  1249                           
  1250                           ;main.c: 357:     value = 0;
  1251   0006D4  0E00               	movlw	0
  1252   0006D6  6E42               	movwf	(_value+1)^0,c
  1253   0006D8  0E00               	movlw	0
  1254   0006DA  6E41               	movwf	_value^0,c
  1255   0006DC  0012               	return		;funcret
  1256   0006DE                     __end_of_init:
  1257                           	callstack 0
  1258                           
  1259 ;; *************** function _config_micro *****************
  1260 ;; Defined at:
  1261 ;;		line 71 in file "main.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;		None
  1264 ;; Auto vars:     Size  Location     Type
  1265 ;;		None
  1266 ;; Return value:  Size  Location     Type
  1267 ;;                  1    wreg      void 
  1268 ;; Registers used:
  1269 ;;		wreg, status,2
  1270 ;; Tracked objects:
  1271 ;;		On entry : 0/0
  1272 ;;		On exit  : 0/0
  1273 ;;		Unchanged: 0/0
  1274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1275 ;;      Params:         0       0       0       0       0       0       0       0       0
  1276 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1277 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1278 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1279 ;;Total ram usage:        0 bytes
  1280 ;; Hardware stack levels used: 1
  1281 ;; Hardware stack levels required when called: 1
  1282 ;; This function calls:
  1283 ;;		Nothing
  1284 ;; This function is called by:
  1285 ;;		_main
  1286 ;; This function uses a non-reentrant model
  1287 ;;
  1288                           
  1289                           	psect	text7
  1290   00036E                     __ptext7:
  1291                           	callstack 0
  1292   00036E                     _config_micro:
  1293                           	callstack 29
  1294   00036E                     
  1295                           ;main.c: 73:     OSCCONbits.IRCF = 7;
  1296   00036E  0E70               	movlw	112
  1297   000370  12D3               	iorwf	211,f,c	;volatile
  1298                           
  1299                           ;main.c: 76:     CMCON=0x07;
  1300   000372  0E07               	movlw	7
  1301   000374  6EB4               	movwf	180,c	;volatile
  1302   000376                     
  1303                           ;main.c: 79:     UCONbits.USBEN = 0;
  1304   000376  966D               	bcf	109,3,c	;volatile
  1305   000378                     
  1306                           ;main.c: 80:     UCFGbits.UTRDIS = 1;
  1307   000378  866F               	bsf	111,3,c	;volatile
  1308   00037A                     
  1309                           ;main.c: 83:     T0CONbits.TMR0ON = 0;
  1310   00037A  9ED5               	bcf	213,7,c	;volatile
  1311   00037C                     
  1312                           ;main.c: 84:     T0CONbits.T08BIT = 0;
  1313   00037C  9CD5               	bcf	213,6,c	;volatile
  1314   00037E                     
  1315                           ;main.c: 85:     T0CONbits.T0CS = 0;
  1316   00037E  9AD5               	bcf	213,5,c	;volatile
  1317   000380                     
  1318                           ;main.c: 86:     T0CONbits.PSA = 0;
  1319   000380  96D5               	bcf	213,3,c	;volatile
  1320                           
  1321                           ;main.c: 87:     T0CONbits.T0PS = 0b101;
  1322   000382  50D5               	movf	213,w,c	;volatile
  1323   000384  0BF8               	andlw	-8
  1324   000386  0905               	iorlw	5
  1325   000388  6ED5               	movwf	213,c	;volatile
  1326   00038A                     
  1327                           ;main.c: 90:     INTCON2bits.TMR0IP = 1;
  1328   00038A  84F1               	bsf	241,2,c	;volatile
  1329   00038C                     
  1330                           ;main.c: 91:     INTCONbits.TMR0IE = 1;
  1331   00038C  8AF2               	bsf	242,5,c	;volatile
  1332   00038E                     
  1333                           ;main.c: 92:     RCONbits.IPEN = 0;
  1334   00038E  9ED0               	bcf	208,7,c	;volatile
  1335                           
  1336                           ;main.c: 95:     TMR0H = 0xF8;
  1337   000390  0EF8               	movlw	248
  1338   000392  6ED7               	movwf	215,c	;volatile
  1339                           
  1340                           ;main.c: 96:     TMR0L = 0xAC;
  1341   000394  0EAC               	movlw	172
  1342   000396  6ED6               	movwf	214,c	;volatile
  1343   000398                     
  1344                           ;main.c: 101:     T1CONbits.TMR1ON = 0;
  1345   000398  90CD               	bcf	205,0,c	;volatile
  1346   00039A                     
  1347                           ;main.c: 102:     T1CONbits.T1RD16 = 0;
  1348   00039A  9ECD               	bcf	205,7,c	;volatile
  1349   00039C                     
  1350                           ;main.c: 103:     T1CONbits.T1RUN = 0;
  1351   00039C  9CCD               	bcf	205,6,c	;volatile
  1352                           
  1353                           ;main.c: 104:     T1CONbits.T1CKPS = 0;
  1354   00039E  0ECF               	movlw	-49
  1355   0003A0  16CD               	andwf	205,f,c	;volatile
  1356   0003A2                     
  1357                           ;main.c: 105:     T1CONbits.T1OSCEN = 0;
  1358   0003A2  96CD               	bcf	205,3,c	;volatile
  1359   0003A4                     
  1360                           ;main.c: 106:     T1CONbits.TMR1CS = 0;
  1361   0003A4  92CD               	bcf	205,1,c	;volatile
  1362   0003A6                     
  1363                           ;main.c: 109:     INTCONbits.GIE = 1;
  1364   0003A6  8EF2               	bsf	242,7,c	;volatile
  1365   0003A8                     
  1366                           ;main.c: 110:     T0CONbits.TMR0ON = 1;
  1367   0003A8  8ED5               	bsf	213,7,c	;volatile
  1368   0003AA                     
  1369                           ;main.c: 111:     T1CONbits.TMR1ON = 1;
  1370   0003AA  80CD               	bsf	205,0,c	;volatile
  1371                           
  1372                           ;main.c: 113:     TMR1H = 0xF8;
  1373   0003AC  0EF8               	movlw	248
  1374   0003AE  6ECF               	movwf	207,c	;volatile
  1375                           
  1376                           ;main.c: 114:     TMR1L = 0x2F;
  1377   0003B0  0E2F               	movlw	47
  1378   0003B2  6ECE               	movwf	206,c	;volatile
  1379   0003B4                     
  1380                           ;main.c: 119:     T2CONbits.TMR2ON=0;
  1381   0003B4  94CA               	bcf	202,2,c	;volatile
  1382                           
  1383                           ;main.c: 120:     T2CONbits.TOUTPS=0b01;
  1384   0003B6  50CA               	movf	202,w,c	;volatile
  1385   0003B8  0B87               	andlw	-121
  1386   0003BA  0908               	iorlw	8
  1387   0003BC  6ECA               	movwf	202,c	;volatile
  1388                           
  1389                           ;main.c: 121:     T2CONbits.T2CKPS=0b01;
  1390   0003BE  50CA               	movf	202,w,c	;volatile
  1391   0003C0  0BFC               	andlw	-4
  1392   0003C2  0901               	iorlw	1
  1393   0003C4  6ECA               	movwf	202,c	;volatile
  1394                           
  1395                           ;main.c: 124:     CCP1CONbits.CCP1M = 0b1100;
  1396   0003C6  50BD               	movf	189,w,c	;volatile
  1397   0003C8  0BF0               	andlw	-16
  1398   0003CA  090C               	iorlw	12
  1399   0003CC  6EBD               	movwf	189,c	;volatile
  1400                           
  1401                           ;main.c: 125:     CCP2CONbits.CCP2M = 0b1100;
  1402   0003CE  50BA               	movf	186,w,c	;volatile
  1403   0003D0  0BF0               	andlw	-16
  1404   0003D2  090C               	iorlw	12
  1405   0003D4  6EBA               	movwf	186,c	;volatile
  1406                           
  1407                           ;main.c: 126:     PR2=149;
  1408   0003D6  0E95               	movlw	149
  1409   0003D8  6ECB               	movwf	203,c	;volatile
  1410                           
  1411                           ;main.c: 130:     CCP1CONbits.DC1B = 0;
  1412   0003DA  0ECF               	movlw	-49
  1413   0003DC  16BD               	andwf	189,f,c	;volatile
  1414                           
  1415                           ;main.c: 131:     CCP2CONbits.DC2B = 0;
  1416   0003DE  0ECF               	movlw	-49
  1417   0003E0  16BA               	andwf	186,f,c	;volatile
  1418                           
  1419                           ;main.c: 132:     CCPR1L = 0;
  1420   0003E2  0E00               	movlw	0
  1421   0003E4  6EBE               	movwf	190,c	;volatile
  1422                           
  1423                           ;main.c: 133:     CCPR2L = 0;
  1424   0003E6  0E00               	movlw	0
  1425   0003E8  6EBB               	movwf	187,c	;volatile
  1426   0003EA                     
  1427                           ;main.c: 135:     T2CONbits.TMR2ON=1;
  1428   0003EA  84CA               	bsf	202,2,c	;volatile
  1429                           
  1430                           ;main.c: 138:     ADCON0bits.CHS=0;
  1431   0003EC  0EC3               	movlw	-61
  1432   0003EE  16C2               	andwf	194,f,c	;volatile
  1433   0003F0                     
  1434                           ;main.c: 139:     ADCON0bits.GODONE=0;
  1435   0003F0  92C2               	bcf	194,1,c	;volatile
  1436   0003F2                     
  1437                           ;main.c: 140:     ADCON0bits.ADON=1;
  1438   0003F2  80C2               	bsf	194,0,c	;volatile
  1439                           
  1440                           ;main.c: 142:     ADCON1bits.VCFG = 0;
  1441   0003F4  0ECF               	movlw	-49
  1442   0003F6  16C1               	andwf	193,f,c	;volatile
  1443                           
  1444                           ;main.c: 143:     ADCON1bits.PCFG = 0b1001;
  1445   0003F8  50C1               	movf	193,w,c	;volatile
  1446   0003FA  0BF0               	andlw	-16
  1447   0003FC  0909               	iorlw	9
  1448   0003FE  6EC1               	movwf	193,c	;volatile
  1449   000400                     
  1450                           ;main.c: 145:     ADCON2bits.ADFM=0;
  1451   000400  9EC0               	bcf	192,7,c	;volatile
  1452                           
  1453                           ;main.c: 146:     ADCON2bits.ACQT=7;
  1454   000402  0E38               	movlw	56
  1455   000404  12C0               	iorwf	192,f,c	;volatile
  1456                           
  1457                           ;main.c: 147:     ADCON2bits.ADCS=6;
  1458   000406  50C0               	movf	192,w,c	;volatile
  1459   000408  0BF8               	andlw	-8
  1460   00040A  0906               	iorlw	6
  1461   00040C  6EC0               	movwf	192,c	;volatile
  1462   00040E                     
  1463                           ;main.c: 152:     TRISCbits.RC6 = 1;
  1464   00040E  8C94               	bsf	148,6,c	;volatile
  1465   000410                     
  1466                           ;main.c: 153:     TRISCbits.RC7 = 1;
  1467   000410  8E94               	bsf	148,7,c	;volatile
  1468   000412                     
  1469                           ;main.c: 155:     BAUDCONbits.RXDTP=0;
  1470   000412  9AB8               	bcf	184,5,c	;volatile
  1471   000414                     
  1472                           ;main.c: 156:     BAUDCONbits.TXCKP=0;
  1473   000414  98B8               	bcf	184,4,c	;volatile
  1474   000416                     
  1475                           ;main.c: 157:     BAUDCONbits.BRG16=1;
  1476   000416  86B8               	bsf	184,3,c	;volatile
  1477   000418                     
  1478                           ;main.c: 159:     BAUDCONbits.WUE=0;
  1479   000418  92B8               	bcf	184,1,c	;volatile
  1480   00041A                     
  1481                           ;main.c: 160:     BAUDCONbits.ABDEN=0;
  1482   00041A  90B8               	bcf	184,0,c	;volatile
  1483                           
  1484                           ;main.c: 161:     SPBRG=51;
  1485   00041C  0E33               	movlw	51
  1486   00041E  6EAF               	movwf	175,c	;volatile
  1487                           
  1488                           ;main.c: 162:     SPBRGH=0;
  1489   000420  0E00               	movlw	0
  1490   000422  6EB0               	movwf	176,c	;volatile
  1491   000424                     
  1492                           ;main.c: 163:     TXSTAbits.CSRC=0;
  1493   000424  9EAC               	bcf	172,7,c	;volatile
  1494   000426                     
  1495                           ;main.c: 164:     TXSTAbits.TX9=0;
  1496   000426  9CAC               	bcf	172,6,c	;volatile
  1497   000428                     
  1498                           ;main.c: 165:     TXSTAbits.TXEN=1;
  1499   000428  8AAC               	bsf	172,5,c	;volatile
  1500   00042A                     
  1501                           ;main.c: 166:     TXSTAbits.SYNC=0;
  1502   00042A  98AC               	bcf	172,4,c	;volatile
  1503   00042C                     
  1504                           ;main.c: 168:     TXSTAbits.BRGH=0;
  1505   00042C  94AC               	bcf	172,2,c	;volatile
  1506   00042E                     
  1507                           ;main.c: 169:     RCSTAbits.RX9=0;
  1508   00042E  9CAB               	bcf	171,6,c	;volatile
  1509   000430                     
  1510                           ;main.c: 170:     RCSTAbits.CREN=1;
  1511   000430  88AB               	bsf	171,4,c	;volatile
  1512   000432                     
  1513                           ;main.c: 171:     RCSTAbits.SPEN=1;
  1514   000432  8EAB               	bsf	171,7,c	;volatile
  1515   000434                     
  1516                           ;main.c: 177:     TRISBbits.RB0 = 0;
  1517   000434  9093               	bcf	147,0,c	;volatile
  1518   000436                     
  1519                           ;main.c: 178:     TRISBbits.RB1 = 0;
  1520   000436  9293               	bcf	147,1,c	;volatile
  1521   000438                     
  1522                           ;main.c: 179:     TRISBbits.RB2 = 0;
  1523   000438  9493               	bcf	147,2,c	;volatile
  1524   00043A                     
  1525                           ;main.c: 180:     TRISBbits.RB4 = 0;
  1526   00043A  9893               	bcf	147,4,c	;volatile
  1527   00043C                     
  1528                           ;main.c: 181:     TRISBbits.RB5 = 0;
  1529   00043C  9A93               	bcf	147,5,c	;volatile
  1530   00043E                     
  1531                           ;main.c: 184:     TRISDbits.RD2 = 1;
  1532   00043E  8495               	bsf	149,2,c	;volatile
  1533   000440                     
  1534                           ;main.c: 185:     TRISDbits.RD3 = 1;
  1535   000440  8695               	bsf	149,3,c	;volatile
  1536   000442                     
  1537                           ;main.c: 188:     TRISAbits.RA0 = 1;
  1538   000442  8092               	bsf	146,0,c	;volatile
  1539   000444                     
  1540                           ;main.c: 189:     TRISAbits.RA1 = 1;
  1541   000444  8292               	bsf	146,1,c	;volatile
  1542   000446                     
  1543                           ;main.c: 190:     TRISAbits.RA2 = 1;
  1544   000446  8492               	bsf	146,2,c	;volatile
  1545   000448                     
  1546                           ;main.c: 191:     TRISAbits.RA3 = 1;
  1547   000448  8692               	bsf	146,3,c	;volatile
  1548   00044A                     
  1549                           ;main.c: 192:     TRISAbits.RA4 = 1;
  1550   00044A  8892               	bsf	146,4,c	;volatile
  1551   00044C                     
  1552                           ;main.c: 193:     TRISEbits.RE0 = 1;
  1553   00044C  8096               	bsf	150,0,c	;volatile
  1554   00044E                     
  1555                           ;main.c: 196:     TRISDbits.RD1 = 0;
  1556   00044E  9295               	bcf	149,1,c	;volatile
  1557   000450                     
  1558                           ;main.c: 197:     TRISDbits.RD0 = 0;
  1559   000450  9095               	bcf	149,0,c	;volatile
  1560   000452                     
  1561                           ;main.c: 198:     TRISCbits.RC1 = 0;
  1562   000452  9294               	bcf	148,1,c	;volatile
  1563   000454                     
  1564                           ;main.c: 199:     TRISCbits.RC0 = 0;
  1565   000454  9094               	bcf	148,0,c	;volatile
  1566   000456                     
  1567                           ;main.c: 200:     TRISBbits.RB3 = 0;
  1568   000456  9693               	bcf	147,3,c	;volatile
  1569   000458                     
  1570                           ;main.c: 201:     TRISCbits.RC2 = 0;
  1571   000458  9494               	bcf	148,2,c	;volatile
  1572   00045A  0012               	return		;funcret
  1573   00045C                     __end_of_config_micro:
  1574                           	callstack 0
  1575                           
  1576 ;; *************** function _enc *****************
  1577 ;; Defined at:
  1578 ;;		line 286 in file "main.c"
  1579 ;; Parameters:    Size  Location     Type
  1580 ;;		None
  1581 ;; Auto vars:     Size  Location     Type
  1582 ;;  i               2    4[COMRAM] int 
  1583 ;; Return value:  Size  Location     Type
  1584 ;;                  1    wreg      void 
  1585 ;; Registers used:
  1586 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1587 ;; Tracked objects:
  1588 ;;		On entry : 0/0
  1589 ;;		On exit  : 0/0
  1590 ;;		Unchanged: 0/0
  1591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1592 ;;      Params:         0       0       0       0       0       0       0       0       0
  1593 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1594 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1595 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1596 ;;Total ram usage:        6 bytes
  1597 ;; Hardware stack levels used: 1
  1598 ;; This function calls:
  1599 ;;		Nothing
  1600 ;; This function is called by:
  1601 ;;		Interrupt level 2
  1602 ;; This function uses a non-reentrant model
  1603 ;;
  1604                           
  1605                           	psect	intcode
  1606   000008                     __pintcode:
  1607                           	callstack 0
  1608   000008                     _enc:
  1609                           	callstack 28
  1610                           
  1611                           ;incstack = 0
  1612   000008  8258               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1613   00000A  ED90  F002         	call	int_func,f	;refresh shadow registers
  1614                           
  1615                           	psect	intcode_body
  1616   000520                     __pintcode_body:
  1617                           	callstack 28
  1618   000520                     int_func:
  1619                           	callstack 28
  1620   000520  0006               	pop		; remove dummy address from shadow register refresh
  1621   000522  CFD9 F047          	movff	fsr2l,??_enc+2
  1622   000526  CFDA F048          	movff	fsr2h,??_enc+3
  1623   00052A                     
  1624                           ;main.c: 287:     if (TMR0IF){
  1625   00052A  A4F2               	btfss	4082,2,c	;volatile
  1626   00052C  EF9A  F002         	goto	i2u51_41
  1627   000530  EF9C  F002         	goto	i2u51_40
  1628   000534                     i2u51_41:
  1629   000534  EFD1  F002         	goto	i2l140
  1630   000538                     i2u51_40:
  1631   000538                     
  1632                           ;main.c: 289:         TMR0H = 0xF8;
  1633   000538  0EF8               	movlw	248
  1634   00053A  6ED7               	movwf	215,c	;volatile
  1635                           
  1636                           ;main.c: 290:         TMR0L = 0xAC;
  1637   00053C  0EAC               	movlw	172
  1638   00053E  6ED6               	movwf	214,c	;volatile
  1639   000540                     
  1640                           ;main.c: 291:         TMR0IF = 0;
  1641   000540  94F2               	bcf	4082,2,c	;volatile
  1642                           
  1643                           ;main.c: 293:         int i;;main.c: 294:         for (i=0;i<5;i++){
  1644   000542  0E00               	movlw	0
  1645   000544  6E4A               	movwf	(enc@i+1)^0,c
  1646   000546  0E00               	movlw	0
  1647   000548  6E49               	movwf	enc@i^0,c
  1648   00054A                     i2l1193:
  1649                           
  1650                           ;main.c: 295:             counter[i] ++;
  1651   00054A  C049  F045         	movff	enc@i,??_enc
  1652   00054E  C04A  F046         	movff	enc@i+1,??_enc+1
  1653   000552  90D8               	bcf	status,0,c
  1654   000554  3645               	rlcf	??_enc^0,f,c
  1655   000556  3646               	rlcf	(??_enc+1)^0,f,c
  1656   000558  90D8               	bcf	status,0,c
  1657   00055A  3645               	rlcf	??_enc^0,f,c
  1658   00055C  3646               	rlcf	(??_enc+1)^0,f,c
  1659   00055E  90D8               	bcf	status,0,c
  1660   000560  3645               	rlcf	??_enc^0,f,c
  1661   000562  3646               	rlcf	(??_enc+1)^0,f,c
  1662   000564  0E01               	movlw	low _counter
  1663   000566  2445               	addwf	??_enc^0,w,c
  1664   000568  6ED9               	movwf	fsr2l,c
  1665   00056A  0E00               	movlw	high _counter
  1666   00056C  2046               	addwfc	(??_enc+1)^0,w,c
  1667   00056E  6EDA               	movwf	fsr2h,c
  1668   000570  2ADE               	incf	postinc2,f,c
  1669   000572  0E00               	movlw	0
  1670   000574  22DE               	addwfc	postinc2,f,c
  1671   000576  22DE               	addwfc	postinc2,f,c
  1672   000578  22DE               	addwfc	postinc2,f,c
  1673   00057A  22DE               	addwfc	postinc2,f,c
  1674   00057C  22DE               	addwfc	postinc2,f,c
  1675   00057E  22DE               	addwfc	postinc2,f,c
  1676   000580  22DE               	addwfc	postinc2,f,c
  1677   000582                     
  1678                           ;main.c: 296:         }
  1679   000582  4A49               	infsnz	enc@i^0,f,c
  1680   000584  2A4A               	incf	(enc@i+1)^0,f,c
  1681   000586  BE4A               	btfsc	(enc@i+1)^0,7,c
  1682   000588  EFCF  F002         	goto	i2u52_41
  1683   00058C  504A               	movf	(enc@i+1)^0,w,c
  1684   00058E  E109               	bnz	i2u52_40
  1685   000590  0E05               	movlw	5
  1686   000592  5C49               	subwf	enc@i^0,w,c
  1687   000594  A0D8               	btfss	status,0,c
  1688   000596  EFCF  F002         	goto	i2u52_41
  1689   00059A  EFD1  F002         	goto	i2u52_40
  1690   00059E                     i2u52_41:
  1691   00059E  EFA5  F002         	goto	i2l1193
  1692   0005A2                     i2u52_40:
  1693   0005A2                     i2l140:
  1694   0005A2  C048  FFDA         	movff	??_enc+3,fsr2h
  1695   0005A6  C047  FFD9         	movff	??_enc+2,fsr2l
  1696   0005AA  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1697   0005AC  0011               	retfie		f
  1698   0005AE                     __end_of_enc:
  1699                           	callstack 0
  1700   000000                     
  1701                           	psect	rparam
  1702   000000                     
  1703                           	psect	temp
  1704   000058                     btemp:
  1705                           	callstack 0
  1706   000058                     	ds	1
  1707   000000                     int$flags	set	btemp
  1708   000000                     wtemp8	set	btemp+1
  1709   000000                     ttemp5	set	btemp+1
  1710   000000                     ttemp6	set	btemp+4
  1711   000000                     ttemp7	set	btemp+8
  1712                           
  1713                           	psect	idloc
  1714                           
  1715                           ;Config register IDLOC0 @ 0x200000
  1716                           ;	unspecified, using default values
  1717   200000                     	org	2097152
  1718   200000  FF                 	db	255
  1719                           
  1720                           ;Config register IDLOC1 @ 0x200001
  1721                           ;	unspecified, using default values
  1722   200001                     	org	2097153
  1723   200001  FF                 	db	255
  1724                           
  1725                           ;Config register IDLOC2 @ 0x200002
  1726                           ;	unspecified, using default values
  1727   200002                     	org	2097154
  1728   200002  FF                 	db	255
  1729                           
  1730                           ;Config register IDLOC3 @ 0x200003
  1731                           ;	unspecified, using default values
  1732   200003                     	org	2097155
  1733   200003  FF                 	db	255
  1734                           
  1735                           ;Config register IDLOC4 @ 0x200004
  1736                           ;	unspecified, using default values
  1737   200004                     	org	2097156
  1738   200004  FF                 	db	255
  1739                           
  1740                           ;Config register IDLOC5 @ 0x200005
  1741                           ;	unspecified, using default values
  1742   200005                     	org	2097157
  1743   200005  FF                 	db	255
  1744                           
  1745                           ;Config register IDLOC6 @ 0x200006
  1746                           ;	unspecified, using default values
  1747   200006                     	org	2097158
  1748   200006  FF                 	db	255
  1749                           
  1750                           ;Config register IDLOC7 @ 0x200007
  1751                           ;	unspecified, using default values
  1752   200007                     	org	2097159
  1753   200007  FF                 	db	255
  1754                           
  1755                           	psect	config
  1756                           
  1757                           ;Config register CONFIG1L @ 0x300000
  1758                           ;	PLL Prescaler Selection bits
  1759                           ;	PLLDIV = 5, Divide by 5 (20 MHz oscillator input)
  1760                           ;	System Clock Postscaler Selection bits
  1761                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1762                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1763                           ;	USBDIV = 2, USB clock source comes from the 96 MHz PLL divided by 2
  1764   300000                     	org	3145728
  1765   300000  24                 	db	36
  1766                           
  1767                           ;Config register CONFIG1H @ 0x300001
  1768                           ;	Oscillator Selection bits
  1769                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
  1770                           ;	Fail-Safe Clock Monitor Enable bit
  1771                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1772                           ;	Internal/External Oscillator Switchover bit
  1773                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1774   300001                     	org	3145729
  1775   300001  0E                 	db	14
  1776                           
  1777                           ;Config register CONFIG2L @ 0x300002
  1778                           ;	Power-up Timer Enable bit
  1779                           ;	PWRT = OFF, PWRT disabled
  1780                           ;	Brown-out Reset Enable bits
  1781                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1782                           ;	Brown-out Reset Voltage bits
  1783                           ;	BORV = 3, Minimum setting 2.05V
  1784                           ;	USB Voltage Regulator Enable bit
  1785                           ;	VREGEN = OFF, USB voltage regulator disabled
  1786   300002                     	org	3145730
  1787   300002  19                 	db	25
  1788                           
  1789                           ;Config register CONFIG2H @ 0x300003
  1790                           ;	Watchdog Timer Enable bit
  1791                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1792                           ;	Watchdog Timer Postscale Select bits
  1793                           ;	WDTPS = 32768, 1:32768
  1794   300003                     	org	3145731
  1795   300003  1E                 	db	30
  1796                           
  1797                           ; Padding undefined space
  1798   300004                     	org	3145732
  1799   300004  FF                 	db	255
  1800                           
  1801                           ;Config register CONFIG3H @ 0x300005
  1802                           ;	CCP2 MUX bit
  1803                           ;	CCP2MX = OFF, CCP2 input/output is multiplexed with RB3
  1804                           ;	PORTB A/D Enable bit
  1805                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1806                           ;	Low-Power Timer 1 Oscillator Enable bit
  1807                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1808                           ;	MCLR Pin Enable bit
  1809                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  1810   300005                     	org	3145733
  1811   300005  00                 	db	0
  1812                           
  1813                           ;Config register CONFIG4L @ 0x300006
  1814                           ;	Stack Full/Underflow Reset Enable bit
  1815                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1816                           ;	Single-Supply ICSP Enable bit
  1817                           ;	LVP = OFF, Single-Supply ICSP disabled
  1818                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1819                           ;	ICPRT = OFF, ICPORT disabled
  1820                           ;	Extended Instruction Set Enable bit
  1821                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1822                           ;	Background Debugger Enable bit
  1823                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  1824   300006                     	org	3145734
  1825   300006  81                 	db	129
  1826                           
  1827                           ; Padding undefined space
  1828   300007                     	org	3145735
  1829   300007  FF                 	db	255
  1830                           
  1831                           ;Config register CONFIG5L @ 0x300008
  1832                           ;	Code Protection bit
  1833                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1834                           ;	Code Protection bit
  1835                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1836                           ;	Code Protection bit
  1837                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1838                           ;	Code Protection bit
  1839                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1840   300008                     	org	3145736
  1841   300008  0F                 	db	15
  1842                           
  1843                           ;Config register CONFIG5H @ 0x300009
  1844                           ;	Boot Block Code Protection bit
  1845                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1846                           ;	Data EEPROM Code Protection bit
  1847                           ;	CPD = OFF, Data EEPROM is not code-protected
  1848   300009                     	org	3145737
  1849   300009  C0                 	db	192
  1850                           
  1851                           ;Config register CONFIG6L @ 0x30000A
  1852                           ;	Write Protection bit
  1853                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1854                           ;	Write Protection bit
  1855                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1856                           ;	Write Protection bit
  1857                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1858                           ;	Write Protection bit
  1859                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1860   30000A                     	org	3145738
  1861   30000A  0F                 	db	15
  1862                           
  1863                           ;Config register CONFIG6H @ 0x30000B
  1864                           ;	Configuration Register Write Protection bit
  1865                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1866                           ;	Boot Block Write Protection bit
  1867                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1868                           ;	Data EEPROM Write Protection bit
  1869                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1870   30000B                     	org	3145739
  1871   30000B  E0                 	db	224
  1872                           
  1873                           ;Config register CONFIG7L @ 0x30000C
  1874                           ;	Table Read Protection bit
  1875                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1876                           ;	Table Read Protection bit
  1877                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1878                           ;	Table Read Protection bit
  1879                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1880                           ;	Table Read Protection bit
  1881                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1882   30000C                     	org	3145740
  1883   30000C  0F                 	db	15
  1884                           
  1885                           ;Config register CONFIG7H @ 0x30000D
  1886                           ;	Boot Block Table Read Protection bit
  1887                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1888   30000D                     	org	3145741
  1889   30000D  40                 	db	64
  1890                           tosu	equ	0xFFF
  1891                           tosh	equ	0xFFE
  1892                           tosl	equ	0xFFD
  1893                           stkptr	equ	0xFFC
  1894                           pclatu	equ	0xFFB
  1895                           pclath	equ	0xFFA
  1896                           pcl	equ	0xFF9
  1897                           tblptru	equ	0xFF8
  1898                           tblptrh	equ	0xFF7
  1899                           tblptrl	equ	0xFF6
  1900                           tablat	equ	0xFF5
  1901                           prodh	equ	0xFF4
  1902                           prodl	equ	0xFF3
  1903                           indf0	equ	0xFEF
  1904                           postinc0	equ	0xFEE
  1905                           postdec0	equ	0xFED
  1906                           preinc0	equ	0xFEC
  1907                           plusw0	equ	0xFEB
  1908                           fsr0h	equ	0xFEA
  1909                           fsr0l	equ	0xFE9
  1910                           wreg	equ	0xFE8
  1911                           indf1	equ	0xFE7
  1912                           postinc1	equ	0xFE6
  1913                           postdec1	equ	0xFE5
  1914                           preinc1	equ	0xFE4
  1915                           plusw1	equ	0xFE3
  1916                           fsr1h	equ	0xFE2
  1917                           fsr1l	equ	0xFE1
  1918                           bsr	equ	0xFE0
  1919                           indf2	equ	0xFDF
  1920                           postinc2	equ	0xFDE
  1921                           postdec2	equ	0xFDD
  1922                           preinc2	equ	0xFDC
  1923                           plusw2	equ	0xFDB
  1924                           fsr2h	equ	0xFDA
  1925                           fsr2l	equ	0xFD9
  1926                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         324
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     19      87
    BANK0           160      0       0
    BANK1           256      0     256
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_update_pwm
    _update_pwm->___awdiv
    _read_analog->___awdiv

Critical Paths under _enc in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _enc in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _enc in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _enc in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _enc in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _enc in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _enc in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _enc in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _enc in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1965
                       _config_micro
                               _init
                          _init_vars
                               _loop
                        _read_analog
                         _update_pwm
 ---------------------------------------------------------------------------------
 (1) _update_pwm                                           5     5      0    1028
                                             14 COMRAM     5     5      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _read_analog                                          4     4      0     892
                                             14 COMRAM     4     4      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     756
                                              6 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _loop                                                 1     1      0       0
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_vars                                            4     4      0      45
                                              6 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_micro                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _enc                                                  6     6      0      45
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config_micro
   _init
   _init_vars
   _loop
   _read_analog
     ___awdiv
   _update_pwm
     ___awdiv

 _enc (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      41        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     13      57       1       92.6%
BITBIGSFRhhlh       19      0       0      21        0.0%
BITBIGSFRllhhll     11      0       0      37        0.0%
BITBIGSFRllhhlh      E      0       0      36        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRlll         D      0       0      39        0.0%
BITBIGSFRllhhhl      7      0       0      35        0.0%
BITBIGSFRlhlllh      5      0       0      25        0.0%
BITBIGSFRllhhhl      4      0       0      33        0.0%
BITBIGSFRllhhhh      3      0       0      30        0.0%
BITBIGSFRlhllll      3      0       0      29        0.0%
BITBIGSFRllhhhl      2      0       0      34        0.0%
BITBIGSFRlhh         2      0       0      23        0.0%
BITBIGSFRllhhhl      1      0       0      32        0.0%
BITBIGSFRllhhhl      1      0       0      31        0.0%
BITBIGSFRlhllll      1      0       0      28        0.0%
BITBIGSFRlhllll      1      0       0      27        0.0%
BITBIGSFRlhlllh      1      0       0      26        0.0%
BITBIGSFRlhllh       1      0       0      24        0.0%
BITBIGSFRllhl        1      0       0      38        0.0%
BITBIGSFRhl          1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     157      40        0.0%
DATA                 0      0     157       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Jun 28 19:47:47 2025

                     u91 065A             ___awdiv@sign 0050                      l101 045A  
                    l106 05C6                      l109 0628                      l150 0062  
                    l145 0690                      l164 01F2                      l173 06DC  
                    l181 033A                      l182 033C                      l158 0152  
                    l431 051E                      l184 035C                      l178 0316  
                    l179 0318                      l189 036C                      l921 0378  
                    l931 038A                      l923 037A                      l941 039C  
                    l933 038C                      l925 037C                      l917 036E  
                    l951 03AA                      l943 03A2                      l935 038E  
                    l927 037E                      l919 0376                      l961 0400  
                    l953 03B4                      l945 03A4                      l937 0398  
                    l929 0380                      l971 0416                      l963 040E  
                    l955 03EA                      l947 03A6                      l939 039A  
                    l981 0428                      l973 0418                      l965 0410  
                    l957 03F0                      l949 03A8                      l991 0432  
                    l983 042A                      l975 041A                      l967 0412  
                    l959 03F2                      l993 0434                      l985 042C  
                    l977 0424                      l969 0414                      l995 0436  
                    l987 042E                      l979 0426                      l997 0438  
                    l989 0430                      l999 043A                      u100 0680  
                    u101 067C                      u300 0282                      u301 027A  
                    u400 0326                      u320 02A2                      u401 0322  
                    u321 029A                      u410 0336                      u250 021E  
                    u411 0332                      u251 021A                      u420 034A  
                    u340 02C4                      u421 0346                      u341 02BC  
                    u261 0224                      u430 0358                      u318 0284  
                    u270 024A                      _PR2 000FCB                      u431 0354  
                    u271 0246                      u440 036A                      u360 02E4  
                    u280 0264                      u600 0628                      u441 0366  
                    u361 02DC                      u281 025C                      u601 0624  
                    u338 02A4                      u530 046E                      u610 002E  
                    u531 046A                      u611 002A                      u380 0302  
                    u540 0488                      u700 0178                      u620 0056  
                    u381 02FE                      u541 0484                      u701 0170  
                    u621 0052                      u390 0312                      u358 02C6  
                    u550 04AE                      u630 0088                      u391 030E  
                    u551 04AA                      u631 0080                      u560 04CC  
                    u720 0198                      u561 04C8                      u721 0190  
                    u378 02E6                      u298 0266                      u570 04E8  
                    u650 00A8                      u571 04E4                      u651 00A0  
                    u580 050E                      u740 01BE                      u581 050A  
                    u741 01BA                      u590 05D4                      u718 017A  
                    u670 00CE                      u591 05D0                      u671 00CA  
                    u680 011E                      u648 008A                      u681 011A  
                    u738 019A                      u690 0146                      u691 0142  
                    u668 00AA                      _enc 0008                      _pwm 003D  
                    prod 000FF3                      wreg 000FE8                     l1001 043C  
                   l1011 0446                     l1003 043E                     l1021 0450  
                   l1013 0448                     l1005 0440                     l1101 021E  
                   l1023 0452                     l1015 044A                     l1007 0442  
                   l1111 0270                     l1103 022A                     l1025 0454  
                   l1017 044C                     l1009 0444                     l1121 0302  
                   l1113 0290                     l1105 022E                     l1027 0456  
                   l1019 044E                     l1051 062A                     l1115 02B2  
                   l1107 024A                     l1211 045C                     l1029 0458  
                   l1061 0664                     l1133 036A                     l1125 0326  
                   l1117 02D2                     l1109 0252                     l1221 0488  
                   l1213 0460                     l1301 01BE                     l1063 0680  
                   l1119 02F4                     l1231 04B6                     l1223 0490  
                   l1215 046E                     l1303 01C6                     l1311 06E6  
                   l1057 0632                     l1129 034A                     l1241 04F0  
                   l1233 04BE                     l1225 0494                     l1217 0476  
                   l1305 01DA                     l1313 06EA                     l1059 0660  
                   l1251 0516                     l1243 04F2                     l1235 04CC  
                   l1227 049C                     l1219 047A                     l1315 06EE  
                   l1307 06DE                     l1245 04F8                     l1237 04D2  
                   l1229 04AE                     l1261 05B2                     l1317 06F2  
                   l1309 06E2                     l1239 04E8                     l1247 04FE  
                   l1271 0616                     l1263 05C4                     l1255 05AE  
                   l1097 06BC                     l1249 050E                     l1273 0618  
                   l1265 05D4                     l1281 0056                     l1099 01F4  
                   l1267 05E0                     l1291 0102                     l1283 006A  
                   l1275 0012                     l1269 05FE                     l1293 011E  
                   l1285 00CE                     l1277 002E                     l1295 012A  
                   l1287 00D6                     l1279 003A                     l1297 0146  
                   l1289 00EA                     l1299 015A                     ?_enc 0045  
                   _EEIF 007D0C                     _TXIF 007CF4                     _main 06DE  
                   enc@i 0049                     _init 06BC                     _loop 01F4  
                   fsr1h 000FE2                     fsr2h 000FDA                     fsr1l 000FE1  
                   fsr2l 000FD9                     btemp 0058           ??_config_micro 004B  
                   prodh 000FF4                     prodl 000FF3                     start 000E  
           ___param_bank 000000                    ??_enc 0045                    ?_main 0045  
                  ?_init 0045          __end_of___awdiv 0520                    _EEADR 000FA9  
                  ?_loop 0045                    _CMCON 000FB4          ___awdiv@divisor 004D  
                  i2l140 05A2          ___awdiv@counter 004F                    _TMR0H 000FD7  
                  _TMR1H 000FCF                    _TMR0L 000FD6                    _TMR1L 000FCE  
                  _SPBRG 000FAF                    _TXREG 000FAD             ?_read_analog 0045  
                  _value 0041                    ttemp5 0059                    ttemp6 005C  
                  ttemp7 0060                    status 000FD8                    wtemp8 0059  
        __initialization 0692             __end_of_main 06FE             __end_of_init 06DE  
           __end_of_loop 036E                   ??_main 0058                   ??_init 004B  
                 ??_loop 004B            __activetblptr 000000                   _ADRESH 000FC4  
                 _ADRESL 000FC3                   _EEDATA 000FA8                   _CCPR1L 000FBE  
                 _CCPR2L 000FBB                   _EECON2 000FA7         ___awdiv@dividend 004B  
                 i2l1183 052A                   i2l1193 054A                   i2l1185 0538  
                 i2l1195 0582                   i2l1187 0540                   i2l1197 0586  
                 _TMR0IF 007F92                   _SPBRGH 000FB0                ??___awdiv 004F  
                 clear_0 069A                   clear_1 06AC         ___awdiv@quotient 0051  
                 isa$std 000001     __end_of_config_micro 045C               __accesstop 0060  
__end_of__initialization 06B2            ___rparam_used 000001           __pcstackCOMRAM 0045  
             __pbssBANK1 0100                  i2u51_40 0538                  i2u51_41 0534  
                i2u52_40 05A2                  i2u52_41 059E           _persisted_data 0100  
                __Hparam 0000                  __Lparam 0000                  ___awdiv 045C  
                __pcinit 0692                  __ramtop 0800                  _flag_b1 0044  
                _flag_b2 0043                  __ptext0 06DE                  __ptext1 0012  
                __ptext2 05AE                  __ptext3 045C                  __ptext4 01F4  
                __ptext5 062A                  __ptext6 06BC                  __ptext7 036E  
              _T0CONbits 000FD5                _T1CONbits 000FCD                  _counter 0001  
              _T2CONbits 000FCA        __end_of_init_vars 0692           __pintcode_body 0520  
   end_of_initialization 06B2                  int_func 0520             read_analog@i 0056  
           _config_micro 036E                _RCSTAbits 000FAB                  postdec1 000FE5  
                postdec2 000FDD                  postinc0 000FEE                  postinc2 000FDE  
              _PORTBbits 000F81                _PORTCbits 000F82                _PORTDbits 000F83  
              _TRISAbits 000F92                _TRISBbits 000F93                _TRISCbits 000F94  
              _TRISDbits 000F95                _TRISEbits 000F96               _update_pwm 0012  
            _CCP1CONbits 000FBD              _CCP2CONbits 000FBA                _TXSTAbits 000FAC  
            _BAUDCONbits 000FB8      start_initialization 0692              __end_of_enc 05AE  
         update_pwm@pwm0 0054           update_pwm@pwm1 0056               init_vars@i 004D  
          ??_read_analog 0053              __pbssCOMRAM 0001              ?_update_pwm 0045  
              __pintcode 0008                 ?___awdiv 004B                _init_vars 062A  
    __end_of_read_analog 062A                 _UCFGbits 000F6F                 _RCONbits 000FD0  
               _UCONbits 000F6D               _ADCON0bits 000FC2               _ADCON1bits 000FC1  
             _ADCON2bits 000FC0               ?_init_vars 0045              _INTCON2bits 000FF1  
             _EECON1bits 000FA6                 __Hrparam 0000                 __Lrparam 0000  
         read_analog@aux 0054              _read_analog 05AE                 _an_input 0029  
               isa$xinst 000000                 int$flags 0058               _INTCONbits 000FF2  
           ??_update_pwm 0053              ??_init_vars 004B                 intlevel2 0000  
             _OSCCONbits 000FD3       __end_of_update_pwm 01F4            ?_config_micro 0045  
