

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Jun 21 20:03:46 2025

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    34                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    36   000000                     
    37                           ; Version 2.40
    38                           ; Generated 17/11/2021 GMT
    39                           ; 
    40                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F4550 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72   000000                     _ADRESL	set	4035
    73   000000                     _ADRESH	set	4036
    74   000000                     _TMR1L	set	4046
    75   000000                     _TMR1H	set	4047
    76   000000                     _TMR0L	set	4054
    77   000000                     _TMR0H	set	4055
    78   000000                     _INTCON2bits	set	4081
    79   000000                     _T2CONbits	set	4042
    80   000000                     _TMR0IF	set	32658
    81   000000                     _T2CKPS1	set	32337
    82   000000                     _T2CKPS0	set	32336
    83   000000                     _TMR2ON	set	32338
    84   000000                     _T2OUTPS3	set	32342
    85   000000                     _T2OUTPS2	set	32341
    86   000000                     _T2OUTPS1	set	32340
    87   000000                     _UCONbits	set	3949
    88   000000                     _CMCON	set	4020
    89   000000                     _OSCCONbits	set	4051
    90   000000                     _T0CONbits	set	4053
    91   000000                     _BAUDCONbits	set	4024
    92   000000                     _CCP2CONbits	set	4026
    93   000000                     _CCP1CONbits	set	4029
    94   000000                     _T1CONbits	set	4045
    95   000000                     _RCONbits	set	4048
    96   000000                     _T2OUTPS0	set	32339
    97   000000                     _UCFGbits	set	3951
    98   000000                     _PORTBbits	set	3969
    99   000000                     _TRISAbits	set	3986
   100   000000                     _TRISBbits	set	3987
   101   000000                     _TRISCbits	set	3988
   102   000000                     _INTCONbits	set	4082
   103   000000                     _PR2	set	4043
   104   000000                     _ADCON2bits	set	4032
   105   000000                     _ADCON1bits	set	4033
   106   000000                     _ADCON0bits	set	4034
   107   000000                     _TRISEbits	set	3990
   108   000000                     _TRISDbits	set	3989
   109   000000                     _RCSTAbits	set	4011
   110   000000                     _TXSTAbits	set	4012
   111   000000                     _SPBRG	set	4015
   112   000000                     _TXIF	set	31988
   113   000000                     _SPBRGH	set	4016
   114   000000                     _TXREG	set	4013
   115   000000                     _PORTDbits	set	3971
   116                           
   117                           	psect	smallconst
   118   000800                     __psmallconst:
   119                           	callstack 0
   120   000800  00                 	db	0
   121   000801                     STR_2:
   122   000801  42                 	db	66	;'B'
   123   000802  75                 	db	117	;'u'
   124   000803  74                 	db	116	;'t'
   125   000804  74                 	db	116	;'t'
   126   000805  6F                 	db	111	;'o'
   127   000806  6E                 	db	110	;'n'
   128   000807  20                 	db	32
   129   000808  31                 	db	49	;'1'
   130   000809  20                 	db	32
   131   00080A  63                 	db	99	;'c'
   132   00080B  6C                 	db	108	;'l'
   133   00080C  69                 	db	105	;'i'
   134   00080D  63                 	db	99	;'c'
   135   00080E  6B                 	db	107	;'k'
   136   00080F  20                 	db	32
   137   000810  64                 	db	100	;'d'
   138   000811  65                 	db	101	;'e'
   139   000812  74                 	db	116	;'t'
   140   000813  65                 	db	101	;'e'
   141   000814  63                 	db	99	;'c'
   142   000815  74                 	db	116	;'t'
   143   000816  65                 	db	101	;'e'
   144   000817  64                 	db	100	;'d'
   145   000818  0A                 	db	10
   146   000819  00                 	db	0
   147   00081A                     STR_1:
   148   00081A  41                 	db	65	;'A'
   149   00081B  6E                 	db	110	;'n'
   150   00081C  61                 	db	97	;'a'
   151   00081D  6C                 	db	108	;'l'
   152   00081E  6F                 	db	111	;'o'
   153   00081F  67                 	db	103	;'g'
   154   000820  20                 	db	32
   155   000821  76                 	db	118	;'v'
   156   000822  61                 	db	97	;'a'
   157   000823  6C                 	db	108	;'l'
   158   000824  75                 	db	117	;'u'
   159   000825  65                 	db	101	;'e'
   160   000826  20                 	db	32
   161   000827  25                 	db	37
   162   000828  64                 	db	100	;'d'
   163   000829  3A                 	db	58	;':'
   164   00082A  20                 	db	32
   165   00082B  25                 	db	37
   166   00082C  64                 	db	100	;'d'
   167   00082D  20                 	db	32
   168   00082E  0A                 	db	10
   169   00082F  00                 	db	0
   170   000830                     STR_3:
   171   000830  53                 	db	83	;'S'
   172   000831  65                 	db	101	;'e'
   173   000832  6C                 	db	108	;'l'
   174   000833  65                 	db	101	;'e'
   175   000834  63                 	db	99	;'c'
   176   000835  74                 	db	116	;'t'
   177   000836  65                 	db	101	;'e'
   178   000837  64                 	db	100	;'d'
   179   000838  20                 	db	32
   180   000839  61                 	db	97	;'a'
   181   00083A  6E                 	db	110	;'n'
   182   00083B  61                 	db	97	;'a'
   183   00083C  6C                 	db	108	;'l'
   184   00083D  6F                 	db	111	;'o'
   185   00083E  67                 	db	103	;'g'
   186   00083F  3A                 	db	58	;':'
   187   000840  20                 	db	32
   188   000841  25                 	db	37
   189   000842  64                 	db	100	;'d'
   190   000843  0A                 	db	10
   191   000844  00                 	db	0
   192   000845  00                 	db	0	; dummy byte at the end
   193   000000                     
   194                           ; #config settings
   195                           
   196                           	psect	cinit
   197   001646                     __pcinit:
   198                           	callstack 0
   199   001646                     start_initialization:
   200                           	callstack 0
   201   001646                     __initialization:
   202                           	callstack 0
   203                           
   204                           ; Clear objects allocated to BANK0 (97 bytes)
   205   001646  EE00  F060         	lfsr	0,__pbssBANK0
   206   00164A  0E61               	movlw	97
   207   00164C                     clear_0:
   208   00164C  6AEE               	clrf	postinc0,c
   209   00164E  06E8               	decf	wreg,f,c
   210   001650  E1FD               	bnz	clear_0
   211                           
   212                           ; Clear objects allocated to COMRAM (6 bytes)
   213   001652  6A57               	clrf	(__pbssCOMRAM+5)& (0+255),c
   214   001654  6A56               	clrf	(__pbssCOMRAM+4)& (0+255),c
   215   001656  6A55               	clrf	(__pbssCOMRAM+3)& (0+255),c
   216   001658  6A54               	clrf	(__pbssCOMRAM+2)& (0+255),c
   217   00165A  6A53               	clrf	(__pbssCOMRAM+1)& (0+255),c
   218   00165C  6A52               	clrf	__pbssCOMRAM& (0+255),c
   219   00165E                     end_of_initialization:
   220                           	callstack 0
   221   00165E                     __end_of__initialization:
   222                           	callstack 0
   223   00165E  9058               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   224   001660  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   225   001662  0E00               	movlw	low (__Lsmallconst shr (0+16))
   226   001664  6EF8               	movwf	tblptru,c
   227   001666  0E08               	movlw	high __Lsmallconst
   228   001668  6EF7               	movwf	tblptrh,c
   229   00166A  0100               	movlb	0
   230   00166C  EF4C  F00B         	goto	_main	;jump to C main() function
   231                           
   232                           	psect	bssCOMRAM
   233   000052                     __pbssCOMRAM:
   234                           	callstack 0
   235   000052                     _width:
   236                           	callstack 0
   237   000052                     	ds	2
   238   000054                     _prec:
   239                           	callstack 0
   240   000054                     	ds	2
   241   000056                     _flags:
   242                           	callstack 0
   243   000056                     	ds	1
   244   000057                     _flag_b2:
   245                           	callstack 0
   246   000057                     	ds	1
   247                           
   248                           	psect	bssBANK0
   249   000060                     __pbssBANK0:
   250                           	callstack 0
   251   000060                     _counter:
   252                           	callstack 0
   253   000060                     	ds	40
   254   000088                     _an_input:
   255                           	callstack 0
   256   000088                     	ds	20
   257   00009C                     _selected:
   258                           	callstack 0
   259   00009C                     	ds	2
   260   00009E                     _value:
   261                           	callstack 0
   262   00009E                     	ds	2
   263   0000A0                     _flag_b1:
   264                           	callstack 0
   265   0000A0                     	ds	1
   266   0000A1                     _dbuf:
   267                           	callstack 0
   268   0000A1                     	ds	32
   269                           
   270                           	psect	cstackBANK0
   271   0000C1                     __pcstackBANK0:
   272                           	callstack 0
   273   0000C1                     vfpfcnvrt@convarg:
   274                           	callstack 0
   275                           
   276                           ; 8 bytes @ 0x0
   277   0000C1                     	ds	8
   278   0000C9                     vfpfcnvrt@cp:
   279                           	callstack 0
   280                           
   281                           ; 2 bytes @ 0x8
   282   0000C9                     	ds	2
   283   0000CB                     ?_vfprintf:
   284                           	callstack 0
   285   0000CB                     vfprintf@fp:
   286                           	callstack 0
   287                           
   288                           ; 2 bytes @ 0xA
   289   0000CB                     	ds	2
   290   0000CD                     vfprintf@fmt:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0xC
   294   0000CD                     	ds	2
   295   0000CF                     vfprintf@ap:
   296                           	callstack 0
   297                           
   298                           ; 2 bytes @ 0xE
   299   0000CF                     	ds	2
   300   0000D1                     ?_printf:
   301                           	callstack 0
   302   0000D1                     printf@fmt:
   303                           	callstack 0
   304                           
   305                           ; 2 bytes @ 0x10
   306   0000D1                     	ds	6
   307   0000D7                     ??_loop:
   308                           
   309                           ; 1 bytes @ 0x16
   310   0000D7                     	ds	3
   311                           
   312                           	psect	cstackCOMRAM
   313   000001                     __pcstackCOMRAM:
   314                           	callstack 0
   315   000001                     ??_enc:
   316   000001                     
   317                           ; 1 bytes @ 0x0
   318   000001                     	ds	4
   319   000005                     enc@i:
   320                           	callstack 0
   321                           
   322                           ; 2 bytes @ 0x4
   323   000005                     	ds	2
   324   000007                     ??_init_vars:
   325   000007                     ?___awdiv:
   326                           	callstack 0
   327   000007                     ?___aodiv:
   328                           	callstack 0
   329   000007                     ?___aomod:
   330                           	callstack 0
   331   000007                     putch@data:
   332                           	callstack 0
   333   000007                     ___awdiv@dividend:
   334                           	callstack 0
   335   000007                     ___aodiv@dividend:
   336                           	callstack 0
   337   000007                     ___aomod@dividend:
   338                           	callstack 0
   339                           
   340                           ; 8 bytes @ 0x6
   341   000007                     	ds	1
   342   000008                     fputc@c:
   343                           	callstack 0
   344                           
   345                           ; 2 bytes @ 0x7
   346   000008                     	ds	1
   347   000009                     init_vars@i:
   348                           	callstack 0
   349   000009                     ___awdiv@divisor:
   350                           	callstack 0
   351                           
   352                           ; 2 bytes @ 0x8
   353   000009                     	ds	1
   354   00000A                     fputc@fp:
   355                           	callstack 0
   356                           
   357                           ; 2 bytes @ 0x9
   358   00000A                     	ds	1
   359   00000B                     ___awdiv@counter:
   360                           	callstack 0
   361                           
   362                           ; 1 bytes @ 0xA
   363   00000B                     	ds	1
   364   00000C                     ??_fputc:
   365   00000C                     ___awdiv@sign:
   366                           	callstack 0
   367                           
   368                           ; 1 bytes @ 0xB
   369   00000C                     	ds	1
   370   00000D                     ___awdiv@quotient:
   371                           	callstack 0
   372                           
   373                           ; 2 bytes @ 0xC
   374   00000D                     	ds	2
   375   00000F                     ??_read_analog:
   376   00000F                     ___aodiv@divisor:
   377                           	callstack 0
   378   00000F                     ___aomod@divisor:
   379                           	callstack 0
   380                           
   381                           ; 8 bytes @ 0xE
   382   00000F                     	ds	1
   383   000010                     read_analog@aux:
   384                           	callstack 0
   385                           
   386                           ; 2 bytes @ 0xF
   387   000010                     	ds	1
   388   000011                     fputs@s:
   389                           	callstack 0
   390                           
   391                           ; 2 bytes @ 0x10
   392   000011                     	ds	1
   393   000012                     read_analog@i:
   394                           	callstack 0
   395                           
   396                           ; 1 bytes @ 0x11
   397   000012                     	ds	1
   398   000013                     fputs@fp:
   399                           	callstack 0
   400                           
   401                           ; 2 bytes @ 0x12
   402   000013                     	ds	2
   403   000015                     fputs@c:
   404                           	callstack 0
   405                           
   406                           ; 1 bytes @ 0x14
   407   000015                     	ds	1
   408   000016                     fputs@i:
   409                           	callstack 0
   410                           
   411                           ; 2 bytes @ 0x15
   412   000016                     	ds	1
   413   000017                     ___aodiv@counter:
   414                           	callstack 0
   415   000017                     ___aomod@counter:
   416                           	callstack 0
   417                           
   418                           ; 1 bytes @ 0x16
   419   000017                     	ds	1
   420   000018                     ___aodiv@sign:
   421                           	callstack 0
   422   000018                     ___aomod@sign:
   423                           	callstack 0
   424   000018                     pad@fp:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0x17
   428   000018                     	ds	1
   429   000019                     ?_abs:
   430                           	callstack 0
   431   000019                     abs@a:
   432                           	callstack 0
   433   000019                     ___aodiv@quotient:
   434                           	callstack 0
   435                           
   436                           ; 8 bytes @ 0x18
   437   000019                     	ds	1
   438   00001A                     pad@buf:
   439                           	callstack 0
   440                           
   441                           ; 2 bytes @ 0x19
   442   00001A                     	ds	1
   443   00001B                     ??_abs:
   444                           
   445                           ; 1 bytes @ 0x1A
   446   00001B                     	ds	1
   447   00001C                     pad@p:
   448                           	callstack 0
   449                           
   450                           ; 2 bytes @ 0x1B
   451   00001C                     	ds	2
   452   00001E                     ??_pad:
   453                           
   454                           ; 1 bytes @ 0x1D
   455   00001E                     	ds	1
   456   00001F                     pad@i:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x1E
   460   00001F                     	ds	2
   461   000021                     pad@w:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0x20
   465   000021                     	ds	2
   466   000023                     dtoa@fp:
   467                           	callstack 0
   468                           
   469                           ; 2 bytes @ 0x22
   470   000023                     	ds	2
   471   000025                     dtoa@d:
   472                           	callstack 0
   473                           
   474                           ; 8 bytes @ 0x24
   475   000025                     	ds	8
   476   00002D                     ??_dtoa:
   477                           
   478                           ; 1 bytes @ 0x2C
   479   00002D                     	ds	8
   480   000035                     _dtoa$1716:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0x34
   484   000035                     	ds	2
   485   000037                     dtoa@p:
   486                           	callstack 0
   487                           
   488                           ; 2 bytes @ 0x36
   489   000037                     	ds	2
   490   000039                     dtoa@w:
   491                           	callstack 0
   492                           
   493                           ; 2 bytes @ 0x38
   494   000039                     	ds	2
   495   00003B                     dtoa@n:
   496                           	callstack 0
   497                           
   498                           ; 8 bytes @ 0x3A
   499   00003B                     	ds	8
   500   000043                     dtoa@s:
   501                           	callstack 0
   502                           
   503                           ; 1 bytes @ 0x42
   504   000043                     	ds	1
   505   000044                     dtoa@i:
   506                           	callstack 0
   507                           
   508                           ; 2 bytes @ 0x43
   509   000044                     	ds	2
   510   000046                     vfpfcnvrt@fp:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0x45
   514   000046                     	ds	2
   515   000048                     vfpfcnvrt@fmt:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0x47
   519   000048                     	ds	2
   520   00004A                     vfpfcnvrt@ap:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0x49
   524   00004A                     	ds	2
   525   00004C                     ??_vfpfcnvrt:
   526                           
   527                           ; 1 bytes @ 0x4B
   528   00004C                     	ds	2
   529   00004E                     vfprintf@cfmt:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x4D
   533   00004E                     	ds	2
   534   000050                     printf@ap:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x4F
   538   000050                     	ds	2
   539   000052                     
   540                           ; 1 bytes @ 0x51
   541 ;;
   542 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   543 ;;
   544 ;; *************** function _main *****************
   545 ;; Defined at:
   546 ;;		line 309 in file "main.c"
   547 ;; Parameters:    Size  Location     Type
   548 ;;		None
   549 ;; Auto vars:     Size  Location     Type
   550 ;;		None
   551 ;; Return value:  Size  Location     Type
   552 ;;                  1    wreg      void 
   553 ;; Registers used:
   554 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   555 ;; Tracked objects:
   556 ;;		On entry : 0/0
   557 ;;		On exit  : 0/0
   558 ;;		Unchanged: 0/0
   559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   560 ;;      Params:         0       0       0       0       0       0       0       0       0
   561 ;;      Locals:         0       0       0       0       0       0       0       0       0
   562 ;;      Temps:          0       0       0       0       0       0       0       0       0
   563 ;;      Totals:         0       0       0       0       0       0       0       0       0
   564 ;;Total ram usage:        0 bytes
   565 ;; Hardware stack levels required when called: 10
   566 ;; This function calls:
   567 ;;		_config_micro
   568 ;;		_init
   569 ;;		_init_vars
   570 ;;		_loop
   571 ;;		_read_analog
   572 ;; This function is called by:
   573 ;;		Startup code after reset
   574 ;; This function uses a non-reentrant model
   575 ;;
   576                           
   577                           	psect	text0
   578   001698                     __ptext0:
   579                           	callstack 0
   580   001698                     _main:
   581                           	callstack 21
   582   001698                     
   583                           ;main.c: 310:     init_vars();
   584   001698  EC8D  F00A         	call	_init_vars	;wreg free
   585   00169C                     
   586                           ;main.c: 311:     config_micro();
   587   00169C  ECAE  F008         	call	_config_micro	;wreg free
   588   0016A0                     
   589                           ;main.c: 313:     init();
   590   0016A0  EC5A  F00B         	call	_init	;wreg free
   591   0016A4                     l2036:
   592                           
   593                           ;main.c: 315:         read_analog();
   594   0016A4  EC12  F00A         	call	_read_analog	;wreg free
   595   0016A8                     
   596                           ;main.c: 317:         loop();
   597   0016A8  EC61  F005         	call	_loop	;wreg free
   598   0016AC  EF52  F00B         	goto	l2036
   599   0016B0  EF07  F000         	goto	start
   600   0016B4                     __end_of_main:
   601                           	callstack 0
   602                           
   603 ;; *************** function _read_analog *****************
   604 ;; Defined at:
   605 ;;		line 186 in file "main.c"
   606 ;; Parameters:    Size  Location     Type
   607 ;;		None
   608 ;; Auto vars:     Size  Location     Type
   609 ;;  aux             2   15[COMRAM] unsigned int 
   610 ;;  i               1   17[COMRAM] unsigned char 
   611 ;; Return value:  Size  Location     Type
   612 ;;                  1    wreg      void 
   613 ;; Registers used:
   614 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   615 ;; Tracked objects:
   616 ;;		On entry : 0/0
   617 ;;		On exit  : 0/0
   618 ;;		Unchanged: 0/0
   619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   620 ;;      Params:         0       0       0       0       0       0       0       0       0
   621 ;;      Locals:         3       0       0       0       0       0       0       0       0
   622 ;;      Temps:          1       0       0       0       0       0       0       0       0
   623 ;;      Totals:         4       0       0       0       0       0       0       0       0
   624 ;;Total ram usage:        4 bytes
   625 ;; Hardware stack levels used: 1
   626 ;; Hardware stack levels required when called: 2
   627 ;; This function calls:
   628 ;;		___awdiv
   629 ;; This function is called by:
   630 ;;		_main
   631 ;; This function uses a non-reentrant model
   632 ;;
   633                           
   634                           	psect	text1
   635   001424                     __ptext1:
   636                           	callstack 0
   637   001424                     _read_analog:
   638                           	callstack 28
   639   001424                     
   640                           ;main.c: 187:     unsigned int aux;;main.c: 188:     unsigned char i;;main.c: 189:     f
      +                          or (i=0;i<=5;i++){
   641   001424  0E00               	movlw	0
   642   001426  6E12               	movwf	read_analog@i^0,c
   643   001428                     l1674:
   644                           
   645                           ;main.c: 190:         ADCON0bits.CHS=i;
   646   001428  C012  F00F         	movff	read_analog@i,??_read_analog
   647   00142C  460F               	rlncf	??_read_analog^0,f,c
   648   00142E  460F               	rlncf	??_read_analog^0,f,c
   649   001430  50C2               	movf	194,w,c	;volatile
   650   001432  180F               	xorwf	??_read_analog^0,w,c
   651   001434  0BC3               	andlw	-61
   652   001436  180F               	xorwf	??_read_analog^0,w,c
   653   001438  6EC2               	movwf	194,c	;volatile
   654   00143A                     
   655                           ;main.c: 191:         ADCON0bits.GODONE=1;
   656   00143A  82C2               	bsf	194,1,c	;volatile
   657   00143C                     l102:
   658   00143C  B2C2               	btfsc	194,1,c	;volatile
   659   00143E  EF23  F00A         	goto	u1081
   660   001442  EF25  F00A         	goto	u1080
   661   001446                     u1081:
   662   001446  EF1E  F00A         	goto	l102
   663   00144A                     u1080:
   664   00144A                     
   665                           ;main.c: 193:         aux=ADRESH*4;
   666   00144A  50C4               	movf	196,w,c	;volatile
   667   00144C  0D04               	mullw	4
   668   00144E  CFF3 F010          	movff	prodl,read_analog@aux
   669   001452  CFF4 F011          	movff	prodh,read_analog@aux+1
   670   001456                     
   671                           ;main.c: 194:         aux=aux+ADRESL/64;
   672   001456  CFC3 F007          	movff	4035,___awdiv@dividend	;volatile
   673   00145A  6A08               	clrf	(___awdiv@dividend+1)^0,c
   674   00145C  0E00               	movlw	0
   675   00145E  6E0A               	movwf	(___awdiv@divisor+1)^0,c
   676   001460  0E40               	movlw	64
   677   001462  6E09               	movwf	___awdiv@divisor^0,c
   678   001464  EC1E  F009         	call	___awdiv	;wreg free
   679   001468  5010               	movf	read_analog@aux^0,w,c
   680   00146A  2407               	addwf	?___awdiv^0,w,c
   681   00146C  6E10               	movwf	read_analog@aux^0,c
   682   00146E  5011               	movf	(read_analog@aux+1)^0,w,c
   683   001470  2008               	addwfc	(?___awdiv+1)^0,w,c
   684   001472  6E11               	movwf	(read_analog@aux+1)^0,c
   685   001474                     
   686                           ;main.c: 195:         an_input[i]=aux;
   687   001474  5012               	movf	read_analog@i^0,w,c
   688   001476  0D02               	mullw	2
   689   001478  0E88               	movlw	low _an_input
   690   00147A  24F3               	addwf	243,w,c
   691   00147C  6ED9               	movwf	fsr2l,c
   692   00147E  0E00               	movlw	high _an_input
   693   001480  20F4               	addwfc	prodh,w,c
   694   001482  6EDA               	movwf	fsr2h,c
   695   001484  C010  FFDE         	movff	read_analog@aux,postinc2
   696   001488  C011  FFDD         	movff	read_analog@aux+1,postdec2
   697   00148C                     
   698                           ;main.c: 196:     }
   699   00148C  2A12               	incf	read_analog@i^0,f,c
   700   00148E  0E05               	movlw	5
   701   001490  6412               	cpfsgt	read_analog@i^0,c
   702   001492  EF4D  F00A         	goto	u1091
   703   001496  EF4F  F00A         	goto	u1090
   704   00149A                     u1091:
   705   00149A  EF14  F00A         	goto	l1674
   706   00149E                     u1090:
   707   00149E  0012               	return		;funcret
   708   0014A0                     __end_of_read_analog:
   709                           	callstack 0
   710                           
   711 ;; *************** function ___awdiv *****************
   712 ;; Defined at:
   713 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
   714 ;; Parameters:    Size  Location     Type
   715 ;;  dividend        2    6[COMRAM] int 
   716 ;;  divisor         2    8[COMRAM] int 
   717 ;; Auto vars:     Size  Location     Type
   718 ;;  quotient        2   12[COMRAM] int 
   719 ;;  sign            1   11[COMRAM] unsigned char 
   720 ;;  counter         1   10[COMRAM] unsigned char 
   721 ;; Return value:  Size  Location     Type
   722 ;;                  2    6[COMRAM] int 
   723 ;; Registers used:
   724 ;;		wreg, status,2, status,0
   725 ;; Tracked objects:
   726 ;;		On entry : 0/0
   727 ;;		On exit  : 0/0
   728 ;;		Unchanged: 0/0
   729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   730 ;;      Params:         4       0       0       0       0       0       0       0       0
   731 ;;      Locals:         4       0       0       0       0       0       0       0       0
   732 ;;      Temps:          0       0       0       0       0       0       0       0       0
   733 ;;      Totals:         8       0       0       0       0       0       0       0       0
   734 ;;Total ram usage:        8 bytes
   735 ;; Hardware stack levels used: 1
   736 ;; Hardware stack levels required when called: 1
   737 ;; This function calls:
   738 ;;		Nothing
   739 ;; This function is called by:
   740 ;;		_read_analog
   741 ;; This function uses a non-reentrant model
   742 ;;
   743                           
   744                           	psect	text2
   745   00123C                     __ptext2:
   746                           	callstack 0
   747   00123C                     ___awdiv:
   748                           	callstack 28
   749   00123C  0E00               	movlw	0
   750   00123E  6E0C               	movwf	___awdiv@sign^0,c
   751   001240  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
   752   001242  EF27  F009         	goto	u1020
   753   001246  EF25  F009         	goto	u1021
   754   00124A                     u1021:
   755   00124A  EF2D  F009         	goto	l1632
   756   00124E                     u1020:
   757   00124E  6C09               	negf	___awdiv@divisor^0,c
   758   001250  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
   759   001252  B0D8               	btfsc	status,0,c
   760   001254  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
   761   001256  0E01               	movlw	1
   762   001258  6E0C               	movwf	___awdiv@sign^0,c
   763   00125A                     l1632:
   764   00125A  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
   765   00125C  EF34  F009         	goto	u1030
   766   001260  EF32  F009         	goto	u1031
   767   001264                     u1031:
   768   001264  EF3A  F009         	goto	l1638
   769   001268                     u1030:
   770   001268  6C07               	negf	___awdiv@dividend^0,c
   771   00126A  1E08               	comf	(___awdiv@dividend+1)^0,f,c
   772   00126C  B0D8               	btfsc	status,0,c
   773   00126E  2A08               	incf	(___awdiv@dividend+1)^0,f,c
   774   001270  0E01               	movlw	1
   775   001272  1A0C               	xorwf	___awdiv@sign^0,f,c
   776   001274                     l1638:
   777   001274  0E00               	movlw	0
   778   001276  6E0E               	movwf	(___awdiv@quotient+1)^0,c
   779   001278  0E00               	movlw	0
   780   00127A  6E0D               	movwf	___awdiv@quotient^0,c
   781   00127C  5009               	movf	___awdiv@divisor^0,w,c
   782   00127E  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
   783   001280  B4D8               	btfsc	status,2,c
   784   001282  EF45  F009         	goto	u1041
   785   001286  EF47  F009         	goto	u1040
   786   00128A                     u1041:
   787   00128A  EF6F  F009         	goto	l1660
   788   00128E                     u1040:
   789   00128E  0E01               	movlw	1
   790   001290  6E0B               	movwf	___awdiv@counter^0,c
   791   001292  EF4F  F009         	goto	l1646
   792   001296                     l1644:
   793   001296  90D8               	bcf	status,0,c
   794   001298  3609               	rlcf	___awdiv@divisor^0,f,c
   795   00129A  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
   796   00129C  2A0B               	incf	___awdiv@counter^0,f,c
   797   00129E                     l1646:
   798   00129E  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
   799   0012A0  EF54  F009         	goto	u1051
   800   0012A4  EF56  F009         	goto	u1050
   801   0012A8                     u1051:
   802   0012A8  EF4B  F009         	goto	l1644
   803   0012AC                     u1050:
   804   0012AC                     l1648:
   805   0012AC  90D8               	bcf	status,0,c
   806   0012AE  360D               	rlcf	___awdiv@quotient^0,f,c
   807   0012B0  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
   808   0012B2  5009               	movf	___awdiv@divisor^0,w,c
   809   0012B4  5C07               	subwf	___awdiv@dividend^0,w,c
   810   0012B6  500A               	movf	(___awdiv@divisor+1)^0,w,c
   811   0012B8  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
   812   0012BA  A0D8               	btfss	status,0,c
   813   0012BC  EF62  F009         	goto	u1061
   814   0012C0  EF64  F009         	goto	u1060
   815   0012C4                     u1061:
   816   0012C4  EF69  F009         	goto	l1656
   817   0012C8                     u1060:
   818   0012C8  5009               	movf	___awdiv@divisor^0,w,c
   819   0012CA  5E07               	subwf	___awdiv@dividend^0,f,c
   820   0012CC  500A               	movf	(___awdiv@divisor+1)^0,w,c
   821   0012CE  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
   822   0012D0  800D               	bsf	___awdiv@quotient^0,0,c
   823   0012D2                     l1656:
   824   0012D2  90D8               	bcf	status,0,c
   825   0012D4  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
   826   0012D6  3209               	rrcf	___awdiv@divisor^0,f,c
   827   0012D8  2E0B               	decfsz	___awdiv@counter^0,f,c
   828   0012DA  EF56  F009         	goto	l1648
   829   0012DE                     l1660:
   830   0012DE  500C               	movf	___awdiv@sign^0,w,c
   831   0012E0  B4D8               	btfsc	status,2,c
   832   0012E2  EF75  F009         	goto	u1071
   833   0012E6  EF77  F009         	goto	u1070
   834   0012EA                     u1071:
   835   0012EA  EF7B  F009         	goto	l1664
   836   0012EE                     u1070:
   837   0012EE  6C0D               	negf	___awdiv@quotient^0,c
   838   0012F0  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
   839   0012F2  B0D8               	btfsc	status,0,c
   840   0012F4  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
   841   0012F6                     l1664:
   842   0012F6  C00D  F007         	movff	___awdiv@quotient,?___awdiv
   843   0012FA  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
   844   0012FE  0012               	return		;funcret
   845   001300                     __end_of___awdiv:
   846                           	callstack 0
   847                           
   848 ;; *************** function _loop *****************
   849 ;; Defined at:
   850 ;;		line 273 in file "main.c"
   851 ;; Parameters:    Size  Location     Type
   852 ;;		None
   853 ;; Auto vars:     Size  Location     Type
   854 ;;		None
   855 ;; Return value:  Size  Location     Type
   856 ;;                  1    wreg      void 
   857 ;; Registers used:
   858 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   859 ;; Tracked objects:
   860 ;;		On entry : 0/0
   861 ;;		On exit  : 0/0
   862 ;;		Unchanged: 0/0
   863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   864 ;;      Params:         0       0       0       0       0       0       0       0       0
   865 ;;      Locals:         0       0       0       0       0       0       0       0       0
   866 ;;      Temps:          0       3       0       0       0       0       0       0       0
   867 ;;      Totals:         0       3       0       0       0       0       0       0       0
   868 ;;Total ram usage:        3 bytes
   869 ;; Hardware stack levels used: 1
   870 ;; Hardware stack levels required when called: 9
   871 ;; This function calls:
   872 ;;		_printf
   873 ;; This function is called by:
   874 ;;		_main
   875 ;; This function uses a non-reentrant model
   876 ;;
   877                           
   878                           	psect	text3
   879   000AC2                     __ptext3:
   880                           	callstack 0
   881   000AC2                     _loop:
   882                           	callstack 21
   883   000AC2                     
   884                           ;main.c: 274:     if (counter[0] >= 50){
   885   000AC2  0100               	movlb	0	; () banked
   886   000AC4  BF67               	btfsc	(_counter+7)& (0+255),7,b
   887   000AC6  EF74  F005         	goto	u1671
   888   000ACA  5167               	movf	(_counter+7)& (0+255),w,b
   889   000ACC  1166               	iorwf	(_counter+6)& (0+255),w,b
   890   000ACE  1165               	iorwf	(_counter+5)& (0+255),w,b
   891   000AD0  1164               	iorwf	(_counter+4)& (0+255),w,b
   892   000AD2  1163               	iorwf	(_counter+3)& (0+255),w,b
   893   000AD4  1162               	iorwf	(_counter+2)& (0+255),w,b
   894   000AD6  1161               	iorwf	(_counter+1)& (0+255),w,b
   895   000AD8  E109               	bnz	u1670
   896   000ADA  0E32               	movlw	50
   897   000ADC  5D60               	subwf	_counter& (0+255),w,b
   898   000ADE  A0D8               	btfss	status,0,c
   899   000AE0  EF74  F005         	goto	u1671
   900   000AE4  EF76  F005         	goto	u1670
   901   000AE8                     u1671:
   902   000AE8  EFA7  F005         	goto	l2002
   903   000AEC                     u1670:
   904   000AEC                     
   905                           ; BSR set to: 0
   906                           ;main.c: 275:         counter[0] = 0;
   907   000AEC  EE20  F060         	lfsr	2,_counter
   908   000AF0  0E07               	movlw	7
   909   000AF2                     u1681:
   910   000AF2  6ADE               	clrf	postinc2,c
   911   000AF4  06E8               	decf	wreg,f,c
   912   000AF6  E2FD               	bc	u1681
   913   000AF8                     
   914                           ; BSR set to: 0
   915                           ;main.c: 276:         value ++;
   916   000AF8  4B9E               	infsnz	_value& (0+255),f,b
   917   000AFA  2B9F               	incf	(_value+1)& (0+255),f,b
   918   000AFC                     
   919                           ; BSR set to: 0
   920                           ;main.c: 277:         if (value >= 32){
   921   000AFC  BF9F               	btfsc	(_value+1)& (0+255),7,b
   922   000AFE  EF8A  F005         	goto	u1691
   923   000B02  519F               	movf	(_value+1)& (0+255),w,b
   924   000B04  E109               	bnz	u1690
   925   000B06  0E20               	movlw	32
   926   000B08  5D9E               	subwf	_value& (0+255),w,b
   927   000B0A  A0D8               	btfss	status,0,c
   928   000B0C  EF8A  F005         	goto	u1691
   929   000B10  EF8C  F005         	goto	u1690
   930   000B14                     u1691:
   931   000B14  EF90  F005         	goto	l2000
   932   000B18                     u1690:
   933   000B18                     
   934                           ; BSR set to: 0
   935                           ;main.c: 278:             value = 0;
   936   000B18  0E00               	movlw	0
   937   000B1A  6F9F               	movwf	(_value+1)& (0+255),b
   938   000B1C  0E00               	movlw	0
   939   000B1E  6F9E               	movwf	_value& (0+255),b
   940   000B20                     l2000:
   941                           
   942                           ; BSR set to: 0
   943                           ;main.c: 280:         printf("Analog value %d: %d \n", selected, an_input[selected]);
   944   000B20  0E1A               	movlw	low STR_1
   945   000B22  6FD1               	movwf	printf@fmt& (0+255),b
   946   000B24  0E08               	movlw	high STR_1
   947   000B26  6FD2               	movwf	(printf@fmt+1)& (0+255),b
   948   000B28  C09C  F0D3         	movff	_selected,?_printf+2
   949   000B2C  C09D  F0D4         	movff	_selected+1,?_printf+3
   950   000B30  90D8               	bcf	status,0,c
   951   000B32  359C               	rlcf	_selected& (0+255),w,b
   952   000B34  6ED9               	movwf	fsr2l,c
   953   000B36  359D               	rlcf	(_selected+1)& (0+255),w,b
   954   000B38  6EDA               	movwf	fsr2h,c
   955   000B3A  0E88               	movlw	low _an_input
   956   000B3C  26D9               	addwf	fsr2l,f,c
   957   000B3E  0E00               	movlw	high _an_input
   958   000B40  22DA               	addwfc	fsr2h,f,c
   959   000B42  CFDE F0D5          	movff	postinc2,?_printf+4
   960   000B46  CFDD F0D6          	movff	postdec2,?_printf+5
   961   000B4A  EC38  F00B         	call	_printf	;wreg free
   962   000B4E                     l2002:
   963                           
   964                           ;main.c: 283:     PORTBbits.RB0 = an_input[selected] >= 512 ? 1 : 0;
   965   000B4E  90D8               	bcf	status,0,c
   966   000B50  0100               	movlb	0	; () banked
   967   000B52  359C               	rlcf	_selected& (0+255),w,b
   968   000B54  6ED9               	movwf	fsr2l,c
   969   000B56  359D               	rlcf	(_selected+1)& (0+255),w,b
   970   000B58  6EDA               	movwf	fsr2h,c
   971   000B5A  0E88               	movlw	low _an_input
   972   000B5C  26D9               	addwf	fsr2l,f,c
   973   000B5E  0E00               	movlw	high _an_input
   974   000B60  22DA               	addwfc	fsr2h,f,c
   975   000B62  0E01               	movlw	1
   976   000B64  BEDB               	btfsc	plusw2,7,c
   977   000B66  EFC1  F005         	goto	u1700
   978   000B6A  52DE               	movf	postinc2,f,c
   979   000B6C  0E02               	movlw	2
   980   000B6E  5CDE               	subwf	postinc2,w,c
   981   000B70  B0D8               	btfsc	status,0,c
   982   000B72  EFBD  F005         	goto	u1701
   983   000B76  EFC1  F005         	goto	u1700
   984   000B7A                     u1701:
   985   000B7A  6BD9               	clrf	(??_loop+2)& (0+255),b
   986   000B7C  2BD9               	incf	(??_loop+2)& (0+255),f,b
   987   000B7E  EFC3  F005         	goto	u1718
   988   000B82                     u1700:
   989   000B82  0100               	movlb	0	; () banked
   990   000B84  6BD9               	clrf	(??_loop+2)& (0+255),b
   991   000B86                     u1718:
   992   000B86  5081               	movf	129,w,c	;volatile
   993   000B88  19D9               	xorwf	(??_loop+2)& (0+255),w,b
   994   000B8A  0BFE               	andlw	-2
   995   000B8C  19D9               	xorwf	(??_loop+2)& (0+255),w,b
   996   000B8E  6E81               	movwf	129,c	;volatile
   997   000B90                     
   998                           ; BSR set to: 0
   999                           ;main.c: 284:     PORTBbits.RB1 = an_input[selected] >= 512 ? 1 : 0;
  1000   000B90  90D8               	bcf	status,0,c
  1001   000B92  359C               	rlcf	_selected& (0+255),w,b
  1002   000B94  6ED9               	movwf	fsr2l,c
  1003   000B96  359D               	rlcf	(_selected+1)& (0+255),w,b
  1004   000B98  6EDA               	movwf	fsr2h,c
  1005   000B9A  0E88               	movlw	low _an_input
  1006   000B9C  26D9               	addwf	fsr2l,f,c
  1007   000B9E  0E00               	movlw	high _an_input
  1008   000BA0  22DA               	addwfc	fsr2h,f,c
  1009   000BA2  0E01               	movlw	1
  1010   000BA4  BEDB               	btfsc	plusw2,7,c
  1011   000BA6  EFE1  F005         	goto	u1720
  1012   000BAA  52DE               	movf	postinc2,f,c
  1013   000BAC  0E02               	movlw	2
  1014   000BAE  5CDE               	subwf	postinc2,w,c
  1015   000BB0  B0D8               	btfsc	status,0,c
  1016   000BB2  EFDD  F005         	goto	u1721
  1017   000BB6  EFE1  F005         	goto	u1720
  1018   000BBA                     u1721:
  1019   000BBA  6BD9               	clrf	(??_loop+2)& (0+255),b
  1020   000BBC  2BD9               	incf	(??_loop+2)& (0+255),f,b
  1021   000BBE  EFE3  F005         	goto	u1738
  1022   000BC2                     u1720:
  1023   000BC2  0100               	movlb	0	; () banked
  1024   000BC4  6BD9               	clrf	(??_loop+2)& (0+255),b
  1025   000BC6                     u1738:
  1026   000BC6  47D9               	rlncf	(??_loop+2)& (0+255),f,b
  1027   000BC8  5081               	movf	129,w,c	;volatile
  1028   000BCA  19D9               	xorwf	(??_loop+2)& (0+255),w,b
  1029   000BCC  0BFD               	andlw	-3
  1030   000BCE  19D9               	xorwf	(??_loop+2)& (0+255),w,b
  1031   000BD0  6E81               	movwf	129,c	;volatile
  1032   000BD2                     
  1033                           ; BSR set to: 0
  1034                           ;main.c: 285:     PORTBbits.RB2 = an_input[selected] >= 512 ? 1 : 0;
  1035   000BD2  90D8               	bcf	status,0,c
  1036   000BD4  359C               	rlcf	_selected& (0+255),w,b
  1037   000BD6  6ED9               	movwf	fsr2l,c
  1038   000BD8  359D               	rlcf	(_selected+1)& (0+255),w,b
  1039   000BDA  6EDA               	movwf	fsr2h,c
  1040   000BDC  0E88               	movlw	low _an_input
  1041   000BDE  26D9               	addwf	fsr2l,f,c
  1042   000BE0  0E00               	movlw	high _an_input
  1043   000BE2  22DA               	addwfc	fsr2h,f,c
  1044   000BE4  0E01               	movlw	1
  1045   000BE6  BEDB               	btfsc	plusw2,7,c
  1046   000BE8  EF02  F006         	goto	u1740
  1047   000BEC  52DE               	movf	postinc2,f,c
  1048   000BEE  0E02               	movlw	2
  1049   000BF0  5CDE               	subwf	postinc2,w,c
  1050   000BF2  B0D8               	btfsc	status,0,c
  1051   000BF4  EFFE  F005         	goto	u1741
  1052   000BF8  EF02  F006         	goto	u1740
  1053   000BFC                     u1741:
  1054   000BFC  6BD9               	clrf	(??_loop+2)& (0+255),b
  1055   000BFE  2BD9               	incf	(??_loop+2)& (0+255),f,b
  1056   000C00  EF04  F006         	goto	u1758
  1057   000C04                     u1740:
  1058   000C04  0100               	movlb	0	; () banked
  1059   000C06  6BD9               	clrf	(??_loop+2)& (0+255),b
  1060   000C08                     u1758:
  1061   000C08  47D9               	rlncf	(??_loop+2)& (0+255),f,b
  1062   000C0A  47D9               	rlncf	(??_loop+2)& (0+255),f,b
  1063   000C0C  5081               	movf	129,w,c	;volatile
  1064   000C0E  19D9               	xorwf	(??_loop+2)& (0+255),w,b
  1065   000C10  0BFB               	andlw	-5
  1066   000C12  19D9               	xorwf	(??_loop+2)& (0+255),w,b
  1067   000C14  6E81               	movwf	129,c	;volatile
  1068   000C16                     
  1069                           ; BSR set to: 0
  1070                           ;main.c: 286:     PORTBbits.RB4 = an_input[selected] >= 512 ? 1 : 0;
  1071   000C16  90D8               	bcf	status,0,c
  1072   000C18  359C               	rlcf	_selected& (0+255),w,b
  1073   000C1A  6ED9               	movwf	fsr2l,c
  1074   000C1C  359D               	rlcf	(_selected+1)& (0+255),w,b
  1075   000C1E  6EDA               	movwf	fsr2h,c
  1076   000C20  0E88               	movlw	low _an_input
  1077   000C22  26D9               	addwf	fsr2l,f,c
  1078   000C24  0E00               	movlw	high _an_input
  1079   000C26  22DA               	addwfc	fsr2h,f,c
  1080   000C28  0E01               	movlw	1
  1081   000C2A  BEDB               	btfsc	plusw2,7,c
  1082   000C2C  EF24  F006         	goto	u1760
  1083   000C30  52DE               	movf	postinc2,f,c
  1084   000C32  0E02               	movlw	2
  1085   000C34  5CDE               	subwf	postinc2,w,c
  1086   000C36  B0D8               	btfsc	status,0,c
  1087   000C38  EF20  F006         	goto	u1761
  1088   000C3C  EF24  F006         	goto	u1760
  1089   000C40                     u1761:
  1090   000C40  6BD9               	clrf	(??_loop+2)& (0+255),b
  1091   000C42  2BD9               	incf	(??_loop+2)& (0+255),f,b
  1092   000C44  EF26  F006         	goto	u1778
  1093   000C48                     u1760:
  1094   000C48  0100               	movlb	0	; () banked
  1095   000C4A  6BD9               	clrf	(??_loop+2)& (0+255),b
  1096   000C4C                     u1778:
  1097   000C4C  3BD9               	swapf	(??_loop+2)& (0+255),f,b
  1098   000C4E  5081               	movf	129,w,c	;volatile
  1099   000C50  19D9               	xorwf	(??_loop+2)& (0+255),w,b
  1100   000C52  0BEF               	andlw	-17
  1101   000C54  19D9               	xorwf	(??_loop+2)& (0+255),w,b
  1102   000C56  6E81               	movwf	129,c	;volatile
  1103   000C58                     
  1104                           ; BSR set to: 0
  1105                           ;main.c: 287:     PORTBbits.RB5 = an_input[selected] >= 512 ? 1 : 0;
  1106   000C58  90D8               	bcf	status,0,c
  1107   000C5A  359C               	rlcf	_selected& (0+255),w,b
  1108   000C5C  6ED9               	movwf	fsr2l,c
  1109   000C5E  359D               	rlcf	(_selected+1)& (0+255),w,b
  1110   000C60  6EDA               	movwf	fsr2h,c
  1111   000C62  0E88               	movlw	low _an_input
  1112   000C64  26D9               	addwf	fsr2l,f,c
  1113   000C66  0E00               	movlw	high _an_input
  1114   000C68  22DA               	addwfc	fsr2h,f,c
  1115   000C6A  0E01               	movlw	1
  1116   000C6C  BEDB               	btfsc	plusw2,7,c
  1117   000C6E  EF45  F006         	goto	u1780
  1118   000C72  52DE               	movf	postinc2,f,c
  1119   000C74  0E02               	movlw	2
  1120   000C76  5CDE               	subwf	postinc2,w,c
  1121   000C78  B0D8               	btfsc	status,0,c
  1122   000C7A  EF41  F006         	goto	u1781
  1123   000C7E  EF45  F006         	goto	u1780
  1124   000C82                     u1781:
  1125   000C82  6BD9               	clrf	(??_loop+2)& (0+255),b
  1126   000C84  2BD9               	incf	(??_loop+2)& (0+255),f,b
  1127   000C86  EF47  F006         	goto	u1798
  1128   000C8A                     u1780:
  1129   000C8A  0100               	movlb	0	; () banked
  1130   000C8C  6BD9               	clrf	(??_loop+2)& (0+255),b
  1131   000C8E                     u1798:
  1132   000C8E  3BD9               	swapf	(??_loop+2)& (0+255),f,b
  1133   000C90  47D9               	rlncf	(??_loop+2)& (0+255),f,b
  1134   000C92  5081               	movf	129,w,c	;volatile
  1135   000C94  19D9               	xorwf	(??_loop+2)& (0+255),w,b
  1136   000C96  0BDF               	andlw	-33
  1137   000C98  19D9               	xorwf	(??_loop+2)& (0+255),w,b
  1138   000C9A  6E81               	movwf	129,c	;volatile
  1139   000C9C                     
  1140                           ; BSR set to: 0
  1141                           ;main.c: 289:     if (!PORTDbits.RD2 && flag_b1 == 0){
  1142   000C9C  B483               	btfsc	131,2,c	;volatile
  1143   000C9E  EF53  F006         	goto	u1801
  1144   000CA2  EF55  F006         	goto	u1800
  1145   000CA6                     u1801:
  1146   000CA6  EF87  F006         	goto	l140
  1147   000CAA                     u1800:
  1148   000CAA                     
  1149                           ; BSR set to: 0
  1150   000CAA  51A0               	movf	_flag_b1& (0+255),w,b
  1151   000CAC  A4D8               	btfss	status,2,c
  1152   000CAE  EF5B  F006         	goto	u1811
  1153   000CB2  EF5D  F006         	goto	u1810
  1154   000CB6                     u1811:
  1155   000CB6  EF87  F006         	goto	l140
  1156   000CBA                     u1810:
  1157   000CBA                     
  1158                           ; BSR set to: 0
  1159                           ;main.c: 290:         printf("Button 1 click detected\n");
  1160   000CBA  0E01               	movlw	low STR_2
  1161   000CBC  6FD1               	movwf	printf@fmt& (0+255),b
  1162   000CBE  0E08               	movlw	high STR_2
  1163   000CC0  6FD2               	movwf	(printf@fmt+1)& (0+255),b
  1164   000CC2  EC38  F00B         	call	_printf	;wreg free
  1165   000CC6                     
  1166                           ;main.c: 292:         selected ++;
  1167   000CC6  0100               	movlb	0	; () banked
  1168   000CC8  4B9C               	infsnz	_selected& (0+255),f,b
  1169   000CCA  2B9D               	incf	(_selected+1)& (0+255),f,b
  1170   000CCC                     
  1171                           ; BSR set to: 0
  1172                           ;main.c: 293:         if (selected >= 6){
  1173   000CCC  BF9D               	btfsc	(_selected+1)& (0+255),7,b
  1174   000CCE  EF72  F006         	goto	u1821
  1175   000CD2  519D               	movf	(_selected+1)& (0+255),w,b
  1176   000CD4  E109               	bnz	u1820
  1177   000CD6  0E06               	movlw	6
  1178   000CD8  5D9C               	subwf	_selected& (0+255),w,b
  1179   000CDA  A0D8               	btfss	status,0,c
  1180   000CDC  EF72  F006         	goto	u1821
  1181   000CE0  EF74  F006         	goto	u1820
  1182   000CE4                     u1821:
  1183   000CE4  EF78  F006         	goto	l2024
  1184   000CE8                     u1820:
  1185   000CE8                     
  1186                           ; BSR set to: 0
  1187                           ;main.c: 294:             selected = 0;
  1188   000CE8  0E00               	movlw	0
  1189   000CEA  6F9D               	movwf	(_selected+1)& (0+255),b
  1190   000CEC  0E00               	movlw	0
  1191   000CEE  6F9C               	movwf	_selected& (0+255),b
  1192   000CF0                     l2024:
  1193                           
  1194                           ; BSR set to: 0
  1195                           ;main.c: 296:         printf("Selected analog: %d\n", selected);
  1196   000CF0  0E30               	movlw	low STR_3
  1197   000CF2  6FD1               	movwf	printf@fmt& (0+255),b
  1198   000CF4  0E08               	movlw	high STR_3
  1199   000CF6  6FD2               	movwf	(printf@fmt+1)& (0+255),b
  1200   000CF8  C09C  F0D3         	movff	_selected,?_printf+2
  1201   000CFC  C09D  F0D4         	movff	_selected+1,?_printf+3
  1202   000D00  EC38  F00B         	call	_printf	;wreg free
  1203   000D04                     
  1204                           ;main.c: 297:         flag_b1 = 1;
  1205   000D04  0E01               	movlw	1
  1206   000D06  0100               	movlb	0	; () banked
  1207   000D08  6FA0               	movwf	_flag_b1& (0+255),b
  1208                           
  1209                           ;main.c: 298:     }else if(PORTDbits.RD2){
  1210   000D0A  EF90  F006         	goto	l144
  1211   000D0E                     l140:
  1212                           
  1213                           ; BSR set to: 0
  1214   000D0E  A483               	btfss	131,2,c	;volatile
  1215   000D10  EF8C  F006         	goto	u1831
  1216   000D14  EF8E  F006         	goto	u1830
  1217   000D18                     u1831:
  1218   000D18  EF90  F006         	goto	l144
  1219   000D1C                     u1830:
  1220   000D1C                     
  1221                           ; BSR set to: 0
  1222                           ;main.c: 299:         flag_b1 = 0;
  1223   000D1C  0E00               	movlw	0
  1224   000D1E  6FA0               	movwf	_flag_b1& (0+255),b
  1225   000D20                     l144:
  1226                           
  1227                           ; BSR set to: 0
  1228   000D20  0012               	return		;funcret
  1229   000D22                     __end_of_loop:
  1230                           	callstack 0
  1231                           
  1232 ;; *************** function _printf *****************
  1233 ;; Defined at:
  1234 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\printf.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;  fmt             2   16[BANK0 ] PTR const unsigned char 
  1237 ;;		 -> STR_3(21), STR_2(25), STR_1(22), 
  1238 ;; Auto vars:     Size  Location     Type
  1239 ;;  ap              2   79[COMRAM] PTR void [1]
  1240 ;;		 -> ?_printf(2), 
  1241 ;;  ret             2    0        int 
  1242 ;; Return value:  Size  Location     Type
  1243 ;;                  2   16[BANK0 ] int 
  1244 ;; Registers used:
  1245 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1246 ;; Tracked objects:
  1247 ;;		On entry : 0/0
  1248 ;;		On exit  : 0/0
  1249 ;;		Unchanged: 0/0
  1250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1251 ;;      Params:         0       6       0       0       0       0       0       0       0
  1252 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1253 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1254 ;;      Totals:         2       6       0       0       0       0       0       0       0
  1255 ;;Total ram usage:        8 bytes
  1256 ;; Hardware stack levels used: 1
  1257 ;; Hardware stack levels required when called: 8
  1258 ;; This function calls:
  1259 ;;		_vfprintf
  1260 ;; This function is called by:
  1261 ;;		_loop
  1262 ;; This function uses a non-reentrant model
  1263 ;;
  1264                           
  1265                           	psect	text4
  1266   001670                     __ptext4:
  1267                           	callstack 0
  1268   001670                     _printf:
  1269                           	callstack 21
  1270   001670  0ED3               	movlw	low (?_printf+2)
  1271   001672  6E50               	movwf	printf@ap^0,c
  1272   001674  0E00               	movlw	high (?_printf+2)
  1273   001676  6E51               	movwf	(printf@ap+1)^0,c
  1274   001678  0E00               	movlw	0
  1275   00167A  0100               	movlb	0	; () banked
  1276   00167C  6FCB               	movwf	vfprintf@fp& (0+255),b
  1277   00167E  0E00               	movlw	0
  1278   001680  6FCC               	movwf	(vfprintf@fp+1)& (0+255),b
  1279   001682  C0D1  F0CD         	movff	printf@fmt,vfprintf@fmt
  1280   001686  C0D2  F0CE         	movff	printf@fmt+1,vfprintf@fmt+1
  1281   00168A  0E50               	movlw	low printf@ap
  1282   00168C  6FCF               	movwf	vfprintf@ap& (0+255),b
  1283   00168E  0E00               	movlw	high printf@ap
  1284   001690  6FD0               	movwf	(vfprintf@ap+1)& (0+255),b
  1285   001692  ECB9  F00A         	call	_vfprintf	;wreg free
  1286   001696  0012               	return		;funcret
  1287   001698                     __end_of_printf:
  1288                           	callstack 0
  1289                           
  1290 ;; *************** function _vfprintf *****************
  1291 ;; Defined at:
  1292 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1293 ;; Parameters:    Size  Location     Type
  1294 ;;  fp              2   10[BANK0 ] PTR struct _IO_FILE
  1295 ;;		 -> NULL(0), 
  1296 ;;  fmt             2   12[BANK0 ] PTR const unsigned char 
  1297 ;;		 -> STR_3(21), STR_2(25), STR_1(22), 
  1298 ;;  ap              2   14[BANK0 ] PTR PTR void 
  1299 ;;		 -> printf@ap(2), 
  1300 ;; Auto vars:     Size  Location     Type
  1301 ;;  cfmt            2   77[COMRAM] PTR unsigned char 
  1302 ;;		 -> STR_3(21), STR_2(25), STR_1(22), 
  1303 ;; Return value:  Size  Location     Type
  1304 ;;                  2   10[BANK0 ] int 
  1305 ;; Registers used:
  1306 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1312 ;;      Params:         0       6       0       0       0       0       0       0       0
  1313 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1314 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1315 ;;      Totals:         2       6       0       0       0       0       0       0       0
  1316 ;;Total ram usage:        8 bytes
  1317 ;; Hardware stack levels used: 1
  1318 ;; Hardware stack levels required when called: 7
  1319 ;; This function calls:
  1320 ;;		_vfpfcnvrt
  1321 ;; This function is called by:
  1322 ;;		_printf
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326                           	psect	text5
  1327   001572                     __ptext5:
  1328                           	callstack 0
  1329   001572                     _vfprintf:
  1330                           	callstack 21
  1331   001572                     
  1332                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1333   001572  C0CD  F04E         	movff	vfprintf@fmt,vfprintf@cfmt
  1334   001576  C0CE  F04F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1335                           
  1336                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1337   00157A  EFCD  F00A         	goto	l1978
  1338   00157E                     l1976:
  1339                           
  1340                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1341   00157E  C0CB  F046         	movff	vfprintf@fp,vfpfcnvrt@fp
  1342   001582  C0CC  F047         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1343   001586  0E4E               	movlw	low vfprintf@cfmt
  1344   001588  6E48               	movwf	vfpfcnvrt@fmt^0,c
  1345   00158A  0E00               	movlw	high vfprintf@cfmt
  1346   00158C  6E49               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1347   00158E  C0CF  F04A         	movff	vfprintf@ap,vfpfcnvrt@ap
  1348   001592  C0D0  F04B         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1349   001596  EC07  F008         	call	_vfpfcnvrt	;wreg free
  1350   00159A                     l1978:
  1351                           
  1352                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1353   00159A  C04E  FFF6         	movff	vfprintf@cfmt,tblptrl
  1354   00159E  C04F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1355   0015A2                     	if	0	;tblptru may be non-zero
  1356   0015A2                     	endif
  1357   0015A2                     	if	0	;tblptru may be non-zero
  1358   0015A2                     	endif
  1359   0015A2  0008               	tblrd		*
  1360   0015A4  50F5               	movf	tablat,w,c
  1361   0015A6  0900               	iorlw	0
  1362   0015A8  A4D8               	btfss	status,2,c
  1363   0015AA  EFD9  F00A         	goto	u1661
  1364   0015AE  EFDB  F00A         	goto	u1660
  1365   0015B2                     u1661:
  1366   0015B2  EFBF  F00A         	goto	l1976
  1367   0015B6                     u1660:
  1368   0015B6                     
  1369                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1370   0015B6  0E00               	movlw	0
  1371   0015B8  0100               	movlb	0	; () banked
  1372   0015BA  6FCC               	movwf	(?_vfprintf+1)& (0+255),b
  1373   0015BC  0E00               	movlw	0
  1374   0015BE  6FCB               	movwf	?_vfprintf& (0+255),b
  1375   0015C0                     
  1376                           ; BSR set to: 0
  1377   0015C0  0012               	return		;funcret
  1378   0015C2                     __end_of_vfprintf:
  1379                           	callstack 0
  1380                           
  1381 ;; *************** function _vfpfcnvrt *****************
  1382 ;; Defined at:
  1383 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;  fp              2   69[COMRAM] PTR struct _IO_FILE
  1386 ;;		 -> NULL(0), 
  1387 ;;  fmt             2   71[COMRAM] PTR PTR unsigned char 
  1388 ;;		 -> vfprintf@cfmt(2), 
  1389 ;;  ap              2   73[COMRAM] PTR PTR void 
  1390 ;;		 -> printf@ap(2), 
  1391 ;; Auto vars:     Size  Location     Type
  1392 ;;  convarg         8    0[BANK0 ] struct .
  1393 ;;  cp              2    8[BANK0 ] PTR unsigned char 
  1394 ;;		 -> STR_3(21), STR_2(25), STR_1(22), 
  1395 ;;  i               2    0        int 
  1396 ;;  done            2    0        int 
  1397 ;;  c               1    0        unsigned char 
  1398 ;; Return value:  Size  Location     Type
  1399 ;;                  1    wreg      void 
  1400 ;; Registers used:
  1401 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1402 ;; Tracked objects:
  1403 ;;		On entry : 0/0
  1404 ;;		On exit  : 0/0
  1405 ;;		Unchanged: 0/0
  1406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1407 ;;      Params:         6       0       0       0       0       0       0       0       0
  1408 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1409 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1410 ;;      Totals:         8      10       0       0       0       0       0       0       0
  1411 ;;Total ram usage:       18 bytes
  1412 ;; Hardware stack levels used: 1
  1413 ;; Hardware stack levels required when called: 6
  1414 ;; This function calls:
  1415 ;;		_dtoa
  1416 ;;		_fputc
  1417 ;; This function is called by:
  1418 ;;		_vfprintf
  1419 ;; This function uses a non-reentrant model
  1420 ;;
  1421                           
  1422                           	psect	text6
  1423   00100E                     __ptext6:
  1424                           	callstack 0
  1425   00100E                     _vfpfcnvrt:
  1426                           	callstack 21
  1427   00100E                     
  1428                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1429   00100E  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1430   001012  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1431   001016  CFDE FFF6          	movff	postinc2,tblptrl
  1432   00101A  CFDD FFF7          	movff	postdec2,tblptrh
  1433   00101E                     	if	0	;tblptru may be non-zero
  1434   00101E                     	endif
  1435   00101E                     	if	0	;tblptru may be non-zero
  1436   00101E                     	endif
  1437   00101E  0008               	tblrd		*
  1438   001020  50F5               	movf	tablat,w,c
  1439   001022  0A25               	xorlw	37
  1440   001024  A4D8               	btfss	status,2,c
  1441   001026  EF17  F008         	goto	u1631
  1442   00102A  EF19  F008         	goto	u1630
  1443   00102E                     u1631:
  1444   00102E  EF99  F008         	goto	l1968
  1445   001032                     u1630:
  1446   001032                     
  1447                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1448   001032  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1449   001036  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1450   00103A  2ADE               	incf	postinc2,f,c
  1451   00103C  0E00               	movlw	0
  1452   00103E  22DD               	addwfc	postdec2,f,c
  1453   001040                     
  1454                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1455   001040  0E00               	movlw	0
  1456   001042  6E53               	movwf	(_width+1)^0,c
  1457   001044  0E00               	movlw	0
  1458   001046  6E52               	movwf	_width^0,c
  1459   001048  C052  F056         	movff	_width,_flags
  1460   00104C                     
  1461                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1462   00104C  6854               	setf	_prec^0,c
  1463   00104E  6855               	setf	(_prec+1)^0,c
  1464   001050                     
  1465                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1466   001050  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1467   001054  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1468   001058  CFDE F0C9          	movff	postinc2,vfpfcnvrt@cp
  1469   00105C  CFDD F0CA          	movff	postdec2,vfpfcnvrt@cp+1
  1470   001060                     
  1471                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1472   001060  C0C9  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1473   001064  C0CA  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1474   001068                     	if	0	;tblptru may be non-zero
  1475   001068                     	endif
  1476   001068                     	if	0	;tblptru may be non-zero
  1477   001068                     	endif
  1478   001068  0008               	tblrd		*
  1479   00106A  50F5               	movf	tablat,w,c
  1480   00106C  0A64               	xorlw	100
  1481   00106E  B4D8               	btfsc	status,2,c
  1482   001070  EF3C  F008         	goto	u1641
  1483   001074  EF3E  F008         	goto	u1640
  1484   001078                     u1641:
  1485   001078  EF4C  F008         	goto	l1958
  1486   00107C                     u1640:
  1487   00107C  C0C9  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1488   001080  C0CA  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1489   001084                     	if	0	;tblptru may be non-zero
  1490   001084                     	endif
  1491   001084                     	if	0	;tblptru may be non-zero
  1492   001084                     	endif
  1493   001084  0008               	tblrd		*
  1494   001086  50F5               	movf	tablat,w,c
  1495   001088  0A69               	xorlw	105
  1496   00108A  A4D8               	btfss	status,2,c
  1497   00108C  EF4A  F008         	goto	u1651
  1498   001090  EF4C  F008         	goto	u1650
  1499   001094                     u1651:
  1500   001094  EF90  F008         	goto	l1964
  1501   001098                     u1650:
  1502   001098                     l1958:
  1503                           
  1504                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1505   001098  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1506   00109C  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1507   0010A0  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  1508   0010A4  0E02               	movlw	2
  1509   0010A6  26DE               	addwf	postinc2,f,c
  1510   0010A8  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  1511   0010AC  0E00               	movlw	0
  1512   0010AE  22DD               	addwfc	postdec2,f,c
  1513   0010B0  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1514   0010B4  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1515   0010B8  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg
  1516   0010BC  CFDD F0C2          	movff	postdec2,vfpfcnvrt@convarg+1
  1517   0010C0  0100               	movlb	0	; () banked
  1518   0010C2  0E00               	movlw	0
  1519   0010C4  BFC2               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  1520   0010C6  0EFF               	movlw	-1
  1521   0010C8  6FC3               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  1522   0010CA  6FC4               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  1523   0010CC  6FC5               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  1524   0010CE  6FC6               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  1525   0010D0  6FC7               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  1526   0010D2  6FC8               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  1527                           
  1528                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1529   0010D4  0E01               	movlw	1
  1530   0010D6  25C9               	addwf	vfpfcnvrt@cp& (0+255),w,b
  1531   0010D8  6E4C               	movwf	??_vfpfcnvrt^0,c
  1532   0010DA  0E00               	movlw	0
  1533   0010DC  21CA               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  1534   0010DE  6E4D               	movwf	(??_vfpfcnvrt+1)^0,c
  1535   0010E0  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1536   0010E4  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1537   0010E8  C04C  FFDE         	movff	??_vfpfcnvrt,postinc2
  1538   0010EC  C04D  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1539   0010F0                     
  1540                           ; BSR set to: 0
  1541                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1542   0010F0  C046  F023         	movff	vfpfcnvrt@fp,dtoa@fp
  1543   0010F4  C047  F024         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1544   0010F8  C0C1  F025         	movff	vfpfcnvrt@convarg,dtoa@d
  1545   0010FC  C0C2  F026         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1546   001100  C0C3  F027         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1547   001104  C0C4  F028         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1548   001108  C0C5  F029         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1549   00110C  C0C6  F02A         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1550   001110  C0C7  F02B         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1551   001114  C0C8  F02C         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1552   001118  EC23  F004         	call	_dtoa	;wreg free
  1553   00111C  EFAD  F008         	goto	l885
  1554   001120                     l1964:
  1555                           
  1556                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1557   001120  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1558   001124  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1559   001128  2ADE               	incf	postinc2,f,c
  1560   00112A  0E00               	movlw	0
  1561   00112C  22DD               	addwfc	postdec2,f,c
  1562   00112E  EFAD  F008         	goto	l885
  1563   001132                     l1968:
  1564                           
  1565                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1566   001132  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1567   001136  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1568   00113A  CFDE FFF6          	movff	postinc2,tblptrl
  1569   00113E  CFDD FFF7          	movff	postdec2,tblptrh
  1570   001142                     	if	0	;tblptru may be non-zero
  1571   001142                     	endif
  1572   001142                     	if	0	;tblptru may be non-zero
  1573   001142                     	endif
  1574   001142  0008               	tblrd		*
  1575   001144  50F5               	movf	tablat,w,c
  1576   001146  6E08               	movwf	fputc@c^0,c
  1577   001148  6A09               	clrf	(fputc@c+1)^0,c
  1578   00114A  C046  F00A         	movff	vfpfcnvrt@fp,fputc@fp
  1579   00114E  C047  F00B         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1580   001152  EC80  F009         	call	_fputc	;wreg free
  1581   001156  EF90  F008         	goto	l1964
  1582   00115A                     l885:
  1583   00115A  0012               	return		;funcret
  1584   00115C                     __end_of_vfpfcnvrt:
  1585                           	callstack 0
  1586                           
  1587 ;; *************** function _dtoa *****************
  1588 ;; Defined at:
  1589 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1590 ;; Parameters:    Size  Location     Type
  1591 ;;  fp              2   34[COMRAM] PTR struct _IO_FILE
  1592 ;;		 -> NULL(0), 
  1593 ;;  d               8   36[COMRAM] long long 
  1594 ;; Auto vars:     Size  Location     Type
  1595 ;;  n               8   58[COMRAM] long long 
  1596 ;;  i               2   67[COMRAM] int 
  1597 ;;  w               2   56[COMRAM] int 
  1598 ;;  p               2   54[COMRAM] int 
  1599 ;;  s               1   66[COMRAM] unsigned char 
  1600 ;; Return value:  Size  Location     Type
  1601 ;;                  1    wreg      void 
  1602 ;; Registers used:
  1603 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1604 ;; Tracked objects:
  1605 ;;		On entry : 0/0
  1606 ;;		On exit  : 0/0
  1607 ;;		Unchanged: 0/0
  1608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1609 ;;      Params:        10       0       0       0       0       0       0       0       0
  1610 ;;      Locals:        17       0       0       0       0       0       0       0       0
  1611 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1612 ;;      Totals:        35       0       0       0       0       0       0       0       0
  1613 ;;Total ram usage:       35 bytes
  1614 ;; Hardware stack levels used: 1
  1615 ;; Hardware stack levels required when called: 5
  1616 ;; This function calls:
  1617 ;;		___aodiv
  1618 ;;		___aomod
  1619 ;;		_abs
  1620 ;;		_pad
  1621 ;; This function is called by:
  1622 ;;		_vfpfcnvrt
  1623 ;; This function uses a non-reentrant model
  1624 ;;
  1625                           
  1626                           	psect	text7
  1627   000846                     __ptext7:
  1628                           	callstack 0
  1629   000846                     _dtoa:
  1630                           	callstack 21
  1631   000846                     
  1632                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  1633   000846  C025  F03B         	movff	dtoa@d,dtoa@n
  1634   00084A  C026  F03C         	movff	dtoa@d+1,dtoa@n+1
  1635   00084E  C027  F03D         	movff	dtoa@d+2,dtoa@n+2
  1636   000852  C028  F03E         	movff	dtoa@d+3,dtoa@n+3
  1637   000856  C029  F03F         	movff	dtoa@d+4,dtoa@n+4
  1638   00085A  C02A  F040         	movff	dtoa@d+5,dtoa@n+5
  1639   00085E  C02B  F041         	movff	dtoa@d+6,dtoa@n+6
  1640   000862  C02C  F042         	movff	dtoa@d+7,dtoa@n+7
  1641   000866                     
  1642                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  1643   000866  BE42               	btfsc	(dtoa@n+7)^0,7,c
  1644   000868  EF38  F004         	goto	u1531
  1645   00086C  EF3B  F004         	goto	u1530
  1646   000870                     u1531:
  1647   000870  0E01               	movlw	1
  1648   000872  EF3C  F004         	goto	u1540
  1649   000876                     u1530:
  1650   000876  0E00               	movlw	0
  1651   000878                     u1540:
  1652   000878  6E43               	movwf	dtoa@s^0,c
  1653   00087A                     
  1654                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1655   00087A  5043               	movf	dtoa@s^0,w,c
  1656   00087C  B4D8               	btfsc	status,2,c
  1657   00087E  EF43  F004         	goto	u1551
  1658   000882  EF45  F004         	goto	u1550
  1659   000886                     u1551:
  1660   000886  EF55  F004         	goto	l1900
  1661   00088A                     u1550:
  1662   00088A                     
  1663                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  1664   00088A  1E42               	comf	(dtoa@n+7)^0,f,c
  1665   00088C  1E41               	comf	(dtoa@n+6)^0,f,c
  1666   00088E  1E40               	comf	(dtoa@n+5)^0,f,c
  1667   000890  1E3F               	comf	(dtoa@n+4)^0,f,c
  1668   000892  1E3E               	comf	(dtoa@n+3)^0,f,c
  1669   000894  1E3D               	comf	(dtoa@n+2)^0,f,c
  1670   000896  1E3C               	comf	(dtoa@n+1)^0,f,c
  1671   000898  6C3B               	negf	dtoa@n^0,c
  1672   00089A  0E00               	movlw	0
  1673   00089C  223C               	addwfc	(dtoa@n+1)^0,f,c
  1674   00089E  223D               	addwfc	(dtoa@n+2)^0,f,c
  1675   0008A0  223E               	addwfc	(dtoa@n+3)^0,f,c
  1676   0008A2  223F               	addwfc	(dtoa@n+4)^0,f,c
  1677   0008A4  2240               	addwfc	(dtoa@n+5)^0,f,c
  1678   0008A6  2241               	addwfc	(dtoa@n+6)^0,f,c
  1679   0008A8  2242               	addwfc	(dtoa@n+7)^0,f,c
  1680   0008AA                     l1900:
  1681                           
  1682                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  1683   0008AA  BE55               	btfsc	(_prec+1)^0,7,c
  1684   0008AC  EF62  F004         	goto	u1560
  1685   0008B0  5055               	movf	(_prec+1)^0,w,c
  1686   0008B2  E106               	bnz	u1561
  1687   0008B4  0454               	decf	_prec^0,w,c
  1688   0008B6  B0D8               	btfsc	status,0,c
  1689   0008B8  EF60  F004         	goto	u1561
  1690   0008BC  EF62  F004         	goto	u1560
  1691   0008C0                     u1561:
  1692   0008C0  EF68  F004         	goto	l864
  1693   0008C4                     u1560:
  1694   0008C4  0E00               	movlw	0
  1695   0008C6  6E38               	movwf	(dtoa@p+1)^0,c
  1696   0008C8  0E01               	movlw	1
  1697   0008CA  6E37               	movwf	dtoa@p^0,c
  1698   0008CC  EF6C  F004         	goto	l866
  1699   0008D0                     l864:
  1700   0008D0  C054  F037         	movff	_prec,dtoa@p
  1701   0008D4  C055  F038         	movff	_prec+1,dtoa@p+1
  1702   0008D8                     l866:
  1703                           
  1704                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  1705   0008D8  C052  F039         	movff	_width,dtoa@w
  1706   0008DC  C053  F03A         	movff	_width+1,dtoa@w+1
  1707   0008E0                     
  1708                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  1709   0008E0  5043               	movf	dtoa@s^0,w,c
  1710   0008E2  B4D8               	btfsc	status,2,c
  1711   0008E4  EF76  F004         	goto	u1571
  1712   0008E8  EF78  F004         	goto	u1570
  1713   0008EC                     u1571:
  1714   0008EC  EF8F  F004         	goto	l867
  1715   0008F0                     u1570:
  1716   0008F0                     
  1717                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  1718   0008F0  0639               	decf	dtoa@w^0,f,c
  1719   0008F2  A0D8               	btfss	status,0,c
  1720   0008F4  063A               	decf	(dtoa@w+1)^0,f,c
  1721   0008F6                     
  1722                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  1723   0008F6  5043               	movf	dtoa@s^0,w,c
  1724   0008F8  A4D8               	btfss	status,2,c
  1725   0008FA  EF81  F004         	goto	u1581
  1726   0008FE  EF83  F004         	goto	u1580
  1727   000902                     u1581:
  1728   000902  EF89  F004         	goto	l1912
  1729   000906                     u1580:
  1730   000906  0E00               	movlw	0
  1731   000908  6E36               	movwf	(_dtoa$1716+1)^0,c
  1732   00090A  0E2B               	movlw	43
  1733   00090C  6E35               	movwf	_dtoa$1716^0,c
  1734   00090E  EF8D  F004         	goto	l1914
  1735   000912                     l1912:
  1736   000912  0E00               	movlw	0
  1737   000914  6E36               	movwf	(_dtoa$1716+1)^0,c
  1738   000916  0E2D               	movlw	45
  1739   000918  6E35               	movwf	_dtoa$1716^0,c
  1740   00091A                     l1914:
  1741   00091A  C035  F043         	movff	_dtoa$1716,dtoa@s
  1742   00091E                     l867:
  1743                           
  1744                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  1745   00091E  0E00               	movlw	0
  1746   000920  6E45               	movwf	(dtoa@i+1)^0,c
  1747   000922  0E1F               	movlw	31
  1748   000924  6E44               	movwf	dtoa@i^0,c
  1749   000926                     
  1750                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  1751   000926  0E00               	movlw	0
  1752   000928  0100               	movlb	0	; () banked
  1753   00092A  6FC0               	movwf	(_dbuf+31)& (0+255),b
  1754                           
  1755                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1756   00092C  EF14  F005         	goto	l1928
  1757   000930                     l1918:
  1758                           
  1759                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  1760   000930  0644               	decf	dtoa@i^0,f,c
  1761   000932  A0D8               	btfss	status,0,c
  1762   000934  0645               	decf	(dtoa@i+1)^0,f,c
  1763   000936                     
  1764                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1765   000936  0EA1               	movlw	low _dbuf
  1766   000938  2444               	addwf	dtoa@i^0,w,c
  1767   00093A  6ED9               	movwf	fsr2l,c
  1768   00093C  0E00               	movlw	high _dbuf
  1769   00093E  2045               	addwfc	(dtoa@i+1)^0,w,c
  1770   000940  6EDA               	movwf	fsr2h,c
  1771   000942  C03B  F007         	movff	dtoa@n,___aomod@dividend
  1772   000946  C03C  F008         	movff	dtoa@n+1,___aomod@dividend+1
  1773   00094A  C03D  F009         	movff	dtoa@n+2,___aomod@dividend+2
  1774   00094E  C03E  F00A         	movff	dtoa@n+3,___aomod@dividend+3
  1775   000952  C03F  F00B         	movff	dtoa@n+4,___aomod@dividend+4
  1776   000956  C040  F00C         	movff	dtoa@n+5,___aomod@dividend+5
  1777   00095A  C041  F00D         	movff	dtoa@n+6,___aomod@dividend+6
  1778   00095E  C042  F00E         	movff	dtoa@n+7,___aomod@dividend+7
  1779   000962  0E0A               	movlw	10
  1780   000964  6E0F               	movwf	___aomod@divisor^0,c
  1781   000966  0E00               	movlw	0
  1782   000968  6E10               	movwf	(___aomod@divisor+1)^0,c
  1783   00096A  0E00               	movlw	0
  1784   00096C  6E11               	movwf	(___aomod@divisor+2)^0,c
  1785   00096E  0E00               	movlw	0
  1786   000970  6E12               	movwf	(___aomod@divisor+3)^0,c
  1787   000972  0E00               	movlw	0
  1788   000974  6E13               	movwf	(___aomod@divisor+4)^0,c
  1789   000976  0E00               	movlw	0
  1790   000978  6E14               	movwf	(___aomod@divisor+5)^0,c
  1791   00097A  0E00               	movlw	0
  1792   00097C  6E15               	movwf	(___aomod@divisor+6)^0,c
  1793   00097E  0E00               	movlw	0
  1794   000980  6E16               	movwf	(___aomod@divisor+7)^0,c
  1795   000982  EC55  F007         	call	___aomod	;wreg free
  1796   000986  C007  F02D         	movff	?___aomod,??_dtoa
  1797   00098A  C008  F02E         	movff	?___aomod+1,??_dtoa+1
  1798   00098E  C009  F02F         	movff	?___aomod+2,??_dtoa+2
  1799   000992  C00A  F030         	movff	?___aomod+3,??_dtoa+3
  1800   000996  C00B  F031         	movff	?___aomod+4,??_dtoa+4
  1801   00099A  C00C  F032         	movff	?___aomod+5,??_dtoa+5
  1802   00099E  C00D  F033         	movff	?___aomod+6,??_dtoa+6
  1803   0009A2  C00E  F034         	movff	?___aomod+7,??_dtoa+7
  1804   0009A6  C02D  F019         	movff	??_dtoa,abs@a
  1805   0009AA  C02E  F01A         	movff	??_dtoa+1,abs@a+1
  1806   0009AE  EC03  F00B         	call	_abs	;wreg free
  1807   0009B2  5019               	movf	?_abs^0,w,c
  1808   0009B4  0F30               	addlw	48
  1809   0009B6  6EDF               	movwf	indf2,c
  1810   0009B8                     
  1811                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  1812   0009B8  0637               	decf	dtoa@p^0,f,c
  1813   0009BA  A0D8               	btfss	status,0,c
  1814   0009BC  0638               	decf	(dtoa@p+1)^0,f,c
  1815   0009BE                     
  1816                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  1817   0009BE  0639               	decf	dtoa@w^0,f,c
  1818   0009C0  A0D8               	btfss	status,0,c
  1819   0009C2  063A               	decf	(dtoa@w+1)^0,f,c
  1820   0009C4                     
  1821                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  1822   0009C4  C03B  F007         	movff	dtoa@n,___aodiv@dividend
  1823   0009C8  C03C  F008         	movff	dtoa@n+1,___aodiv@dividend+1
  1824   0009CC  C03D  F009         	movff	dtoa@n+2,___aodiv@dividend+2
  1825   0009D0  C03E  F00A         	movff	dtoa@n+3,___aodiv@dividend+3
  1826   0009D4  C03F  F00B         	movff	dtoa@n+4,___aodiv@dividend+4
  1827   0009D8  C040  F00C         	movff	dtoa@n+5,___aodiv@dividend+5
  1828   0009DC  C041  F00D         	movff	dtoa@n+6,___aodiv@dividend+6
  1829   0009E0  C042  F00E         	movff	dtoa@n+7,___aodiv@dividend+7
  1830   0009E4  0E0A               	movlw	10
  1831   0009E6  6E0F               	movwf	___aodiv@divisor^0,c
  1832   0009E8  0E00               	movlw	0
  1833   0009EA  6E10               	movwf	(___aodiv@divisor+1)^0,c
  1834   0009EC  0E00               	movlw	0
  1835   0009EE  6E11               	movwf	(___aodiv@divisor+2)^0,c
  1836   0009F0  0E00               	movlw	0
  1837   0009F2  6E12               	movwf	(___aodiv@divisor+3)^0,c
  1838   0009F4  0E00               	movlw	0
  1839   0009F6  6E13               	movwf	(___aodiv@divisor+4)^0,c
  1840   0009F8  0E00               	movlw	0
  1841   0009FA  6E14               	movwf	(___aodiv@divisor+5)^0,c
  1842   0009FC  0E00               	movlw	0
  1843   0009FE  6E15               	movwf	(___aodiv@divisor+6)^0,c
  1844   000A00  0E00               	movlw	0
  1845   000A02  6E16               	movwf	(___aodiv@divisor+7)^0,c
  1846   000A04  EC91  F006         	call	___aodiv	;wreg free
  1847   000A08  C007  F03B         	movff	?___aodiv,dtoa@n
  1848   000A0C  C008  F03C         	movff	?___aodiv+1,dtoa@n+1
  1849   000A10  C009  F03D         	movff	?___aodiv+2,dtoa@n+2
  1850   000A14  C00A  F03E         	movff	?___aodiv+3,dtoa@n+3
  1851   000A18  C00B  F03F         	movff	?___aodiv+4,dtoa@n+4
  1852   000A1C  C00C  F040         	movff	?___aodiv+5,dtoa@n+5
  1853   000A20  C00D  F041         	movff	?___aodiv+6,dtoa@n+6
  1854   000A24  C00E  F042         	movff	?___aodiv+7,dtoa@n+7
  1855   000A28                     l1928:
  1856                           
  1857                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1858   000A28  BE45               	btfsc	(dtoa@i+1)^0,7,c
  1859   000A2A  EF1F  F005         	goto	u1591
  1860   000A2E  5045               	movf	(dtoa@i+1)^0,w,c
  1861   000A30  E108               	bnz	u1590
  1862   000A32  0444               	decf	dtoa@i^0,w,c
  1863   000A34  A0D8               	btfss	status,0,c
  1864   000A36  EF1F  F005         	goto	u1591
  1865   000A3A  EF21  F005         	goto	u1590
  1866   000A3E                     u1591:
  1867   000A3E  EF3D  F005         	goto	l1934
  1868   000A42                     u1590:
  1869   000A42  503B               	movf	dtoa@n^0,w,c
  1870   000A44  103C               	iorwf	(dtoa@n+1)^0,w,c
  1871   000A46  103D               	iorwf	(dtoa@n+2)^0,w,c
  1872   000A48  103E               	iorwf	(dtoa@n+3)^0,w,c
  1873   000A4A  103F               	iorwf	(dtoa@n+4)^0,w,c
  1874   000A4C  1040               	iorwf	(dtoa@n+5)^0,w,c
  1875   000A4E  1041               	iorwf	(dtoa@n+6)^0,w,c
  1876   000A50  1042               	iorwf	(dtoa@n+7)^0,w,c
  1877   000A52  A4D8               	btfss	status,2,c
  1878   000A54  EF2E  F005         	goto	u1601
  1879   000A58  EF30  F005         	goto	u1600
  1880   000A5C                     u1601:
  1881   000A5C  EF98  F004         	goto	l1918
  1882   000A60                     u1600:
  1883   000A60  BE38               	btfsc	(dtoa@p+1)^0,7,c
  1884   000A62  EF3D  F005         	goto	u1610
  1885   000A66  5038               	movf	(dtoa@p+1)^0,w,c
  1886   000A68  E106               	bnz	u1611
  1887   000A6A  0437               	decf	dtoa@p^0,w,c
  1888   000A6C  B0D8               	btfsc	status,0,c
  1889   000A6E  EF3B  F005         	goto	u1611
  1890   000A72  EF3D  F005         	goto	u1610
  1891   000A76                     u1611:
  1892   000A76  EF98  F004         	goto	l1918
  1893   000A7A                     u1610:
  1894   000A7A                     l1934:
  1895                           
  1896                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  1897   000A7A  5043               	movf	dtoa@s^0,w,c
  1898   000A7C  B4D8               	btfsc	status,2,c
  1899   000A7E  EF43  F005         	goto	u1621
  1900   000A82  EF45  F005         	goto	u1620
  1901   000A86                     u1621:
  1902   000A86  EF50  F005         	goto	l1940
  1903   000A8A                     u1620:
  1904   000A8A                     
  1905                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  1906   000A8A  0644               	decf	dtoa@i^0,f,c
  1907   000A8C  A0D8               	btfss	status,0,c
  1908   000A8E  0645               	decf	(dtoa@i+1)^0,f,c
  1909   000A90                     
  1910                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  1911   000A90  0EA1               	movlw	low _dbuf
  1912   000A92  2444               	addwf	dtoa@i^0,w,c
  1913   000A94  6ED9               	movwf	fsr2l,c
  1914   000A96  0E00               	movlw	high _dbuf
  1915   000A98  2045               	addwfc	(dtoa@i+1)^0,w,c
  1916   000A9A  6EDA               	movwf	fsr2h,c
  1917   000A9C  C043  FFDF         	movff	dtoa@s,indf2
  1918   000AA0                     l1940:
  1919                           
  1920                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1921   000AA0  C023  F018         	movff	dtoa@fp,pad@fp
  1922   000AA4  C024  F019         	movff	dtoa@fp+1,pad@fp+1
  1923   000AA8  0EA1               	movlw	low _dbuf
  1924   000AAA  2444               	addwf	dtoa@i^0,w,c
  1925   000AAC  6E1A               	movwf	pad@buf^0,c
  1926   000AAE  0E00               	movlw	high _dbuf
  1927   000AB0  2045               	addwfc	(dtoa@i+1)^0,w,c
  1928   000AB2  6E1B               	movwf	(pad@buf+1)^0,c
  1929   000AB4  C039  F01C         	movff	dtoa@w,pad@p
  1930   000AB8  C03A  F01D         	movff	dtoa@w+1,pad@p+1
  1931   000ABC  EC50  F00A         	call	_pad	;wreg free
  1932   000AC0  0012               	return		;funcret
  1933   000AC2                     __end_of_dtoa:
  1934                           	callstack 0
  1935                           
  1936 ;; *************** function _pad *****************
  1937 ;; Defined at:
  1938 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  1941 ;;		 -> NULL(0), 
  1942 ;;  buf             2   25[COMRAM] PTR unsigned char 
  1943 ;;		 -> dbuf(32), 
  1944 ;;  p               2   27[COMRAM] int 
  1945 ;; Auto vars:     Size  Location     Type
  1946 ;;  w               2   32[COMRAM] int 
  1947 ;;  i               2   30[COMRAM] int 
  1948 ;; Return value:  Size  Location     Type
  1949 ;;                  1    wreg      void 
  1950 ;; Registers used:
  1951 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1952 ;; Tracked objects:
  1953 ;;		On entry : 0/0
  1954 ;;		On exit  : 0/0
  1955 ;;		Unchanged: 0/0
  1956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1957 ;;      Params:         6       0       0       0       0       0       0       0       0
  1958 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1959 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1960 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1961 ;;Total ram usage:       11 bytes
  1962 ;; Hardware stack levels used: 1
  1963 ;; Hardware stack levels required when called: 4
  1964 ;; This function calls:
  1965 ;;		_fputc
  1966 ;;		_fputs
  1967 ;; This function is called by:
  1968 ;;		_dtoa
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971                           
  1972                           	psect	text8
  1973   0014A0                     __ptext8:
  1974                           	callstack 0
  1975   0014A0                     _pad:
  1976                           	callstack 21
  1977   0014A0                     
  1978                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  1979   0014A0  BE1D               	btfsc	(pad@p+1)^0,7,c
  1980   0014A2  EF55  F00A         	goto	u1501
  1981   0014A6  EF57  F00A         	goto	u1500
  1982   0014AA                     u1501:
  1983   0014AA  EF5D  F00A         	goto	l1878
  1984   0014AE                     u1500:
  1985   0014AE  C01C  F021         	movff	pad@p,pad@w
  1986   0014B2  C01D  F022         	movff	pad@p+1,pad@w+1
  1987   0014B6  EF61  F00A         	goto	l855
  1988   0014BA                     l1878:
  1989   0014BA  0E00               	movlw	0
  1990   0014BC  6E22               	movwf	(pad@w+1)^0,c
  1991   0014BE  0E00               	movlw	0
  1992   0014C0  6E21               	movwf	pad@w^0,c
  1993   0014C2                     l855:
  1994                           
  1995                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  1996   0014C2  0E00               	movlw	0
  1997   0014C4  6E20               	movwf	(pad@i+1)^0,c
  1998   0014C6  0E00               	movlw	0
  1999   0014C8  6E1F               	movwf	pad@i^0,c
  2000                           
  2001                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2002   0014CA  EF73  F00A         	goto	l1884
  2003   0014CE                     l1880:
  2004                           
  2005                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  2006   0014CE  0E00               	movlw	0
  2007   0014D0  6E09               	movwf	(fputc@c+1)^0,c
  2008   0014D2  0E20               	movlw	32
  2009   0014D4  6E08               	movwf	fputc@c^0,c
  2010   0014D6  C018  F00A         	movff	pad@fp,fputc@fp
  2011   0014DA  C019  F00B         	movff	pad@fp+1,fputc@fp+1
  2012   0014DE  EC80  F009         	call	_fputc	;wreg free
  2013   0014E2                     
  2014                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2015   0014E2  4A1F               	infsnz	pad@i^0,f,c
  2016   0014E4  2A20               	incf	(pad@i+1)^0,f,c
  2017   0014E6                     l1884:
  2018                           
  2019                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2020   0014E6  5021               	movf	pad@w^0,w,c
  2021   0014E8  5C1F               	subwf	pad@i^0,w,c
  2022   0014EA  5020               	movf	(pad@i+1)^0,w,c
  2023   0014EC  0A80               	xorlw	128
  2024   0014EE  6E1E               	movwf	??_pad^0,c
  2025   0014F0  5022               	movf	(pad@w+1)^0,w,c
  2026   0014F2  0A80               	xorlw	128
  2027   0014F4  581E               	subwfb	??_pad^0,w,c
  2028   0014F6  A0D8               	btfss	status,0,c
  2029   0014F8  EF80  F00A         	goto	u1511
  2030   0014FC  EF82  F00A         	goto	u1510
  2031   001500                     u1511:
  2032   001500  EF67  F00A         	goto	l1880
  2033   001504                     u1510:
  2034   001504                     
  2035                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  2036   001504  C01A  F011         	movff	pad@buf,fputs@s
  2037   001508  C01B  F012         	movff	pad@buf+1,fputs@s+1
  2038   00150C  C018  F013         	movff	pad@fp,fputs@fp
  2039   001510  C019  F014         	movff	pad@fp+1,fputs@fp+1
  2040   001514  ECE1  F00A         	call	_fputs	;wreg free
  2041   001518  0012               	return		;funcret
  2042   00151A                     __end_of_pad:
  2043                           	callstack 0
  2044                           
  2045 ;; *************** function _fputs *****************
  2046 ;; Defined at:
  2047 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  2048 ;; Parameters:    Size  Location     Type
  2049 ;;  s               2   16[COMRAM] PTR const unsigned char 
  2050 ;;		 -> dbuf(32), 
  2051 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  2052 ;;		 -> NULL(0), 
  2053 ;; Auto vars:     Size  Location     Type
  2054 ;;  i               2   21[COMRAM] int 
  2055 ;;  c               1   20[COMRAM] unsigned char 
  2056 ;; Return value:  Size  Location     Type
  2057 ;;                  2   16[COMRAM] int 
  2058 ;; Registers used:
  2059 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2060 ;; Tracked objects:
  2061 ;;		On entry : 0/0
  2062 ;;		On exit  : 0/0
  2063 ;;		Unchanged: 0/0
  2064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2065 ;;      Params:         4       0       0       0       0       0       0       0       0
  2066 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2067 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2068 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2069 ;;Total ram usage:        7 bytes
  2070 ;; Hardware stack levels used: 1
  2071 ;; Hardware stack levels required when called: 3
  2072 ;; This function calls:
  2073 ;;		_fputc
  2074 ;; This function is called by:
  2075 ;;		_pad
  2076 ;; This function uses a non-reentrant model
  2077 ;;
  2078                           
  2079                           	psect	text9
  2080   0015C2                     __ptext9:
  2081                           	callstack 0
  2082   0015C2                     _fputs:
  2083                           	callstack 21
  2084   0015C2  0E00               	movlw	0
  2085   0015C4  6E17               	movwf	(fputs@i+1)^0,c
  2086   0015C6  0E00               	movlw	0
  2087   0015C8  6E16               	movwf	fputs@i^0,c
  2088   0015CA  EFF2  F00A         	goto	l1792
  2089   0015CE                     l1788:
  2090   0015CE  C015  F008         	movff	fputs@c,fputc@c
  2091   0015D2  6A09               	clrf	(fputc@c+1)^0,c
  2092   0015D4  C013  F00A         	movff	fputs@fp,fputc@fp
  2093   0015D8  C014  F00B         	movff	fputs@fp+1,fputc@fp+1
  2094   0015DC  EC80  F009         	call	_fputc	;wreg free
  2095   0015E0  4A16               	infsnz	fputs@i^0,f,c
  2096   0015E2  2A17               	incf	(fputs@i+1)^0,f,c
  2097   0015E4                     l1792:
  2098   0015E4  5016               	movf	fputs@i^0,w,c
  2099   0015E6  2411               	addwf	fputs@s^0,w,c
  2100   0015E8  6ED9               	movwf	fsr2l,c
  2101   0015EA  5017               	movf	(fputs@i+1)^0,w,c
  2102   0015EC  2012               	addwfc	(fputs@s+1)^0,w,c
  2103   0015EE  6EDA               	movwf	fsr2h,c
  2104   0015F0  50DF               	movf	indf2,w,c
  2105   0015F2  6E15               	movwf	fputs@c^0,c
  2106   0015F4  5015               	movf	fputs@c^0,w,c
  2107   0015F6  A4D8               	btfss	status,2,c
  2108   0015F8  EF00  F00B         	goto	u1361
  2109   0015FC  EF02  F00B         	goto	u1360
  2110   001600                     u1361:
  2111   001600  EFE7  F00A         	goto	l1788
  2112   001604                     u1360:
  2113   001604  0012               	return		;funcret
  2114   001606                     __end_of_fputs:
  2115                           	callstack 0
  2116                           
  2117 ;; *************** function _fputc *****************
  2118 ;; Defined at:
  2119 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2120 ;; Parameters:    Size  Location     Type
  2121 ;;  c               2    7[COMRAM] int 
  2122 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  2123 ;;		 -> NULL(0), 
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;		None
  2126 ;; Return value:  Size  Location     Type
  2127 ;;                  2    7[COMRAM] int 
  2128 ;; Registers used:
  2129 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2130 ;; Tracked objects:
  2131 ;;		On entry : 0/0
  2132 ;;		On exit  : 0/0
  2133 ;;		Unchanged: 0/0
  2134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2135 ;;      Params:         4       0       0       0       0       0       0       0       0
  2136 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2137 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2138 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2139 ;;Total ram usage:        9 bytes
  2140 ;; Hardware stack levels used: 1
  2141 ;; Hardware stack levels required when called: 2
  2142 ;; This function calls:
  2143 ;;		_putch
  2144 ;; This function is called by:
  2145 ;;		_pad
  2146 ;;		_vfpfcnvrt
  2147 ;;		_fputs
  2148 ;; This function uses a non-reentrant model
  2149 ;;
  2150                           
  2151                           	psect	text10
  2152   001300                     __ptext10:
  2153                           	callstack 0
  2154   001300                     _fputc:
  2155                           	callstack 24
  2156   001300  500A               	movf	fputc@fp^0,w,c
  2157   001302  100B               	iorwf	(fputc@fp+1)^0,w,c
  2158   001304  B4D8               	btfsc	status,2,c
  2159   001306  EF87  F009         	goto	u1321
  2160   00130A  EF89  F009         	goto	u1320
  2161   00130E                     u1321:
  2162   00130E  EF92  F009         	goto	l1776
  2163   001312                     u1320:
  2164   001312  500A               	movf	fputc@fp^0,w,c
  2165   001314  100B               	iorwf	(fputc@fp+1)^0,w,c
  2166   001316  A4D8               	btfss	status,2,c
  2167   001318  EF90  F009         	goto	u1331
  2168   00131C  EF92  F009         	goto	u1330
  2169   001320                     u1331:
  2170   001320  EF97  F009         	goto	l1778
  2171   001324                     u1330:
  2172   001324                     l1776:
  2173   001324  5008               	movf	fputc@c^0,w,c
  2174   001326  EC68  F00B         	call	_putch
  2175   00132A  EFCA  F009         	goto	l910
  2176   00132E                     l1778:
  2177   00132E  EE20 F009          	lfsr	2,9
  2178   001332  500A               	movf	fputc@fp^0,w,c
  2179   001334  26D9               	addwf	fsr2l,f,c
  2180   001336  500B               	movf	(fputc@fp+1)^0,w,c
  2181   001338  22DA               	addwfc	fsr2h,f,c
  2182   00133A  50DE               	movf	postinc2,w,c
  2183   00133C  10DE               	iorwf	postinc2,w,c
  2184   00133E  B4D8               	btfsc	status,2,c
  2185   001340  EFA4  F009         	goto	u1341
  2186   001344  EFA6  F009         	goto	u1340
  2187   001348                     u1341:
  2188   001348  EFC1  F009         	goto	l1782
  2189   00134C                     u1340:
  2190   00134C  EE20 F009          	lfsr	2,9
  2191   001350  500A               	movf	fputc@fp^0,w,c
  2192   001352  26D9               	addwf	fsr2l,f,c
  2193   001354  500B               	movf	(fputc@fp+1)^0,w,c
  2194   001356  22DA               	addwfc	fsr2h,f,c
  2195   001358  EE10 F003          	lfsr	1,3
  2196   00135C  500A               	movf	fputc@fp^0,w,c
  2197   00135E  26E1               	addwf	fsr1l,f,c
  2198   001360  500B               	movf	(fputc@fp+1)^0,w,c
  2199   001362  22E2               	addwfc	fsr1h,f,c
  2200   001364  50DE               	movf	postinc2,w,c
  2201   001366  5CE6               	subwf	postinc1,w,c
  2202   001368  50E6               	movf	postinc1,w,c
  2203   00136A  0A80               	xorlw	128
  2204   00136C  6E10               	movwf	(??_fputc+4)^0,c
  2205   00136E  50DE               	movf	postinc2,w,c
  2206   001370  0A80               	xorlw	128
  2207   001372  5810               	subwfb	(??_fputc+4)^0,w,c
  2208   001374  B0D8               	btfsc	status,0,c
  2209   001376  EFBF  F009         	goto	u1351
  2210   00137A  EFC1  F009         	goto	u1350
  2211   00137E                     u1351:
  2212   00137E  EFCA  F009         	goto	l910
  2213   001382                     u1350:
  2214   001382                     l1782:
  2215   001382  EE20 F003          	lfsr	2,3
  2216   001386  500A               	movf	fputc@fp^0,w,c
  2217   001388  26D9               	addwf	fsr2l,f,c
  2218   00138A  500B               	movf	(fputc@fp+1)^0,w,c
  2219   00138C  22DA               	addwfc	fsr2h,f,c
  2220   00138E  2ADE               	incf	postinc2,f,c
  2221   001390  0E00               	movlw	0
  2222   001392  22DD               	addwfc	postdec2,f,c
  2223   001394                     l910:
  2224   001394  0012               	return		;funcret
  2225   001396                     __end_of_fputc:
  2226                           	callstack 0
  2227                           
  2228 ;; *************** function _putch *****************
  2229 ;; Defined at:
  2230 ;;		line 200 in file "main.c"
  2231 ;; Parameters:    Size  Location     Type
  2232 ;;  data            1    wreg     unsigned char 
  2233 ;; Auto vars:     Size  Location     Type
  2234 ;;  data            1    6[COMRAM] unsigned char 
  2235 ;; Return value:  Size  Location     Type
  2236 ;;                  1    wreg      void 
  2237 ;; Registers used:
  2238 ;;		wreg
  2239 ;; Tracked objects:
  2240 ;;		On entry : 0/0
  2241 ;;		On exit  : 0/0
  2242 ;;		Unchanged: 0/0
  2243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2244 ;;      Params:         0       0       0       0       0       0       0       0       0
  2245 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2246 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2247 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2248 ;;Total ram usage:        1 bytes
  2249 ;; Hardware stack levels used: 1
  2250 ;; Hardware stack levels required when called: 1
  2251 ;; This function calls:
  2252 ;;		Nothing
  2253 ;; This function is called by:
  2254 ;;		_fputc
  2255 ;; This function uses a non-reentrant model
  2256 ;;
  2257                           
  2258                           	psect	text11
  2259   0016D0                     __ptext11:
  2260                           	callstack 0
  2261   0016D0                     _putch:
  2262                           	callstack 24
  2263                           
  2264                           ;incstack = 0
  2265                           ;putch@data stored from wreg
  2266   0016D0  6E07               	movwf	putch@data^0,c
  2267   0016D2                     l108:
  2268                           
  2269                           ;main.c: 201:     while( ! TXIF)
  2270   0016D2  A89E               	btfss	3998,4,c	;volatile
  2271   0016D4  EF6E  F00B         	goto	u1311
  2272   0016D8  EF70  F00B         	goto	u1310
  2273   0016DC                     u1311:
  2274   0016DC  EF69  F00B         	goto	l108
  2275   0016E0                     u1310:
  2276   0016E0                     
  2277                           ;main.c: 203:     TXREG = data;
  2278   0016E0  C007  FFAD         	movff	putch@data,4013	;volatile
  2279   0016E4  0012               	return		;funcret
  2280   0016E6                     __end_of_putch:
  2281                           	callstack 0
  2282                           
  2283 ;; *************** function _abs *****************
  2284 ;; Defined at:
  2285 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  2286 ;; Parameters:    Size  Location     Type
  2287 ;;  a               2   24[COMRAM] int 
  2288 ;; Auto vars:     Size  Location     Type
  2289 ;;		None
  2290 ;; Return value:  Size  Location     Type
  2291 ;;                  2   24[COMRAM] int 
  2292 ;; Registers used:
  2293 ;;		wreg, status,2, status,0
  2294 ;; Tracked objects:
  2295 ;;		On entry : 0/0
  2296 ;;		On exit  : 0/0
  2297 ;;		Unchanged: 0/0
  2298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2299 ;;      Params:         2       0       0       0       0       0       0       0       0
  2300 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2301 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2302 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2303 ;;Total ram usage:        4 bytes
  2304 ;; Hardware stack levels used: 1
  2305 ;; Hardware stack levels required when called: 1
  2306 ;; This function calls:
  2307 ;;		Nothing
  2308 ;; This function is called by:
  2309 ;;		_dtoa
  2310 ;; This function uses a non-reentrant model
  2311 ;;
  2312                           
  2313                           	psect	text12
  2314   001606                     __ptext12:
  2315                           	callstack 0
  2316   001606                     _abs:
  2317                           	callstack 24
  2318   001606  BE1A               	btfsc	(abs@a+1)^0,7,c
  2319   001608  EF10  F00B         	goto	u1520
  2320   00160C  501A               	movf	(abs@a+1)^0,w,c
  2321   00160E  E106               	bnz	u1521
  2322   001610  0419               	decf	abs@a^0,w,c
  2323   001612  B0D8               	btfsc	status,0,c
  2324   001614  EF0E  F00B         	goto	u1521
  2325   001618  EF10  F00B         	goto	u1520
  2326   00161C                     u1521:
  2327   00161C  EF1E  F00B         	goto	l895
  2328   001620                     u1520:
  2329   001620  C019  F01B         	movff	abs@a,??_abs
  2330   001624  C01A  F01C         	movff	abs@a+1,??_abs+1
  2331   001628  1E1B               	comf	??_abs^0,f,c
  2332   00162A  1E1C               	comf	(??_abs+1)^0,f,c
  2333   00162C  4A1B               	infsnz	??_abs^0,f,c
  2334   00162E  2A1C               	incf	(??_abs+1)^0,f,c
  2335   001630  C01B  F019         	movff	??_abs,?_abs
  2336   001634  C01C  F01A         	movff	??_abs+1,?_abs+1
  2337   001638  EF22  F00B         	goto	l898
  2338   00163C                     l895:
  2339   00163C  C019  F019         	movff	abs@a,?_abs
  2340   001640  C01A  F01A         	movff	abs@a+1,?_abs+1
  2341   001644                     l898:
  2342   001644  0012               	return		;funcret
  2343   001646                     __end_of_abs:
  2344                           	callstack 0
  2345                           
  2346 ;; *************** function ___aomod *****************
  2347 ;; Defined at:
  2348 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;  dividend        8    6[COMRAM] long long 
  2351 ;;  divisor         8   14[COMRAM] long long 
  2352 ;; Auto vars:     Size  Location     Type
  2353 ;;  sign            1   23[COMRAM] unsigned char 
  2354 ;;  counter         1   22[COMRAM] unsigned char 
  2355 ;; Return value:  Size  Location     Type
  2356 ;;                  8    6[COMRAM] long long 
  2357 ;; Registers used:
  2358 ;;		wreg, status,2, status,0
  2359 ;; Tracked objects:
  2360 ;;		On entry : 0/0
  2361 ;;		On exit  : 0/0
  2362 ;;		Unchanged: 0/0
  2363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2364 ;;      Params:        16       0       0       0       0       0       0       0       0
  2365 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2366 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2367 ;;      Totals:        18       0       0       0       0       0       0       0       0
  2368 ;;Total ram usage:       18 bytes
  2369 ;; Hardware stack levels used: 1
  2370 ;; Hardware stack levels required when called: 1
  2371 ;; This function calls:
  2372 ;;		Nothing
  2373 ;; This function is called by:
  2374 ;;		_dtoa
  2375 ;; This function uses a non-reentrant model
  2376 ;;
  2377                           
  2378                           	psect	text13
  2379   000EAA                     __ptext13:
  2380                           	callstack 0
  2381   000EAA                     ___aomod:
  2382                           	callstack 24
  2383   000EAA  0E00               	movlw	0
  2384   000EAC  6E18               	movwf	___aomod@sign^0,c
  2385   000EAE  BE0E               	btfsc	(___aomod@dividend+7)^0,7,c
  2386   000EB0  EF5E  F007         	goto	u1440
  2387   000EB4  EF5C  F007         	goto	u1441
  2388   000EB8                     u1441:
  2389   000EB8  EF70  F007         	goto	l1846
  2390   000EBC                     u1440:
  2391   000EBC  1E0E               	comf	(___aomod@dividend+7)^0,f,c
  2392   000EBE  1E0D               	comf	(___aomod@dividend+6)^0,f,c
  2393   000EC0  1E0C               	comf	(___aomod@dividend+5)^0,f,c
  2394   000EC2  1E0B               	comf	(___aomod@dividend+4)^0,f,c
  2395   000EC4  1E0A               	comf	(___aomod@dividend+3)^0,f,c
  2396   000EC6  1E09               	comf	(___aomod@dividend+2)^0,f,c
  2397   000EC8  1E08               	comf	(___aomod@dividend+1)^0,f,c
  2398   000ECA  6C07               	negf	___aomod@dividend^0,c
  2399   000ECC  0E00               	movlw	0
  2400   000ECE  2208               	addwfc	(___aomod@dividend+1)^0,f,c
  2401   000ED0  2209               	addwfc	(___aomod@dividend+2)^0,f,c
  2402   000ED2  220A               	addwfc	(___aomod@dividend+3)^0,f,c
  2403   000ED4  220B               	addwfc	(___aomod@dividend+4)^0,f,c
  2404   000ED6  220C               	addwfc	(___aomod@dividend+5)^0,f,c
  2405   000ED8  220D               	addwfc	(___aomod@dividend+6)^0,f,c
  2406   000EDA  220E               	addwfc	(___aomod@dividend+7)^0,f,c
  2407   000EDC  0E01               	movlw	1
  2408   000EDE  6E18               	movwf	___aomod@sign^0,c
  2409   000EE0                     l1846:
  2410   000EE0  BE16               	btfsc	(___aomod@divisor+7)^0,7,c
  2411   000EE2  EF77  F007         	goto	u1450
  2412   000EE6  EF75  F007         	goto	u1451
  2413   000EEA                     u1451:
  2414   000EEA  EF87  F007         	goto	l1850
  2415   000EEE                     u1450:
  2416   000EEE  1E16               	comf	(___aomod@divisor+7)^0,f,c
  2417   000EF0  1E15               	comf	(___aomod@divisor+6)^0,f,c
  2418   000EF2  1E14               	comf	(___aomod@divisor+5)^0,f,c
  2419   000EF4  1E13               	comf	(___aomod@divisor+4)^0,f,c
  2420   000EF6  1E12               	comf	(___aomod@divisor+3)^0,f,c
  2421   000EF8  1E11               	comf	(___aomod@divisor+2)^0,f,c
  2422   000EFA  1E10               	comf	(___aomod@divisor+1)^0,f,c
  2423   000EFC  6C0F               	negf	___aomod@divisor^0,c
  2424   000EFE  0E00               	movlw	0
  2425   000F00  2210               	addwfc	(___aomod@divisor+1)^0,f,c
  2426   000F02  2211               	addwfc	(___aomod@divisor+2)^0,f,c
  2427   000F04  2212               	addwfc	(___aomod@divisor+3)^0,f,c
  2428   000F06  2213               	addwfc	(___aomod@divisor+4)^0,f,c
  2429   000F08  2214               	addwfc	(___aomod@divisor+5)^0,f,c
  2430   000F0A  2215               	addwfc	(___aomod@divisor+6)^0,f,c
  2431   000F0C  2216               	addwfc	(___aomod@divisor+7)^0,f,c
  2432   000F0E                     l1850:
  2433   000F0E  500F               	movf	___aomod@divisor^0,w,c
  2434   000F10  1010               	iorwf	(___aomod@divisor+1)^0,w,c
  2435   000F12  1011               	iorwf	(___aomod@divisor+2)^0,w,c
  2436   000F14  1012               	iorwf	(___aomod@divisor+3)^0,w,c
  2437   000F16  1013               	iorwf	(___aomod@divisor+4)^0,w,c
  2438   000F18  1014               	iorwf	(___aomod@divisor+5)^0,w,c
  2439   000F1A  1015               	iorwf	(___aomod@divisor+6)^0,w,c
  2440   000F1C  1016               	iorwf	(___aomod@divisor+7)^0,w,c
  2441   000F1E  B4D8               	btfsc	status,2,c
  2442   000F20  EF94  F007         	goto	u1461
  2443   000F24  EF96  F007         	goto	u1460
  2444   000F28                     u1461:
  2445   000F28  EFDE  F007         	goto	l1866
  2446   000F2C                     u1460:
  2447   000F2C  0E01               	movlw	1
  2448   000F2E  6E17               	movwf	___aomod@counter^0,c
  2449   000F30  EFA4  F007         	goto	l1856
  2450   000F34                     l1854:
  2451   000F34  90D8               	bcf	status,0,c
  2452   000F36  360F               	rlcf	___aomod@divisor^0,f,c
  2453   000F38  3610               	rlcf	(___aomod@divisor+1)^0,f,c
  2454   000F3A  3611               	rlcf	(___aomod@divisor+2)^0,f,c
  2455   000F3C  3612               	rlcf	(___aomod@divisor+3)^0,f,c
  2456   000F3E  3613               	rlcf	(___aomod@divisor+4)^0,f,c
  2457   000F40  3614               	rlcf	(___aomod@divisor+5)^0,f,c
  2458   000F42  3615               	rlcf	(___aomod@divisor+6)^0,f,c
  2459   000F44  3616               	rlcf	(___aomod@divisor+7)^0,f,c
  2460   000F46  2A17               	incf	___aomod@counter^0,f,c
  2461   000F48                     l1856:
  2462   000F48  AE16               	btfss	(___aomod@divisor+7)^0,7,c
  2463   000F4A  EFA9  F007         	goto	u1471
  2464   000F4E  EFAB  F007         	goto	u1470
  2465   000F52                     u1471:
  2466   000F52  EF9A  F007         	goto	l1854
  2467   000F56                     u1470:
  2468   000F56                     l1858:
  2469   000F56  500F               	movf	___aomod@divisor^0,w,c
  2470   000F58  5C07               	subwf	___aomod@dividend^0,w,c
  2471   000F5A  5010               	movf	(___aomod@divisor+1)^0,w,c
  2472   000F5C  5808               	subwfb	(___aomod@dividend+1)^0,w,c
  2473   000F5E  5011               	movf	(___aomod@divisor+2)^0,w,c
  2474   000F60  5809               	subwfb	(___aomod@dividend+2)^0,w,c
  2475   000F62  5012               	movf	(___aomod@divisor+3)^0,w,c
  2476   000F64  580A               	subwfb	(___aomod@dividend+3)^0,w,c
  2477   000F66  5013               	movf	(___aomod@divisor+4)^0,w,c
  2478   000F68  580B               	subwfb	(___aomod@dividend+4)^0,w,c
  2479   000F6A  5014               	movf	(___aomod@divisor+5)^0,w,c
  2480   000F6C  580C               	subwfb	(___aomod@dividend+5)^0,w,c
  2481   000F6E  5015               	movf	(___aomod@divisor+6)^0,w,c
  2482   000F70  580D               	subwfb	(___aomod@dividend+6)^0,w,c
  2483   000F72  5016               	movf	(___aomod@divisor+7)^0,w,c
  2484   000F74  580E               	subwfb	(___aomod@dividend+7)^0,w,c
  2485   000F76  A0D8               	btfss	status,0,c
  2486   000F78  EFC0  F007         	goto	u1481
  2487   000F7C  EFC2  F007         	goto	u1480
  2488   000F80                     u1481:
  2489   000F80  EFD2  F007         	goto	l1862
  2490   000F84                     u1480:
  2491   000F84  500F               	movf	___aomod@divisor^0,w,c
  2492   000F86  5E07               	subwf	___aomod@dividend^0,f,c
  2493   000F88  5010               	movf	(___aomod@divisor+1)^0,w,c
  2494   000F8A  5A08               	subwfb	(___aomod@dividend+1)^0,f,c
  2495   000F8C  5011               	movf	(___aomod@divisor+2)^0,w,c
  2496   000F8E  5A09               	subwfb	(___aomod@dividend+2)^0,f,c
  2497   000F90  5012               	movf	(___aomod@divisor+3)^0,w,c
  2498   000F92  5A0A               	subwfb	(___aomod@dividend+3)^0,f,c
  2499   000F94  5013               	movf	(___aomod@divisor+4)^0,w,c
  2500   000F96  5A0B               	subwfb	(___aomod@dividend+4)^0,f,c
  2501   000F98  5014               	movf	(___aomod@divisor+5)^0,w,c
  2502   000F9A  5A0C               	subwfb	(___aomod@dividend+5)^0,f,c
  2503   000F9C  5015               	movf	(___aomod@divisor+6)^0,w,c
  2504   000F9E  5A0D               	subwfb	(___aomod@dividend+6)^0,f,c
  2505   000FA0  5016               	movf	(___aomod@divisor+7)^0,w,c
  2506   000FA2  5A0E               	subwfb	(___aomod@dividend+7)^0,f,c
  2507   000FA4                     l1862:
  2508   000FA4  90D8               	bcf	status,0,c
  2509   000FA6  3216               	rrcf	(___aomod@divisor+7)^0,f,c
  2510   000FA8  3215               	rrcf	(___aomod@divisor+6)^0,f,c
  2511   000FAA  3214               	rrcf	(___aomod@divisor+5)^0,f,c
  2512   000FAC  3213               	rrcf	(___aomod@divisor+4)^0,f,c
  2513   000FAE  3212               	rrcf	(___aomod@divisor+3)^0,f,c
  2514   000FB0  3211               	rrcf	(___aomod@divisor+2)^0,f,c
  2515   000FB2  3210               	rrcf	(___aomod@divisor+1)^0,f,c
  2516   000FB4  320F               	rrcf	___aomod@divisor^0,f,c
  2517   000FB6  2E17               	decfsz	___aomod@counter^0,f,c
  2518   000FB8  EFAB  F007         	goto	l1858
  2519   000FBC                     l1866:
  2520   000FBC  5018               	movf	___aomod@sign^0,w,c
  2521   000FBE  B4D8               	btfsc	status,2,c
  2522   000FC0  EFE4  F007         	goto	u1491
  2523   000FC4  EFE6  F007         	goto	u1490
  2524   000FC8                     u1491:
  2525   000FC8  EFF6  F007         	goto	l1870
  2526   000FCC                     u1490:
  2527   000FCC  1E0E               	comf	(___aomod@dividend+7)^0,f,c
  2528   000FCE  1E0D               	comf	(___aomod@dividend+6)^0,f,c
  2529   000FD0  1E0C               	comf	(___aomod@dividend+5)^0,f,c
  2530   000FD2  1E0B               	comf	(___aomod@dividend+4)^0,f,c
  2531   000FD4  1E0A               	comf	(___aomod@dividend+3)^0,f,c
  2532   000FD6  1E09               	comf	(___aomod@dividend+2)^0,f,c
  2533   000FD8  1E08               	comf	(___aomod@dividend+1)^0,f,c
  2534   000FDA  6C07               	negf	___aomod@dividend^0,c
  2535   000FDC  0E00               	movlw	0
  2536   000FDE  2208               	addwfc	(___aomod@dividend+1)^0,f,c
  2537   000FE0  2209               	addwfc	(___aomod@dividend+2)^0,f,c
  2538   000FE2  220A               	addwfc	(___aomod@dividend+3)^0,f,c
  2539   000FE4  220B               	addwfc	(___aomod@dividend+4)^0,f,c
  2540   000FE6  220C               	addwfc	(___aomod@dividend+5)^0,f,c
  2541   000FE8  220D               	addwfc	(___aomod@dividend+6)^0,f,c
  2542   000FEA  220E               	addwfc	(___aomod@dividend+7)^0,f,c
  2543   000FEC                     l1870:
  2544   000FEC  C007  F007         	movff	___aomod@dividend,?___aomod
  2545   000FF0  C008  F008         	movff	___aomod@dividend+1,?___aomod+1
  2546   000FF4  C009  F009         	movff	___aomod@dividend+2,?___aomod+2
  2547   000FF8  C00A  F00A         	movff	___aomod@dividend+3,?___aomod+3
  2548   000FFC  C00B  F00B         	movff	___aomod@dividend+4,?___aomod+4
  2549   001000  C00C  F00C         	movff	___aomod@dividend+5,?___aomod+5
  2550   001004  C00D  F00D         	movff	___aomod@dividend+6,?___aomod+6
  2551   001008  C00E  F00E         	movff	___aomod@dividend+7,?___aomod+7
  2552   00100C  0012               	return		;funcret
  2553   00100E                     __end_of___aomod:
  2554                           	callstack 0
  2555                           
  2556 ;; *************** function ___aodiv *****************
  2557 ;; Defined at:
  2558 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;  dividend        8    6[COMRAM] long long 
  2561 ;;  divisor         8   14[COMRAM] long long 
  2562 ;; Auto vars:     Size  Location     Type
  2563 ;;  quotient        8   24[COMRAM] long long 
  2564 ;;  sign            1   23[COMRAM] unsigned char 
  2565 ;;  counter         1   22[COMRAM] unsigned char 
  2566 ;; Return value:  Size  Location     Type
  2567 ;;                  8    6[COMRAM] long long 
  2568 ;; Registers used:
  2569 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2570 ;; Tracked objects:
  2571 ;;		On entry : 0/0
  2572 ;;		On exit  : 0/0
  2573 ;;		Unchanged: 0/0
  2574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2575 ;;      Params:        16       0       0       0       0       0       0       0       0
  2576 ;;      Locals:        10       0       0       0       0       0       0       0       0
  2577 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2578 ;;      Totals:        26       0       0       0       0       0       0       0       0
  2579 ;;Total ram usage:       26 bytes
  2580 ;; Hardware stack levels used: 1
  2581 ;; Hardware stack levels required when called: 1
  2582 ;; This function calls:
  2583 ;;		Nothing
  2584 ;; This function is called by:
  2585 ;;		_dtoa
  2586 ;; This function uses a non-reentrant model
  2587 ;;
  2588                           
  2589                           	psect	text14
  2590   000D22                     __ptext14:
  2591                           	callstack 0
  2592   000D22                     ___aodiv:
  2593                           	callstack 24
  2594   000D22  0E00               	movlw	0
  2595   000D24  6E18               	movwf	___aodiv@sign^0,c
  2596   000D26  BE16               	btfsc	(___aodiv@divisor+7)^0,7,c
  2597   000D28  EF9A  F006         	goto	u1370
  2598   000D2C  EF98  F006         	goto	u1371
  2599   000D30                     u1371:
  2600   000D30  EFAC  F006         	goto	l1802
  2601   000D34                     u1370:
  2602   000D34  1E16               	comf	(___aodiv@divisor+7)^0,f,c
  2603   000D36  1E15               	comf	(___aodiv@divisor+6)^0,f,c
  2604   000D38  1E14               	comf	(___aodiv@divisor+5)^0,f,c
  2605   000D3A  1E13               	comf	(___aodiv@divisor+4)^0,f,c
  2606   000D3C  1E12               	comf	(___aodiv@divisor+3)^0,f,c
  2607   000D3E  1E11               	comf	(___aodiv@divisor+2)^0,f,c
  2608   000D40  1E10               	comf	(___aodiv@divisor+1)^0,f,c
  2609   000D42  6C0F               	negf	___aodiv@divisor^0,c
  2610   000D44  0E00               	movlw	0
  2611   000D46  2210               	addwfc	(___aodiv@divisor+1)^0,f,c
  2612   000D48  2211               	addwfc	(___aodiv@divisor+2)^0,f,c
  2613   000D4A  2212               	addwfc	(___aodiv@divisor+3)^0,f,c
  2614   000D4C  2213               	addwfc	(___aodiv@divisor+4)^0,f,c
  2615   000D4E  2214               	addwfc	(___aodiv@divisor+5)^0,f,c
  2616   000D50  2215               	addwfc	(___aodiv@divisor+6)^0,f,c
  2617   000D52  2216               	addwfc	(___aodiv@divisor+7)^0,f,c
  2618   000D54  0E01               	movlw	1
  2619   000D56  6E18               	movwf	___aodiv@sign^0,c
  2620   000D58                     l1802:
  2621   000D58  BE0E               	btfsc	(___aodiv@dividend+7)^0,7,c
  2622   000D5A  EFB3  F006         	goto	u1380
  2623   000D5E  EFB1  F006         	goto	u1381
  2624   000D62                     u1381:
  2625   000D62  EFC5  F006         	goto	l1808
  2626   000D66                     u1380:
  2627   000D66  1E0E               	comf	(___aodiv@dividend+7)^0,f,c
  2628   000D68  1E0D               	comf	(___aodiv@dividend+6)^0,f,c
  2629   000D6A  1E0C               	comf	(___aodiv@dividend+5)^0,f,c
  2630   000D6C  1E0B               	comf	(___aodiv@dividend+4)^0,f,c
  2631   000D6E  1E0A               	comf	(___aodiv@dividend+3)^0,f,c
  2632   000D70  1E09               	comf	(___aodiv@dividend+2)^0,f,c
  2633   000D72  1E08               	comf	(___aodiv@dividend+1)^0,f,c
  2634   000D74  6C07               	negf	___aodiv@dividend^0,c
  2635   000D76  0E00               	movlw	0
  2636   000D78  2208               	addwfc	(___aodiv@dividend+1)^0,f,c
  2637   000D7A  2209               	addwfc	(___aodiv@dividend+2)^0,f,c
  2638   000D7C  220A               	addwfc	(___aodiv@dividend+3)^0,f,c
  2639   000D7E  220B               	addwfc	(___aodiv@dividend+4)^0,f,c
  2640   000D80  220C               	addwfc	(___aodiv@dividend+5)^0,f,c
  2641   000D82  220D               	addwfc	(___aodiv@dividend+6)^0,f,c
  2642   000D84  220E               	addwfc	(___aodiv@dividend+7)^0,f,c
  2643   000D86  0E01               	movlw	1
  2644   000D88  1A18               	xorwf	___aodiv@sign^0,f,c
  2645   000D8A                     l1808:
  2646   000D8A  EE20  F019         	lfsr	2,___aodiv@quotient
  2647   000D8E  0E07               	movlw	7
  2648   000D90                     u1391:
  2649   000D90  6ADE               	clrf	postinc2,c
  2650   000D92  06E8               	decf	wreg,f,c
  2651   000D94  E2FD               	bc	u1391
  2652   000D96  500F               	movf	___aodiv@divisor^0,w,c
  2653   000D98  1010               	iorwf	(___aodiv@divisor+1)^0,w,c
  2654   000D9A  1011               	iorwf	(___aodiv@divisor+2)^0,w,c
  2655   000D9C  1012               	iorwf	(___aodiv@divisor+3)^0,w,c
  2656   000D9E  1013               	iorwf	(___aodiv@divisor+4)^0,w,c
  2657   000DA0  1014               	iorwf	(___aodiv@divisor+5)^0,w,c
  2658   000DA2  1015               	iorwf	(___aodiv@divisor+6)^0,w,c
  2659   000DA4  1016               	iorwf	(___aodiv@divisor+7)^0,w,c
  2660   000DA6  B4D8               	btfsc	status,2,c
  2661   000DA8  EFD8  F006         	goto	u1401
  2662   000DAC  EFDA  F006         	goto	u1400
  2663   000DB0                     u1401:
  2664   000DB0  EF2C  F007         	goto	l1830
  2665   000DB4                     u1400:
  2666   000DB4  0E01               	movlw	1
  2667   000DB6  6E17               	movwf	___aodiv@counter^0,c
  2668   000DB8  EFE8  F006         	goto	l1816
  2669   000DBC                     l1814:
  2670   000DBC  90D8               	bcf	status,0,c
  2671   000DBE  360F               	rlcf	___aodiv@divisor^0,f,c
  2672   000DC0  3610               	rlcf	(___aodiv@divisor+1)^0,f,c
  2673   000DC2  3611               	rlcf	(___aodiv@divisor+2)^0,f,c
  2674   000DC4  3612               	rlcf	(___aodiv@divisor+3)^0,f,c
  2675   000DC6  3613               	rlcf	(___aodiv@divisor+4)^0,f,c
  2676   000DC8  3614               	rlcf	(___aodiv@divisor+5)^0,f,c
  2677   000DCA  3615               	rlcf	(___aodiv@divisor+6)^0,f,c
  2678   000DCC  3616               	rlcf	(___aodiv@divisor+7)^0,f,c
  2679   000DCE  2A17               	incf	___aodiv@counter^0,f,c
  2680   000DD0                     l1816:
  2681   000DD0  AE16               	btfss	(___aodiv@divisor+7)^0,7,c
  2682   000DD2  EFED  F006         	goto	u1411
  2683   000DD6  EFEF  F006         	goto	u1410
  2684   000DDA                     u1411:
  2685   000DDA  EFDE  F006         	goto	l1814
  2686   000DDE                     u1410:
  2687   000DDE                     l1818:
  2688   000DDE  90D8               	bcf	status,0,c
  2689   000DE0  3619               	rlcf	___aodiv@quotient^0,f,c
  2690   000DE2  361A               	rlcf	(___aodiv@quotient+1)^0,f,c
  2691   000DE4  361B               	rlcf	(___aodiv@quotient+2)^0,f,c
  2692   000DE6  361C               	rlcf	(___aodiv@quotient+3)^0,f,c
  2693   000DE8  361D               	rlcf	(___aodiv@quotient+4)^0,f,c
  2694   000DEA  361E               	rlcf	(___aodiv@quotient+5)^0,f,c
  2695   000DEC  361F               	rlcf	(___aodiv@quotient+6)^0,f,c
  2696   000DEE  3620               	rlcf	(___aodiv@quotient+7)^0,f,c
  2697   000DF0  500F               	movf	___aodiv@divisor^0,w,c
  2698   000DF2  5C07               	subwf	___aodiv@dividend^0,w,c
  2699   000DF4  5010               	movf	(___aodiv@divisor+1)^0,w,c
  2700   000DF6  5808               	subwfb	(___aodiv@dividend+1)^0,w,c
  2701   000DF8  5011               	movf	(___aodiv@divisor+2)^0,w,c
  2702   000DFA  5809               	subwfb	(___aodiv@dividend+2)^0,w,c
  2703   000DFC  5012               	movf	(___aodiv@divisor+3)^0,w,c
  2704   000DFE  580A               	subwfb	(___aodiv@dividend+3)^0,w,c
  2705   000E00  5013               	movf	(___aodiv@divisor+4)^0,w,c
  2706   000E02  580B               	subwfb	(___aodiv@dividend+4)^0,w,c
  2707   000E04  5014               	movf	(___aodiv@divisor+5)^0,w,c
  2708   000E06  580C               	subwfb	(___aodiv@dividend+5)^0,w,c
  2709   000E08  5015               	movf	(___aodiv@divisor+6)^0,w,c
  2710   000E0A  580D               	subwfb	(___aodiv@dividend+6)^0,w,c
  2711   000E0C  5016               	movf	(___aodiv@divisor+7)^0,w,c
  2712   000E0E  580E               	subwfb	(___aodiv@dividend+7)^0,w,c
  2713   000E10  A0D8               	btfss	status,0,c
  2714   000E12  EF0D  F007         	goto	u1421
  2715   000E16  EF0F  F007         	goto	u1420
  2716   000E1A                     u1421:
  2717   000E1A  EF20  F007         	goto	l1826
  2718   000E1E                     u1420:
  2719   000E1E  500F               	movf	___aodiv@divisor^0,w,c
  2720   000E20  5E07               	subwf	___aodiv@dividend^0,f,c
  2721   000E22  5010               	movf	(___aodiv@divisor+1)^0,w,c
  2722   000E24  5A08               	subwfb	(___aodiv@dividend+1)^0,f,c
  2723   000E26  5011               	movf	(___aodiv@divisor+2)^0,w,c
  2724   000E28  5A09               	subwfb	(___aodiv@dividend+2)^0,f,c
  2725   000E2A  5012               	movf	(___aodiv@divisor+3)^0,w,c
  2726   000E2C  5A0A               	subwfb	(___aodiv@dividend+3)^0,f,c
  2727   000E2E  5013               	movf	(___aodiv@divisor+4)^0,w,c
  2728   000E30  5A0B               	subwfb	(___aodiv@dividend+4)^0,f,c
  2729   000E32  5014               	movf	(___aodiv@divisor+5)^0,w,c
  2730   000E34  5A0C               	subwfb	(___aodiv@dividend+5)^0,f,c
  2731   000E36  5015               	movf	(___aodiv@divisor+6)^0,w,c
  2732   000E38  5A0D               	subwfb	(___aodiv@dividend+6)^0,f,c
  2733   000E3A  5016               	movf	(___aodiv@divisor+7)^0,w,c
  2734   000E3C  5A0E               	subwfb	(___aodiv@dividend+7)^0,f,c
  2735   000E3E  8019               	bsf	___aodiv@quotient^0,0,c
  2736   000E40                     l1826:
  2737   000E40  90D8               	bcf	status,0,c
  2738   000E42  3216               	rrcf	(___aodiv@divisor+7)^0,f,c
  2739   000E44  3215               	rrcf	(___aodiv@divisor+6)^0,f,c
  2740   000E46  3214               	rrcf	(___aodiv@divisor+5)^0,f,c
  2741   000E48  3213               	rrcf	(___aodiv@divisor+4)^0,f,c
  2742   000E4A  3212               	rrcf	(___aodiv@divisor+3)^0,f,c
  2743   000E4C  3211               	rrcf	(___aodiv@divisor+2)^0,f,c
  2744   000E4E  3210               	rrcf	(___aodiv@divisor+1)^0,f,c
  2745   000E50  320F               	rrcf	___aodiv@divisor^0,f,c
  2746   000E52  2E17               	decfsz	___aodiv@counter^0,f,c
  2747   000E54  EFEF  F006         	goto	l1818
  2748   000E58                     l1830:
  2749   000E58  5018               	movf	___aodiv@sign^0,w,c
  2750   000E5A  B4D8               	btfsc	status,2,c
  2751   000E5C  EF32  F007         	goto	u1431
  2752   000E60  EF34  F007         	goto	u1430
  2753   000E64                     u1431:
  2754   000E64  EF44  F007         	goto	l1834
  2755   000E68                     u1430:
  2756   000E68  1E20               	comf	(___aodiv@quotient+7)^0,f,c
  2757   000E6A  1E1F               	comf	(___aodiv@quotient+6)^0,f,c
  2758   000E6C  1E1E               	comf	(___aodiv@quotient+5)^0,f,c
  2759   000E6E  1E1D               	comf	(___aodiv@quotient+4)^0,f,c
  2760   000E70  1E1C               	comf	(___aodiv@quotient+3)^0,f,c
  2761   000E72  1E1B               	comf	(___aodiv@quotient+2)^0,f,c
  2762   000E74  1E1A               	comf	(___aodiv@quotient+1)^0,f,c
  2763   000E76  6C19               	negf	___aodiv@quotient^0,c
  2764   000E78  0E00               	movlw	0
  2765   000E7A  221A               	addwfc	(___aodiv@quotient+1)^0,f,c
  2766   000E7C  221B               	addwfc	(___aodiv@quotient+2)^0,f,c
  2767   000E7E  221C               	addwfc	(___aodiv@quotient+3)^0,f,c
  2768   000E80  221D               	addwfc	(___aodiv@quotient+4)^0,f,c
  2769   000E82  221E               	addwfc	(___aodiv@quotient+5)^0,f,c
  2770   000E84  221F               	addwfc	(___aodiv@quotient+6)^0,f,c
  2771   000E86  2220               	addwfc	(___aodiv@quotient+7)^0,f,c
  2772   000E88                     l1834:
  2773   000E88  C019  F007         	movff	___aodiv@quotient,?___aodiv
  2774   000E8C  C01A  F008         	movff	___aodiv@quotient+1,?___aodiv+1
  2775   000E90  C01B  F009         	movff	___aodiv@quotient+2,?___aodiv+2
  2776   000E94  C01C  F00A         	movff	___aodiv@quotient+3,?___aodiv+3
  2777   000E98  C01D  F00B         	movff	___aodiv@quotient+4,?___aodiv+4
  2778   000E9C  C01E  F00C         	movff	___aodiv@quotient+5,?___aodiv+5
  2779   000EA0  C01F  F00D         	movff	___aodiv@quotient+6,?___aodiv+6
  2780   000EA4  C020  F00E         	movff	___aodiv@quotient+7,?___aodiv+7
  2781   000EA8  0012               	return		;funcret
  2782   000EAA                     __end_of___aodiv:
  2783                           	callstack 0
  2784                           
  2785 ;; *************** function _init_vars *****************
  2786 ;; Defined at:
  2787 ;;		line 220 in file "main.c"
  2788 ;; Parameters:    Size  Location     Type
  2789 ;;		None
  2790 ;; Auto vars:     Size  Location     Type
  2791 ;;  i               2    8[COMRAM] int 
  2792 ;; Return value:  Size  Location     Type
  2793 ;;                  1    wreg      void 
  2794 ;; Registers used:
  2795 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2796 ;; Tracked objects:
  2797 ;;		On entry : 0/0
  2798 ;;		On exit  : 0/0
  2799 ;;		Unchanged: 0/0
  2800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2801 ;;      Params:         0       0       0       0       0       0       0       0       0
  2802 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2803 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2804 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2805 ;;Total ram usage:        4 bytes
  2806 ;; Hardware stack levels used: 1
  2807 ;; Hardware stack levels required when called: 1
  2808 ;; This function calls:
  2809 ;;		Nothing
  2810 ;; This function is called by:
  2811 ;;		_main
  2812 ;; This function uses a non-reentrant model
  2813 ;;
  2814                           
  2815                           	psect	text15
  2816   00151A                     __ptext15:
  2817                           	callstack 0
  2818   00151A                     _init_vars:
  2819                           	callstack 29
  2820   00151A                     
  2821                           ;main.c: 221:     int i;;main.c: 222:     for (i=0;i<5;i++){
  2822   00151A  0E00               	movlw	0
  2823   00151C  6E0A               	movwf	(init_vars@i+1)^0,c
  2824   00151E  0E00               	movlw	0
  2825   001520  6E09               	movwf	init_vars@i^0,c
  2826   001522                     l1694:
  2827                           
  2828                           ;main.c: 223:         counter[i] = 0;
  2829   001522  C009  F007         	movff	init_vars@i,??_init_vars
  2830   001526  C00A  F008         	movff	init_vars@i+1,??_init_vars+1
  2831   00152A  90D8               	bcf	status,0,c
  2832   00152C  3607               	rlcf	??_init_vars^0,f,c
  2833   00152E  3608               	rlcf	(??_init_vars+1)^0,f,c
  2834   001530  90D8               	bcf	status,0,c
  2835   001532  3607               	rlcf	??_init_vars^0,f,c
  2836   001534  3608               	rlcf	(??_init_vars+1)^0,f,c
  2837   001536  90D8               	bcf	status,0,c
  2838   001538  3607               	rlcf	??_init_vars^0,f,c
  2839   00153A  3608               	rlcf	(??_init_vars+1)^0,f,c
  2840   00153C  0E60               	movlw	low _counter
  2841   00153E  2407               	addwf	??_init_vars^0,w,c
  2842   001540  6ED9               	movwf	fsr2l,c
  2843   001542  0E00               	movlw	high _counter
  2844   001544  2008               	addwfc	(??_init_vars+1)^0,w,c
  2845   001546  6EDA               	movwf	fsr2h,c
  2846   001548  0E07               	movlw	7
  2847   00154A                     u1101:
  2848   00154A  6ADE               	clrf	postinc2,c
  2849   00154C  06E8               	decf	wreg,f,c
  2850   00154E  E2FD               	bc	u1101
  2851   001550                     
  2852                           ;main.c: 224:     }
  2853   001550  4A09               	infsnz	init_vars@i^0,f,c
  2854   001552  2A0A               	incf	(init_vars@i+1)^0,f,c
  2855   001554  BE0A               	btfsc	(init_vars@i+1)^0,7,c
  2856   001556  EFB6  F00A         	goto	u1111
  2857   00155A  500A               	movf	(init_vars@i+1)^0,w,c
  2858   00155C  E109               	bnz	u1110
  2859   00155E  0E05               	movlw	5
  2860   001560  5C09               	subwf	init_vars@i^0,w,c
  2861   001562  A0D8               	btfss	status,0,c
  2862   001564  EFB6  F00A         	goto	u1111
  2863   001568  EFB8  F00A         	goto	u1110
  2864   00156C                     u1111:
  2865   00156C  EF91  F00A         	goto	l1694
  2866   001570                     u1110:
  2867   001570  0012               	return		;funcret
  2868   001572                     __end_of_init_vars:
  2869                           	callstack 0
  2870                           
  2871 ;; *************** function _init *****************
  2872 ;; Defined at:
  2873 ;;		line 266 in file "main.c"
  2874 ;; Parameters:    Size  Location     Type
  2875 ;;		None
  2876 ;; Auto vars:     Size  Location     Type
  2877 ;;		None
  2878 ;; Return value:  Size  Location     Type
  2879 ;;                  1    wreg      void 
  2880 ;; Registers used:
  2881 ;;		wreg, status,2
  2882 ;; Tracked objects:
  2883 ;;		On entry : 0/0
  2884 ;;		On exit  : 0/0
  2885 ;;		Unchanged: 0/0
  2886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2887 ;;      Params:         0       0       0       0       0       0       0       0       0
  2888 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2889 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2890 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2891 ;;Total ram usage:        0 bytes
  2892 ;; Hardware stack levels used: 1
  2893 ;; Hardware stack levels required when called: 1
  2894 ;; This function calls:
  2895 ;;		Nothing
  2896 ;; This function is called by:
  2897 ;;		_main
  2898 ;; This function uses a non-reentrant model
  2899 ;;
  2900                           
  2901                           	psect	text16
  2902   0016B4                     __ptext16:
  2903                           	callstack 0
  2904   0016B4                     _init:
  2905                           	callstack 29
  2906   0016B4                     
  2907                           ;main.c: 267:     value = 0;
  2908   0016B4  0E00               	movlw	0
  2909   0016B6  0100               	movlb	0	; () banked
  2910   0016B8  6F9F               	movwf	(_value+1)& (0+255),b
  2911   0016BA  0E00               	movlw	0
  2912   0016BC  6F9E               	movwf	_value& (0+255),b
  2913                           
  2914                           ;main.c: 268:     selected = 0;
  2915   0016BE  0E00               	movlw	0
  2916   0016C0  6F9D               	movwf	(_selected+1)& (0+255),b
  2917   0016C2  0E00               	movlw	0
  2918   0016C4  6F9C               	movwf	_selected& (0+255),b
  2919                           
  2920                           ;main.c: 269:     flag_b1 = 0;
  2921   0016C6  0E00               	movlw	0
  2922   0016C8  6FA0               	movwf	_flag_b1& (0+255),b
  2923                           
  2924                           ;main.c: 270:     flag_b2 = 0;
  2925   0016CA  0E00               	movlw	0
  2926   0016CC  6E57               	movwf	_flag_b2^0,c
  2927   0016CE                     
  2928                           ; BSR set to: 0
  2929   0016CE  0012               	return		;funcret
  2930   0016D0                     __end_of_init:
  2931                           	callstack 0
  2932                           
  2933 ;; *************** function _config_micro *****************
  2934 ;; Defined at:
  2935 ;;		line 61 in file "main.c"
  2936 ;; Parameters:    Size  Location     Type
  2937 ;;		None
  2938 ;; Auto vars:     Size  Location     Type
  2939 ;;		None
  2940 ;; Return value:  Size  Location     Type
  2941 ;;                  1    wreg      void 
  2942 ;; Registers used:
  2943 ;;		wreg, status,2
  2944 ;; Tracked objects:
  2945 ;;		On entry : 0/0
  2946 ;;		On exit  : 0/0
  2947 ;;		Unchanged: 0/0
  2948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2949 ;;      Params:         0       0       0       0       0       0       0       0       0
  2950 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2951 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2952 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2953 ;;Total ram usage:        0 bytes
  2954 ;; Hardware stack levels used: 1
  2955 ;; Hardware stack levels required when called: 1
  2956 ;; This function calls:
  2957 ;;		Nothing
  2958 ;; This function is called by:
  2959 ;;		_main
  2960 ;; This function uses a non-reentrant model
  2961 ;;
  2962                           
  2963                           	psect	text17
  2964   00115C                     __ptext17:
  2965                           	callstack 0
  2966   00115C                     _config_micro:
  2967                           	callstack 29
  2968   00115C                     
  2969                           ;main.c: 63:     OSCCONbits.IRCF = 7;
  2970   00115C  0E70               	movlw	112
  2971   00115E  12D3               	iorwf	211,f,c	;volatile
  2972                           
  2973                           ;main.c: 66:     CMCON=0x07;
  2974   001160  0E07               	movlw	7
  2975   001162  6EB4               	movwf	180,c	;volatile
  2976   001164                     
  2977                           ;main.c: 69:     UCONbits.USBEN = 0;
  2978   001164  966D               	bcf	109,3,c	;volatile
  2979   001166                     
  2980                           ;main.c: 70:     UCFGbits.UTRDIS = 1;
  2981   001166  866F               	bsf	111,3,c	;volatile
  2982   001168                     
  2983                           ;main.c: 73:     T0CONbits.TMR0ON = 0;
  2984   001168  9ED5               	bcf	213,7,c	;volatile
  2985   00116A                     
  2986                           ;main.c: 74:     T0CONbits.T08BIT = 0;
  2987   00116A  9CD5               	bcf	213,6,c	;volatile
  2988   00116C                     
  2989                           ;main.c: 75:     T0CONbits.T0CS = 0;
  2990   00116C  9AD5               	bcf	213,5,c	;volatile
  2991   00116E                     
  2992                           ;main.c: 76:     T0CONbits.PSA = 0;
  2993   00116E  96D5               	bcf	213,3,c	;volatile
  2994                           
  2995                           ;main.c: 77:     T0CONbits.T0PS = 0b101;
  2996   001170  50D5               	movf	213,w,c	;volatile
  2997   001172  0BF8               	andlw	-8
  2998   001174  0905               	iorlw	5
  2999   001176  6ED5               	movwf	213,c	;volatile
  3000   001178                     
  3001                           ;main.c: 80:     INTCON2bits.TMR0IP = 1;
  3002   001178  84F1               	bsf	241,2,c	;volatile
  3003   00117A                     
  3004                           ;main.c: 81:     INTCONbits.TMR0IE = 1;
  3005   00117A  8AF2               	bsf	242,5,c	;volatile
  3006   00117C                     
  3007                           ;main.c: 82:     RCONbits.IPEN = 0;
  3008   00117C  9ED0               	bcf	208,7,c	;volatile
  3009                           
  3010                           ;main.c: 85:     TMR0H = 0xF8;
  3011   00117E  0EF8               	movlw	248
  3012   001180  6ED7               	movwf	215,c	;volatile
  3013                           
  3014                           ;main.c: 86:     TMR0L = 0xAC;
  3015   001182  0EAC               	movlw	172
  3016   001184  6ED6               	movwf	214,c	;volatile
  3017   001186                     
  3018                           ;main.c: 91:     T1CONbits.TMR1ON = 0;
  3019   001186  90CD               	bcf	205,0,c	;volatile
  3020   001188                     
  3021                           ;main.c: 92:     T1CONbits.T1RD16 = 0;
  3022   001188  9ECD               	bcf	205,7,c	;volatile
  3023   00118A                     
  3024                           ;main.c: 93:     T1CONbits.T1RUN = 0;
  3025   00118A  9CCD               	bcf	205,6,c	;volatile
  3026                           
  3027                           ;main.c: 94:     T1CONbits.T1CKPS = 0;
  3028   00118C  0ECF               	movlw	-49
  3029   00118E  16CD               	andwf	205,f,c	;volatile
  3030   001190                     
  3031                           ;main.c: 95:     T1CONbits.T1OSCEN = 0;
  3032   001190  96CD               	bcf	205,3,c	;volatile
  3033   001192                     
  3034                           ;main.c: 96:     T1CONbits.TMR1CS = 0;
  3035   001192  92CD               	bcf	205,1,c	;volatile
  3036   001194                     
  3037                           ;main.c: 99:     INTCONbits.GIE = 1;
  3038   001194  8EF2               	bsf	242,7,c	;volatile
  3039   001196                     
  3040                           ;main.c: 100:     T0CONbits.TMR0ON = 1;
  3041   001196  8ED5               	bsf	213,7,c	;volatile
  3042   001198                     
  3043                           ;main.c: 101:     T1CONbits.TMR1ON = 1;
  3044   001198  80CD               	bsf	205,0,c	;volatile
  3045                           
  3046                           ;main.c: 103:     TMR1H = 0xF8;
  3047   00119A  0EF8               	movlw	248
  3048   00119C  6ECF               	movwf	207,c	;volatile
  3049                           
  3050                           ;main.c: 104:     TMR1L = 0x2F;
  3051   00119E  0E2F               	movlw	47
  3052   0011A0  6ECE               	movwf	206,c	;volatile
  3053   0011A2                     
  3054                           ;main.c: 107:     T2OUTPS0 = 0;
  3055   0011A2  96CA               	bcf	4042,3,c	;volatile
  3056   0011A4                     
  3057                           ;main.c: 108:     T2OUTPS1 = 0;
  3058   0011A4  98CA               	bcf	4042,4,c	;volatile
  3059   0011A6                     
  3060                           ;main.c: 109:     T2OUTPS2 = 0;
  3061   0011A6  9ACA               	bcf	4042,5,c	;volatile
  3062   0011A8                     
  3063                           ;main.c: 110:     T2OUTPS3 = 0;
  3064   0011A8  9CCA               	bcf	4042,6,c	;volatile
  3065   0011AA                     
  3066                           ;main.c: 112:     TMR2ON = 1;
  3067   0011AA  84CA               	bsf	4042,2,c	;volatile
  3068   0011AC                     
  3069                           ;main.c: 113:     T2CKPS0 = 0;
  3070   0011AC  90CA               	bcf	4042,0,c	;volatile
  3071   0011AE                     
  3072                           ;main.c: 114:     T2CKPS1 = 0;
  3073   0011AE  92CA               	bcf	4042,1,c	;volatile
  3074                           
  3075                           ;main.c: 116:     T2CONbits.TOUTPS=11;
  3076   0011B0  50CA               	movf	202,w,c	;volatile
  3077   0011B2  0B87               	andlw	-121
  3078   0011B4  0958               	iorlw	88
  3079   0011B6  6ECA               	movwf	202,c	;volatile
  3080                           
  3081                           ;main.c: 117:     T2CONbits.T2CKPS=1;
  3082   0011B8  50CA               	movf	202,w,c	;volatile
  3083   0011BA  0BFC               	andlw	-4
  3084   0011BC  0901               	iorlw	1
  3085   0011BE  6ECA               	movwf	202,c	;volatile
  3086   0011C0                     
  3087                           ;main.c: 118:     T2CONbits.TMR2ON=0;
  3088   0011C0  94CA               	bcf	202,2,c	;volatile
  3089                           
  3090                           ;main.c: 120:     PR2=249;
  3091   0011C2  0EF9               	movlw	249
  3092   0011C4  6ECB               	movwf	203,c	;volatile
  3093   0011C6                     
  3094                           ;main.c: 121:     T2CONbits.TMR2ON=1;
  3095   0011C6  84CA               	bsf	202,2,c	;volatile
  3096                           
  3097                           ;main.c: 123:     CCP1CONbits.CCP1M = 0b1100;
  3098   0011C8  50BD               	movf	189,w,c	;volatile
  3099   0011CA  0BF0               	andlw	-16
  3100   0011CC  090C               	iorlw	12
  3101   0011CE  6EBD               	movwf	189,c	;volatile
  3102                           
  3103                           ;main.c: 124:     CCP2CONbits.CCP2M = 0b1100;
  3104   0011D0  50BA               	movf	186,w,c	;volatile
  3105   0011D2  0BF0               	andlw	-16
  3106   0011D4  090C               	iorlw	12
  3107   0011D6  6EBA               	movwf	186,c	;volatile
  3108                           
  3109                           ;main.c: 127:     ADCON0bits.CHS=0;
  3110   0011D8  0EC3               	movlw	-61
  3111   0011DA  16C2               	andwf	194,f,c	;volatile
  3112   0011DC                     
  3113                           ;main.c: 128:     ADCON0bits.GODONE=0;
  3114   0011DC  92C2               	bcf	194,1,c	;volatile
  3115   0011DE                     
  3116                           ;main.c: 129:     ADCON0bits.ADON=1;
  3117   0011DE  80C2               	bsf	194,0,c	;volatile
  3118                           
  3119                           ;main.c: 131:     ADCON1bits.VCFG = 0;
  3120   0011E0  0ECF               	movlw	-49
  3121   0011E2  16C1               	andwf	193,f,c	;volatile
  3122                           
  3123                           ;main.c: 132:     ADCON1bits.PCFG = 0b1001;
  3124   0011E4  50C1               	movf	193,w,c	;volatile
  3125   0011E6  0BF0               	andlw	-16
  3126   0011E8  0909               	iorlw	9
  3127   0011EA  6EC1               	movwf	193,c	;volatile
  3128   0011EC                     
  3129                           ;main.c: 134:     ADCON2bits.ADFM=0;
  3130   0011EC  9EC0               	bcf	192,7,c	;volatile
  3131                           
  3132                           ;main.c: 135:     ADCON2bits.ACQT=7;
  3133   0011EE  0E38               	movlw	56
  3134   0011F0  12C0               	iorwf	192,f,c	;volatile
  3135                           
  3136                           ;main.c: 136:     ADCON2bits.ADCS=6;
  3137   0011F2  50C0               	movf	192,w,c	;volatile
  3138   0011F4  0BF8               	andlw	-8
  3139   0011F6  0906               	iorlw	6
  3140   0011F8  6EC0               	movwf	192,c	;volatile
  3141   0011FA                     
  3142                           ;main.c: 141:     TRISCbits.RC6 = 1;
  3143   0011FA  8C94               	bsf	148,6,c	;volatile
  3144   0011FC                     
  3145                           ;main.c: 142:     TRISCbits.RC7 = 1;
  3146   0011FC  8E94               	bsf	148,7,c	;volatile
  3147   0011FE                     
  3148                           ;main.c: 144:     BAUDCONbits.RXDTP=0;
  3149   0011FE  9AB8               	bcf	184,5,c	;volatile
  3150   001200                     
  3151                           ;main.c: 145:     BAUDCONbits.TXCKP=0;
  3152   001200  98B8               	bcf	184,4,c	;volatile
  3153   001202                     
  3154                           ;main.c: 146:     BAUDCONbits.BRG16=1;
  3155   001202  86B8               	bsf	184,3,c	;volatile
  3156   001204                     
  3157                           ;main.c: 148:     BAUDCONbits.WUE=0;
  3158   001204  92B8               	bcf	184,1,c	;volatile
  3159   001206                     
  3160                           ;main.c: 149:     BAUDCONbits.ABDEN=0;
  3161   001206  90B8               	bcf	184,0,c	;volatile
  3162                           
  3163                           ;main.c: 150:     SPBRG=51;
  3164   001208  0E33               	movlw	51
  3165   00120A  6EAF               	movwf	175,c	;volatile
  3166                           
  3167                           ;main.c: 151:     SPBRGH=0;
  3168   00120C  0E00               	movlw	0
  3169   00120E  6EB0               	movwf	176,c	;volatile
  3170   001210                     
  3171                           ;main.c: 152:     TXSTAbits.CSRC=0;
  3172   001210  9EAC               	bcf	172,7,c	;volatile
  3173   001212                     
  3174                           ;main.c: 153:     TXSTAbits.TX9=0;
  3175   001212  9CAC               	bcf	172,6,c	;volatile
  3176   001214                     
  3177                           ;main.c: 154:     TXSTAbits.TXEN=1;
  3178   001214  8AAC               	bsf	172,5,c	;volatile
  3179   001216                     
  3180                           ;main.c: 155:     TXSTAbits.SYNC=0;
  3181   001216  98AC               	bcf	172,4,c	;volatile
  3182   001218                     
  3183                           ;main.c: 157:     TXSTAbits.BRGH=0;
  3184   001218  94AC               	bcf	172,2,c	;volatile
  3185   00121A                     
  3186                           ;main.c: 158:     RCSTAbits.RX9=0;
  3187   00121A  9CAB               	bcf	171,6,c	;volatile
  3188   00121C                     
  3189                           ;main.c: 159:     RCSTAbits.CREN=1;
  3190   00121C  88AB               	bsf	171,4,c	;volatile
  3191   00121E                     
  3192                           ;main.c: 160:     RCSTAbits.SPEN=1;
  3193   00121E  8EAB               	bsf	171,7,c	;volatile
  3194   001220                     
  3195                           ;main.c: 166:     TRISBbits.RB0 = 0;
  3196   001220  9093               	bcf	147,0,c	;volatile
  3197   001222                     
  3198                           ;main.c: 167:     TRISBbits.RB1 = 0;
  3199   001222  9293               	bcf	147,1,c	;volatile
  3200   001224                     
  3201                           ;main.c: 168:     TRISBbits.RB2 = 0;
  3202   001224  9493               	bcf	147,2,c	;volatile
  3203   001226                     
  3204                           ;main.c: 169:     TRISBbits.RB4 = 0;
  3205   001226  9893               	bcf	147,4,c	;volatile
  3206   001228                     
  3207                           ;main.c: 170:     TRISBbits.RB5 = 0;
  3208   001228  9A93               	bcf	147,5,c	;volatile
  3209   00122A                     
  3210                           ;main.c: 173:     TRISDbits.RD2 = 1;
  3211   00122A  8495               	bsf	149,2,c	;volatile
  3212   00122C                     
  3213                           ;main.c: 174:     TRISDbits.RD3 = 1;
  3214   00122C  8695               	bsf	149,3,c	;volatile
  3215   00122E                     
  3216                           ;main.c: 177:     TRISAbits.RA0 = 1;
  3217   00122E  8092               	bsf	146,0,c	;volatile
  3218   001230                     
  3219                           ;main.c: 178:     TRISAbits.RA1 = 1;
  3220   001230  8292               	bsf	146,1,c	;volatile
  3221   001232                     
  3222                           ;main.c: 179:     TRISAbits.RA2 = 1;
  3223   001232  8492               	bsf	146,2,c	;volatile
  3224   001234                     
  3225                           ;main.c: 180:     TRISAbits.RA3 = 1;
  3226   001234  8692               	bsf	146,3,c	;volatile
  3227   001236                     
  3228                           ;main.c: 181:     TRISAbits.RA4 = 1;
  3229   001236  8892               	bsf	146,4,c	;volatile
  3230   001238                     
  3231                           ;main.c: 182:     TRISEbits.RE0 = 1;
  3232   001238  8096               	bsf	150,0,c	;volatile
  3233   00123A  0012               	return		;funcret
  3234   00123C                     __end_of_config_micro:
  3235                           	callstack 0
  3236                           
  3237 ;; *************** function _enc *****************
  3238 ;; Defined at:
  3239 ;;		line 206 in file "main.c"
  3240 ;; Parameters:    Size  Location     Type
  3241 ;;		None
  3242 ;; Auto vars:     Size  Location     Type
  3243 ;;  i               2    4[COMRAM] int 
  3244 ;; Return value:  Size  Location     Type
  3245 ;;                  1    wreg      void 
  3246 ;; Registers used:
  3247 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3248 ;; Tracked objects:
  3249 ;;		On entry : 0/0
  3250 ;;		On exit  : 0/0
  3251 ;;		Unchanged: 0/0
  3252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3253 ;;      Params:         0       0       0       0       0       0       0       0       0
  3254 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3255 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3256 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3257 ;;Total ram usage:        6 bytes
  3258 ;; Hardware stack levels used: 1
  3259 ;; This function calls:
  3260 ;;		Nothing
  3261 ;; This function is called by:
  3262 ;;		Interrupt level 2
  3263 ;; This function uses a non-reentrant model
  3264 ;;
  3265                           
  3266                           	psect	intcode
  3267   000008                     __pintcode:
  3268                           	callstack 0
  3269   000008                     _enc:
  3270                           	callstack 21
  3271                           
  3272                           ;incstack = 0
  3273   000008  8258               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3274   00000A  EDCB  F009         	call	int_func,f	;refresh shadow registers
  3275                           
  3276                           	psect	intcode_body
  3277   001396                     __pintcode_body:
  3278                           	callstack 21
  3279   001396                     int_func:
  3280                           	callstack 21
  3281   001396  0006               	pop		; remove dummy address from shadow register refresh
  3282   001398  CFD9 F003          	movff	fsr2l,??_enc+2
  3283   00139C  CFDA F004          	movff	fsr2h,??_enc+3
  3284   0013A0                     
  3285                           ;main.c: 207:     if (TMR0IF){
  3286   0013A0  A4F2               	btfss	4082,2,c	;volatile
  3287   0013A2  EFD5  F009         	goto	i2u129_41
  3288   0013A6  EFD7  F009         	goto	i2u129_40
  3289   0013AA                     i2u129_41:
  3290   0013AA  EF0C  F00A         	goto	i2l119
  3291   0013AE                     i2u129_40:
  3292   0013AE                     
  3293                           ;main.c: 209:         TMR0H = 0xF8;
  3294   0013AE  0EF8               	movlw	248
  3295   0013B0  6ED7               	movwf	215,c	;volatile
  3296                           
  3297                           ;main.c: 210:         TMR0L = 0xAC;
  3298   0013B2  0EAC               	movlw	172
  3299   0013B4  6ED6               	movwf	214,c	;volatile
  3300   0013B6                     
  3301                           ;main.c: 211:         TMR0IF = 0;
  3302   0013B6  94F2               	bcf	4082,2,c	;volatile
  3303                           
  3304                           ;main.c: 213:         int i;;main.c: 214:         for (i=0;i<5;i++){
  3305   0013B8  0E00               	movlw	0
  3306   0013BA  6E06               	movwf	(enc@i+1)^0,c
  3307   0013BC  0E00               	movlw	0
  3308   0013BE  6E05               	movwf	enc@i^0,c
  3309   0013C0                     i2l1752:
  3310                           
  3311                           ;main.c: 215:             counter[i] ++;
  3312   0013C0  C005  F001         	movff	enc@i,??_enc
  3313   0013C4  C006  F002         	movff	enc@i+1,??_enc+1
  3314   0013C8  90D8               	bcf	status,0,c
  3315   0013CA  3601               	rlcf	??_enc^0,f,c
  3316   0013CC  3602               	rlcf	(??_enc+1)^0,f,c
  3317   0013CE  90D8               	bcf	status,0,c
  3318   0013D0  3601               	rlcf	??_enc^0,f,c
  3319   0013D2  3602               	rlcf	(??_enc+1)^0,f,c
  3320   0013D4  90D8               	bcf	status,0,c
  3321   0013D6  3601               	rlcf	??_enc^0,f,c
  3322   0013D8  3602               	rlcf	(??_enc+1)^0,f,c
  3323   0013DA  0E60               	movlw	low _counter
  3324   0013DC  2401               	addwf	??_enc^0,w,c
  3325   0013DE  6ED9               	movwf	fsr2l,c
  3326   0013E0  0E00               	movlw	high _counter
  3327   0013E2  2002               	addwfc	(??_enc+1)^0,w,c
  3328   0013E4  6EDA               	movwf	fsr2h,c
  3329   0013E6  2ADE               	incf	postinc2,f,c
  3330   0013E8  0E00               	movlw	0
  3331   0013EA  22DE               	addwfc	postinc2,f,c
  3332   0013EC  22DE               	addwfc	postinc2,f,c
  3333   0013EE  22DE               	addwfc	postinc2,f,c
  3334   0013F0  22DE               	addwfc	postinc2,f,c
  3335   0013F2  22DE               	addwfc	postinc2,f,c
  3336   0013F4  22DE               	addwfc	postinc2,f,c
  3337   0013F6  22DE               	addwfc	postinc2,f,c
  3338   0013F8                     
  3339                           ;main.c: 216:         }
  3340   0013F8  4A05               	infsnz	enc@i^0,f,c
  3341   0013FA  2A06               	incf	(enc@i+1)^0,f,c
  3342   0013FC  BE06               	btfsc	(enc@i+1)^0,7,c
  3343   0013FE  EF0A  F00A         	goto	i2u130_41
  3344   001402  5006               	movf	(enc@i+1)^0,w,c
  3345   001404  E109               	bnz	i2u130_40
  3346   001406  0E05               	movlw	5
  3347   001408  5C05               	subwf	enc@i^0,w,c
  3348   00140A  A0D8               	btfss	status,0,c
  3349   00140C  EF0A  F00A         	goto	i2u130_41
  3350   001410  EF0C  F00A         	goto	i2u130_40
  3351   001414                     i2u130_41:
  3352   001414  EFE0  F009         	goto	i2l1752
  3353   001418                     i2u130_40:
  3354   001418                     i2l119:
  3355   001418  C004  FFDA         	movff	??_enc+3,fsr2h
  3356   00141C  C003  FFD9         	movff	??_enc+2,fsr2l
  3357   001420  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3358   001422  0011               	retfie		f
  3359   001424                     __end_of_enc:
  3360                           	callstack 0
  3361                           
  3362                           	psect	rparam
  3363   000000                     
  3364                           	psect	temp
  3365   000058                     btemp:
  3366                           	callstack 0
  3367   000058                     	ds	1
  3368   000000                     int$flags	set	btemp
  3369   000000                     wtemp8	set	btemp+1
  3370   000000                     ttemp5	set	btemp+1
  3371   000000                     ttemp6	set	btemp+4
  3372   000000                     ttemp7	set	btemp+8
  3373                           
  3374                           	psect	idloc
  3375                           
  3376                           ;Config register IDLOC0 @ 0x200000
  3377                           ;	unspecified, using default values
  3378   200000                     	org	2097152
  3379   200000  FF                 	db	255
  3380                           
  3381                           ;Config register IDLOC1 @ 0x200001
  3382                           ;	unspecified, using default values
  3383   200001                     	org	2097153
  3384   200001  FF                 	db	255
  3385                           
  3386                           ;Config register IDLOC2 @ 0x200002
  3387                           ;	unspecified, using default values
  3388   200002                     	org	2097154
  3389   200002  FF                 	db	255
  3390                           
  3391                           ;Config register IDLOC3 @ 0x200003
  3392                           ;	unspecified, using default values
  3393   200003                     	org	2097155
  3394   200003  FF                 	db	255
  3395                           
  3396                           ;Config register IDLOC4 @ 0x200004
  3397                           ;	unspecified, using default values
  3398   200004                     	org	2097156
  3399   200004  FF                 	db	255
  3400                           
  3401                           ;Config register IDLOC5 @ 0x200005
  3402                           ;	unspecified, using default values
  3403   200005                     	org	2097157
  3404   200005  FF                 	db	255
  3405                           
  3406                           ;Config register IDLOC6 @ 0x200006
  3407                           ;	unspecified, using default values
  3408   200006                     	org	2097158
  3409   200006  FF                 	db	255
  3410                           
  3411                           ;Config register IDLOC7 @ 0x200007
  3412                           ;	unspecified, using default values
  3413   200007                     	org	2097159
  3414   200007  FF                 	db	255
  3415                           
  3416                           	psect	config
  3417                           
  3418                           ;Config register CONFIG1L @ 0x300000
  3419                           ;	PLL Prescaler Selection bits
  3420                           ;	PLLDIV = 5, Divide by 5 (20 MHz oscillator input)
  3421                           ;	System Clock Postscaler Selection bits
  3422                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  3423                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3424                           ;	USBDIV = 2, USB clock source comes from the 96 MHz PLL divided by 2
  3425   300000                     	org	3145728
  3426   300000  24                 	db	36
  3427                           
  3428                           ;Config register CONFIG1H @ 0x300001
  3429                           ;	Oscillator Selection bits
  3430                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
  3431                           ;	Fail-Safe Clock Monitor Enable bit
  3432                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3433                           ;	Internal/External Oscillator Switchover bit
  3434                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3435   300001                     	org	3145729
  3436   300001  0E                 	db	14
  3437                           
  3438                           ;Config register CONFIG2L @ 0x300002
  3439                           ;	Power-up Timer Enable bit
  3440                           ;	PWRT = OFF, PWRT disabled
  3441                           ;	Brown-out Reset Enable bits
  3442                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  3443                           ;	Brown-out Reset Voltage bits
  3444                           ;	BORV = 3, Minimum setting 2.05V
  3445                           ;	USB Voltage Regulator Enable bit
  3446                           ;	VREGEN = OFF, USB voltage regulator disabled
  3447   300002                     	org	3145730
  3448   300002  19                 	db	25
  3449                           
  3450                           ;Config register CONFIG2H @ 0x300003
  3451                           ;	Watchdog Timer Enable bit
  3452                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3453                           ;	Watchdog Timer Postscale Select bits
  3454                           ;	WDTPS = 32768, 1:32768
  3455   300003                     	org	3145731
  3456   300003  1E                 	db	30
  3457                           
  3458                           ; Padding undefined space
  3459   300004                     	org	3145732
  3460   300004  FF                 	db	255
  3461                           
  3462                           ;Config register CONFIG3H @ 0x300005
  3463                           ;	CCP2 MUX bit
  3464                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  3465                           ;	PORTB A/D Enable bit
  3466                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3467                           ;	Low-Power Timer 1 Oscillator Enable bit
  3468                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3469                           ;	MCLR Pin Enable bit
  3470                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  3471   300005                     	org	3145733
  3472   300005  01                 	db	1
  3473                           
  3474                           ;Config register CONFIG4L @ 0x300006
  3475                           ;	Stack Full/Underflow Reset Enable bit
  3476                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3477                           ;	Single-Supply ICSP Enable bit
  3478                           ;	LVP = OFF, Single-Supply ICSP disabled
  3479                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  3480                           ;	ICPRT = OFF, ICPORT disabled
  3481                           ;	Extended Instruction Set Enable bit
  3482                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3483                           ;	Background Debugger Enable bit
  3484                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  3485   300006                     	org	3145734
  3486   300006  81                 	db	129
  3487                           
  3488                           ; Padding undefined space
  3489   300007                     	org	3145735
  3490   300007  FF                 	db	255
  3491                           
  3492                           ;Config register CONFIG5L @ 0x300008
  3493                           ;	Code Protection bit
  3494                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  3495                           ;	Code Protection bit
  3496                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  3497                           ;	Code Protection bit
  3498                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  3499                           ;	Code Protection bit
  3500                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  3501   300008                     	org	3145736
  3502   300008  0F                 	db	15
  3503                           
  3504                           ;Config register CONFIG5H @ 0x300009
  3505                           ;	Boot Block Code Protection bit
  3506                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  3507                           ;	Data EEPROM Code Protection bit
  3508                           ;	CPD = OFF, Data EEPROM is not code-protected
  3509   300009                     	org	3145737
  3510   300009  C0                 	db	192
  3511                           
  3512                           ;Config register CONFIG6L @ 0x30000A
  3513                           ;	Write Protection bit
  3514                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  3515                           ;	Write Protection bit
  3516                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  3517                           ;	Write Protection bit
  3518                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  3519                           ;	Write Protection bit
  3520                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  3521   30000A                     	org	3145738
  3522   30000A  0F                 	db	15
  3523                           
  3524                           ;Config register CONFIG6H @ 0x30000B
  3525                           ;	Configuration Register Write Protection bit
  3526                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  3527                           ;	Boot Block Write Protection bit
  3528                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  3529                           ;	Data EEPROM Write Protection bit
  3530                           ;	WRTD = OFF, Data EEPROM is not write-protected
  3531   30000B                     	org	3145739
  3532   30000B  E0                 	db	224
  3533                           
  3534                           ;Config register CONFIG7L @ 0x30000C
  3535                           ;	Table Read Protection bit
  3536                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3537                           ;	Table Read Protection bit
  3538                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3539                           ;	Table Read Protection bit
  3540                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3541                           ;	Table Read Protection bit
  3542                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3543   30000C                     	org	3145740
  3544   30000C  0F                 	db	15
  3545                           
  3546                           ;Config register CONFIG7H @ 0x30000D
  3547                           ;	Boot Block Table Read Protection bit
  3548                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  3549   30000D                     	org	3145741
  3550   30000D  40                 	db	64
  3551                           tosu	equ	0xFFF
  3552                           tosh	equ	0xFFE
  3553                           tosl	equ	0xFFD
  3554                           stkptr	equ	0xFFC
  3555                           pclatu	equ	0xFFB
  3556                           pclath	equ	0xFFA
  3557                           pcl	equ	0xFF9
  3558                           tblptru	equ	0xFF8
  3559                           tblptrh	equ	0xFF7
  3560                           tblptrl	equ	0xFF6
  3561                           tablat	equ	0xFF5
  3562                           prodh	equ	0xFF4
  3563                           prodl	equ	0xFF3
  3564                           indf0	equ	0xFEF
  3565                           postinc0	equ	0xFEE
  3566                           postdec0	equ	0xFED
  3567                           preinc0	equ	0xFEC
  3568                           plusw0	equ	0xFEB
  3569                           fsr0h	equ	0xFEA
  3570                           fsr0l	equ	0xFE9
  3571                           wreg	equ	0xFE8
  3572                           indf1	equ	0xFE7
  3573                           postinc1	equ	0xFE6
  3574                           postdec1	equ	0xFE5
  3575                           preinc1	equ	0xFE4
  3576                           plusw1	equ	0xFE3
  3577                           fsr1h	equ	0xFE2
  3578                           fsr1l	equ	0xFE1
  3579                           bsr	equ	0xFE0
  3580                           indf2	equ	0xFDF
  3581                           postinc2	equ	0xFDE
  3582                           postdec2	equ	0xFDD
  3583                           preinc2	equ	0xFDC
  3584                           plusw2	equ	0xFDB
  3585                           fsr2h	equ	0xFDA
  3586                           fsr2l	equ	0xFD9
  3587                           status	equ	0xFD8

Data Sizes:
    Strings     68
    Constant    0
    Data        0
    BSS         103
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     81      87
    BANK0           160     25     122
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1648$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S1648$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_3(CODE[21]), STR_2(CODE[25]), STR_1(CODE[22]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 25
		 -> STR_3(CODE[21]), STR_2(CODE[25]), STR_1(CODE[22]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 25
		 -> STR_3(CODE[21]), STR_2(CODE[25]), STR_1(CODE[22]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1688$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_3(CODE[21]), STR_2(CODE[25]), STR_1(CODE[22]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 


Critical Paths under _main in COMRAM

    _read_analog->___awdiv
    _loop->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___aomod

Critical Paths under _enc in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_loop
    _loop->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _enc in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _enc in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _enc in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _enc in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _enc in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _enc in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _enc in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _enc in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    7651
                       _config_micro
                               _init
                          _init_vars
                               _loop
                        _read_analog
 ---------------------------------------------------------------------------------
 (1) _read_analog                                          4     4      0     588
                                             14 COMRAM     4     4      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              6 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _loop                                                 3     3      0    6995
                                             22 BANK0      3     3      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              10     4      6    6995
                                             79 COMRAM     2     2      0
                                             16 BANK0      6     0      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6644
                                             77 COMRAM     2     2      0
                                             10 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           23    17      6    6183
                                             69 COMRAM     8     2      6
                                              0 BANK0     10    10      0
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                35    25     10    4678
                                             34 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2409
                                             23 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1115
                                             16 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     795
                                              7 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      31
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             24 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              6 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              6 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _init_vars                                            4     4      0      68
                                              6 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_micro                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _enc                                                 6     6      0      68
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config_micro
   _init
   _init_vars
   _loop
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
   _read_analog
     ___awdiv

 _enc (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      40        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      7A       5       76.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     51      57       1       92.6%
BITBIGSFRhhlh       19      0       0      21        0.0%
BITBIGSFRllhhll     11      0       0      36        0.0%
BITBIGSFRllhhlh      E      0       0      34        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRlll         D      0       0      38        0.0%
BITBIGSFRllhhhl      C      0       0      32        0.0%
BITBIGSFRllhhhl      7      0       0      33        0.0%
BITBIGSFRlhlllh      5      0       0      25        0.0%
BITBIGSFRllhhhh      3      0       0      30        0.0%
BITBIGSFRlhllll      3      0       0      29        0.0%
BITBIGSFRlhllll      2      0       0      27        0.0%
BITBIGSFRlhlllh      2      0       0      26        0.0%
BITBIGSFRlhh         2      0       0      23        0.0%
BITBIGSFRllhhlh      1      0       0      35        0.0%
BITBIGSFRllhhhl      1      0       0      31        0.0%
BITBIGSFRlhllll      1      0       0      28        0.0%
BITBIGSFRlhllh       1      0       0      24        0.0%
BITBIGSFRllhl        1      0       0      37        0.0%
BITBIGSFRhl          1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D1      39        0.0%
DATA                 0      0      D1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Jun 21 20:03:46 2025

                     l97 123A             ___awdiv@sign 000C                      l102 143C  
                    l111 16E4                      l105 149E                      l124 1570  
                    l108 16D2                      l140 0D0E                      l135 16CE  
                    l144 0D20                      l282 100C                      l269 0EA8  
                    l386 12FE                      l910 1394                      l833 1696  
                    l918 1604                      l855 14C2                      l864 08D0  
                    l866 08D8                      l859 1518                      l867 091E  
                    l891 15C0                      l885 115A                      l878 0AC0  
                    l895 163C                      l898 1644                      _PR2 000FCB  
                    _abs 1606                      _enc 0008                      _pad 14A0  
                    prod 000FF3                      wreg 000FE8                     l1200 1178  
                   l2000 0B20                     l1210 118A                     l1202 117A  
                   l2010 0C58                     l2002 0B4E                     ?_abs 0019  
                   l1300 1238                     l1220 1198                     l1212 1190  
                   l1204 117C                     l2020 0CCC                     l2012 0C9C  
                   l2004 0B90                     l1230 11AA                     l1222 11A2  
                   l1214 1192                     l1206 1186                     l2022 0CE8  
                   l2014 0CAA                     l2006 0BD2                     l2030 1698  
                   l1240 11DC                     l1232 11AC                     l1224 11A4  
                   l1216 1194                     l1208 1188                     l2024 0CF0  
                   l2016 0CBA                     l2008 0C16                     l2032 169C  
                   l1250 11FE                     l1242 11DE                     l1234 11AE  
                   l1226 11A6                     l1218 1196                     l2026 0D04  
                   l2018 0CC6                     l2034 16A0                     l1260 1210  
                   l1252 1200                     l1244 11EC                     l1236 11C0  
                   l1228 11A8                     l2028 0D1C                     l2036 16A4  
                   l1270 121A                     l1262 1212                     l1254 1202  
                   l1246 11FA                     l1238 11C6                     l1190 1166  
                   l2038 16A8                     l1280 1224                     l1272 121C  
                   l1264 1214                     l1256 1204                     l1248 11FC  
                   l1192 1168                     l1290 122E                     l1282 1226  
                   l1274 121E                     l1266 1216                     l1258 1206  
                   l1194 116A                     l1186 115C                     l1292 1230  
                   l1284 1228                     l1276 1220                     l1268 1218  
                   l1196 116C                     l1188 1164                     l1700 16B4  
                   l1294 1232                     l1286 122A                     l1278 1222  
                   l1198 116E                     l1630 1256                     l1296 1234  
                   l1288 122C                     l1800 0D54                     l1640 127C  
                   l1632 125A                     l1624 123C                     l1298 1236  
                   l1810 0D96                     l1802 0D58                     l1650 12B2  
                   l1642 128E                     l1634 1268                     l1626 1240  
                   ?_enc 0001                     l1820 0DF0                     l1812 0DB4  
                   l1804 0D66                     l1900 08AA                     l1652 12C8  
                   l1644 1296                     l1660 12DE                     l1636 1270  
                   l1628 124E                     l1822 0E1E                     l1814 0DBC  
                   l1830 0E58                     l1806 0D86                     l1910 0906  
                   l1902 08C4                     l1662 12EE                     l1654 12D0  
                   l1646 129E                     l1638 1274                     l1832 0E68  
                   l1824 0E3E                     l1816 0DD0                     l1808 0D8A  
                   l1840 0EAE                     l1920 0936                     l1912 0912  
                   l1904 08E0                     l1664 12F6                     l1656 12D2  
                   l1648 12AC                     l1680 1456                     l1834 0E88  
                   l1826 0E40                     l1818 0DDE                     l1850 0F0E  
                   l1842 0EBC                     l1770 16E0                     l1930 0A42  
                   l1922 09B8                     l1914 091A                     l1906 08F0  
                   l1658 12D8                     l1682 1474                     l1674 1428  
                   l1828 0E52                     l1860 0F84                     l1852 0F2C  
                   l1844 0EDC                     l1780 134C                     l1772 1300  
                   l1940 0AA0                     l1932 0A60                     l1924 09BE  
                   l1916 0926                     l1908 08F6                     l1684 148C  
                   l1676 143A                     l1668 1424                     l1694 1522  
                   l1870 0FEC                     l1862 0FA4                     l1854 0F34  
                   l1846 0EE0                     l1838 0EAA                     l1782 1382  
                   l1774 1312                     l1790 15E0                     l1934 0A7A  
                   l1926 09C4                     l1918 0930                     l1950 104C  
                   l1686 148E                     l1678 144A                     l1696 1550  
                   l1688 151A                     l1864 0FB6                     l1856 0F48  
                   l1848 0EEE                     l1768 16D2                     l1776 1324  
                   l1792 15E4                     l1880 14CE                     l1936 0A8A  
                   l1928 0A28                     l1960 10F0                     l1952 1050  
                   l1944 100E                     l1698 1554                     l1794 0D22  
                   l1858 0F56                     l1866 0FBC                     l1890 1620  
                   l1778 132E                     l1786 15C2                     l1882 14E2  
                   l1874 14A0                     l1938 0A90                     l1954 1060  
                   l1946 1032                     l1796 0D26                     l1868 0FCC  
                   l1788 15CE                     l1884 14E6                     l1876 14AE  
                   l1892 0846                     l1964 1120                     l1956 107C  
                   l1948 1040                     l1980 15B6                     l1798 0D34  
                   l1886 1504                     l1878 14BA                     l1894 0866  
                   l1958 1098                     l1974 1572                     l1990 0AC2  
                   ?_pad 0018                     l1888 1606                     l1896 087A  
                   l1968 1132                     l1976 157E                     l1984 1670  
                   l1992 0AEC                     l1898 088A                     l1978 159A  
                   l1986 1678                     l1994 0AF8                     l1996 0AFC  
                   l1998 0B18                     STR_1 081A                     STR_2 0801  
                   STR_3 0830                     u1020 124E                     u1101 154A  
                   u1021 124A                     u1110 1570                     u1030 1268  
                   u1111 156C                     u1031 1264                     u1040 128E  
                   u1041 128A                     u1050 12AC                     u1051 12A8  
                   u1060 12C8                     u1061 12C4                     u1310 16E0  
                   u1070 12EE                     u1311 16DC                     u1071 12EA  
                   u1400 0DB4                     u1320 1312                     u1080 144A  
                   u1401 0DB0                     u1321 130E                     u1081 1446  
                   u1410 0DDE                     u1330 1324                     u1090 149E  
                   u1411 0DDA                     u1331 1320                     u1091 149A  
                   u1420 0E1E                     u1340 134C                     u1500 14AE  
                   u1421 0E1A                     u1341 1348                     u1501 14AA  
                   u1430 0E68                     u1350 1382                     u1510 1504  
                   u1431 0E64                     u1351 137E                     u1511 1500  
                   u1440 0EBC                     u1520 1620                     u1360 1604  
                   u1600 0A60                     u1441 0EB8                     u1521 161C  
                   u1361 1600                     u1601 0A5C                     u1370 0D34  
                   u1450 0EEE                     u1610 0A7A                     u1530 0876  
                   u1371 0D30                     u1451 0EEA                     u1611 0A76  
                   u1531 0870                     u1380 0D66                     u1460 0F2C  
                   u1620 0A8A                     u1540 0878                     u1700 0B82  
                   u1381 0D62                     u1461 0F28                     u1621 0A86  
                   u1701 0B7A                     u1470 0F56                     u1550 088A  
                   u1630 1032                     u1391 0D90                     u1471 0F52  
                   u1551 0886                     u1631 102E                     u1480 0F84  
                   u1560 08C4                     u1640 107C                     u1800 0CAA  
                   u1720 0BC2                     u1481 0F80                     u1561 08C0  
                   u1641 1078                     u1801 0CA6                     u1721 0BBA  
                   u1490 0FCC                     u1570 08F0                     u1650 1098  
                   u1810 0CBA                     u1491 0FC8                     u1571 08EC  
                   u1651 1094                     u1811 0CB6                     u1580 0906  
                   u1660 15B6                     u1820 0CE8                     u1740 0C04  
                   u1581 0902                     u1661 15B2                     u1821 0CE4  
                   u1741 0BFC                     u1590 0A42                     u1830 0D1C  
                   u1718 0B86                     u1670 0AEC                     u1591 0A3E  
                   u1831 0D18                     u1671 0AE8                     u1760 0C48  
                   u1761 0C40                     u1681 0AF2                     u1738 0BC6  
                   u1690 0B18                     u1691 0B14                     u1780 0C8A  
                   u1781 0C82                     u1758 0C08                     u1778 0C4C  
                   u1798 0C8E                     _TXIF 007CF4                     abs@a 0019  
                   _dbuf 00A1                     _main 1698                     _dtoa 0846  
                   enc@i 0005                     _init 16B4                     _loop 0AC2  
                   _prec 0054                     pad@i 001F                     pad@p 001C  
                   fsr1h 000FE2                     fsr2h 000FDA                     indf2 000FDF  
                   fsr1l 000FE1                     pad@w 0021                     fsr2l 000FD9  
                   btemp 0058           ??_config_micro 0007                     prodh 000FF4  
                   prodl 000FF3                     start 000E             ___param_bank 000000  
                  ??_abs 001B                    ??_enc 0001                    ??_pad 001E  
        __end_of___aodiv 0EAA                    ?_main 0001                    ?_dtoa 0023  
        __end_of___aomod 100E                    ?_init 0001          __end_of___awdiv 1300  
                  ?_loop 0001                    _CMCON 000FB4          ___awdiv@divisor 0009  
                  i2l119 1418          ___awdiv@counter 000B             vfpfcnvrt@fmt 0048  
                  _TMR0H 000FD7                    _TMR1H 000FCF                    _TMR0L 000FD6  
                  _TMR1L 000FCE                    _SPBRG 000FAF                    _TXREG 000FAD  
           ?_read_analog 0001                    _flags 0056                    _fputc 1300  
                  _fputs 15C2                    _value 009E                    pad@fp 0018  
                  _width 0052                    _putch 16D0                    dtoa@d 0025  
                  dtoa@i 0044                    dtoa@n 003B                    dtoa@p 0037  
                  dtoa@s 0043                    dtoa@w 0039                    tablat 000FF5  
                  plusw2 000FDB                    ttemp5 0059                    ttemp6 005C  
                  ttemp7 0060                    status 000FD8                    wtemp8 0059  
        __initialization 1646             __end_of_main 16B4             __end_of_dtoa 0AC2  
           __end_of_init 16D0             __end_of_loop 0D22                   ??_main 0052  
                 ??_dtoa 002D                   ??_init 0007                   ??_loop 00D7  
          __activetblptr 000001                   ?_fputc 0008                   ?_fputs 0011  
                 _ADRESH 000FC4                   _ADRESL 000FC3         ___awdiv@dividend 0007  
                 ?_putch 0001                   i2l1742 13A0                   i2l1752 13C0  
                 i2l1744 13AE                   i2l1754 13F8                   i2l1746 13B6  
                 i2l1756 13FC                   _TMR0IF 007F92                   _SPBRGH 000FB0  
                 _TMR2ON 007E52             vfprintf@cfmt 004E                ??___aodiv 0017  
              ??___aomod 0017                ??___awdiv 000B                   clear_0 164C  
       ___awdiv@quotient 000D                   isa$std 000001                   _printf 1670  
                 pad@buf 001A                   dtoa@fp 0023                   fputc@c 0008  
                 fputs@c 0015                   fputs@i 0016                   fputs@s 0011  
   __end_of_config_micro 123C             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8         __end_of_vfprintf 15C2  
             __accesstop 0060  __end_of__initialization 165E            ___rparam_used 000001  
         __pcstackCOMRAM 0001            __end_of_fputc 1396            __end_of_fputs 1606  
          __end_of_putch 16E6                  ??_fputc 000C                  ??_fputs 0015  
                ??_putch 0007               __pbssBANK0 0060                  ?_printf 00D1  
                _T2CKPS0 007E50                  _T2CKPS1 007E51                  __Hparam 0000  
                __Lparam 0000                  ___aodiv 0D22                  ___aomod 0EAA  
                ___awdiv 123C                ?_vfprintf 00CB             __psmallconst 0800  
                __pcinit 1646                  __ramtop 0800                  _flag_b1 00A0  
                _flag_b2 0057                  __ptext0 1698                  __ptext1 1424  
                __ptext2 123C                  __ptext3 0AC2                  __ptext4 1670  
                __ptext5 1572                  __ptext6 100E                  __ptext7 0846  
                __ptext8 14A0                  __ptext9 15C2                _T0CONbits 000FD5  
              _T1CONbits 000FCD                  _counter 0060                _T2CONbits 000FCA  
      __end_of_init_vars 1572           __pintcode_body 1396     end_of_initialization 165E  
                fputc@fp 000A                  int_func 1396                  fputs@fp 0013  
           read_analog@i 0012             _config_micro 115C        __end_of_vfpfcnvrt 115C  
              _RCSTAbits 000FAB                  postdec2 000FDD                  postinc0 000FEE  
                postinc1 000FE6                  postinc2 000FDE         vfpfcnvrt@convarg 00C1  
             ??_vfprintf 004E                _PORTBbits 000F81                _PORTDbits 000F83  
              _TRISAbits 000F92                _TRISBbits 000F93                _TRISCbits 000F94  
              _TRISDbits 000F95                _TRISEbits 000F96              _CCP1CONbits 000FBD  
            _CCP2CONbits 000FBA                _TXSTAbits 000FAC              vfpfcnvrt@ap 004A  
            vfpfcnvrt@cp 00C9              vfpfcnvrt@fp 0046              _BAUDCONbits 000FB8  
         __end_of_printf 1698      start_initialization 1646              __end_of_abs 1646  
            __end_of_enc 1424              __end_of_pad 151A              vfprintf@fmt 00CD  
             init_vars@i 0009                 ??_printf 0050            ??_read_analog 000F  
            __pbssCOMRAM 0052            __pcstackBANK0 00C1         ___aodiv@dividend 0007  
              _dtoa$1716 0035                __pintcode 0008                 ?___aodiv 0007  
               ?___aomod 0007                 ?___awdiv 0007         ___aodiv@quotient 0019  
            __smallconst 0800                _init_vars 151A      __end_of_read_analog 14A0  
               _T2OUTPS0 007E53                 _T2OUTPS1 007E54                 _T2OUTPS2 007E55  
               _T2OUTPS3 007E56                 i2u130_40 1418                 i2u130_41 1414  
               i2u129_40 13AE                 i2u129_41 13AA                 _UCFGbits 000F6F  
               _RCONbits 000FD0                 _UCONbits 000F6D                _vfpfcnvrt 100E  
             _ADCON0bits 000FC2               _ADCON1bits 000FC1               _ADCON2bits 000FC0  
             ?_init_vars 0001              _INTCON2bits 000FF1                 __Hrparam 0000  
             vfprintf@ap 00CF                 __Lrparam 0000               vfprintf@fp 00CB  
           __Lsmallconst 0800               ?_vfpfcnvrt 0046          ___aodiv@divisor 000F  
        ___aodiv@counter 0017           read_analog@aux 0010              _read_analog 1424  
               _an_input 0088                 __ptext10 1300                 __ptext11 16D0  
               __ptext12 1606                 __ptext13 0EAA                 __ptext14 0D22  
               __ptext15 151A                 __ptext16 16B4                 __ptext17 115C  
               _selected 009C                 isa$xinst 000000                 int$flags 0058  
               _vfprintf 1572                printf@fmt 00D1         ___aomod@dividend 0007  
              putch@data 0007               _INTCONbits 000FF2              ??_init_vars 0007  
               intlevel2 0000               _OSCCONbits 000FD3                 printf@ap 0050  
        ___aomod@divisor 000F              ??_vfpfcnvrt 004C          ___aomod@counter 0017  
           ___aodiv@sign 0018             ___aomod@sign 0018            ?_config_micro 0001  
