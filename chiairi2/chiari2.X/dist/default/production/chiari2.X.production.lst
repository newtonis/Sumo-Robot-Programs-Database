

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Jul 08 20:37:20 2025

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    57                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    58                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    59   000000                     
    60                           ; Version 2.40
    61                           ; Generated 17/11/2021 GMT
    62                           ; 
    63                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution. Publication is not required when
    77                           ;        this file is used in an embedded application.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F4550 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95   000000                     _EECON2	set	4007
    96   000000                     _EEDATA	set	4008
    97   000000                     _ADRESL	set	4035
    98   000000                     _ADRESH	set	4036
    99   000000                     _TMR1L	set	4046
   100   000000                     _TMR1H	set	4047
   101   000000                     _TMR0L	set	4054
   102   000000                     _TMR0H	set	4055
   103   000000                     _INTCON2bits	set	4081
   104   000000                     _TMR0IF	set	32658
   105   000000                     _UCONbits	set	3949
   106   000000                     _CMCON	set	4020
   107   000000                     _OSCCONbits	set	4051
   108   000000                     _T0CONbits	set	4053
   109   000000                     _BAUDCONbits	set	4024
   110   000000                     _CCP2CONbits	set	4026
   111   000000                     _CCP1CONbits	set	4029
   112   000000                     _T2CONbits	set	4042
   113   000000                     _T1CONbits	set	4045
   114   000000                     _RCONbits	set	4048
   115   000000                     _UCFGbits	set	3951
   116   000000                     _PORTBbits	set	3969
   117   000000                     _PORTCbits	set	3970
   118   000000                     _PORTDbits	set	3971
   119   000000                     _TRISAbits	set	3986
   120   000000                     _TRISBbits	set	3987
   121   000000                     _TRISCbits	set	3988
   122   000000                     _INTCONbits	set	4082
   123   000000                     _PR2	set	4043
   124   000000                     _ADCON2bits	set	4032
   125   000000                     _ADCON1bits	set	4033
   126   000000                     _ADCON0bits	set	4034
   127   000000                     _CCPR1L	set	4030
   128   000000                     _CCPR2L	set	4027
   129   000000                     _EECON1bits	set	4006
   130   000000                     _EEADR	set	4009
   131   000000                     _TRISEbits	set	3990
   132   000000                     _TRISDbits	set	3989
   133   000000                     _RCSTAbits	set	4011
   134   000000                     _TXSTAbits	set	4012
   135   000000                     _SPBRG	set	4015
   136   000000                     _TXIF	set	31988
   137   000000                     _EEIF	set	32012
   138   000000                     _SPBRGH	set	4016
   139   000000                     _TXREG	set	4013
   140                           
   141                           	psect	smallconst
   142   000800                     __psmallconst:
   143                           	callstack 0
   144   000800  00                 	db	0
   145   000801                     STR_2:
   146   000801  41                 	db	65	;'A'
   147   000802  76                 	db	118	;'v'
   148   000803  65                 	db	101	;'e'
   149   000804  72                 	db	114	;'r'
   150   000805  61                 	db	97	;'a'
   151   000806  67                 	db	103	;'g'
   152   000807  65                 	db	101	;'e'
   153   000808  20                 	db	32
   154   000809  61                 	db	97	;'a'
   155   00080A  6D                 	db	109	;'m'
   156   00080B  6F                 	db	111	;'o'
   157   00080C  75                 	db	117	;'u'
   158   00080D  6E                 	db	110	;'n'
   159   00080E  74                 	db	116	;'t'
   160   00080F  20                 	db	32
   161   000810  6F                 	db	111	;'o'
   162   000811  66                 	db	102	;'f'
   163   000812  20                 	db	32
   164   000813  69                 	db	105	;'i'
   165   000814  74                 	db	116	;'t'
   166   000815  65                 	db	101	;'e'
   167   000816  72                 	db	114	;'r'
   168   000817  61                 	db	97	;'a'
   169   000818  74                 	db	116	;'t'
   170   000819  69                 	db	105	;'i'
   171   00081A  6F                 	db	111	;'o'
   172   00081B  6E                 	db	110	;'n'
   173   00081C  73                 	db	115	;'s'
   174   00081D  20                 	db	32
   175   00081E  70                 	db	112	;'p'
   176   00081F  65                 	db	101	;'e'
   177   000820  72                 	db	114	;'r'
   178   000821  20                 	db	32
   179   000822  62                 	db	98	;'b'
   180   000823  75                 	db	117	;'u'
   181   000824  74                 	db	116	;'t'
   182   000825  74                 	db	116	;'t'
   183   000826  6F                 	db	111	;'o'
   184   000827  6E                 	db	110	;'n'
   185   000828  20                 	db	32
   186   000829  73                 	db	115	;'s'
   187   00082A  74                 	db	116	;'t'
   188   00082B  61                 	db	97	;'a'
   189   00082C  74                 	db	116	;'t'
   190   00082D  75                 	db	117	;'u'
   191   00082E  73                 	db	115	;'s'
   192   00082F  20                 	db	32
   193   000830  63                 	db	99	;'c'
   194   000831  68                 	db	104	;'h'
   195   000832  65                 	db	101	;'e'
   196   000833  63                 	db	99	;'c'
   197   000834  6B                 	db	107	;'k'
   198   000835  3A                 	db	58	;':'
   199   000836  20                 	db	32
   200   000837  25                 	db	37
   201   000838  2E                 	db	46
   202   000839  34                 	db	52	;'4'
   203   00083A  66                 	db	102	;'f'
   204   00083B  0A                 	db	10
   205   00083C  00                 	db	0
   206   00083D                     STR_1:
   207   00083D  53                 	db	83	;'S'
   208   00083E  75                 	db	117	;'u'
   209   00083F  6D                 	db	109	;'m'
   210   000840  20                 	db	32
   211   000841  69                 	db	105	;'i'
   212   000842  74                 	db	116	;'t'
   213   000843  65                 	db	101	;'e'
   214   000844  72                 	db	114	;'r'
   215   000845  61                 	db	97	;'a'
   216   000846  74                 	db	116	;'t'
   217   000847  69                 	db	105	;'i'
   218   000848  6F                 	db	111	;'o'
   219   000849  6E                 	db	110	;'n'
   220   00084A  73                 	db	115	;'s'
   221   00084B  2C                 	db	44
   222   00084C  20                 	db	32
   223   00084D  41                 	db	65	;'A'
   224   00084E  6D                 	db	109	;'m'
   225   00084F  6F                 	db	111	;'o'
   226   000850  75                 	db	117	;'u'
   227   000851  6E                 	db	110	;'n'
   228   000852  74                 	db	116	;'t'
   229   000853  20                 	db	32
   230   000854  63                 	db	99	;'c'
   231   000855  79                 	db	121	;'y'
   232   000856  63                 	db	99	;'c'
   233   000857  6C                 	db	108	;'l'
   234   000858  65                 	db	101	;'e'
   235   000859  73                 	db	115	;'s'
   236   00085A  3A                 	db	58	;':'
   237   00085B  20                 	db	32
   238   00085C  25                 	db	37
   239   00085D  6C                 	db	108	;'l'
   240   00085E  6C                 	db	108	;'l'
   241   00085F  64                 	db	100	;'d'
   242   000860  2C                 	db	44
   243   000861  20                 	db	32
   244   000862  25                 	db	37
   245   000863  6C                 	db	108	;'l'
   246   000864  6C                 	db	108	;'l'
   247   000865  64                 	db	100	;'d'
   248   000866  0A                 	db	10
   249   000867  00                 	db	0
   250   000868                     STR_3:
   251   000868  69                 	db	105	;'i'
   252   000869  6E                 	db	110	;'n'
   253   00086A  66                 	db	102	;'f'
   254   00086B  00                 	db	0
   255   00086C                     STR_6:
   256   00086C  6E                 	db	110	;'n'
   257   00086D  61                 	db	97	;'a'
   258   00086E  6E                 	db	110	;'n'
   259   00086F  00                 	db	0
   260   000870  00                 	db	0	; dummy byte at the end
   261   000000                     
   262                           ; #config settings
   263                           
   264                           	psect	cinit
   265   003FBA                     __pcinit:
   266                           	callstack 0
   267   003FBA                     start_initialization:
   268                           	callstack 0
   269   003FBA                     __initialization:
   270                           	callstack 0
   271                           
   272                           ; Clear objects allocated to BANK2 (256 bytes)
   273   003FBA  EE02  F000         	lfsr	0,__pbssBANK2
   274   003FBE  EE11 F000          	lfsr	1,256
   275   003FC2                     clear_0:
   276   003FC2  6AEE               	clrf	postinc0,c
   277   003FC4  50E5               	movf	postdec1,w,c
   278   003FC6  50E1               	movf	fsr1l,w,c
   279   003FC8  E1FC               	bnz	clear_0
   280   003FCA  50E2               	movf	fsr1h,w,c
   281   003FCC  E1FA               	bnz	clear_0
   282                           
   283                           ; Clear objects allocated to BANK1 (253 bytes)
   284   003FCE  EE01  F000         	lfsr	0,__pbssBANK1
   285   003FD2  0EFD               	movlw	253
   286   003FD4                     clear_1:
   287   003FD4  6AEE               	clrf	postinc0,c
   288   003FD6  06E8               	decf	wreg,f,c
   289   003FD8  E1FD               	bnz	clear_1
   290                           
   291                           ; Clear objects allocated to BANK0 (55 bytes)
   292   003FDA  EE00  F0C8         	lfsr	0,__pbssBANK0
   293   003FDE  0E37               	movlw	55
   294   003FE0                     clear_2:
   295   003FE0  6AEE               	clrf	postinc0,c
   296   003FE2  06E8               	decf	wreg,f,c
   297   003FE4  E1FD               	bnz	clear_2
   298                           
   299                           ; Clear objects allocated to COMRAM (6 bytes)
   300   003FE6  6A57               	clrf	(__pbssCOMRAM+5)& (0+255),c
   301   003FE8  6A56               	clrf	(__pbssCOMRAM+4)& (0+255),c
   302   003FEA  6A55               	clrf	(__pbssCOMRAM+3)& (0+255),c
   303   003FEC  6A54               	clrf	(__pbssCOMRAM+2)& (0+255),c
   304   003FEE  6A53               	clrf	(__pbssCOMRAM+1)& (0+255),c
   305   003FF0  6A52               	clrf	__pbssCOMRAM& (0+255),c
   306   003FF2                     end_of_initialization:
   307                           	callstack 0
   308   003FF2                     __end_of__initialization:
   309                           	callstack 0
   310   003FF2  9058               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   311   003FF4  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   312   003FF6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   313   003FF8  6EF8               	movwf	tblptru,c
   314   003FFA  0100               	movlb	0
   315   003FFC  EF01  F021         	goto	_main	;jump to C main() function
   316                           
   317                           	psect	bssCOMRAM
   318   000052                     __pbssCOMRAM:
   319                           	callstack 0
   320   000052                     _pwm:
   321                           	callstack 0
   322   000052                     	ds	4
   323   000056                     _prec:
   324                           	callstack 0
   325   000056                     	ds	2
   326                           
   327                           	psect	bssBANK0
   328   0000C8                     __pbssBANK0:
   329                           	callstack 0
   330   0000C8                     _amount_cycles:
   331                           	callstack 0
   332   0000C8                     	ds	8
   333   0000D0                     _sum_iterations:
   334                           	callstack 0
   335   0000D0                     	ds	8
   336   0000D8                     _iterations:
   337                           	callstack 0
   338   0000D8                     	ds	8
   339   0000E0                     _combination_state:
   340                           	callstack 0
   341   0000E0                     	ds	5
   342   0000E5                     _b:
   343                           	callstack 0
   344   0000E5                     	ds	5
   345   0000EA                     _b_state:
   346                           	callstack 0
   347   0000EA                     	ds	5
   348   0000EF                     _last_b:
   349                           	callstack 0
   350   0000EF                     	ds	5
   351   0000F4                     floorf@F526:
   352                           	callstack 0
   353   0000F4                     	ds	4
   354   0000F8                     ___fpclassifyf@F465:
   355                           	callstack 0
   356   0000F8                     	ds	4
   357   0000FC                     _width:
   358                           	callstack 0
   359   0000FC                     	ds	2
   360   0000FE                     _flags:
   361                           	callstack 0
   362   0000FE                     	ds	1
   363                           
   364                           	psect	bssBANK1
   365   000100                     __pbssBANK1:
   366                           	callstack 0
   367   000100                     _state_counter:
   368                           	callstack 0
   369   000100                     	ds	40
   370   000128                     _b_counter:
   371                           	callstack 0
   372   000128                     	ds	40
   373   000150                     _counter:
   374                           	callstack 0
   375   000150                     	ds	40
   376   000178                     _an_input:
   377                           	callstack 0
   378   000178                     	ds	20
   379   00018C                     _value:
   380                           	callstack 0
   381   00018C                     	ds	8
   382   000194                     _triple_click_evt:
   383                           	callstack 0
   384   000194                     	ds	5
   385   000199                     _double_click_evt:
   386                           	callstack 0
   387   000199                     	ds	5
   388   00019E                     _single_click_evt:
   389                           	callstack 0
   390   00019E                     	ds	5
   391   0001A3                     _release_evt:
   392                           	callstack 0
   393   0001A3                     	ds	5
   394   0001A8                     _press_evt:
   395                           	callstack 0
   396   0001A8                     	ds	5
   397   0001AD                     _dbuf:
   398                           	callstack 0
   399   0001AD                     	ds	80
   400                           
   401                           	psect	bssBANK2
   402   000200                     __pbssBANK2:
   403                           	callstack 0
   404   000200                     _persisted_data:
   405                           	callstack 0
   406   000200                     	ds	256
   407                           
   408                           	psect	cstackBANK3
   409   000300                     __pcstackBANK3:
   410                           	callstack 0
   411   000300                     _loop$2262:
   412                           	callstack 0
   413                           
   414                           ; 4 bytes @ 0x0
   415   000300                     	ds	4
   416   000304                     loop@click_evt:
   417                           	callstack 0
   418                           
   419                           ; 1 bytes @ 0x4
   420   000304                     	ds	1
   421                           
   422                           	psect	cstackBANK0
   423   000060                     __pcstackBANK0:
   424                           	callstack 0
   425   000060                     efgtoa@fp:
   426                           	callstack 0
   427                           
   428                           ; 2 bytes @ 0x0
   429   000060                     	ds	2
   430   000062                     efgtoa@f:
   431                           	callstack 0
   432                           
   433                           ; 4 bytes @ 0x2
   434   000062                     	ds	4
   435   000066                     efgtoa@c:
   436                           	callstack 0
   437                           
   438                           ; 1 bytes @ 0x6
   439   000066                     	ds	1
   440   000067                     efgtoa@ne:
   441                           	callstack 0
   442                           
   443                           ; 2 bytes @ 0x7
   444   000067                     	ds	2
   445   000069                     efgtoa@p:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0x9
   449   000069                     	ds	2
   450   00006B                     efgtoa@t:
   451                           	callstack 0
   452                           
   453                           ; 2 bytes @ 0xB
   454   00006B                     	ds	2
   455   00006D                     _efgtoa$1920:
   456                           	callstack 0
   457                           
   458                           ; 2 bytes @ 0xD
   459   00006D                     	ds	2
   460   00006F                     efgtoa@pp:
   461                           	callstack 0
   462                           
   463                           ; 1 bytes @ 0xF
   464   00006F                     	ds	1
   465   000070                     efgtoa@mode:
   466                           	callstack 0
   467                           
   468                           ; 1 bytes @ 0x10
   469   000070                     	ds	1
   470   000071                     efgtoa@nmode:
   471                           	callstack 0
   472                           
   473                           ; 1 bytes @ 0x11
   474   000071                     	ds	1
   475   000072                     efgtoa@d:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0x12
   479   000072                     	ds	2
   480   000074                     efgtoa@m:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0x14
   484   000074                     	ds	2
   485   000076                     efgtoa@e:
   486                           	callstack 0
   487                           
   488                           ; 2 bytes @ 0x16
   489   000076                     	ds	2
   490   000078                     efgtoa@w:
   491                           	callstack 0
   492                           
   493                           ; 2 bytes @ 0x18
   494   000078                     	ds	2
   495   00007A                     efgtoa@ou:
   496                           	callstack 0
   497                           
   498                           ; 4 bytes @ 0x1A
   499   00007A                     	ds	4
   500   00007E                     efgtoa@i:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0x1E
   504   00007E                     	ds	2
   505   000080                     efgtoa@h:
   506                           	callstack 0
   507                           
   508                           ; 4 bytes @ 0x20
   509   000080                     	ds	4
   510   000084                     efgtoa@l:
   511                           	callstack 0
   512                           
   513                           ; 4 bytes @ 0x24
   514   000084                     	ds	4
   515   000088                     efgtoa@sign:
   516                           	callstack 0
   517                           
   518                           ; 1 bytes @ 0x28
   519   000088                     	ds	1
   520   000089                     efgtoa@g:
   521                           	callstack 0
   522                           
   523                           ; 4 bytes @ 0x29
   524   000089                     	ds	4
   525   00008D                     efgtoa@n:
   526                           	callstack 0
   527                           
   528                           ; 2 bytes @ 0x2D
   529   00008D                     	ds	2
   530   00008F                     efgtoa@u:
   531                           	callstack 0
   532                           
   533                           ; 4 bytes @ 0x2F
   534   00008F                     	ds	4
   535   000093                     vfpfcnvrt@fp:
   536                           	callstack 0
   537                           
   538                           ; 2 bytes @ 0x33
   539   000093                     	ds	2
   540   000095                     vfpfcnvrt@fmt:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x35
   544   000095                     	ds	2
   545   000097                     vfpfcnvrt@ap:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x37
   549   000097                     	ds	2
   550   000099                     ??_vfpfcnvrt:
   551                           
   552                           ; 1 bytes @ 0x39
   553   000099                     	ds	10
   554   0000A3                     vfpfcnvrt@convarg:
   555                           	callstack 0
   556                           
   557                           ; 8 bytes @ 0x43
   558   0000A3                     	ds	8
   559   0000AB                     vfpfcnvrt@c:
   560                           	callstack 0
   561                           
   562                           ; 1 bytes @ 0x4B
   563   0000AB                     	ds	1
   564   0000AC                     vfpfcnvrt@cp:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x4C
   568   0000AC                     	ds	2
   569   0000AE                     ?_vfprintf:
   570                           	callstack 0
   571   0000AE                     vfprintf@fp:
   572                           	callstack 0
   573                           
   574                           ; 2 bytes @ 0x4E
   575   0000AE                     	ds	2
   576   0000B0                     vfprintf@fmt:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0x50
   580   0000B0                     	ds	2
   581   0000B2                     vfprintf@ap:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x52
   585   0000B2                     	ds	2
   586   0000B4                     ?_printf:
   587                           	callstack 0
   588   0000B4                     printf@fmt:
   589                           	callstack 0
   590                           
   591                           ; 2 bytes @ 0x54
   592   0000B4                     	ds	18
   593   0000C6                     printf@ap:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0x66
   597   0000C6                     	ds	2
   598                           
   599                           	psect	cstackCOMRAM
   600   000001                     __pcstackCOMRAM:
   601                           	callstack 0
   602   000001                     ??_enc:
   603   000001                     
   604                           ; 1 bytes @ 0x0
   605   000001                     	ds	4
   606   000005                     enc@i:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0x4
   610   000005                     	ds	2
   611   000007                     ??_init_vars:
   612   000007                     ?___fpclassifyf:
   613                           	callstack 0
   614   000007                     ?_isdigit:
   615                           	callstack 0
   616   000007                     ?_isspace:
   617                           	callstack 0
   618   000007                     ?___wmul:
   619                           	callstack 0
   620   000007                     ?___awdiv:
   621                           	callstack 0
   622   000007                     ?___fladd:
   623                           	callstack 0
   624   000007                     ?___flmul:
   625                           	callstack 0
   626   000007                     ?_labs:
   627                           	callstack 0
   628   000007                     ?___flneg:
   629                           	callstack 0
   630   000007                     ?___fltol:
   631                           	callstack 0
   632   000007                     ?___xotofl:
   633                           	callstack 0
   634   000007                     ?___aodiv:
   635                           	callstack 0
   636   000007                     ?___aomod:
   637                           	callstack 0
   638   000007                     putch@data:
   639                           	callstack 0
   640   000007                     ___wmul@multiplier:
   641                           	callstack 0
   642   000007                     ___awdiv@dividend:
   643                           	callstack 0
   644   000007                     isdigit@c:
   645                           	callstack 0
   646   000007                     isspace@c:
   647                           	callstack 0
   648   000007                     memcpy@d1:
   649                           	callstack 0
   650   000007                     strcpy@dest:
   651                           	callstack 0
   652   000007                     ___fleq@ff1:
   653                           	callstack 0
   654   000007                     ___flneg@f1:
   655                           	callstack 0
   656   000007                     ___fltol@f1:
   657                           	callstack 0
   658   000007                     ___fladd@b:
   659                           	callstack 0
   660   000007                     ___flmul@b:
   661                           	callstack 0
   662   000007                     ___fpclassifyf@x:
   663                           	callstack 0
   664   000007                     labs@a:
   665                           	callstack 0
   666   000007                     ___aodiv@dividend:
   667                           	callstack 0
   668   000007                     ___aomod@dividend:
   669                           	callstack 0
   670   000007                     ___xotofl@val:
   671                           	callstack 0
   672                           
   673                           ; 8 bytes @ 0x6
   674   000007                     	ds	1
   675   000008                     fputc@c:
   676                           	callstack 0
   677                           
   678                           ; 2 bytes @ 0x7
   679   000008                     	ds	1
   680   000009                     ??_isdigit:
   681   000009                     ??_isspace:
   682   000009                     init_vars@i:
   683                           	callstack 0
   684   000009                     ___wmul@multiplicand:
   685                           	callstack 0
   686   000009                     ___awdiv@divisor:
   687                           	callstack 0
   688   000009                     memcpy@s1:
   689                           	callstack 0
   690   000009                     strcpy@src:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0x8
   694   000009                     	ds	1
   695   00000A                     fputc@fp:
   696                           	callstack 0
   697                           
   698                           ; 2 bytes @ 0x9
   699   00000A                     	ds	1
   700   00000B                     ??___fpclassifyf:
   701   00000B                     ??_labs:
   702   00000B                     ??___fltol:
   703   00000B                     ___awdiv@counter:
   704                           	callstack 0
   705   00000B                     _isspace$2000:
   706                           	callstack 0
   707   00000B                     ___wmul@product:
   708                           	callstack 0
   709   00000B                     memcpy@n:
   710                           	callstack 0
   711   00000B                     strcpy@s:
   712                           	callstack 0
   713   00000B                     ___fleq@ff2:
   714                           	callstack 0
   715   00000B                     ___fladd@a:
   716                           	callstack 0
   717   00000B                     ___flmul@a:
   718                           	callstack 0
   719                           
   720                           ; 4 bytes @ 0xA
   721   00000B                     	ds	1
   722   00000C                     ??_fputc:
   723   00000C                     ___awdiv@sign:
   724                           	callstack 0
   725                           
   726                           ; 1 bytes @ 0xB
   727   00000C                     	ds	1
   728   00000D                     ?_atoi:
   729                           	callstack 0
   730   00000D                     memcpy@tmp:
   731                           	callstack 0
   732   00000D                     ___awdiv@quotient:
   733                           	callstack 0
   734   00000D                     atoi@s:
   735                           	callstack 0
   736   00000D                     strcpy@d:
   737                           	callstack 0
   738                           
   739                           ; 2 bytes @ 0xC
   740   00000D                     	ds	1
   741   00000E                     memcpy@d:
   742                           	callstack 0
   743                           
   744                           ; 2 bytes @ 0xD
   745   00000E                     	ds	1
   746   00000F                     ??___fladd:
   747   00000F                     ??___flmul:
   748   00000F                     ??_atoi:
   749   00000F                     ??_read_analog:
   750   00000F                     ??_update_pwm:
   751   00000F                     ??___fleq:
   752   00000F                     ??___xotofl:
   753   00000F                     ___fltol@sign1:
   754                           	callstack 0
   755   00000F                     ___fpclassifyf@e:
   756                           	callstack 0
   757   00000F                     ___aodiv@divisor:
   758                           	callstack 0
   759   00000F                     ___aomod@divisor:
   760                           	callstack 0
   761                           
   762                           ; 8 bytes @ 0xE
   763   00000F                     	ds	1
   764   000010                     ___fltol@exp1:
   765                           	callstack 0
   766   000010                     read_analog@aux:
   767                           	callstack 0
   768   000010                     update_pwm@pwm0:
   769                           	callstack 0
   770   000010                     memcpy@s:
   771                           	callstack 0
   772                           
   773                           ; 2 bytes @ 0xF
   774   000010                     	ds	1
   775   000011                     fputs@s:
   776                           	callstack 0
   777   000011                     ___fpclassifyf@u:
   778                           	callstack 0
   779                           
   780                           ; 4 bytes @ 0x10
   781   000011                     	ds	1
   782   000012                     read_analog@i:
   783                           	callstack 0
   784   000012                     update_pwm@pwm1:
   785                           	callstack 0
   786   000012                     atoi@neg:
   787                           	callstack 0
   788                           
   789                           ; 2 bytes @ 0x11
   790   000012                     	ds	1
   791   000013                     ___fladd@signs:
   792                           	callstack 0
   793   000013                     ___flmul@sign:
   794                           	callstack 0
   795   000013                     fputs@fp:
   796                           	callstack 0
   797                           
   798                           ; 2 bytes @ 0x12
   799   000013                     	ds	1
   800   000014                     ___fladd@aexp:
   801                           	callstack 0
   802   000014                     ___flmul@aexp:
   803                           	callstack 0
   804   000014                     atoi@n:
   805                           	callstack 0
   806                           
   807                           ; 2 bytes @ 0x13
   808   000014                     	ds	1
   809   000015                     ___fladd@bexp:
   810                           	callstack 0
   811   000015                     fputs@c:
   812                           	callstack 0
   813   000015                     ___flmul@grs:
   814                           	callstack 0
   815                           
   816                           ; 4 bytes @ 0x14
   817   000015                     	ds	1
   818   000016                     ___fladd@grs:
   819                           	callstack 0
   820   000016                     fputs@i:
   821                           	callstack 0
   822                           
   823                           ; 2 bytes @ 0x15
   824   000016                     	ds	1
   825   000017                     ___aodiv@counter:
   826                           	callstack 0
   827   000017                     ___aomod@counter:
   828                           	callstack 0
   829   000017                     ___xotofl@sign:
   830                           	callstack 0
   831                           
   832                           ; 1 bytes @ 0x16
   833   000017                     	ds	1
   834   000018                     ___aodiv@sign:
   835                           	callstack 0
   836   000018                     ___aomod@sign:
   837                           	callstack 0
   838   000018                     ___xotofl@exp:
   839                           	callstack 0
   840   000018                     pad@fp:
   841                           	callstack 0
   842                           
   843                           ; 2 bytes @ 0x17
   844   000018                     	ds	1
   845   000019                     ?_abs:
   846                           	callstack 0
   847   000019                     ___flmul@bexp:
   848                           	callstack 0
   849   000019                     abs@a:
   850                           	callstack 0
   851   000019                     ___aodiv@quotient:
   852                           	callstack 0
   853   000019                     ___xotofl@arg:
   854                           	callstack 0
   855                           
   856                           ; 8 bytes @ 0x18
   857   000019                     	ds	1
   858   00001A                     pad@buf:
   859                           	callstack 0
   860   00001A                     ___flmul@prod:
   861                           	callstack 0
   862                           
   863                           ; 4 bytes @ 0x19
   864   00001A                     	ds	1
   865   00001B                     ??_abs:
   866                           
   867                           ; 1 bytes @ 0x1A
   868   00001B                     	ds	1
   869   00001C                     pad@p:
   870                           	callstack 0
   871                           
   872                           ; 2 bytes @ 0x1B
   873   00001C                     	ds	2
   874   00001E                     ??_pad:
   875   00001E                     ___flmul@temp:
   876                           	callstack 0
   877                           
   878                           ; 2 bytes @ 0x1D
   879   00001E                     	ds	1
   880   00001F                     pad@i:
   881                           	callstack 0
   882                           
   883                           ; 2 bytes @ 0x1E
   884   00001F                     	ds	1
   885   000020                     ?___flsub:
   886                           	callstack 0
   887   000020                     ___flge@ff1:
   888                           	callstack 0
   889   000020                     ___flsub@b:
   890                           	callstack 0
   891                           
   892                           ; 4 bytes @ 0x1F
   893   000020                     	ds	1
   894   000021                     ?___fldiv:
   895                           	callstack 0
   896   000021                     pad@w:
   897                           	callstack 0
   898   000021                     ___fldiv@b:
   899                           	callstack 0
   900                           
   901                           ; 4 bytes @ 0x20
   902   000021                     	ds	2
   903   000023                     dtoa@fp:
   904                           	callstack 0
   905                           
   906                           ; 2 bytes @ 0x22
   907   000023                     	ds	1
   908   000024                     ___flge@ff2:
   909                           	callstack 0
   910   000024                     ___flsub@a:
   911                           	callstack 0
   912                           
   913                           ; 4 bytes @ 0x23
   914   000024                     	ds	1
   915   000025                     ___fldiv@a:
   916                           	callstack 0
   917   000025                     dtoa@d:
   918                           	callstack 0
   919                           
   920                           ; 8 bytes @ 0x24
   921   000025                     	ds	3
   922   000028                     ??___flge:
   923                           
   924                           ; 1 bytes @ 0x27
   925   000028                     	ds	1
   926   000029                     ??___fldiv:
   927                           
   928                           ; 1 bytes @ 0x28
   929   000029                     	ds	4
   930   00002D                     ??_dtoa:
   931   00002D                     ___fldiv@rem:
   932                           	callstack 0
   933                           
   934                           ; 4 bytes @ 0x2C
   935   00002D                     	ds	4
   936   000031                     ___fldiv@sign:
   937                           	callstack 0
   938                           
   939                           ; 1 bytes @ 0x30
   940   000031                     	ds	1
   941   000032                     ___fldiv@new_exp:
   942                           	callstack 0
   943                           
   944                           ; 2 bytes @ 0x31
   945   000032                     	ds	2
   946   000034                     ___fldiv@grs:
   947                           	callstack 0
   948                           
   949                           ; 4 bytes @ 0x33
   950   000034                     	ds	1
   951   000035                     _dtoa$1889:
   952                           	callstack 0
   953                           
   954                           ; 2 bytes @ 0x34
   955   000035                     	ds	2
   956   000037                     dtoa@p:
   957                           	callstack 0
   958                           
   959                           ; 2 bytes @ 0x36
   960   000037                     	ds	1
   961   000038                     ___fldiv@bexp:
   962                           	callstack 0
   963                           
   964                           ; 1 bytes @ 0x37
   965   000038                     	ds	1
   966   000039                     ___fldiv@aexp:
   967                           	callstack 0
   968   000039                     dtoa@w:
   969                           	callstack 0
   970                           
   971                           ; 2 bytes @ 0x38
   972   000039                     	ds	1
   973   00003A                     ?_floorf:
   974                           	callstack 0
   975   00003A                     floorf@x:
   976                           	callstack 0
   977                           
   978                           ; 4 bytes @ 0x39
   979   00003A                     	ds	1
   980   00003B                     dtoa@n:
   981                           	callstack 0
   982                           
   983                           ; 8 bytes @ 0x3A
   984   00003B                     	ds	3
   985   00003E                     ??_floorf:
   986                           
   987                           ; 1 bytes @ 0x3D
   988   00003E                     	ds	5
   989   000043                     dtoa@s:
   990                           	callstack 0
   991                           
   992                           ; 1 bytes @ 0x42
   993   000043                     	ds	1
   994   000044                     dtoa@i:
   995                           	callstack 0
   996   000044                     floorf@m:
   997                           	callstack 0
   998                           
   999                           ; 4 bytes @ 0x43
  1000   000044                     	ds	4
  1001   000048                     floorf@e:
  1002                           	callstack 0
  1003                           
  1004                           ; 2 bytes @ 0x47
  1005   000048                     	ds	2
  1006   00004A                     floorf@u:
  1007                           	callstack 0
  1008                           
  1009                           ; 4 bytes @ 0x49
  1010   00004A                     	ds	4
  1011   00004E                     ??_efgtoa:
  1012                           
  1013                           ; 1 bytes @ 0x4D
  1014   00004E                     	ds	2
  1015   000050                     vfprintf@cfmt:
  1016                           	callstack 0
  1017                           
  1018                           ; 2 bytes @ 0x4F
  1019   000050                     	ds	2
  1020   000052                     
  1021                           ; 1 bytes @ 0x51
  1022 ;;
  1023 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1024 ;;
  1025 ;; *************** function _main *****************
  1026 ;; Defined at:
  1027 ;;		line 532 in file "main.c"
  1028 ;; Parameters:    Size  Location     Type
  1029 ;;		None
  1030 ;; Auto vars:     Size  Location     Type
  1031 ;;		None
  1032 ;; Return value:  Size  Location     Type
  1033 ;;                  1    wreg      void 
  1034 ;; Registers used:
  1035 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1036 ;; Tracked objects:
  1037 ;;		On entry : 0/0
  1038 ;;		On exit  : 0/0
  1039 ;;		Unchanged: 0/0
  1040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1041 ;;      Params:         0       0       0       0       0       0       0       0       0
  1042 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1043 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1044 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1045 ;;Total ram usage:        0 bytes
  1046 ;; Hardware stack levels required when called: 10
  1047 ;; This function calls:
  1048 ;;		_config_micro
  1049 ;;		_init
  1050 ;;		_init_vars
  1051 ;;		_loop
  1052 ;;		_read_analog
  1053 ;;		_update_pwm
  1054 ;; This function is called by:
  1055 ;;		Startup code after reset
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           
  1059                           	psect	text0
  1060   004202                     __ptext0:
  1061                           	callstack 0
  1062   004202                     _main:
  1063                           	callstack 21
  1064   004202                     
  1065                           ;main.c: 533:     config_micro();
  1066   004202  ECB7  F01C         	call	_config_micro	;wreg free
  1067   004206                     
  1068                           ;main.c: 534:     init_vars();
  1069   004206  ECF2  F01E         	call	_init_vars	;wreg free
  1070   00420A                     
  1071                           ;main.c: 536:     init();
  1072   00420A  EC59  F01F         	call	_init	;wreg free
  1073   00420E                     l6295:
  1074                           
  1075                           ;main.c: 539:         update_pwm();
  1076   00420E  EC27  F018         	call	_update_pwm	;wreg free
  1077   004212                     
  1078                           ;main.c: 540:         read_analog();
  1079   004212  EC77  F01E         	call	_read_analog	;wreg free
  1080   004216                     
  1081                           ;main.c: 542:         loop();
  1082   004216  EC4A  F009         	call	_loop	;wreg free
  1083   00421A  EF07  F021         	goto	l6295
  1084   00421E  EF07  F000         	goto	start
  1085   004222                     __end_of_main:
  1086                           	callstack 0
  1087                           
  1088 ;; *************** function _update_pwm *****************
  1089 ;; Defined at:
  1090 ;;		line 309 in file "main.c"
  1091 ;; Parameters:    Size  Location     Type
  1092 ;;		None
  1093 ;; Auto vars:     Size  Location     Type
  1094 ;;  pwm1            2   17[COMRAM] int 
  1095 ;;  pwm0            2   15[COMRAM] int 
  1096 ;; Return value:  Size  Location     Type
  1097 ;;                  1    wreg      void 
  1098 ;; Registers used:
  1099 ;;		wreg, status,2, status,0, cstack
  1100 ;; Tracked objects:
  1101 ;;		On entry : 0/0
  1102 ;;		On exit  : 0/0
  1103 ;;		Unchanged: 0/0
  1104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1105 ;;      Params:         0       0       0       0       0       0       0       0       0
  1106 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1107 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1108 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1109 ;;Total ram usage:        5 bytes
  1110 ;; Hardware stack levels used: 1
  1111 ;; Hardware stack levels required when called: 2
  1112 ;; This function calls:
  1113 ;;		___awdiv
  1114 ;; This function is called by:
  1115 ;;		_main
  1116 ;; This function uses a non-reentrant model
  1117 ;;
  1118                           
  1119                           	psect	text1
  1120   00304E                     __ptext1:
  1121                           	callstack 0
  1122   00304E                     _update_pwm:
  1123                           	callstack 28
  1124   00304E                     
  1125                           ;main.c: 310:     int pwm0, pwm1;;main.c: 312:     if (pwm[0] > 600){
  1126   00304E  BE53               	btfsc	(_pwm+1)^0,7,c
  1127   003050  EF33  F018         	goto	u5011
  1128   003054  0E59               	movlw	89
  1129   003056  5C52               	subwf	_pwm^0,w,c
  1130   003058  0E02               	movlw	2
  1131   00305A  5853               	subwfb	(_pwm+1)^0,w,c
  1132   00305C  A0D8               	btfss	status,0,c
  1133   00305E  EF33  F018         	goto	u5011
  1134   003062  EF35  F018         	goto	u5010
  1135   003066                     u5011:
  1136   003066  EF3B  F018         	goto	l4423
  1137   00306A                     u5010:
  1138   00306A                     
  1139                           ;main.c: 313:         pwm0 = 600;
  1140   00306A  0E02               	movlw	2
  1141   00306C  6E11               	movwf	(update_pwm@pwm0+1)^0,c
  1142   00306E  0E58               	movlw	88
  1143   003070  6E10               	movwf	update_pwm@pwm0^0,c
  1144                           
  1145                           ;main.c: 314:     }else if (pwm[0] < -600){
  1146   003072  EF53  F018         	goto	l4427
  1147   003076                     l4423:
  1148   003076  AE53               	btfss	(_pwm+1)^0,7,c
  1149   003078  EF47  F018         	goto	u5021
  1150   00307C  0EA8               	movlw	168
  1151   00307E  5C52               	subwf	_pwm^0,w,c
  1152   003080  0EFD               	movlw	253
  1153   003082  5853               	subwfb	(_pwm+1)^0,w,c
  1154   003084  B0D8               	btfsc	status,0,c
  1155   003086  EF47  F018         	goto	u5021
  1156   00308A  EF49  F018         	goto	u5020
  1157   00308E                     u5021:
  1158   00308E  EF4F  F018         	goto	l152
  1159   003092                     u5020:
  1160   003092                     
  1161                           ;main.c: 315:         pwm0 = -600;
  1162   003092  0EFD               	movlw	253
  1163   003094  6E11               	movwf	(update_pwm@pwm0+1)^0,c
  1164   003096  0EA8               	movlw	168
  1165   003098  6E10               	movwf	update_pwm@pwm0^0,c
  1166                           
  1167                           ;main.c: 316:     }else{
  1168   00309A  EF53  F018         	goto	l4427
  1169   00309E                     l152:
  1170                           
  1171                           ;main.c: 317:         pwm0 = pwm[0];
  1172   00309E  C052  F010         	movff	_pwm,update_pwm@pwm0
  1173   0030A2  C053  F011         	movff	_pwm+1,update_pwm@pwm0+1
  1174   0030A6                     l4427:
  1175                           
  1176                           ;main.c: 320:     PORTDbits.RD1 = pwm0 > 0 ? 0 : 1;
  1177   0030A6  BE11               	btfsc	(update_pwm@pwm0+1)^0,7,c
  1178   0030A8  EF5E  F018         	goto	u5031
  1179   0030AC  5011               	movf	(update_pwm@pwm0+1)^0,w,c
  1180   0030AE  E10A               	bnz	u5030
  1181   0030B0  0410               	decf	update_pwm@pwm0^0,w,c
  1182   0030B2  A0D8               	btfss	status,0,c
  1183   0030B4  EF5E  F018         	goto	u5031
  1184   0030B8  EF62  F018         	goto	u5030
  1185   0030BC                     u5031:
  1186   0030BC  6A0F               	clrf	??_update_pwm^0,c
  1187   0030BE  2A0F               	incf	??_update_pwm^0,f,c
  1188   0030C0  EF63  F018         	goto	u5048
  1189   0030C4                     u5030:
  1190   0030C4  6A0F               	clrf	??_update_pwm^0,c
  1191   0030C6                     u5048:
  1192   0030C6  460F               	rlncf	??_update_pwm^0,f,c
  1193   0030C8  5083               	movf	131,w,c	;volatile
  1194   0030CA  180F               	xorwf	??_update_pwm^0,w,c
  1195   0030CC  0BFD               	andlw	-3
  1196   0030CE  180F               	xorwf	??_update_pwm^0,w,c
  1197   0030D0  6E83               	movwf	131,c	;volatile
  1198                           
  1199                           ;main.c: 321:     PORTDbits.RD0 = pwm0 < 0 ? 0 : 1;
  1200   0030D2  BE11               	btfsc	(update_pwm@pwm0+1)^0,7,c
  1201   0030D4  EF72  F018         	goto	u5050
  1202   0030D8  EF6E  F018         	goto	u5051
  1203   0030DC                     u5051:
  1204   0030DC  6A0F               	clrf	??_update_pwm^0,c
  1205   0030DE  2A0F               	incf	??_update_pwm^0,f,c
  1206   0030E0  EF73  F018         	goto	u5068
  1207   0030E4                     u5050:
  1208   0030E4  6A0F               	clrf	??_update_pwm^0,c
  1209   0030E6                     u5068:
  1210   0030E6  5083               	movf	131,w,c	;volatile
  1211   0030E8  180F               	xorwf	??_update_pwm^0,w,c
  1212   0030EA  0BFE               	andlw	-2
  1213   0030EC  180F               	xorwf	??_update_pwm^0,w,c
  1214   0030EE  6E83               	movwf	131,c	;volatile
  1215                           
  1216                           ;main.c: 322:     pwm0 = pwm0 > 0 ? pwm0 : (-pwm0);
  1217   0030F0  BE11               	btfsc	(update_pwm@pwm0+1)^0,7,c
  1218   0030F2  EF85  F018         	goto	u5070
  1219   0030F6  5011               	movf	(update_pwm@pwm0+1)^0,w,c
  1220   0030F8  E106               	bnz	u5071
  1221   0030FA  0410               	decf	update_pwm@pwm0^0,w,c
  1222   0030FC  B0D8               	btfsc	status,0,c
  1223   0030FE  EF83  F018         	goto	u5071
  1224   003102  EF85  F018         	goto	u5070
  1225   003106                     u5071:
  1226   003106  EF89  F018         	goto	l4431
  1227   00310A                     u5070:
  1228   00310A  6C10               	negf	update_pwm@pwm0^0,c
  1229   00310C  1E11               	comf	(update_pwm@pwm0+1)^0,f,c
  1230   00310E  B0D8               	btfsc	status,0,c
  1231   003110  2A11               	incf	(update_pwm@pwm0+1)^0,f,c
  1232   003112                     l4431:
  1233                           
  1234                           ;main.c: 324:     CCP1CONbits.DC1B = pwm0 % 4;
  1235   003112  C010  F00F         	movff	update_pwm@pwm0,??_update_pwm
  1236   003116  0E03               	movlw	3
  1237   003118  160F               	andwf	??_update_pwm^0,f,c
  1238   00311A  3A0F               	swapf	??_update_pwm^0,f,c
  1239   00311C  50BD               	movf	189,w,c	;volatile
  1240   00311E  180F               	xorwf	??_update_pwm^0,w,c
  1241   003120  0BCF               	andlw	-49
  1242   003122  180F               	xorwf	??_update_pwm^0,w,c
  1243   003124  6EBD               	movwf	189,c	;volatile
  1244   003126                     
  1245                           ;main.c: 325:     CCPR1L = pwm0 / 4;
  1246   003126  C010  F007         	movff	update_pwm@pwm0,___awdiv@dividend
  1247   00312A  C011  F008         	movff	update_pwm@pwm0+1,___awdiv@dividend+1
  1248   00312E  0E00               	movlw	0
  1249   003130  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  1250   003132  0E04               	movlw	4
  1251   003134  6E09               	movwf	___awdiv@divisor^0,c
  1252   003136  EC2E  F01D         	call	___awdiv	;wreg free
  1253   00313A  5007               	movf	?___awdiv^0,w,c
  1254   00313C  6EBE               	movwf	190,c	;volatile
  1255   00313E                     
  1256                           ;main.c: 327:     if (pwm[1] > 600){
  1257   00313E  BE55               	btfsc	(_pwm+3)^0,7,c
  1258   003140  EFAB  F018         	goto	u5081
  1259   003144  0E59               	movlw	89
  1260   003146  5C54               	subwf	(_pwm+2)^0,w,c
  1261   003148  0E02               	movlw	2
  1262   00314A  5855               	subwfb	(_pwm+3)^0,w,c
  1263   00314C  A0D8               	btfss	status,0,c
  1264   00314E  EFAB  F018         	goto	u5081
  1265   003152  EFAD  F018         	goto	u5080
  1266   003156                     u5081:
  1267   003156  EFB3  F018         	goto	l4439
  1268   00315A                     u5080:
  1269   00315A                     
  1270                           ;main.c: 328:         pwm1 = 600;
  1271   00315A  0E02               	movlw	2
  1272   00315C  6E13               	movwf	(update_pwm@pwm1+1)^0,c
  1273   00315E  0E58               	movlw	88
  1274   003160  6E12               	movwf	update_pwm@pwm1^0,c
  1275                           
  1276                           ;main.c: 329:     }else if (pwm[1] < -600){
  1277   003162  EFCB  F018         	goto	l4443
  1278   003166                     l4439:
  1279   003166  AE55               	btfss	(_pwm+3)^0,7,c
  1280   003168  EFBF  F018         	goto	u5091
  1281   00316C  0EA8               	movlw	168
  1282   00316E  5C54               	subwf	(_pwm+2)^0,w,c
  1283   003170  0EFD               	movlw	253
  1284   003172  5855               	subwfb	(_pwm+3)^0,w,c
  1285   003174  B0D8               	btfsc	status,0,c
  1286   003176  EFBF  F018         	goto	u5091
  1287   00317A  EFC1  F018         	goto	u5090
  1288   00317E                     u5091:
  1289   00317E  EFC7  F018         	goto	l160
  1290   003182                     u5090:
  1291   003182                     
  1292                           ;main.c: 330:         pwm1 = -600;
  1293   003182  0EFD               	movlw	253
  1294   003184  6E13               	movwf	(update_pwm@pwm1+1)^0,c
  1295   003186  0EA8               	movlw	168
  1296   003188  6E12               	movwf	update_pwm@pwm1^0,c
  1297                           
  1298                           ;main.c: 331:     }else{
  1299   00318A  EFCB  F018         	goto	l4443
  1300   00318E                     l160:
  1301                           
  1302                           ;main.c: 332:         pwm1 = pwm[1];
  1303   00318E  C054  F012         	movff	_pwm+2,update_pwm@pwm1
  1304   003192  C055  F013         	movff	_pwm+3,update_pwm@pwm1+1
  1305   003196                     l4443:
  1306                           
  1307                           ;main.c: 335:     PORTCbits.RC1 = pwm1 > 0 ? 0 : 1;
  1308   003196  BE13               	btfsc	(update_pwm@pwm1+1)^0,7,c
  1309   003198  EFD6  F018         	goto	u5101
  1310   00319C  5013               	movf	(update_pwm@pwm1+1)^0,w,c
  1311   00319E  E10A               	bnz	u5100
  1312   0031A0  0412               	decf	update_pwm@pwm1^0,w,c
  1313   0031A2  A0D8               	btfss	status,0,c
  1314   0031A4  EFD6  F018         	goto	u5101
  1315   0031A8  EFDA  F018         	goto	u5100
  1316   0031AC                     u5101:
  1317   0031AC  6A0F               	clrf	??_update_pwm^0,c
  1318   0031AE  2A0F               	incf	??_update_pwm^0,f,c
  1319   0031B0  EFDB  F018         	goto	u5118
  1320   0031B4                     u5100:
  1321   0031B4  6A0F               	clrf	??_update_pwm^0,c
  1322   0031B6                     u5118:
  1323   0031B6  460F               	rlncf	??_update_pwm^0,f,c
  1324   0031B8  5082               	movf	130,w,c	;volatile
  1325   0031BA  180F               	xorwf	??_update_pwm^0,w,c
  1326   0031BC  0BFD               	andlw	-3
  1327   0031BE  180F               	xorwf	??_update_pwm^0,w,c
  1328   0031C0  6E82               	movwf	130,c	;volatile
  1329                           
  1330                           ;main.c: 336:     PORTCbits.RC0 = pwm1 < 0 ? 0 : 1;
  1331   0031C2  BE13               	btfsc	(update_pwm@pwm1+1)^0,7,c
  1332   0031C4  EFEA  F018         	goto	u5120
  1333   0031C8  EFE6  F018         	goto	u5121
  1334   0031CC                     u5121:
  1335   0031CC  6A0F               	clrf	??_update_pwm^0,c
  1336   0031CE  2A0F               	incf	??_update_pwm^0,f,c
  1337   0031D0  EFEB  F018         	goto	u5138
  1338   0031D4                     u5120:
  1339   0031D4  6A0F               	clrf	??_update_pwm^0,c
  1340   0031D6                     u5138:
  1341   0031D6  5082               	movf	130,w,c	;volatile
  1342   0031D8  180F               	xorwf	??_update_pwm^0,w,c
  1343   0031DA  0BFE               	andlw	-2
  1344   0031DC  180F               	xorwf	??_update_pwm^0,w,c
  1345   0031DE  6E82               	movwf	130,c	;volatile
  1346                           
  1347                           ;main.c: 337:     pwm1 = pwm1 > 0 ? pwm1 : (-pwm1);
  1348   0031E0  BE13               	btfsc	(update_pwm@pwm1+1)^0,7,c
  1349   0031E2  EFFD  F018         	goto	u5140
  1350   0031E6  5013               	movf	(update_pwm@pwm1+1)^0,w,c
  1351   0031E8  E106               	bnz	u5141
  1352   0031EA  0412               	decf	update_pwm@pwm1^0,w,c
  1353   0031EC  B0D8               	btfsc	status,0,c
  1354   0031EE  EFFB  F018         	goto	u5141
  1355   0031F2  EFFD  F018         	goto	u5140
  1356   0031F6                     u5141:
  1357   0031F6  EF01  F019         	goto	l4447
  1358   0031FA                     u5140:
  1359   0031FA  6C12               	negf	update_pwm@pwm1^0,c
  1360   0031FC  1E13               	comf	(update_pwm@pwm1+1)^0,f,c
  1361   0031FE  B0D8               	btfsc	status,0,c
  1362   003200  2A13               	incf	(update_pwm@pwm1+1)^0,f,c
  1363   003202                     l4447:
  1364                           
  1365                           ;main.c: 339:     CCP2CONbits.DC2B = pwm1 % 4;
  1366   003202  C012  F00F         	movff	update_pwm@pwm1,??_update_pwm
  1367   003206  0E03               	movlw	3
  1368   003208  160F               	andwf	??_update_pwm^0,f,c
  1369   00320A  3A0F               	swapf	??_update_pwm^0,f,c
  1370   00320C  50BA               	movf	186,w,c	;volatile
  1371   00320E  180F               	xorwf	??_update_pwm^0,w,c
  1372   003210  0BCF               	andlw	-49
  1373   003212  180F               	xorwf	??_update_pwm^0,w,c
  1374   003214  6EBA               	movwf	186,c	;volatile
  1375   003216                     
  1376                           ;main.c: 340:     CCPR2L = pwm1 / 4;
  1377   003216  C012  F007         	movff	update_pwm@pwm1,___awdiv@dividend
  1378   00321A  C013  F008         	movff	update_pwm@pwm1+1,___awdiv@dividend+1
  1379   00321E  0E00               	movlw	0
  1380   003220  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  1381   003222  0E04               	movlw	4
  1382   003224  6E09               	movwf	___awdiv@divisor^0,c
  1383   003226  EC2E  F01D         	call	___awdiv	;wreg free
  1384   00322A  5007               	movf	?___awdiv^0,w,c
  1385   00322C  6EBB               	movwf	187,c	;volatile
  1386   00322E  0012               	return		;funcret
  1387   003230                     __end_of_update_pwm:
  1388                           	callstack 0
  1389                           
  1390 ;; *************** function _read_analog *****************
  1391 ;; Defined at:
  1392 ;;		line 206 in file "main.c"
  1393 ;; Parameters:    Size  Location     Type
  1394 ;;		None
  1395 ;; Auto vars:     Size  Location     Type
  1396 ;;  aux             2   15[COMRAM] unsigned int 
  1397 ;;  i               1   17[COMRAM] unsigned char 
  1398 ;; Return value:  Size  Location     Type
  1399 ;;                  1    wreg      void 
  1400 ;; Registers used:
  1401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1402 ;; Tracked objects:
  1403 ;;		On entry : 0/0
  1404 ;;		On exit  : 0/0
  1405 ;;		Unchanged: 0/0
  1406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1407 ;;      Params:         0       0       0       0       0       0       0       0       0
  1408 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1409 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1410 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1411 ;;Total ram usage:        4 bytes
  1412 ;; Hardware stack levels used: 1
  1413 ;; Hardware stack levels required when called: 2
  1414 ;; This function calls:
  1415 ;;		___awdiv
  1416 ;; This function is called by:
  1417 ;;		_main
  1418 ;; This function uses a non-reentrant model
  1419 ;;
  1420                           
  1421                           	psect	text2
  1422   003CEE                     __ptext2:
  1423                           	callstack 0
  1424   003CEE                     _read_analog:
  1425                           	callstack 28
  1426   003CEE                     
  1427                           ;main.c: 207:     unsigned int aux;;main.c: 208:     unsigned char i;;main.c: 209:     f
      +                          or (i=0;i<=5;i++){
  1428   003CEE  0E00               	movlw	0
  1429   003CF0  6E12               	movwf	read_analog@i^0,c
  1430   003CF2                     l4391:
  1431                           
  1432                           ;main.c: 210:         ADCON0bits.CHS=i;
  1433   003CF2  C012  F00F         	movff	read_analog@i,??_read_analog
  1434   003CF6  460F               	rlncf	??_read_analog^0,f,c
  1435   003CF8  460F               	rlncf	??_read_analog^0,f,c
  1436   003CFA  50C2               	movf	194,w,c	;volatile
  1437   003CFC  180F               	xorwf	??_read_analog^0,w,c
  1438   003CFE  0BC3               	andlw	-61
  1439   003D00  180F               	xorwf	??_read_analog^0,w,c
  1440   003D02  6EC2               	movwf	194,c	;volatile
  1441   003D04                     
  1442                           ;main.c: 211:         ADCON0bits.GODONE=1;
  1443   003D04  82C2               	bsf	194,1,c	;volatile
  1444   003D06                     l108:
  1445   003D06  B2C2               	btfsc	194,1,c	;volatile
  1446   003D08  EF88  F01E         	goto	u4971
  1447   003D0C  EF8A  F01E         	goto	u4970
  1448   003D10                     u4971:
  1449   003D10  EF83  F01E         	goto	l108
  1450   003D14                     u4970:
  1451   003D14                     
  1452                           ;main.c: 213:         aux=ADRESH*4;
  1453   003D14  50C4               	movf	196,w,c	;volatile
  1454   003D16  0D04               	mullw	4
  1455   003D18  CFF3 F010          	movff	prodl,read_analog@aux
  1456   003D1C  CFF4 F011          	movff	prodh,read_analog@aux+1
  1457   003D20                     
  1458                           ;main.c: 214:         aux=aux+ADRESL/64;
  1459   003D20  CFC3 F007          	movff	4035,___awdiv@dividend	;volatile
  1460   003D24  6A08               	clrf	(___awdiv@dividend+1)^0,c
  1461   003D26  0E00               	movlw	0
  1462   003D28  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  1463   003D2A  0E40               	movlw	64
  1464   003D2C  6E09               	movwf	___awdiv@divisor^0,c
  1465   003D2E  EC2E  F01D         	call	___awdiv	;wreg free
  1466   003D32  5010               	movf	read_analog@aux^0,w,c
  1467   003D34  2407               	addwf	?___awdiv^0,w,c
  1468   003D36  6E10               	movwf	read_analog@aux^0,c
  1469   003D38  5011               	movf	(read_analog@aux+1)^0,w,c
  1470   003D3A  2008               	addwfc	(?___awdiv+1)^0,w,c
  1471   003D3C  6E11               	movwf	(read_analog@aux+1)^0,c
  1472   003D3E                     
  1473                           ;main.c: 215:         an_input[i]=aux;
  1474   003D3E  5012               	movf	read_analog@i^0,w,c
  1475   003D40  0D02               	mullw	2
  1476   003D42  0E78               	movlw	low _an_input
  1477   003D44  24F3               	addwf	243,w,c
  1478   003D46  6ED9               	movwf	fsr2l,c
  1479   003D48  0E01               	movlw	high _an_input
  1480   003D4A  20F4               	addwfc	prodh,w,c
  1481   003D4C  6EDA               	movwf	fsr2h,c
  1482   003D4E  C010  FFDE         	movff	read_analog@aux,postinc2
  1483   003D52  C011  FFDD         	movff	read_analog@aux+1,postdec2
  1484   003D56                     
  1485                           ;main.c: 216:     }
  1486   003D56  2A12               	incf	read_analog@i^0,f,c
  1487   003D58  0E05               	movlw	5
  1488   003D5A  6412               	cpfsgt	read_analog@i^0,c
  1489   003D5C  EFB2  F01E         	goto	u4981
  1490   003D60  EFB4  F01E         	goto	u4980
  1491   003D64                     u4981:
  1492   003D64  EF79  F01E         	goto	l4391
  1493   003D68                     u4980:
  1494   003D68  0012               	return		;funcret
  1495   003D6A                     __end_of_read_analog:
  1496                           	callstack 0
  1497                           
  1498 ;; *************** function ___awdiv *****************
  1499 ;; Defined at:
  1500 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  1501 ;; Parameters:    Size  Location     Type
  1502 ;;  dividend        2    6[COMRAM] int 
  1503 ;;  divisor         2    8[COMRAM] int 
  1504 ;; Auto vars:     Size  Location     Type
  1505 ;;  quotient        2   12[COMRAM] int 
  1506 ;;  sign            1   11[COMRAM] unsigned char 
  1507 ;;  counter         1   10[COMRAM] unsigned char 
  1508 ;; Return value:  Size  Location     Type
  1509 ;;                  2    6[COMRAM] int 
  1510 ;; Registers used:
  1511 ;;		wreg, status,2, status,0
  1512 ;; Tracked objects:
  1513 ;;		On entry : 0/0
  1514 ;;		On exit  : 0/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1517 ;;      Params:         4       0       0       0       0       0       0       0       0
  1518 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1519 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1520 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1521 ;;Total ram usage:        8 bytes
  1522 ;; Hardware stack levels used: 1
  1523 ;; Hardware stack levels required when called: 1
  1524 ;; This function calls:
  1525 ;;		Nothing
  1526 ;; This function is called by:
  1527 ;;		_read_analog
  1528 ;;		_update_pwm
  1529 ;; This function uses a non-reentrant model
  1530 ;;
  1531                           
  1532                           	psect	text3
  1533   003A5C                     __ptext3:
  1534                           	callstack 0
  1535   003A5C                     ___awdiv:
  1536                           	callstack 28
  1537   003A5C  0E00               	movlw	0
  1538   003A5E  6E0C               	movwf	___awdiv@sign^0,c
  1539   003A60  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
  1540   003A62  EF37  F01D         	goto	u4810
  1541   003A66  EF35  F01D         	goto	u4811
  1542   003A6A                     u4811:
  1543   003A6A  EF3D  F01D         	goto	l4305
  1544   003A6E                     u4810:
  1545   003A6E  6C09               	negf	___awdiv@divisor^0,c
  1546   003A70  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  1547   003A72  B0D8               	btfsc	status,0,c
  1548   003A74  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  1549   003A76  0E01               	movlw	1
  1550   003A78  6E0C               	movwf	___awdiv@sign^0,c
  1551   003A7A                     l4305:
  1552   003A7A  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
  1553   003A7C  EF44  F01D         	goto	u4820
  1554   003A80  EF42  F01D         	goto	u4821
  1555   003A84                     u4821:
  1556   003A84  EF4A  F01D         	goto	l4311
  1557   003A88                     u4820:
  1558   003A88  6C07               	negf	___awdiv@dividend^0,c
  1559   003A8A  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  1560   003A8C  B0D8               	btfsc	status,0,c
  1561   003A8E  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  1562   003A90  0E01               	movlw	1
  1563   003A92  1A0C               	xorwf	___awdiv@sign^0,f,c
  1564   003A94                     l4311:
  1565   003A94  0E00               	movlw	0
  1566   003A96  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  1567   003A98  0E00               	movlw	0
  1568   003A9A  6E0D               	movwf	___awdiv@quotient^0,c
  1569   003A9C  5009               	movf	___awdiv@divisor^0,w,c
  1570   003A9E  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  1571   003AA0  B4D8               	btfsc	status,2,c
  1572   003AA2  EF55  F01D         	goto	u4831
  1573   003AA6  EF57  F01D         	goto	u4830
  1574   003AAA                     u4831:
  1575   003AAA  EF7F  F01D         	goto	l4333
  1576   003AAE                     u4830:
  1577   003AAE  0E01               	movlw	1
  1578   003AB0  6E0B               	movwf	___awdiv@counter^0,c
  1579   003AB2  EF5F  F01D         	goto	l4319
  1580   003AB6                     l4317:
  1581   003AB6  90D8               	bcf	status,0,c
  1582   003AB8  3609               	rlcf	___awdiv@divisor^0,f,c
  1583   003ABA  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  1584   003ABC  2A0B               	incf	___awdiv@counter^0,f,c
  1585   003ABE                     l4319:
  1586   003ABE  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  1587   003AC0  EF64  F01D         	goto	u4841
  1588   003AC4  EF66  F01D         	goto	u4840
  1589   003AC8                     u4841:
  1590   003AC8  EF5B  F01D         	goto	l4317
  1591   003ACC                     u4840:
  1592   003ACC                     l4321:
  1593   003ACC  90D8               	bcf	status,0,c
  1594   003ACE  360D               	rlcf	___awdiv@quotient^0,f,c
  1595   003AD0  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  1596   003AD2  5009               	movf	___awdiv@divisor^0,w,c
  1597   003AD4  5C07               	subwf	___awdiv@dividend^0,w,c
  1598   003AD6  500A               	movf	(___awdiv@divisor+1)^0,w,c
  1599   003AD8  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  1600   003ADA  A0D8               	btfss	status,0,c
  1601   003ADC  EF72  F01D         	goto	u4851
  1602   003AE0  EF74  F01D         	goto	u4850
  1603   003AE4                     u4851:
  1604   003AE4  EF79  F01D         	goto	l4329
  1605   003AE8                     u4850:
  1606   003AE8  5009               	movf	___awdiv@divisor^0,w,c
  1607   003AEA  5E07               	subwf	___awdiv@dividend^0,f,c
  1608   003AEC  500A               	movf	(___awdiv@divisor+1)^0,w,c
  1609   003AEE  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  1610   003AF0  800D               	bsf	___awdiv@quotient^0,0,c
  1611   003AF2                     l4329:
  1612   003AF2  90D8               	bcf	status,0,c
  1613   003AF4  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  1614   003AF6  3209               	rrcf	___awdiv@divisor^0,f,c
  1615   003AF8  2E0B               	decfsz	___awdiv@counter^0,f,c
  1616   003AFA  EF66  F01D         	goto	l4321
  1617   003AFE                     l4333:
  1618   003AFE  500C               	movf	___awdiv@sign^0,w,c
  1619   003B00  B4D8               	btfsc	status,2,c
  1620   003B02  EF85  F01D         	goto	u4861
  1621   003B06  EF87  F01D         	goto	u4860
  1622   003B0A                     u4861:
  1623   003B0A  EF8B  F01D         	goto	l4337
  1624   003B0E                     u4860:
  1625   003B0E  6C0D               	negf	___awdiv@quotient^0,c
  1626   003B10  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  1627   003B12  B0D8               	btfsc	status,0,c
  1628   003B14  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  1629   003B16                     l4337:
  1630   003B16  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  1631   003B1A  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  1632   003B1E  0012               	return		;funcret
  1633   003B20                     __end_of___awdiv:
  1634                           	callstack 0
  1635                           
  1636 ;; *************** function _loop *****************
  1637 ;; Defined at:
  1638 ;;		line 386 in file "main.c"
  1639 ;; Parameters:    Size  Location     Type
  1640 ;;		None
  1641 ;; Auto vars:     Size  Location     Type
  1642 ;;  click_evt       1    4[BANK3 ] unsigned char 
  1643 ;; Return value:  Size  Location     Type
  1644 ;;                  1    wreg      void 
  1645 ;; Registers used:
  1646 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1647 ;; Tracked objects:
  1648 ;;		On entry : 0/0
  1649 ;;		On exit  : 0/0
  1650 ;;		Unchanged: 0/0
  1651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1652 ;;      Params:         0       0       0       0       0       0       0       0       0
  1653 ;;      Locals:         0       0       0       0       5       0       0       0       0
  1654 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1655 ;;      Totals:         0       0       0       0       5       0       0       0       0
  1656 ;;Total ram usage:        5 bytes
  1657 ;; Hardware stack levels used: 1
  1658 ;; Hardware stack levels required when called: 9
  1659 ;; This function calls:
  1660 ;;		___fldiv
  1661 ;;		___xotofl
  1662 ;;		_printf
  1663 ;; This function is called by:
  1664 ;;		_main
  1665 ;; This function uses a non-reentrant model
  1666 ;;
  1667                           
  1668                           	psect	text4
  1669   001294                     __ptext4:
  1670                           	callstack 0
  1671   001294                     _loop:
  1672                           	callstack 21
  1673   001294                     
  1674                           ;main.c: 387:     iterations ++;
  1675   001294  0E01               	movlw	1
  1676   001296  0100               	movlb	0	; () banked
  1677   001298  27D8               	addwf	_iterations& (0+255),f,b
  1678   00129A  0E00               	movlw	0
  1679   00129C  23D9               	addwfc	(_iterations+1)& (0+255),f,b
  1680   00129E  23DA               	addwfc	(_iterations+2)& (0+255),f,b
  1681   0012A0  23DB               	addwfc	(_iterations+3)& (0+255),f,b
  1682   0012A2  23DC               	addwfc	(_iterations+4)& (0+255),f,b
  1683   0012A4  23DD               	addwfc	(_iterations+5)& (0+255),f,b
  1684   0012A6  23DE               	addwfc	(_iterations+6)& (0+255),f,b
  1685   0012A8  23DF               	addwfc	(_iterations+7)& (0+255),f,b
  1686   0012AA                     
  1687                           ; BSR set to: 0
  1688                           ;main.c: 389:     if (b_state[0] == 0){
  1689   0012AA  51EA               	movf	_b_state& (0+255),w,b
  1690   0012AC  A4D8               	btfss	status,2,c
  1691   0012AE  EF5B  F009         	goto	u7731
  1692   0012B2  EF5D  F009         	goto	u7730
  1693   0012B6                     u7731:
  1694   0012B6  EF68  F009         	goto	l6149
  1695   0012BA                     u7730:
  1696   0012BA                     
  1697                           ; BSR set to: 0
  1698                           ;main.c: 390:         if (PORTDbits.RD2){
  1699   0012BA  A483               	btfss	131,2,c	;volatile
  1700   0012BC  EF62  F009         	goto	u7741
  1701   0012C0  EF64  F009         	goto	u7740
  1702   0012C4                     u7741:
  1703   0012C4  EF79  F009         	goto	l204
  1704   0012C8                     u7740:
  1705   0012C8                     
  1706                           ; BSR set to: 0
  1707                           ;main.c: 391:             b[0] = 0;
  1708   0012C8  0E00               	movlw	0
  1709   0012CA  6FE5               	movwf	_b& (0+255),b
  1710   0012CC  EF79  F009         	goto	l204
  1711   0012D0                     l6149:
  1712                           
  1713                           ; BSR set to: 0
  1714   0012D0  05EA               	decf	_b_state& (0+255),w,b
  1715   0012D2  A4D8               	btfss	status,2,c
  1716   0012D4  EF6E  F009         	goto	u7751
  1717   0012D8  EF70  F009         	goto	u7750
  1718   0012DC                     u7751:
  1719   0012DC  EF79  F009         	goto	l204
  1720   0012E0                     u7750:
  1721   0012E0                     
  1722                           ; BSR set to: 0
  1723                           ;main.c: 394:         if (!PORTDbits.RD2){
  1724   0012E0  B483               	btfsc	131,2,c	;volatile
  1725   0012E2  EF75  F009         	goto	u7761
  1726   0012E6  EF77  F009         	goto	u7760
  1727   0012EA                     u7761:
  1728   0012EA  EF79  F009         	goto	l204
  1729   0012EE                     u7760:
  1730   0012EE                     
  1731                           ; BSR set to: 0
  1732                           ;main.c: 395:             b[0] = 1;
  1733   0012EE  0E01               	movlw	1
  1734   0012F0  6FE5               	movwf	_b& (0+255),b
  1735   0012F2                     l204:
  1736                           
  1737                           ; BSR set to: 0
  1738                           ;main.c: 399:     if (press_evt[0]){
  1739   0012F2  0101               	movlb	1	; () banked
  1740   0012F4  51A8               	movf	_press_evt& (0+255),w,b
  1741   0012F6  B4D8               	btfsc	status,2,c
  1742   0012F8  EF80  F009         	goto	u7771
  1743   0012FC  EF82  F009         	goto	u7770
  1744   001300                     u7771:
  1745   001300  EF87  F009         	goto	l207
  1746   001304                     u7770:
  1747   001304                     
  1748                           ; BSR set to: 1
  1749                           ;main.c: 400:         PORTBbits.RB0 = 1;
  1750   001304  8081               	bsf	129,0,c	;volatile
  1751   001306                     
  1752                           ; BSR set to: 1
  1753                           ;main.c: 401:         press_evt[0] = 0;
  1754   001306  0E00               	movlw	0
  1755   001308  6FA8               	movwf	_press_evt& (0+255),b
  1756                           
  1757                           ;main.c: 402:     }else{
  1758   00130A  EF88  F009         	goto	l6159
  1759   00130E                     l207:
  1760                           
  1761                           ; BSR set to: 1
  1762                           ;main.c: 403:         PORTBbits.RB0 = 0;
  1763   00130E  9081               	bcf	129,0,c	;volatile
  1764   001310                     l6159:
  1765                           
  1766                           ; BSR set to: 1
  1767                           ;main.c: 406:     if (release_evt[0]){
  1768   001310  51A3               	movf	_release_evt& (0+255),w,b
  1769   001312  B4D8               	btfsc	status,2,c
  1770   001314  EF8E  F009         	goto	u7781
  1771   001318  EF90  F009         	goto	u7780
  1772   00131C                     u7781:
  1773   00131C  EF95  F009         	goto	l209
  1774   001320                     u7780:
  1775   001320                     
  1776                           ; BSR set to: 1
  1777                           ;main.c: 407:         PORTBbits.RB1 = 1;
  1778   001320  8281               	bsf	129,1,c	;volatile
  1779   001322                     
  1780                           ; BSR set to: 1
  1781                           ;main.c: 408:         release_evt[0] = 0;
  1782   001322  0E00               	movlw	0
  1783   001324  6FA3               	movwf	_release_evt& (0+255),b
  1784                           
  1785                           ;main.c: 409:     }else{
  1786   001326  EF96  F009         	goto	l6165
  1787   00132A                     l209:
  1788                           
  1789                           ; BSR set to: 1
  1790                           ;main.c: 410:         PORTBbits.RB1 = 0;
  1791   00132A  9281               	bcf	129,1,c	;volatile
  1792   00132C                     l6165:
  1793                           
  1794                           ; BSR set to: 1
  1795                           ;main.c: 413:     if (single_click_evt[0]){
  1796   00132C  519E               	movf	_single_click_evt& (0+255),w,b
  1797   00132E  B4D8               	btfsc	status,2,c
  1798   001330  EF9C  F009         	goto	u7791
  1799   001334  EF9E  F009         	goto	u7790
  1800   001338                     u7791:
  1801   001338  EFA3  F009         	goto	l211
  1802   00133C                     u7790:
  1803   00133C                     
  1804                           ; BSR set to: 1
  1805                           ;main.c: 414:         PORTBbits.RB2 = 1;
  1806   00133C  8481               	bsf	129,2,c	;volatile
  1807   00133E                     
  1808                           ; BSR set to: 1
  1809                           ;main.c: 415:         single_click_evt[0] = 0;
  1810   00133E  0E00               	movlw	0
  1811   001340  6F9E               	movwf	_single_click_evt& (0+255),b
  1812                           
  1813                           ;main.c: 416:     }else{
  1814   001342  EFA4  F009         	goto	l6171
  1815   001346                     l211:
  1816                           
  1817                           ; BSR set to: 1
  1818                           ;main.c: 417:         PORTBbits.RB2 = 0;
  1819   001346  9481               	bcf	129,2,c	;volatile
  1820   001348                     l6171:
  1821                           
  1822                           ; BSR set to: 1
  1823                           ;main.c: 420:     if (double_click_evt[0]){
  1824   001348  5199               	movf	_double_click_evt& (0+255),w,b
  1825   00134A  B4D8               	btfsc	status,2,c
  1826   00134C  EFAA  F009         	goto	u7801
  1827   001350  EFAC  F009         	goto	u7800
  1828   001354                     u7801:
  1829   001354  EFB1  F009         	goto	l213
  1830   001358                     u7800:
  1831   001358                     
  1832                           ; BSR set to: 1
  1833                           ;main.c: 421:         PORTBbits.RB4 = 1;
  1834   001358  8881               	bsf	129,4,c	;volatile
  1835   00135A                     
  1836                           ; BSR set to: 1
  1837                           ;main.c: 422:         double_click_evt[0] = 0;
  1838   00135A  0E00               	movlw	0
  1839   00135C  6F99               	movwf	_double_click_evt& (0+255),b
  1840                           
  1841                           ;main.c: 423:     }else{
  1842   00135E  EFB2  F009         	goto	l6177
  1843   001362                     l213:
  1844                           
  1845                           ; BSR set to: 1
  1846                           ;main.c: 424:         PORTBbits.RB4 = 0;
  1847   001362  9881               	bcf	129,4,c	;volatile
  1848   001364                     l6177:
  1849                           
  1850                           ; BSR set to: 1
  1851                           ;main.c: 427:     if (triple_click_evt[0]){
  1852   001364  5194               	movf	_triple_click_evt& (0+255),w,b
  1853   001366  B4D8               	btfsc	status,2,c
  1854   001368  EFB8  F009         	goto	u7811
  1855   00136C  EFBA  F009         	goto	u7810
  1856   001370                     u7811:
  1857   001370  EFBF  F009         	goto	l215
  1858   001374                     u7810:
  1859   001374                     
  1860                           ; BSR set to: 1
  1861                           ;main.c: 428:         PORTBbits.RB5 = 1;
  1862   001374  8A81               	bsf	129,5,c	;volatile
  1863   001376                     
  1864                           ; BSR set to: 1
  1865                           ;main.c: 429:         triple_click_evt[0] = 0;
  1866   001376  0E00               	movlw	0
  1867   001378  6F94               	movwf	_triple_click_evt& (0+255),b
  1868                           
  1869                           ;main.c: 430:     }else{
  1870   00137A  EFC0  F009         	goto	l6183
  1871   00137E                     l215:
  1872                           
  1873                           ; BSR set to: 1
  1874                           ;main.c: 431:         PORTBbits.RB5 = 0;
  1875   00137E  9A81               	bcf	129,5,c	;volatile
  1876   001380                     l6183:
  1877                           
  1878                           ; BSR set to: 1
  1879                           ;main.c: 434:     if (counter[0] >= 1){
  1880   001380  BF57               	btfsc	(_counter+7)& (0+255),7,b
  1881   001382  EFD1  F009         	goto	u7821
  1882   001386  5157               	movf	(_counter+7)& (0+255),w,b
  1883   001388  1156               	iorwf	(_counter+6)& (0+255),w,b
  1884   00138A  1155               	iorwf	(_counter+5)& (0+255),w,b
  1885   00138C  1154               	iorwf	(_counter+4)& (0+255),w,b
  1886   00138E  1153               	iorwf	(_counter+3)& (0+255),w,b
  1887   001390  1152               	iorwf	(_counter+2)& (0+255),w,b
  1888   001392  1151               	iorwf	(_counter+1)& (0+255),w,b
  1889   001394  E108               	bnz	u7820
  1890   001396  0550               	decf	_counter& (0+255),w,b
  1891   001398  A0D8               	btfss	status,0,c
  1892   00139A  EFD1  F009         	goto	u7821
  1893   00139E  EFD3  F009         	goto	u7820
  1894   0013A2                     u7821:
  1895   0013A2  EF26  F00B         	goto	l6273
  1896   0013A6                     u7820:
  1897   0013A6                     
  1898                           ; BSR set to: 1
  1899                           ;main.c: 435:         counter[0] = 0;
  1900   0013A6  EE21  F050         	lfsr	2,_counter
  1901   0013AA  0E07               	movlw	7
  1902   0013AC                     u7831:
  1903   0013AC  6ADE               	clrf	postinc2,c
  1904   0013AE  06E8               	decf	wreg,f,c
  1905   0013B0  E2FD               	bc	u7831
  1906   0013B2                     
  1907                           ; BSR set to: 1
  1908                           ;main.c: 437:         sum_iterations += iterations;
  1909   0013B2  0100               	movlb	0	; () banked
  1910   0013B4  51D8               	movf	_iterations& (0+255),w,b
  1911   0013B6  27D0               	addwf	_sum_iterations& (0+255),f,b
  1912   0013B8  51D9               	movf	(_iterations+1)& (0+255),w,b
  1913   0013BA  23D1               	addwfc	(_sum_iterations+1)& (0+255),f,b
  1914   0013BC  51DA               	movf	(_iterations+2)& (0+255),w,b
  1915   0013BE  23D2               	addwfc	(_sum_iterations+2)& (0+255),f,b
  1916   0013C0  51DB               	movf	(_iterations+3)& (0+255),w,b
  1917   0013C2  23D3               	addwfc	(_sum_iterations+3)& (0+255),f,b
  1918   0013C4  51DC               	movf	(_iterations+4)& (0+255),w,b
  1919   0013C6  23D4               	addwfc	(_sum_iterations+4)& (0+255),f,b
  1920   0013C8  51DD               	movf	(_iterations+5)& (0+255),w,b
  1921   0013CA  23D5               	addwfc	(_sum_iterations+5)& (0+255),f,b
  1922   0013CC  51DE               	movf	(_iterations+6)& (0+255),w,b
  1923   0013CE  23D6               	addwfc	(_sum_iterations+6)& (0+255),f,b
  1924   0013D0  51DF               	movf	(_iterations+7)& (0+255),w,b
  1925   0013D2  23D7               	addwfc	(_sum_iterations+7)& (0+255),f,b
  1926   0013D4                     
  1927                           ; BSR set to: 0
  1928                           ;main.c: 438:         amount_cycles ++;
  1929   0013D4  0E01               	movlw	1
  1930   0013D6  27C8               	addwf	_amount_cycles& (0+255),f,b
  1931   0013D8  0E00               	movlw	0
  1932   0013DA  23C9               	addwfc	(_amount_cycles+1)& (0+255),f,b
  1933   0013DC  23CA               	addwfc	(_amount_cycles+2)& (0+255),f,b
  1934   0013DE  23CB               	addwfc	(_amount_cycles+3)& (0+255),f,b
  1935   0013E0  23CC               	addwfc	(_amount_cycles+4)& (0+255),f,b
  1936   0013E2  23CD               	addwfc	(_amount_cycles+5)& (0+255),f,b
  1937   0013E4  23CE               	addwfc	(_amount_cycles+6)& (0+255),f,b
  1938   0013E6  23CF               	addwfc	(_amount_cycles+7)& (0+255),f,b
  1939                           
  1940                           ;main.c: 439:         iterations = 0;
  1941   0013E8  EE20  F0D8         	lfsr	2,_iterations
  1942   0013EC  0E07               	movlw	7
  1943   0013EE                     u7841:
  1944   0013EE  6ADE               	clrf	postinc2,c
  1945   0013F0  06E8               	decf	wreg,f,c
  1946   0013F2  E2FD               	bc	u7841
  1947   0013F4                     
  1948                           ; BSR set to: 0
  1949                           ;main.c: 441:         value ++;
  1950   0013F4  0E01               	movlw	1
  1951   0013F6  0101               	movlb	1	; () banked
  1952   0013F8  278C               	addwf	_value& (0+255),f,b
  1953   0013FA  0E00               	movlw	0
  1954   0013FC  238D               	addwfc	(_value+1)& (0+255),f,b
  1955   0013FE  238E               	addwfc	(_value+2)& (0+255),f,b
  1956   001400  238F               	addwfc	(_value+3)& (0+255),f,b
  1957   001402  2390               	addwfc	(_value+4)& (0+255),f,b
  1958   001404  2391               	addwfc	(_value+5)& (0+255),f,b
  1959   001406  2392               	addwfc	(_value+6)& (0+255),f,b
  1960   001408  2393               	addwfc	(_value+7)& (0+255),f,b
  1961   00140A                     
  1962                           ; BSR set to: 1
  1963                           ;main.c: 444:         if (b_state[0] == 0){
  1964   00140A  0100               	movlb	0	; () banked
  1965   00140C  51EA               	movf	_b_state& (0+255),w,b
  1966   00140E  A4D8               	btfss	status,2,c
  1967   001410  EF0C  F00A         	goto	u7851
  1968   001414  EF0E  F00A         	goto	u7850
  1969   001418                     u7851:
  1970   001418  EF44  F00A         	goto	l6207
  1971   00141C                     u7850:
  1972   00141C                     
  1973                           ; BSR set to: 0
  1974                           ;main.c: 445:             if (b[0]){
  1975   00141C  51E5               	movf	_b& (0+255),w,b
  1976   00141E  B4D8               	btfsc	status,2,c
  1977   001420  EF14  F00A         	goto	u7861
  1978   001424  EF16  F00A         	goto	u7860
  1979   001428                     u7861:
  1980   001428  EF40  F00A         	goto	l6203
  1981   00142C                     u7860:
  1982   00142C                     
  1983                           ; BSR set to: 0
  1984                           ;main.c: 446:                 b_counter[0] ++;
  1985   00142C  0E01               	movlw	1
  1986   00142E  0101               	movlb	1	; () banked
  1987   001430  2728               	addwf	_b_counter& (0+255),f,b
  1988   001432  0E00               	movlw	0
  1989   001434  2329               	addwfc	(_b_counter+1)& (0+255),f,b
  1990   001436  232A               	addwfc	(_b_counter+2)& (0+255),f,b
  1991   001438  232B               	addwfc	(_b_counter+3)& (0+255),f,b
  1992   00143A  232C               	addwfc	(_b_counter+4)& (0+255),f,b
  1993   00143C  232D               	addwfc	(_b_counter+5)& (0+255),f,b
  1994   00143E  232E               	addwfc	(_b_counter+6)& (0+255),f,b
  1995   001440  232F               	addwfc	(_b_counter+7)& (0+255),f,b
  1996                           
  1997                           ;main.c: 447:                 if (b_counter[0] >= 3){
  1998   001442  BF2F               	btfsc	(_b_counter+7)& (0+255),7,b
  1999   001444  EF33  F00A         	goto	u7871
  2000   001448  512F               	movf	(_b_counter+7)& (0+255),w,b
  2001   00144A  112E               	iorwf	(_b_counter+6)& (0+255),w,b
  2002   00144C  112D               	iorwf	(_b_counter+5)& (0+255),w,b
  2003   00144E  112C               	iorwf	(_b_counter+4)& (0+255),w,b
  2004   001450  112B               	iorwf	(_b_counter+3)& (0+255),w,b
  2005   001452  112A               	iorwf	(_b_counter+2)& (0+255),w,b
  2006   001454  1129               	iorwf	(_b_counter+1)& (0+255),w,b
  2007   001456  E109               	bnz	u7870
  2008   001458  0E03               	movlw	3
  2009   00145A  5D28               	subwf	_b_counter& (0+255),w,b
  2010   00145C  A0D8               	btfss	status,0,c
  2011   00145E  EF33  F00A         	goto	u7871
  2012   001462  EF35  F00A         	goto	u7870
  2013   001466                     u7871:
  2014   001466  EF7C  F00A         	goto	l6221
  2015   00146A                     u7870:
  2016   00146A                     
  2017                           ; BSR set to: 1
  2018                           ;main.c: 448:                     b_state[0] = 1;
  2019   00146A  0E01               	movlw	1
  2020   00146C  0100               	movlb	0	; () banked
  2021   00146E  6FEA               	movwf	_b_state& (0+255),b
  2022   001470                     l6201:
  2023                           
  2024                           ; BSR set to: 0
  2025                           ;main.c: 449:                     b_counter[0] = 0;
  2026   001470  EE21  F028         	lfsr	2,_b_counter
  2027   001474  0E07               	movlw	7
  2028   001476                     u7881:
  2029   001476  6ADE               	clrf	postinc2,c
  2030   001478  06E8               	decf	wreg,f,c
  2031   00147A  E2FD               	bc	u7881
  2032   00147C  EF7C  F00A         	goto	l6221
  2033   001480                     l6203:
  2034                           
  2035                           ; BSR set to: 0
  2036                           ;main.c: 452:                 b[0] = 1;
  2037   001480  0E01               	movlw	1
  2038   001482  6FE5               	movwf	_b& (0+255),b
  2039   001484  EF38  F00A         	goto	l6201
  2040   001488                     l6207:
  2041                           
  2042                           ; BSR set to: 0
  2043   001488  05EA               	decf	_b_state& (0+255),w,b
  2044   00148A  A4D8               	btfss	status,2,c
  2045   00148C  EF4A  F00A         	goto	u7891
  2046   001490  EF4C  F00A         	goto	u7890
  2047   001494                     u7891:
  2048   001494  EF7C  F00A         	goto	l6221
  2049   001498                     u7890:
  2050   001498                     
  2051                           ; BSR set to: 0
  2052                           ;main.c: 456:             if (!b[0]){
  2053   001498  51E5               	movf	_b& (0+255),w,b
  2054   00149A  A4D8               	btfss	status,2,c
  2055   00149C  EF52  F00A         	goto	u7901
  2056   0014A0  EF54  F00A         	goto	u7900
  2057   0014A4                     u7901:
  2058   0014A4  EF78  F00A         	goto	l6217
  2059   0014A8                     u7900:
  2060   0014A8                     
  2061                           ; BSR set to: 0
  2062                           ;main.c: 457:                 b_counter[0] ++;
  2063   0014A8  0E01               	movlw	1
  2064   0014AA  0101               	movlb	1	; () banked
  2065   0014AC  2728               	addwf	_b_counter& (0+255),f,b
  2066   0014AE  0E00               	movlw	0
  2067   0014B0  2329               	addwfc	(_b_counter+1)& (0+255),f,b
  2068   0014B2  232A               	addwfc	(_b_counter+2)& (0+255),f,b
  2069   0014B4  232B               	addwfc	(_b_counter+3)& (0+255),f,b
  2070   0014B6  232C               	addwfc	(_b_counter+4)& (0+255),f,b
  2071   0014B8  232D               	addwfc	(_b_counter+5)& (0+255),f,b
  2072   0014BA  232E               	addwfc	(_b_counter+6)& (0+255),f,b
  2073   0014BC  232F               	addwfc	(_b_counter+7)& (0+255),f,b
  2074                           
  2075                           ;main.c: 458:                 if (b_counter[0] >= 3){
  2076   0014BE  BF2F               	btfsc	(_b_counter+7)& (0+255),7,b
  2077   0014C0  EF71  F00A         	goto	u7911
  2078   0014C4  512F               	movf	(_b_counter+7)& (0+255),w,b
  2079   0014C6  112E               	iorwf	(_b_counter+6)& (0+255),w,b
  2080   0014C8  112D               	iorwf	(_b_counter+5)& (0+255),w,b
  2081   0014CA  112C               	iorwf	(_b_counter+4)& (0+255),w,b
  2082   0014CC  112B               	iorwf	(_b_counter+3)& (0+255),w,b
  2083   0014CE  112A               	iorwf	(_b_counter+2)& (0+255),w,b
  2084   0014D0  1129               	iorwf	(_b_counter+1)& (0+255),w,b
  2085   0014D2  E109               	bnz	u7910
  2086   0014D4  0E03               	movlw	3
  2087   0014D6  5D28               	subwf	_b_counter& (0+255),w,b
  2088   0014D8  A0D8               	btfss	status,0,c
  2089   0014DA  EF71  F00A         	goto	u7911
  2090   0014DE  EF73  F00A         	goto	u7910
  2091   0014E2                     u7911:
  2092   0014E2  EF7C  F00A         	goto	l6221
  2093   0014E6                     u7910:
  2094   0014E6                     
  2095                           ; BSR set to: 1
  2096                           ;main.c: 459:                     b_state[0] = 0;
  2097   0014E6  0E00               	movlw	0
  2098   0014E8  0100               	movlb	0	; () banked
  2099   0014EA  6FEA               	movwf	_b_state& (0+255),b
  2100   0014EC  EF38  F00A         	goto	l6201
  2101   0014F0                     l6217:
  2102                           
  2103                           ; BSR set to: 0
  2104                           ;main.c: 463:                 b[0] = 0;
  2105   0014F0  0E00               	movlw	0
  2106   0014F2  6FE5               	movwf	_b& (0+255),b
  2107   0014F4  EF38  F00A         	goto	l6201
  2108   0014F8                     l6221:
  2109                           
  2110                           ;main.c: 469:         char click_evt = 0;
  2111   0014F8  0E00               	movlw	0
  2112   0014FA  0103               	movlb	3	; () banked
  2113   0014FC  6F04               	movwf	loop@click_evt& (0+255),b
  2114   0014FE                     
  2115                           ; BSR set to: 3
  2116                           ;main.c: 471:         if (last_b[0] == 0 && b_state[0] == 1){
  2117   0014FE  0100               	movlb	0	; () banked
  2118   001500  51EF               	movf	_last_b& (0+255),w,b
  2119   001502  A4D8               	btfss	status,2,c
  2120   001504  EF86  F00A         	goto	u7921
  2121   001508  EF88  F00A         	goto	u7920
  2122   00150C                     u7921:
  2123   00150C  EF9A  F00A         	goto	l6233
  2124   001510                     u7920:
  2125   001510                     
  2126                           ; BSR set to: 0
  2127   001510  05EA               	decf	_b_state& (0+255),w,b
  2128   001512  A4D8               	btfss	status,2,c
  2129   001514  EF8E  F00A         	goto	u7931
  2130   001518  EF90  F00A         	goto	u7930
  2131   00151C                     u7931:
  2132   00151C  EF9A  F00A         	goto	l6233
  2133   001520                     u7930:
  2134   001520                     
  2135                           ; BSR set to: 0
  2136                           ;main.c: 473:             press_evt[0] ++;
  2137   001520  0101               	movlb	1	; () banked
  2138   001522  2BA8               	incf	_press_evt& (0+255),f,b
  2139   001524                     
  2140                           ; BSR set to: 1
  2141                           ;main.c: 474:             click_evt = 1;
  2142   001524  0E01               	movlw	1
  2143   001526  0103               	movlb	3	; () banked
  2144   001528  6F04               	movwf	loop@click_evt& (0+255),b
  2145   00152A                     
  2146                           ; BSR set to: 3
  2147                           ;main.c: 476:             last_b[0] = 1;
  2148   00152A  0E01               	movlw	1
  2149   00152C  0100               	movlb	0	; () banked
  2150   00152E  6FEF               	movwf	_last_b& (0+255),b
  2151                           
  2152                           ;main.c: 477:         }else if (last_b[0] == 1 && b_state[0] == 0){
  2153   001530  EFAF  F00A         	goto	l6241
  2154   001534                     l6233:
  2155                           
  2156                           ; BSR set to: 0
  2157   001534  05EF               	decf	_last_b& (0+255),w,b
  2158   001536  A4D8               	btfss	status,2,c
  2159   001538  EFA0  F00A         	goto	u7941
  2160   00153C  EFA2  F00A         	goto	u7940
  2161   001540                     u7941:
  2162   001540  EFAF  F00A         	goto	l6241
  2163   001544                     u7940:
  2164   001544                     
  2165                           ; BSR set to: 0
  2166   001544  51EA               	movf	_b_state& (0+255),w,b
  2167   001546  A4D8               	btfss	status,2,c
  2168   001548  EFA8  F00A         	goto	u7951
  2169   00154C  EFAA  F00A         	goto	u7950
  2170   001550                     u7951:
  2171   001550  EFAF  F00A         	goto	l6241
  2172   001554                     u7950:
  2173   001554                     
  2174                           ; BSR set to: 0
  2175                           ;main.c: 479:             release_evt[0] ++;
  2176   001554  0101               	movlb	1	; () banked
  2177   001556  2BA3               	incf	_release_evt& (0+255),f,b
  2178   001558                     
  2179                           ; BSR set to: 1
  2180                           ;main.c: 481:             last_b[0] = 0;
  2181   001558  0E00               	movlw	0
  2182   00155A  0100               	movlb	0	; () banked
  2183   00155C  6FEF               	movwf	_last_b& (0+255),b
  2184   00155E                     l6241:
  2185                           
  2186                           ; BSR set to: 0
  2187                           ;main.c: 486:         if (combination_state[0] == 0){
  2188   00155E  51E0               	movf	_combination_state& (0+255),w,b
  2189   001560  A4D8               	btfss	status,2,c
  2190   001562  EFB5  F00A         	goto	u7961
  2191   001566  EFB7  F00A         	goto	u7960
  2192   00156A                     u7961:
  2193   00156A  EFCB  F00A         	goto	l6249
  2194   00156E                     u7960:
  2195   00156E                     
  2196                           ; BSR set to: 0
  2197                           ;main.c: 488:             if (click_evt){
  2198   00156E  0103               	movlb	3	; () banked
  2199   001570  5104               	movf	loop@click_evt& (0+255),w,b
  2200   001572  B4D8               	btfsc	status,2,c
  2201   001574  EFBE  F00A         	goto	u7971
  2202   001578  EFC0  F00A         	goto	u7970
  2203   00157C                     u7971:
  2204   00157C  EF26  F00B         	goto	l6273
  2205   001580                     u7970:
  2206   001580                     
  2207                           ; BSR set to: 3
  2208                           ;main.c: 489:                 state_counter[0] = 0;
  2209   001580  EE21  F000         	lfsr	2,_state_counter
  2210   001584  0E07               	movlw	7
  2211   001586                     u7981:
  2212   001586  6ADE               	clrf	postinc2,c
  2213   001588  06E8               	decf	wreg,f,c
  2214   00158A  E2FD               	bc	u7981
  2215   00158C                     
  2216                           ; BSR set to: 3
  2217                           ;main.c: 490:                 combination_state[0] = 1;
  2218   00158C  0E01               	movlw	1
  2219   00158E  0100               	movlb	0	; () banked
  2220   001590  6FE0               	movwf	_combination_state& (0+255),b
  2221   001592  EF26  F00B         	goto	l6273
  2222   001596                     l6249:
  2223                           
  2224                           ; BSR set to: 0
  2225   001596  51E0               	movf	_combination_state& (0+255),w,b
  2226   001598  B4D8               	btfsc	status,2,c
  2227   00159A  EFD1  F00A         	goto	u7991
  2228   00159E  EFD3  F00A         	goto	u7990
  2229   0015A2                     u7991:
  2230   0015A2  EF26  F00B         	goto	l6273
  2231   0015A6                     u7990:
  2232   0015A6                     
  2233                           ; BSR set to: 0
  2234                           ;main.c: 494:             if (click_evt){
  2235   0015A6  0103               	movlb	3	; () banked
  2236   0015A8  5104               	movf	loop@click_evt& (0+255),w,b
  2237   0015AA  B4D8               	btfsc	status,2,c
  2238   0015AC  EFDA  F00A         	goto	u8001
  2239   0015B0  EFDC  F00A         	goto	u8000
  2240   0015B4                     u8001:
  2241   0015B4  EFDE  F00A         	goto	l6255
  2242   0015B8                     u8000:
  2243   0015B8                     
  2244                           ; BSR set to: 3
  2245                           ;main.c: 495:                 combination_state[0] ++;
  2246   0015B8  0100               	movlb	0	; () banked
  2247   0015BA  2BE0               	incf	_combination_state& (0+255),f,b
  2248   0015BC                     l6255:
  2249                           
  2250                           ;main.c: 497:             if (state_counter[0] >= 50){
  2251   0015BC  0101               	movlb	1	; () banked
  2252   0015BE  BF07               	btfsc	(_state_counter+7)& (0+255),7,b
  2253   0015C0  EFF1  F00A         	goto	u8011
  2254   0015C4  5107               	movf	(_state_counter+7)& (0+255),w,b
  2255   0015C6  1106               	iorwf	(_state_counter+6)& (0+255),w,b
  2256   0015C8  1105               	iorwf	(_state_counter+5)& (0+255),w,b
  2257   0015CA  1104               	iorwf	(_state_counter+4)& (0+255),w,b
  2258   0015CC  1103               	iorwf	(_state_counter+3)& (0+255),w,b
  2259   0015CE  1102               	iorwf	(_state_counter+2)& (0+255),w,b
  2260   0015D0  1101               	iorwf	(_state_counter+1)& (0+255),w,b
  2261   0015D2  E109               	bnz	u8010
  2262   0015D4  0E32               	movlw	50
  2263   0015D6  5D00               	subwf	_state_counter& (0+255),w,b
  2264   0015D8  A0D8               	btfss	status,0,c
  2265   0015DA  EFF1  F00A         	goto	u8011
  2266   0015DE  EFF3  F00A         	goto	u8010
  2267   0015E2                     u8011:
  2268   0015E2  EF1B  F00B         	goto	l6271
  2269   0015E6                     u8010:
  2270   0015E6                     
  2271                           ; BSR set to: 1
  2272                           ;main.c: 500:                 if (combination_state[0] == 1){
  2273   0015E6  0100               	movlb	0	; () banked
  2274   0015E8  05E0               	decf	_combination_state& (0+255),w,b
  2275   0015EA  A4D8               	btfss	status,2,c
  2276   0015EC  EFFA  F00A         	goto	u8021
  2277   0015F0  EFFC  F00A         	goto	u8020
  2278   0015F4                     u8021:
  2279   0015F4  EF00  F00B         	goto	l6261
  2280   0015F8                     u8020:
  2281   0015F8                     
  2282                           ; BSR set to: 0
  2283                           ;main.c: 501:                     single_click_evt[0] ++;
  2284   0015F8  0101               	movlb	1	; () banked
  2285   0015FA  2B9E               	incf	_single_click_evt& (0+255),f,b
  2286                           
  2287                           ;main.c: 502:                 }else if (combination_state[0] == 2){
  2288   0015FC  EF18  F00B         	goto	l6269
  2289   001600                     l6261:
  2290                           
  2291                           ; BSR set to: 0
  2292   001600  0E02               	movlw	2
  2293   001602  19E0               	xorwf	_combination_state& (0+255),w,b
  2294   001604  A4D8               	btfss	status,2,c
  2295   001606  EF07  F00B         	goto	u8031
  2296   00160A  EF09  F00B         	goto	u8030
  2297   00160E                     u8031:
  2298   00160E  EF0D  F00B         	goto	l6265
  2299   001612                     u8030:
  2300   001612                     
  2301                           ; BSR set to: 0
  2302                           ;main.c: 503:                     double_click_evt[0] ++;
  2303   001612  0101               	movlb	1	; () banked
  2304   001614  2B99               	incf	_double_click_evt& (0+255),f,b
  2305                           
  2306                           ;main.c: 504:                 }else if(combination_state[0] == 3){
  2307   001616  EF18  F00B         	goto	l6269
  2308   00161A                     l6265:
  2309                           
  2310                           ; BSR set to: 0
  2311   00161A  0E03               	movlw	3
  2312   00161C  19E0               	xorwf	_combination_state& (0+255),w,b
  2313   00161E  A4D8               	btfss	status,2,c
  2314   001620  EF14  F00B         	goto	u8041
  2315   001624  EF16  F00B         	goto	u8040
  2316   001628                     u8041:
  2317   001628  EF18  F00B         	goto	l6269
  2318   00162C                     u8040:
  2319   00162C                     
  2320                           ; BSR set to: 0
  2321                           ;main.c: 505:                     triple_click_evt[0] ++;
  2322   00162C  0101               	movlb	1	; () banked
  2323   00162E  2B94               	incf	_triple_click_evt& (0+255),f,b
  2324   001630                     l6269:
  2325                           
  2326                           ;main.c: 507:                 combination_state[0] = 0;
  2327   001630  0E00               	movlw	0
  2328   001632  0100               	movlb	0	; () banked
  2329   001634  6FE0               	movwf	_combination_state& (0+255),b
  2330   001636                     l6271:
  2331                           
  2332                           ;main.c: 509:             state_counter[0] ++;
  2333   001636  0E01               	movlw	1
  2334   001638  0101               	movlb	1	; () banked
  2335   00163A  2700               	addwf	_state_counter& (0+255),f,b
  2336   00163C  0E00               	movlw	0
  2337   00163E  2301               	addwfc	(_state_counter+1)& (0+255),f,b
  2338   001640  2302               	addwfc	(_state_counter+2)& (0+255),f,b
  2339   001642  2303               	addwfc	(_state_counter+3)& (0+255),f,b
  2340   001644  2304               	addwfc	(_state_counter+4)& (0+255),f,b
  2341   001646  2305               	addwfc	(_state_counter+5)& (0+255),f,b
  2342   001648  2306               	addwfc	(_state_counter+6)& (0+255),f,b
  2343   00164A  2307               	addwfc	(_state_counter+7)& (0+255),f,b
  2344   00164C                     l6273:
  2345                           
  2346                           ;main.c: 513:     if (counter[1] >= 1000){
  2347   00164C  0101               	movlb	1	; () banked
  2348   00164E  BF5F               	btfsc	(_counter+15)& (0+255),7,b
  2349   001650  EF3A  F00B         	goto	u8051
  2350   001654  515F               	movf	(_counter+15)& (0+255),w,b
  2351   001656  115E               	iorwf	(_counter+14)& (0+255),w,b
  2352   001658  115D               	iorwf	(_counter+13)& (0+255),w,b
  2353   00165A  115C               	iorwf	(_counter+12)& (0+255),w,b
  2354   00165C  115B               	iorwf	(_counter+11)& (0+255),w,b
  2355   00165E  115A               	iorwf	(_counter+10)& (0+255),w,b
  2356   001660  E10B               	bnz	u8050
  2357   001662  0EE8               	movlw	232
  2358   001664  5D58               	subwf	(_counter+8)& (0+255),w,b
  2359   001666  0E03               	movlw	3
  2360   001668  5959               	subwfb	(_counter+9)& (0+255),w,b
  2361   00166A  A0D8               	btfss	status,0,c
  2362   00166C  EF3A  F00B         	goto	u8051
  2363   001670  EF3C  F00B         	goto	u8050
  2364   001674                     u8051:
  2365   001674  EFCA  F00B         	goto	l242
  2366   001678                     u8050:
  2367   001678                     
  2368                           ; BSR set to: 1
  2369                           ;main.c: 515:         printf("Sum iterations, Amount cycles: %lld, %lld\n", sum_iteratio
      +                          ns, amount_cycles);
  2370   001678  0E3D               	movlw	low STR_1
  2371   00167A  0100               	movlb	0	; () banked
  2372   00167C  6FB4               	movwf	printf@fmt& (0+255),b
  2373   00167E  0E08               	movlw	high STR_1
  2374   001680  6FB5               	movwf	(printf@fmt+1)& (0+255),b
  2375   001682  C0D0  F0B6         	movff	_sum_iterations,?_printf+2
  2376   001686  C0D1  F0B7         	movff	_sum_iterations+1,?_printf+3
  2377   00168A  C0D2  F0B8         	movff	_sum_iterations+2,?_printf+4
  2378   00168E  C0D3  F0B9         	movff	_sum_iterations+3,?_printf+5
  2379   001692  C0D4  F0BA         	movff	_sum_iterations+4,?_printf+6
  2380   001696  C0D5  F0BB         	movff	_sum_iterations+5,?_printf+7
  2381   00169A  C0D6  F0BC         	movff	_sum_iterations+6,?_printf+8
  2382   00169E  C0D7  F0BD         	movff	_sum_iterations+7,?_printf+9
  2383   0016A2  C0C8  F0BE         	movff	_amount_cycles,?_printf+10
  2384   0016A6  C0C9  F0BF         	movff	_amount_cycles+1,?_printf+11
  2385   0016AA  C0CA  F0C0         	movff	_amount_cycles+2,?_printf+12
  2386   0016AE  C0CB  F0C1         	movff	_amount_cycles+3,?_printf+13
  2387   0016B2  C0CC  F0C2         	movff	_amount_cycles+4,?_printf+14
  2388   0016B6  C0CD  F0C3         	movff	_amount_cycles+5,?_printf+15
  2389   0016BA  C0CE  F0C4         	movff	_amount_cycles+6,?_printf+16
  2390   0016BE  C0CF  F0C5         	movff	_amount_cycles+7,?_printf+17
  2391   0016C2  ECDA  F020         	call	_printf	;wreg free
  2392   0016C6                     
  2393                           ;main.c: 516:         printf("Average amount of iterations per button status check: %.4f
      +                          \n", ( (float)sum_iterations / (float)amount_cycles));
  2394   0016C6  C0D0  F007         	movff	_sum_iterations,___xotofl@val
  2395   0016CA  C0D1  F008         	movff	_sum_iterations+1,___xotofl@val+1
  2396   0016CE  C0D2  F009         	movff	_sum_iterations+2,___xotofl@val+2
  2397   0016D2  C0D3  F00A         	movff	_sum_iterations+3,___xotofl@val+3
  2398   0016D6  C0D4  F00B         	movff	_sum_iterations+4,___xotofl@val+4
  2399   0016DA  C0D5  F00C         	movff	_sum_iterations+5,___xotofl@val+5
  2400   0016DE  C0D6  F00D         	movff	_sum_iterations+6,___xotofl@val+6
  2401   0016E2  C0D7  F00E         	movff	_sum_iterations+7,___xotofl@val+7
  2402   0016E6  0E01               	movlw	1
  2403   0016E8  EC8B  F014         	call	___xotofl
  2404   0016EC  C007  F021         	movff	?___xotofl,___fldiv@b
  2405   0016F0  C008  F022         	movff	?___xotofl+1,___fldiv@b+1
  2406   0016F4  C009  F023         	movff	?___xotofl+2,___fldiv@b+2
  2407   0016F8  C00A  F024         	movff	?___xotofl+3,___fldiv@b+3
  2408   0016FC  C0C8  F007         	movff	_amount_cycles,___xotofl@val
  2409   001700  C0C9  F008         	movff	_amount_cycles+1,___xotofl@val+1
  2410   001704  C0CA  F009         	movff	_amount_cycles+2,___xotofl@val+2
  2411   001708  C0CB  F00A         	movff	_amount_cycles+3,___xotofl@val+3
  2412   00170C  C0CC  F00B         	movff	_amount_cycles+4,___xotofl@val+4
  2413   001710  C0CD  F00C         	movff	_amount_cycles+5,___xotofl@val+5
  2414   001714  C0CE  F00D         	movff	_amount_cycles+6,___xotofl@val+6
  2415   001718  C0CF  F00E         	movff	_amount_cycles+7,___xotofl@val+7
  2416   00171C  0E01               	movlw	1
  2417   00171E  EC8B  F014         	call	___xotofl
  2418   001722  C007  F025         	movff	?___xotofl,___fldiv@a
  2419   001726  C008  F026         	movff	?___xotofl+1,___fldiv@a+1
  2420   00172A  C009  F027         	movff	?___xotofl+2,___fldiv@a+2
  2421   00172E  C00A  F028         	movff	?___xotofl+3,___fldiv@a+3
  2422   001732  ECBE  F012         	call	___fldiv	;wreg free
  2423   001736  C021  F300         	movff	?___fldiv,_loop$2262
  2424   00173A  C022  F301         	movff	?___fldiv+1,_loop$2262+1
  2425   00173E  C023  F302         	movff	?___fldiv+2,_loop$2262+2
  2426   001742  C024  F303         	movff	?___fldiv+3,_loop$2262+3
  2427   001746                     
  2428                           ;main.c: 516:         printf("Average amount of iterations per button status check: %.4f
      +                          \n", ( (float)sum_iterations / (float)amount_cycles));
  2429   001746  0E01               	movlw	low STR_2
  2430   001748  0100               	movlb	0	; () banked
  2431   00174A  6FB4               	movwf	printf@fmt& (0+255),b
  2432   00174C  0E08               	movlw	high STR_2
  2433   00174E  6FB5               	movwf	(printf@fmt+1)& (0+255),b
  2434   001750  C300  F0B6         	movff	_loop$2262,?_printf+2
  2435   001754  C301  F0B7         	movff	_loop$2262+1,?_printf+3
  2436   001758  C302  F0B8         	movff	_loop$2262+2,?_printf+4
  2437   00175C  C303  F0B9         	movff	_loop$2262+3,?_printf+5
  2438   001760  ECDA  F020         	call	_printf	;wreg free
  2439   001764                     
  2440                           ;main.c: 518:         amount_cycles = 0;
  2441   001764  EE20  F0C8         	lfsr	2,_amount_cycles
  2442   001768  0E07               	movlw	7
  2443   00176A                     u8061:
  2444   00176A  6ADE               	clrf	postinc2,c
  2445   00176C  06E8               	decf	wreg,f,c
  2446   00176E  E2FD               	bc	u8061
  2447   001770                     
  2448                           ;main.c: 519:         sum_iterations = 0;
  2449   001770  EE20  F0D0         	lfsr	2,_sum_iterations
  2450   001774  0E07               	movlw	7
  2451   001776                     u8071:
  2452   001776  6ADE               	clrf	postinc2,c
  2453   001778  06E8               	decf	wreg,f,c
  2454   00177A  E2FD               	bc	u8071
  2455   00177C                     
  2456                           ;main.c: 522:         counter[1] = 0;
  2457   00177C  EE21  F058         	lfsr	2,_counter+8
  2458   001780  0E07               	movlw	7
  2459   001782                     u8081:
  2460   001782  6ADE               	clrf	postinc2,c
  2461   001784  06E8               	decf	wreg,f,c
  2462   001786  E2FD               	bc	u8081
  2463   001788                     
  2464                           ;main.c: 523:         counter[0] = 0;
  2465   001788  EE21  F050         	lfsr	2,_counter
  2466   00178C  0E07               	movlw	7
  2467   00178E                     u8091:
  2468   00178E  6ADE               	clrf	postinc2,c
  2469   001790  06E8               	decf	wreg,f,c
  2470   001792  E2FD               	bc	u8091
  2471   001794                     l242:
  2472   001794  0012               	return		;funcret
  2473   001796                     __end_of_loop:
  2474                           	callstack 0
  2475                           
  2476 ;; *************** function _printf *****************
  2477 ;; Defined at:
  2478 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\printf.c"
  2479 ;; Parameters:    Size  Location     Type
  2480 ;;  fmt             2   84[BANK0 ] PTR const unsigned char 
  2481 ;;		 -> STR_2(60), STR_1(43), 
  2482 ;; Auto vars:     Size  Location     Type
  2483 ;;  ap              2  102[BANK0 ] PTR void [1]
  2484 ;;		 -> ?_printf(2), 
  2485 ;;  ret             2    0        int 
  2486 ;; Return value:  Size  Location     Type
  2487 ;;                  2   84[BANK0 ] int 
  2488 ;; Registers used:
  2489 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2490 ;; Tracked objects:
  2491 ;;		On entry : 0/0
  2492 ;;		On exit  : 0/0
  2493 ;;		Unchanged: 0/0
  2494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2495 ;;      Params:         0      18       0       0       0       0       0       0       0
  2496 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2497 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2498 ;;      Totals:         0      20       0       0       0       0       0       0       0
  2499 ;;Total ram usage:       20 bytes
  2500 ;; Hardware stack levels used: 1
  2501 ;; Hardware stack levels required when called: 8
  2502 ;; This function calls:
  2503 ;;		_vfprintf
  2504 ;; This function is called by:
  2505 ;;		_loop
  2506 ;; This function uses a non-reentrant model
  2507 ;;
  2508                           
  2509                           	psect	text5
  2510   0041B4                     __ptext5:
  2511                           	callstack 0
  2512   0041B4                     _printf:
  2513                           	callstack 21
  2514   0041B4  0EB6               	movlw	low (?_printf+2)
  2515   0041B6  0100               	movlb	0	; () banked
  2516   0041B8  6FC6               	movwf	printf@ap& (0+255),b
  2517   0041BA  0E00               	movlw	high (?_printf+2)
  2518   0041BC  6FC7               	movwf	(printf@ap+1)& (0+255),b
  2519   0041BE                     
  2520                           ; BSR set to: 0
  2521   0041BE  0E00               	movlw	0
  2522   0041C0  6FAE               	movwf	vfprintf@fp& (0+255),b
  2523   0041C2  0E00               	movlw	0
  2524   0041C4  6FAF               	movwf	(vfprintf@fp+1)& (0+255),b
  2525   0041C6  C0B4  F0B0         	movff	printf@fmt,vfprintf@fmt
  2526   0041CA  C0B5  F0B1         	movff	printf@fmt+1,vfprintf@fmt+1
  2527   0041CE  0EC6               	movlw	low printf@ap
  2528   0041D0  6FB2               	movwf	vfprintf@ap& (0+255),b
  2529   0041D2  0E00               	movlw	high printf@ap
  2530   0041D4  6FB3               	movwf	(vfprintf@ap+1)& (0+255),b
  2531   0041D6  EC8C  F01F         	call	_vfprintf	;wreg free
  2532   0041DA  0012               	return		;funcret
  2533   0041DC                     __end_of_printf:
  2534                           	callstack 0
  2535                           
  2536 ;; *************** function _vfprintf *****************
  2537 ;; Defined at:
  2538 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2539 ;; Parameters:    Size  Location     Type
  2540 ;;  fp              2   78[BANK0 ] PTR struct _IO_FILE
  2541 ;;		 -> NULL(0), 
  2542 ;;  fmt             2   80[BANK0 ] PTR const unsigned char 
  2543 ;;		 -> STR_2(60), STR_1(43), 
  2544 ;;  ap              2   82[BANK0 ] PTR PTR void 
  2545 ;;		 -> printf@ap(2), 
  2546 ;; Auto vars:     Size  Location     Type
  2547 ;;  cfmt            2   79[COMRAM] PTR unsigned char 
  2548 ;;		 -> STR_2(60), STR_1(43), 
  2549 ;; Return value:  Size  Location     Type
  2550 ;;                  2   78[BANK0 ] int 
  2551 ;; Registers used:
  2552 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2553 ;; Tracked objects:
  2554 ;;		On entry : 0/0
  2555 ;;		On exit  : 0/0
  2556 ;;		Unchanged: 0/0
  2557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2558 ;;      Params:         0       6       0       0       0       0       0       0       0
  2559 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2560 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2561 ;;      Totals:         2       6       0       0       0       0       0       0       0
  2562 ;;Total ram usage:        8 bytes
  2563 ;; Hardware stack levels used: 1
  2564 ;; Hardware stack levels required when called: 7
  2565 ;; This function calls:
  2566 ;;		_vfpfcnvrt
  2567 ;; This function is called by:
  2568 ;;		_printf
  2569 ;; This function uses a non-reentrant model
  2570 ;;
  2571                           
  2572                           	psect	text6
  2573   003F18                     __ptext6:
  2574                           	callstack 0
  2575   003F18                     _vfprintf:
  2576                           	callstack 21
  2577   003F18                     
  2578                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2579   003F18  C0B0  F050         	movff	vfprintf@fmt,vfprintf@cfmt
  2580   003F1C  C0B1  F051         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2581                           
  2582                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2583   003F20  EFA1  F01F         	goto	l6085
  2584   003F24                     l6083:
  2585                           
  2586                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2587   003F24  C0AE  F093         	movff	vfprintf@fp,vfpfcnvrt@fp
  2588   003F28  C0AF  F094         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2589   003F2C  0E50               	movlw	low vfprintf@cfmt
  2590   003F2E  0100               	movlb	0	; () banked
  2591   003F30  6F95               	movwf	vfpfcnvrt@fmt& (0+255),b
  2592   003F32  0E00               	movlw	high vfprintf@cfmt
  2593   003F34  6F96               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2594   003F36  C0B2  F097         	movff	vfprintf@ap,vfpfcnvrt@ap
  2595   003F3A  C0B3  F098         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2596   003F3E  ECCB  F00B         	call	_vfpfcnvrt	;wreg free
  2597   003F42                     l6085:
  2598                           
  2599                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2600   003F42  C050  FFF6         	movff	vfprintf@cfmt,tblptrl
  2601   003F46  C051  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2602   003F4A                     	if	0	;tblptru may be non-zero
  2603   003F4A                     	endif
  2604   003F4A                     	if	0	;tblptru may be non-zero
  2605   003F4A                     	endif
  2606   003F4A  0008               	tblrd		*
  2607   003F4C  50F5               	movf	tablat,w,c
  2608   003F4E  0900               	iorlw	0
  2609   003F50  A4D8               	btfss	status,2,c
  2610   003F52  EFAD  F01F         	goto	u7621
  2611   003F56  EFAF  F01F         	goto	u7620
  2612   003F5A                     u7621:
  2613   003F5A  EF92  F01F         	goto	l6083
  2614   003F5E                     u7620:
  2615   003F5E                     
  2616                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2617   003F5E  0E00               	movlw	0
  2618   003F60  0100               	movlb	0	; () banked
  2619   003F62  6FAF               	movwf	(?_vfprintf+1)& (0+255),b
  2620   003F64  0E00               	movlw	0
  2621   003F66  6FAE               	movwf	?_vfprintf& (0+255),b
  2622   003F68                     
  2623                           ; BSR set to: 0
  2624   003F68  0012               	return		;funcret
  2625   003F6A                     __end_of_vfprintf:
  2626                           	callstack 0
  2627                           
  2628 ;; *************** function _vfpfcnvrt *****************
  2629 ;; Defined at:
  2630 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2631 ;; Parameters:    Size  Location     Type
  2632 ;;  fp              2   51[BANK0 ] PTR struct _IO_FILE
  2633 ;;		 -> NULL(0), 
  2634 ;;  fmt             2   53[BANK0 ] PTR PTR unsigned char 
  2635 ;;		 -> vfprintf@cfmt(2), 
  2636 ;;  ap              2   55[BANK0 ] PTR PTR void 
  2637 ;;		 -> printf@ap(2), 
  2638 ;; Auto vars:     Size  Location     Type
  2639 ;;  convarg         8   67[BANK0 ] struct .
  2640 ;;  cp              2   76[BANK0 ] PTR unsigned char 
  2641 ;;		 -> STR_2(60), STR_1(43), 
  2642 ;;  i               2    0        int 
  2643 ;;  done            2    0        int 
  2644 ;;  c               1   75[BANK0 ] unsigned char 
  2645 ;; Return value:  Size  Location     Type
  2646 ;;                  1    wreg      void 
  2647 ;; Registers used:
  2648 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2649 ;; Tracked objects:
  2650 ;;		On entry : 0/0
  2651 ;;		On exit  : 0/0
  2652 ;;		Unchanged: 0/0
  2653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2654 ;;      Params:         0       6       0       0       0       0       0       0       0
  2655 ;;      Locals:         0      11       0       0       0       0       0       0       0
  2656 ;;      Temps:          0      10       0       0       0       0       0       0       0
  2657 ;;      Totals:         0      27       0       0       0       0       0       0       0
  2658 ;;Total ram usage:       27 bytes
  2659 ;; Hardware stack levels used: 1
  2660 ;; Hardware stack levels required when called: 6
  2661 ;; This function calls:
  2662 ;;		_atoi
  2663 ;;		_dtoa
  2664 ;;		_efgtoa
  2665 ;;		_fputc
  2666 ;;		_isdigit
  2667 ;; This function is called by:
  2668 ;;		_vfprintf
  2669 ;; This function uses a non-reentrant model
  2670 ;;
  2671                           
  2672                           	psect	text7
  2673   001796                     __ptext7:
  2674                           	callstack 0
  2675   001796                     _vfpfcnvrt:
  2676                           	callstack 21
  2677   001796                     
  2678                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2679   001796  C095  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2680   00179A  C096  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2681   00179E  CFDE FFF6          	movff	postinc2,tblptrl
  2682   0017A2  CFDD FFF7          	movff	postdec2,tblptrh
  2683   0017A6                     	if	0	;tblptru may be non-zero
  2684   0017A6                     	endif
  2685   0017A6                     	if	0	;tblptru may be non-zero
  2686   0017A6                     	endif
  2687   0017A6  0008               	tblrd		*
  2688   0017A8  50F5               	movf	tablat,w,c
  2689   0017AA  0A25               	xorlw	37
  2690   0017AC  A4D8               	btfss	status,2,c
  2691   0017AE  EFDB  F00B         	goto	u7541
  2692   0017B2  EFDD  F00B         	goto	u7540
  2693   0017B6                     u7541:
  2694   0017B6  EF34  F00E         	goto	l6045
  2695   0017BA                     u7540:
  2696   0017BA                     
  2697                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2698   0017BA  C095  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2699   0017BE  C096  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2700   0017C2  2ADE               	incf	postinc2,f,c
  2701   0017C4  0E00               	movlw	0
  2702   0017C6  22DD               	addwfc	postdec2,f,c
  2703   0017C8                     
  2704                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2705   0017C8  0E00               	movlw	0
  2706   0017CA  0100               	movlb	0	; () banked
  2707   0017CC  6FFD               	movwf	(_width+1)& (0+255),b
  2708   0017CE  0E00               	movlw	0
  2709   0017D0  6FFC               	movwf	_width& (0+255),b
  2710   0017D2  C0FC  F0FE         	movff	_width,_flags
  2711   0017D6                     
  2712                           ; BSR set to: 0
  2713                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2714   0017D6  6856               	setf	_prec^0,c
  2715   0017D8  6857               	setf	(_prec+1)^0,c
  2716   0017DA                     
  2717                           ; BSR set to: 0
  2718                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1091:         if 
      +                          ((*fmt)[0] == '.') {
  2719   0017DA  C095  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2720   0017DE  C096  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2721   0017E2  CFDE FFF6          	movff	postinc2,tblptrl
  2722   0017E6  CFDD FFF7          	movff	postdec2,tblptrh
  2723   0017EA                     	if	0	;tblptru may be non-zero
  2724   0017EA                     	endif
  2725   0017EA                     	if	0	;tblptru may be non-zero
  2726   0017EA                     	endif
  2727   0017EA  0008               	tblrd		*
  2728   0017EC  50F5               	movf	tablat,w,c
  2729   0017EE  0A2E               	xorlw	46
  2730   0017F0  A4D8               	btfss	status,2,c
  2731   0017F2  EFFD  F00B         	goto	u7551
  2732   0017F6  EFFF  F00B         	goto	u7550
  2733   0017FA                     u7551:
  2734   0017FA  EF6D  F00C         	goto	l5969
  2735   0017FE                     u7550:
  2736   0017FE                     
  2737                           ; BSR set to: 0
  2738                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1092:            
      +                           prec = 0;
  2739   0017FE  0E00               	movlw	0
  2740   001800  6E57               	movwf	(_prec+1)^0,c
  2741   001802  0E00               	movlw	0
  2742   001804  6E56               	movwf	_prec^0,c
  2743   001806                     
  2744                           ; BSR set to: 0
  2745                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1093:            
      +                           ++*fmt;
  2746   001806  C095  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2747   00180A  C096  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2748   00180E  2ADE               	incf	postinc2,f,c
  2749   001810  0E00               	movlw	0
  2750   001812  22DD               	addwfc	postdec2,f,c
  2751   001814                     
  2752                           ; BSR set to: 0
  2753                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1094:            
      +                           if ((*fmt)[0] == '*') {
  2754   001814  C095  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2755   001818  C096  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2756   00181C  CFDE FFF6          	movff	postinc2,tblptrl
  2757   001820  CFDD FFF7          	movff	postdec2,tblptrh
  2758   001824                     	if	0	;tblptru may be non-zero
  2759   001824                     	endif
  2760   001824                     	if	0	;tblptru may be non-zero
  2761   001824                     	endif
  2762   001824  0008               	tblrd		*
  2763   001826  50F5               	movf	tablat,w,c
  2764   001828  0A2A               	xorlw	42
  2765   00182A  A4D8               	btfss	status,2,c
  2766   00182C  EF1A  F00C         	goto	u7561
  2767   001830  EF1C  F00C         	goto	u7560
  2768   001834                     u7561:
  2769   001834  EF39  F00C         	goto	l5961
  2770   001838                     u7560:
  2771   001838                     
  2772                           ; BSR set to: 0
  2773                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1095:            
      +                               ++*fmt;
  2774   001838  C095  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2775   00183C  C096  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2776   001840  2ADE               	incf	postinc2,f,c
  2777   001842  0E00               	movlw	0
  2778   001844  22DD               	addwfc	postdec2,f,c
  2779                           
  2780                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1096:            
      +                               prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2781   001846  C097  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2782   00184A  C098  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2783   00184E  CFDF F099          	movff	indf2,??_vfpfcnvrt
  2784   001852  0E02               	movlw	2
  2785   001854  26DE               	addwf	postinc2,f,c
  2786   001856  CFDF F09A          	movff	indf2,??_vfpfcnvrt+1
  2787   00185A  0E00               	movlw	0
  2788   00185C  22DD               	addwfc	postdec2,f,c
  2789   00185E  C099  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2790   001862  C09A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2791   001866  CFDE F056          	movff	postinc2,_prec
  2792   00186A  CFDD F057          	movff	postdec2,_prec+1
  2793                           
  2794                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1097:            
      +                           } else {
  2795   00186E  EF6D  F00C         	goto	l5969
  2796   001872                     l5961:
  2797                           
  2798                           ; BSR set to: 0
  2799                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1098:            
      +                               prec = atoi(*fmt);
  2800   001872  C095  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2801   001876  C096  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2802   00187A  CFDE F00D          	movff	postinc2,atoi@s
  2803   00187E  CFDD F00E          	movff	postdec2,atoi@s+1
  2804   001882  EC8E  F01A         	call	_atoi	;wreg free
  2805   001886  C00D  F056         	movff	?_atoi,_prec
  2806   00188A  C00E  F057         	movff	?_atoi+1,_prec+1
  2807                           
  2808                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1099:            
      +                               while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  2809   00188E  EF50  F00C         	goto	l5967
  2810   001892                     l5963:
  2811                           
  2812                           ; BSR set to: 0
  2813                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1100:            
      +                                   ++*fmt;
  2814   001892  C095  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2815   001896  C096  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2816   00189A  2ADE               	incf	postinc2,f,c
  2817   00189C  0E00               	movlw	0
  2818   00189E  22DD               	addwfc	postdec2,f,c
  2819   0018A0                     l5967:
  2820   0018A0  C095  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2821   0018A4  C096  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2822   0018A8  CFDE FFF6          	movff	postinc2,tblptrl
  2823   0018AC  CFDD FFF7          	movff	postdec2,tblptrh
  2824   0018B0                     	if	0	;tblptru may be non-zero
  2825   0018B0                     	endif
  2826   0018B0                     	if	0	;tblptru may be non-zero
  2827   0018B0                     	endif
  2828   0018B0  0008               	tblrd		*
  2829   0018B2  CFF5 F099          	movff	tablat,??_vfpfcnvrt
  2830   0018B6  0ED0               	movlw	208
  2831   0018B8  0100               	movlb	0	; () banked
  2832   0018BA  2599               	addwf	??_vfpfcnvrt& (0+255),w,b
  2833   0018BC  6F9A               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2834   0018BE  6B9B               	clrf	(??_vfpfcnvrt+2)& (0+255),b
  2835   0018C0  0EFF               	movlw	255
  2836   0018C2  239B               	addwfc	(??_vfpfcnvrt+2)& (0+255),f,b
  2837   0018C4  519B               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  2838   0018C6  E109               	bnz	u7570
  2839   0018C8  0E0A               	movlw	10
  2840   0018CA  5D9A               	subwf	(??_vfpfcnvrt+1)& (0+255),w,b
  2841   0018CC  A0D8               	btfss	status,0,c
  2842   0018CE  EF6B  F00C         	goto	u7571
  2843   0018D2  EF6D  F00C         	goto	u7570
  2844   0018D6                     u7571:
  2845   0018D6  EF49  F00C         	goto	l5963
  2846   0018DA                     u7570:
  2847   0018DA                     l5969:
  2848                           
  2849                           ; BSR set to: 0
  2850                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2851   0018DA  C095  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2852   0018DE  C096  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2853   0018E2  CFDE F0AC          	movff	postinc2,vfpfcnvrt@cp
  2854   0018E6  CFDD F0AD          	movff	postdec2,vfpfcnvrt@cp+1
  2855   0018EA                     
  2856                           ; BSR set to: 0
  2857                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1119:   c = *cp;
  2858   0018EA  C0AC  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2859   0018EE  C0AD  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2860   0018F2                     	if	0	;tblptru may be non-zero
  2861   0018F2                     	endif
  2862   0018F2                     	if	0	;tblptru may be non-zero
  2863   0018F2                     	endif
  2864   0018F2  0008               	tblrd		*
  2865   0018F4  CFF5 F0AB          	movff	tablat,vfpfcnvrt@c
  2866                           
  2867                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1120:   switch(c)
      +                           {
  2868   0018F8  EF9C  F00C         	goto	l5987
  2869   0018FC                     l5973:
  2870                           
  2871                           ; BSR set to: 0
  2872                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1135:     cp++;
  2873   0018FC  4BAC               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  2874   0018FE  2BAD               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  2875   001900                     
  2876                           ; BSR set to: 0
  2877                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1137:     if (*cp
      +                           == 'l') {
  2878   001900  C0AC  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2879   001904  C0AD  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2880   001908                     	if	0	;tblptru may be non-zero
  2881   001908                     	endif
  2882   001908                     	if	0	;tblptru may be non-zero
  2883   001908                     	endif
  2884   001908  0008               	tblrd		*
  2885   00190A  50F5               	movf	tablat,w,c
  2886   00190C  0A6C               	xorlw	108
  2887   00190E  A4D8               	btfss	status,2,c
  2888   001910  EF8C  F00C         	goto	u7581
  2889   001914  EF8E  F00C         	goto	u7580
  2890   001918                     u7581:
  2891   001918  EFB5  F00C         	goto	l5989
  2892   00191C                     u7580:
  2893   00191C                     
  2894                           ; BSR set to: 0
  2895                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1138:      c = 'L
      +                          ';
  2896   00191C  0E4C               	movlw	76
  2897   00191E  6FAB               	movwf	vfpfcnvrt@c& (0+255),b
  2898   001920                     
  2899                           ; BSR set to: 0
  2900                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1139:      cp++;
  2901   001920  4BAC               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  2902   001922  2BAD               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  2903   001924  EFB5  F00C         	goto	l5989
  2904   001928                     l5981:
  2905                           
  2906                           ; BSR set to: 0
  2907                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1176:     c = 'i'
      +                          ;
  2908   001928  0E69               	movlw	105
  2909   00192A  6FAB               	movwf	vfpfcnvrt@c& (0+255),b
  2910                           
  2911                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1177:     break;
  2912   00192C  EFB5  F00C         	goto	l5989
  2913   001930                     l5983:
  2914                           
  2915                           ; BSR set to: 0
  2916                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1179:     c = 0;
  2917   001930  0E00               	movlw	0
  2918   001932  6FAB               	movwf	vfpfcnvrt@c& (0+255),b
  2919                           
  2920                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1180:     break;
  2921   001934  EFB5  F00C         	goto	l5989
  2922   001938                     l5987:
  2923                           
  2924                           ; BSR set to: 0
  2925   001938  51AB               	movf	vfpfcnvrt@c& (0+255),w,b
  2926   00193A  6F99               	movwf	??_vfpfcnvrt& (0+255),b
  2927   00193C  6B9A               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2928                           
  2929                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2930                           ; Switch size 1, requested type "simple"
  2931                           ; Number of cases is 1, Range of values is 0 to 0
  2932                           ; switch strategies available:
  2933                           ; Name         Instructions Cycles
  2934                           ; simple_byte            4     3 (average)
  2935                           ;	Chosen strategy is simple_byte
  2936   00193E  519A               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2937   001940  0A00               	xorlw	0	; case 0
  2938   001942  B4D8               	btfsc	status,2,c
  2939   001944  EFA6  F00C         	goto	l6471
  2940   001948  EF98  F00C         	goto	l5983
  2941   00194C                     l6471:
  2942                           
  2943                           ; BSR set to: 0
  2944                           ; Switch size 1, requested type "simple"
  2945                           ; Number of cases is 3, Range of values is 100 to 108
  2946                           ; switch strategies available:
  2947                           ; Name         Instructions Cycles
  2948                           ; simple_byte           10     6 (average)
  2949                           ;	Chosen strategy is simple_byte
  2950   00194C  5199               	movf	??_vfpfcnvrt& (0+255),w,b
  2951   00194E  0A64               	xorlw	100	; case 100
  2952   001950  B4D8               	btfsc	status,2,c
  2953   001952  EF94  F00C         	goto	l5981
  2954   001956  0A0D               	xorlw	13	; case 105
  2955   001958  B4D8               	btfsc	status,2,c
  2956   00195A  EF94  F00C         	goto	l5981
  2957   00195E  0A05               	xorlw	5	; case 108
  2958   001960  B4D8               	btfsc	status,2,c
  2959   001962  EF7E  F00C         	goto	l5973
  2960   001966  EF98  F00C         	goto	l5983
  2961   00196A                     l5989:
  2962                           
  2963                           ; BSR set to: 0
  2964                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2965   00196A  C0AC  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2966   00196E  C0AD  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2967   001972                     	if	0	;tblptru may be non-zero
  2968   001972                     	endif
  2969   001972                     	if	0	;tblptru may be non-zero
  2970   001972                     	endif
  2971   001972  0008               	tblrd		*
  2972   001974  50F5               	movf	tablat,w,c
  2973   001976  0A64               	xorlw	100
  2974   001978  B4D8               	btfsc	status,2,c
  2975   00197A  EFC1  F00C         	goto	u7591
  2976   00197E  EFC3  F00C         	goto	u7590
  2977   001982                     u7591:
  2978   001982  EF24  F00D         	goto	l5999
  2979   001986                     u7590:
  2980   001986                     
  2981                           ; BSR set to: 0
  2982   001986  C0AC  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2983   00198A  C0AD  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2984   00198E                     	if	0	;tblptru may be non-zero
  2985   00198E                     	endif
  2986   00198E                     	if	0	;tblptru may be non-zero
  2987   00198E                     	endif
  2988   00198E  0008               	tblrd		*
  2989   001990  50F5               	movf	tablat,w,c
  2990   001992  0A69               	xorlw	105
  2991   001994  A4D8               	btfss	status,2,c
  2992   001996  EFCF  F00C         	goto	u7601
  2993   00199A  EFD1  F00C         	goto	u7600
  2994   00199E                     u7601:
  2995   00199E  EF5F  F00D         	goto	l6007
  2996   0019A2                     u7600:
  2997   0019A2  EF24  F00D         	goto	l5999
  2998   0019A6                     l5993:
  2999                           
  3000                           ; BSR set to: 0
  3001                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1191:      convar
      +                          g.ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3002   0019A6  C097  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3003   0019AA  C098  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3004   0019AE  CFDF F099          	movff	indf2,??_vfpfcnvrt
  3005   0019B2  0E02               	movlw	2
  3006   0019B4  26DE               	addwf	postinc2,f,c
  3007   0019B6  CFDF F09A          	movff	indf2,??_vfpfcnvrt+1
  3008   0019BA  0E00               	movlw	0
  3009   0019BC  22DD               	addwfc	postdec2,f,c
  3010   0019BE  C099  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3011   0019C2  C09A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3012   0019C6  CFDE F0A3          	movff	postinc2,vfpfcnvrt@convarg
  3013   0019CA  CFDD F0A4          	movff	postdec2,vfpfcnvrt@convarg+1
  3014   0019CE  0E00               	movlw	0
  3015   0019D0  BFA4               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  3016   0019D2  0EFF               	movlw	-1
  3017   0019D4  6FA5               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  3018   0019D6  6FA6               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  3019   0019D8  6FA7               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  3020   0019DA  6FA8               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  3021   0019DC  6FA9               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  3022   0019DE  6FAA               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  3023                           
  3024                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1192:      break;
  3025   0019E0  EF39  F00D         	goto	l6001
  3026   0019E4                     l5995:
  3027                           
  3028                           ; BSR set to: 0
  3029                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1210:      convar
      +                          g.ll = (long long)(*(long long *)__va_arg(*(long long **)ap, (long long)0));
  3030   0019E4  C097  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3031   0019E8  C098  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3032   0019EC  CFDF F099          	movff	indf2,??_vfpfcnvrt
  3033   0019F0  0E08               	movlw	8
  3034   0019F2  26DE               	addwf	postinc2,f,c
  3035   0019F4  CFDF F09A          	movff	indf2,??_vfpfcnvrt+1
  3036   0019F8  0E00               	movlw	0
  3037   0019FA  22DD               	addwfc	postdec2,f,c
  3038   0019FC  C099  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3039   001A00  C09A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3040   001A04  CFDE F09B          	movff	postinc2,??_vfpfcnvrt+2
  3041   001A08  CFDE F09C          	movff	postinc2,??_vfpfcnvrt+3
  3042   001A0C  CFDE F09D          	movff	postinc2,??_vfpfcnvrt+4
  3043   001A10  CFDE F09E          	movff	postinc2,??_vfpfcnvrt+5
  3044   001A14  CFDE F09F          	movff	postinc2,??_vfpfcnvrt+6
  3045   001A18  CFDE F0A0          	movff	postinc2,??_vfpfcnvrt+7
  3046   001A1C  CFDE F0A1          	movff	postinc2,??_vfpfcnvrt+8
  3047   001A20  CFDE F0A2          	movff	postinc2,??_vfpfcnvrt+9
  3048   001A24  C09B  F0A3         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  3049   001A28  C09C  F0A4         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  3050   001A2C  C09D  F0A5         	movff	??_vfpfcnvrt+4,vfpfcnvrt@convarg+2
  3051   001A30  C09E  F0A6         	movff	??_vfpfcnvrt+5,vfpfcnvrt@convarg+3
  3052   001A34  C09F  F0A7         	movff	??_vfpfcnvrt+6,vfpfcnvrt@convarg+4
  3053   001A38  C0A0  F0A8         	movff	??_vfpfcnvrt+7,vfpfcnvrt@convarg+5
  3054   001A3C  C0A1  F0A9         	movff	??_vfpfcnvrt+8,vfpfcnvrt@convarg+6
  3055   001A40  C0A2  F0AA         	movff	??_vfpfcnvrt+9,vfpfcnvrt@convarg+7
  3056                           
  3057                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1211:      break;
  3058   001A44  EF39  F00D         	goto	l6001
  3059   001A48                     l5999:
  3060                           
  3061                           ; BSR set to: 0
  3062   001A48  51AB               	movf	vfpfcnvrt@c& (0+255),w,b
  3063   001A4A  6F99               	movwf	??_vfpfcnvrt& (0+255),b
  3064   001A4C  6B9A               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3065                           
  3066                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3067                           ; Switch size 1, requested type "simple"
  3068                           ; Number of cases is 1, Range of values is 0 to 0
  3069                           ; switch strategies available:
  3070                           ; Name         Instructions Cycles
  3071                           ; simple_byte            4     3 (average)
  3072                           ;	Chosen strategy is simple_byte
  3073   001A4E  519A               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3074   001A50  0A00               	xorlw	0	; case 0
  3075   001A52  B4D8               	btfsc	status,2,c
  3076   001A54  EF2E  F00D         	goto	l6473
  3077   001A58  EF39  F00D         	goto	l6001
  3078   001A5C                     l6473:
  3079                           
  3080                           ; BSR set to: 0
  3081                           ; Switch size 1, requested type "simple"
  3082                           ; Number of cases is 2, Range of values is 76 to 105
  3083                           ; switch strategies available:
  3084                           ; Name         Instructions Cycles
  3085                           ; simple_byte            7     4 (average)
  3086                           ;	Chosen strategy is simple_byte
  3087   001A5C  5199               	movf	??_vfpfcnvrt& (0+255),w,b
  3088   001A5E  0A4C               	xorlw	76	; case 76
  3089   001A60  B4D8               	btfsc	status,2,c
  3090   001A62  EFF2  F00C         	goto	l5995
  3091   001A66  0A25               	xorlw	37	; case 105
  3092   001A68  B4D8               	btfsc	status,2,c
  3093   001A6A  EFD3  F00C         	goto	l5993
  3094   001A6E  EF39  F00D         	goto	l6001
  3095   001A72                     l6001:
  3096                           
  3097                           ; BSR set to: 0
  3098                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  3099   001A72  0E01               	movlw	1
  3100   001A74  25AC               	addwf	vfpfcnvrt@cp& (0+255),w,b
  3101   001A76  6F99               	movwf	??_vfpfcnvrt& (0+255),b
  3102   001A78  0E00               	movlw	0
  3103   001A7A  21AD               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  3104   001A7C  6F9A               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3105   001A7E  C095  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3106   001A82  C096  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3107   001A86  C099  FFDE         	movff	??_vfpfcnvrt,postinc2
  3108   001A8A  C09A  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3109   001A8E                     
  3110                           ; BSR set to: 0
  3111                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  3112   001A8E  C093  F023         	movff	vfpfcnvrt@fp,dtoa@fp
  3113   001A92  C094  F024         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3114   001A96  C0A3  F025         	movff	vfpfcnvrt@convarg,dtoa@d
  3115   001A9A  C0A4  F026         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  3116   001A9E  C0A5  F027         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  3117   001AA2  C0A6  F028         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  3118   001AA6  C0A7  F029         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  3119   001AAA  C0A8  F02A         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  3120   001AAE  C0A9  F02B         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  3121   001AB2  C0AA  F02C         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  3122   001AB6  ECE0  F015         	call	_dtoa	;wreg free
  3123   001ABA  EF48  F00E         	goto	l1068
  3124   001ABE                     l6007:
  3125                           
  3126                           ; BSR set to: 0
  3127                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  3128   001ABE  C095  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3129   001AC2  C096  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3130   001AC6  CFDE F0AC          	movff	postinc2,vfpfcnvrt@cp
  3131   001ACA  CFDD F0AD          	movff	postdec2,vfpfcnvrt@cp+1
  3132   001ACE                     
  3133                           ; BSR set to: 0
  3134                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  3135   001ACE  C0AC  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3136   001AD2  C0AD  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3137   001AD6                     	if	0	;tblptru may be non-zero
  3138   001AD6                     	endif
  3139   001AD6                     	if	0	;tblptru may be non-zero
  3140   001AD6                     	endif
  3141   001AD6  0008               	tblrd		*
  3142   001AD8  CFF5 F0AB          	movff	tablat,vfpfcnvrt@c
  3143                           
  3144                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  3145   001ADC  EF7C  F00D         	goto	l6019
  3146   001AE0                     l6011:
  3147                           
  3148                           ; BSR set to: 0
  3149                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  3150   001AE0  4BAC               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  3151   001AE2  2BAD               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  3152                           
  3153                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  3154   001AE4  EF95  F00D         	goto	l6021
  3155   001AE8                     l6013:
  3156                           
  3157                           ; BSR set to: 0
  3158                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  3159   001AE8  0E6C               	movlw	108
  3160   001AEA  6FAB               	movwf	vfpfcnvrt@c& (0+255),b
  3161                           
  3162                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  3163   001AEC  EF95  F00D         	goto	l6021
  3164   001AF0                     l6015:
  3165                           
  3166                           ; BSR set to: 0
  3167                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  3168   001AF0  0E00               	movlw	0
  3169   001AF2  6FAB               	movwf	vfpfcnvrt@c& (0+255),b
  3170                           
  3171                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  3172   001AF4  EF95  F00D         	goto	l6021
  3173   001AF8                     l6019:
  3174                           
  3175                           ; BSR set to: 0
  3176   001AF8  51AB               	movf	vfpfcnvrt@c& (0+255),w,b
  3177   001AFA  6F99               	movwf	??_vfpfcnvrt& (0+255),b
  3178   001AFC  6B9A               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3179                           
  3180                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3181                           ; Switch size 1, requested type "simple"
  3182                           ; Number of cases is 1, Range of values is 0 to 0
  3183                           ; switch strategies available:
  3184                           ; Name         Instructions Cycles
  3185                           ; simple_byte            4     3 (average)
  3186                           ;	Chosen strategy is simple_byte
  3187   001AFE  519A               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3188   001B00  0A00               	xorlw	0	; case 0
  3189   001B02  B4D8               	btfsc	status,2,c
  3190   001B04  EF86  F00D         	goto	l6475
  3191   001B08  EF78  F00D         	goto	l6015
  3192   001B0C                     l6475:
  3193                           
  3194                           ; BSR set to: 0
  3195                           ; Switch size 1, requested type "simple"
  3196                           ; Number of cases is 3, Range of values is 76 to 108
  3197                           ; switch strategies available:
  3198                           ; Name         Instructions Cycles
  3199                           ; simple_byte           10     6 (average)
  3200                           ;	Chosen strategy is simple_byte
  3201   001B0C  5199               	movf	??_vfpfcnvrt& (0+255),w,b
  3202   001B0E  0A4C               	xorlw	76	; case 76
  3203   001B10  B4D8               	btfsc	status,2,c
  3204   001B12  EF70  F00D         	goto	l6011
  3205   001B16  0A2A               	xorlw	42	; case 102
  3206   001B18  B4D8               	btfsc	status,2,c
  3207   001B1A  EF74  F00D         	goto	l6013
  3208   001B1E  0A0A               	xorlw	10	; case 108
  3209   001B20  B4D8               	btfsc	status,2,c
  3210   001B22  EF70  F00D         	goto	l6011
  3211   001B26  EF78  F00D         	goto	l6015
  3212   001B2A                     l6021:
  3213                           
  3214                           ; BSR set to: 0
  3215   001B2A  C0AC  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3216   001B2E  C0AD  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3217   001B32                     	if	0	;tblptru may be non-zero
  3218   001B32                     	endif
  3219   001B32                     	if	0	;tblptru may be non-zero
  3220   001B32                     	endif
  3221   001B32  0008               	tblrd		*
  3222   001B34  50F5               	movf	tablat,w,c
  3223   001B36  0A66               	xorlw	102
  3224   001B38  A4D8               	btfss	status,2,c
  3225   001B3A  EFA1  F00D         	goto	u7611
  3226   001B3E  EFA3  F00D         	goto	u7610
  3227   001B42                     u7611:
  3228   001B42  EF2B  F00E         	goto	l6041
  3229   001B46                     u7610:
  3230   001B46  EFD9  F00D         	goto	l6029
  3231   001B4A                     l6023:
  3232                           
  3233                           ; BSR set to: 0
  3234                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3235   001B4A  C097  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3236   001B4E  C098  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3237   001B52  CFDF F099          	movff	indf2,??_vfpfcnvrt
  3238   001B56  0E04               	movlw	4
  3239   001B58  26DE               	addwf	postinc2,f,c
  3240   001B5A  CFDF F09A          	movff	indf2,??_vfpfcnvrt+1
  3241   001B5E  0E00               	movlw	0
  3242   001B60  22DD               	addwfc	postdec2,f,c
  3243   001B62  C099  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3244   001B66  C09A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3245   001B6A  CFDE F0A3          	movff	postinc2,vfpfcnvrt@convarg
  3246   001B6E  CFDE F0A4          	movff	postinc2,vfpfcnvrt@convarg+1
  3247   001B72  CFDE F0A5          	movff	postinc2,vfpfcnvrt@convarg+2
  3248   001B76  CFDE F0A6          	movff	postinc2,vfpfcnvrt@convarg+3
  3249                           
  3250                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  3251   001B7A  EFEE  F00D         	goto	l6031
  3252   001B7E                     l6025:
  3253                           
  3254                           ; BSR set to: 0
  3255                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3256   001B7E  C097  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3257   001B82  C098  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3258   001B86  CFDF F099          	movff	indf2,??_vfpfcnvrt
  3259   001B8A  0E04               	movlw	4
  3260   001B8C  26DE               	addwf	postinc2,f,c
  3261   001B8E  CFDF F09A          	movff	indf2,??_vfpfcnvrt+1
  3262   001B92  0E00               	movlw	0
  3263   001B94  22DD               	addwfc	postdec2,f,c
  3264   001B96  C099  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3265   001B9A  C09A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3266   001B9E  CFDE F0A3          	movff	postinc2,vfpfcnvrt@convarg
  3267   001BA2  CFDE F0A4          	movff	postinc2,vfpfcnvrt@convarg+1
  3268   001BA6  CFDE F0A5          	movff	postinc2,vfpfcnvrt@convarg+2
  3269   001BAA  CFDE F0A6          	movff	postinc2,vfpfcnvrt@convarg+3
  3270                           
  3271                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  3272   001BAE  EFEE  F00D         	goto	l6031
  3273   001BB2                     l6029:
  3274                           
  3275                           ; BSR set to: 0
  3276   001BB2  51AB               	movf	vfpfcnvrt@c& (0+255),w,b
  3277   001BB4  6F99               	movwf	??_vfpfcnvrt& (0+255),b
  3278   001BB6  6B9A               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3279                           
  3280                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3281                           ; Switch size 1, requested type "simple"
  3282                           ; Number of cases is 1, Range of values is 0 to 0
  3283                           ; switch strategies available:
  3284                           ; Name         Instructions Cycles
  3285                           ; simple_byte            4     3 (average)
  3286                           ;	Chosen strategy is simple_byte
  3287   001BB8  519A               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3288   001BBA  0A00               	xorlw	0	; case 0
  3289   001BBC  B4D8               	btfsc	status,2,c
  3290   001BBE  EFE3  F00D         	goto	l6477
  3291   001BC2  EFEE  F00D         	goto	l6031
  3292   001BC6                     l6477:
  3293                           
  3294                           ; BSR set to: 0
  3295                           ; Switch size 1, requested type "simple"
  3296                           ; Number of cases is 2, Range of values is 76 to 108
  3297                           ; switch strategies available:
  3298                           ; Name         Instructions Cycles
  3299                           ; simple_byte            7     4 (average)
  3300                           ;	Chosen strategy is simple_byte
  3301   001BC6  5199               	movf	??_vfpfcnvrt& (0+255),w,b
  3302   001BC8  0A4C               	xorlw	76	; case 76
  3303   001BCA  B4D8               	btfsc	status,2,c
  3304   001BCC  EFBF  F00D         	goto	l6025
  3305   001BD0  0A20               	xorlw	32	; case 108
  3306   001BD2  B4D8               	btfsc	status,2,c
  3307   001BD4  EFA5  F00D         	goto	l6023
  3308   001BD8  EFEE  F00D         	goto	l6031
  3309   001BDC                     l6031:
  3310                           
  3311                           ; BSR set to: 0
  3312                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  3313   001BDC  0E01               	movlw	1
  3314   001BDE  25AC               	addwf	vfpfcnvrt@cp& (0+255),w,b
  3315   001BE0  6F99               	movwf	??_vfpfcnvrt& (0+255),b
  3316   001BE2  0E00               	movlw	0
  3317   001BE4  21AD               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  3318   001BE6  6F9A               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3319   001BE8  C095  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3320   001BEC  C096  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3321   001BF0  C099  FFDE         	movff	??_vfpfcnvrt,postinc2
  3322   001BF4  C09A  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3323                           
  3324                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  3325   001BF8  EF15  F00E         	goto	l6039
  3326   001BFC                     l6033:
  3327                           
  3328                           ; BSR set to: 0
  3329                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  3330   001BFC  C093  F060         	movff	vfpfcnvrt@fp,efgtoa@fp
  3331   001C00  C094  F061         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3332   001C04  C0A3  F062         	movff	vfpfcnvrt@convarg,efgtoa@f
  3333   001C08  C0A4  F063         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  3334   001C0C  C0A5  F064         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  3335   001C10  C0A6  F065         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  3336   001C14  C0AC  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3337   001C18  C0AD  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3338   001C1C                     	if	0	;tblptru may be non-zero
  3339   001C1C                     	endif
  3340   001C1C                     	if	0	;tblptru may be non-zero
  3341   001C1C                     	endif
  3342   001C1C  0008               	tblrd		*
  3343   001C1E  CFF5 F066          	movff	tablat,efgtoa@c
  3344   001C22  EC39  F004         	call	_efgtoa	;wreg free
  3345   001C26  EF48  F00E         	goto	l1068
  3346   001C2A                     l6039:
  3347                           
  3348                           ; BSR set to: 0
  3349   001C2A  C0AC  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3350   001C2E  C0AD  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3351   001C32                     	if	0	;tblptru may be non-zero
  3352   001C32                     	endif
  3353   001C32                     	if	0	;tblptru may be non-zero
  3354   001C32                     	endif
  3355   001C32  0008               	tblrd		*
  3356   001C34  50F5               	movf	tablat,w,c
  3357   001C36  6F99               	movwf	??_vfpfcnvrt& (0+255),b
  3358   001C38  6B9A               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3359                           
  3360                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3361                           ; Switch size 1, requested type "simple"
  3362                           ; Number of cases is 1, Range of values is 0 to 0
  3363                           ; switch strategies available:
  3364                           ; Name         Instructions Cycles
  3365                           ; simple_byte            4     3 (average)
  3366                           ;	Chosen strategy is simple_byte
  3367   001C3A  519A               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3368   001C3C  0A00               	xorlw	0	; case 0
  3369   001C3E  B4D8               	btfsc	status,2,c
  3370   001C40  EF24  F00E         	goto	l6479
  3371   001C44  EF2B  F00E         	goto	l6041
  3372   001C48                     l6479:
  3373                           
  3374                           ; BSR set to: 0
  3375                           ; Switch size 1, requested type "simple"
  3376                           ; Number of cases is 1, Range of values is 102 to 102
  3377                           ; switch strategies available:
  3378                           ; Name         Instructions Cycles
  3379                           ; simple_byte            4     3 (average)
  3380                           ;	Chosen strategy is simple_byte
  3381   001C48  5199               	movf	??_vfpfcnvrt& (0+255),w,b
  3382   001C4A  0A66               	xorlw	102	; case 102
  3383   001C4C  B4D8               	btfsc	status,2,c
  3384   001C4E  EFFE  F00D         	goto	l6033
  3385   001C52  EF2B  F00E         	goto	l6041
  3386   001C56                     l6041:
  3387                           
  3388                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  3389   001C56  C095  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3390   001C5A  C096  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3391   001C5E  2ADE               	incf	postinc2,f,c
  3392   001C60  0E00               	movlw	0
  3393   001C62  22DD               	addwfc	postdec2,f,c
  3394   001C64  EF48  F00E         	goto	l1068
  3395   001C68                     l6045:
  3396                           
  3397                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  3398   001C68  C095  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3399   001C6C  C096  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3400   001C70  CFDE FFF6          	movff	postinc2,tblptrl
  3401   001C74  CFDD FFF7          	movff	postdec2,tblptrh
  3402   001C78                     	if	0	;tblptru may be non-zero
  3403   001C78                     	endif
  3404   001C78                     	if	0	;tblptru may be non-zero
  3405   001C78                     	endif
  3406   001C78  0008               	tblrd		*
  3407   001C7A  50F5               	movf	tablat,w,c
  3408   001C7C  6E08               	movwf	fputc@c^0,c
  3409   001C7E  6A09               	clrf	(fputc@c+1)^0,c
  3410   001C80  C093  F00A         	movff	vfpfcnvrt@fp,fputc@fp
  3411   001C84  C094  F00B         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3412   001C88  ECE5  F01D         	call	_fputc	;wreg free
  3413   001C8C  EF2B  F00E         	goto	l6041
  3414   001C90                     l1068:
  3415   001C90  0012               	return		;funcret
  3416   001C92                     __end_of_vfpfcnvrt:
  3417                           	callstack 0
  3418                           
  3419 ;; *************** function _efgtoa *****************
  3420 ;; Defined at:
  3421 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3422 ;; Parameters:    Size  Location     Type
  3423 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  3424 ;;		 -> NULL(0), 
  3425 ;;  f               4    2[BANK0 ] PTR struct _IO_FILE
  3426 ;;  c               1    6[BANK0 ] unsigned char 
  3427 ;; Auto vars:     Size  Location     Type
  3428 ;;  u               4   47[BANK0 ] struct flui
  3429 ;;  g               4   41[BANK0 ] struct flui
  3430 ;;  l               4   36[BANK0 ] struct flui
  3431 ;;  h               4   32[BANK0 ] struct flui
  3432 ;;  ou              4   26[BANK0 ] struct flui
  3433 ;;  n               2   45[BANK0 ] int 
  3434 ;;  i               2   30[BANK0 ] int 
  3435 ;;  w               2   24[BANK0 ] int 
  3436 ;;  e               2   22[BANK0 ] int 
  3437 ;;  m               2   20[BANK0 ] int 
  3438 ;;  d               2   18[BANK0 ] int 
  3439 ;;  t               2   11[BANK0 ] int 
  3440 ;;  p               2    9[BANK0 ] int 
  3441 ;;  ne              2    7[BANK0 ] int 
  3442 ;;  sign            1   40[BANK0 ] unsigned char 
  3443 ;;  nmode           1   17[BANK0 ] unsigned char 
  3444 ;;  mode            1   16[BANK0 ] unsigned char 
  3445 ;;  pp              1   15[BANK0 ] unsigned char 
  3446 ;;  esign           1    0        unsigned char 
  3447 ;; Return value:  Size  Location     Type
  3448 ;;                  1    wreg      void 
  3449 ;; Registers used:
  3450 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3451 ;; Tracked objects:
  3452 ;;		On entry : 0/0
  3453 ;;		On exit  : 0/0
  3454 ;;		Unchanged: 0/0
  3455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3456 ;;      Params:         0       7       0       0       0       0       0       0       0
  3457 ;;      Locals:         0      44       0       0       0       0       0       0       0
  3458 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3459 ;;      Totals:         2      51       0       0       0       0       0       0       0
  3460 ;;Total ram usage:       53 bytes
  3461 ;; Hardware stack levels used: 1
  3462 ;; Hardware stack levels required when called: 5
  3463 ;; This function calls:
  3464 ;;		___fladd
  3465 ;;		___fldiv
  3466 ;;		___fleq
  3467 ;;		___flge
  3468 ;;		___flmul
  3469 ;;		___flneg
  3470 ;;		___flsub
  3471 ;;		___fltol
  3472 ;;		___fpclassifyf
  3473 ;;		_floorf
  3474 ;;		_labs
  3475 ;;		_memcpy
  3476 ;;		_pad
  3477 ;;		_strcpy
  3478 ;; This function is called by:
  3479 ;;		_vfpfcnvrt
  3480 ;; This function uses a non-reentrant model
  3481 ;;
  3482                           
  3483                           	psect	text8
  3484   000872                     __ptext8:
  3485                           	callstack 0
  3486   000872                     _efgtoa:
  3487                           	callstack 21
  3488   000872                     
  3489                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  3490   000872  0E00               	movlw	0
  3491   000874  0100               	movlb	0	; () banked
  3492   000876  6F88               	movwf	efgtoa@sign& (0+255),b
  3493   000878                     
  3494                           ; BSR set to: 0
  3495                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  3496   000878  C062  F089         	movff	efgtoa@f,efgtoa@g
  3497   00087C  C063  F08A         	movff	efgtoa@f+1,efgtoa@g+1
  3498   000880  C064  F08B         	movff	efgtoa@f+2,efgtoa@g+2
  3499   000884  C065  F08C         	movff	efgtoa@f+3,efgtoa@g+3
  3500   000888                     
  3501                           ; BSR set to: 0
  3502                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  3503   000888  BF8C               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3504   00088A  EF4B  F004         	goto	u7180
  3505   00088E  EF49  F004         	goto	u7181
  3506   000892                     u7181:
  3507   000892  EF5F  F004         	goto	l5699
  3508   000896                     u7180:
  3509   000896                     
  3510                           ; BSR set to: 0
  3511                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  3512   000896  0E01               	movlw	1
  3513   000898  6F88               	movwf	efgtoa@sign& (0+255),b
  3514   00089A                     
  3515                           ; BSR set to: 0
  3516                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  3517   00089A  C089  F007         	movff	efgtoa@g,___flneg@f1
  3518   00089E  C08A  F008         	movff	efgtoa@g+1,___flneg@f1+1
  3519   0008A2  C08B  F009         	movff	efgtoa@g+2,___flneg@f1+2
  3520   0008A6  C08C  F00A         	movff	efgtoa@g+3,___flneg@f1+3
  3521   0008AA  ECA8  F020         	call	___flneg	;wreg free
  3522   0008AE  C007  F089         	movff	?___flneg,efgtoa@g
  3523   0008B2  C008  F08A         	movff	?___flneg+1,efgtoa@g+1
  3524   0008B6  C009  F08B         	movff	?___flneg+2,efgtoa@g+2
  3525   0008BA  C00A  F08C         	movff	?___flneg+3,efgtoa@g+3
  3526   0008BE                     l5699:
  3527                           
  3528                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  3529   0008BE  0E00               	movlw	0
  3530   0008C0  0100               	movlb	0	; () banked
  3531   0008C2  6F8E               	movwf	(efgtoa@n+1)& (0+255),b
  3532   0008C4  0E00               	movlw	0
  3533   0008C6  6F8D               	movwf	efgtoa@n& (0+255),b
  3534   0008C8                     
  3535                           ; BSR set to: 0
  3536                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  3537   0008C8  C0FC  F078         	movff	_width,efgtoa@w
  3538   0008CC  C0FD  F079         	movff	_width+1,efgtoa@w+1
  3539   0008D0                     
  3540                           ; BSR set to: 0
  3541                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  3542   0008D0  5188               	movf	efgtoa@sign& (0+255),w,b
  3543   0008D2  B4D8               	btfsc	status,2,c
  3544   0008D4  EF6E  F004         	goto	u7191
  3545   0008D8  EF70  F004         	goto	u7190
  3546   0008DC                     u7191:
  3547   0008DC  EF84  F004         	goto	l5713
  3548   0008E0                     u7190:
  3549   0008E0                     
  3550                           ; BSR set to: 0
  3551                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  3552   0008E0  5188               	movf	efgtoa@sign& (0+255),w,b
  3553   0008E2  A4D8               	btfss	status,2,c
  3554   0008E4  EF76  F004         	goto	u7201
  3555   0008E8  EF78  F004         	goto	u7200
  3556   0008EC                     u7201:
  3557   0008EC  EF7E  F004         	goto	l5709
  3558   0008F0                     u7200:
  3559   0008F0                     
  3560                           ; BSR set to: 0
  3561   0008F0  0E00               	movlw	0
  3562   0008F2  6F6E               	movwf	(_efgtoa$1920+1)& (0+255),b
  3563   0008F4  0E2B               	movlw	43
  3564   0008F6  6F6D               	movwf	_efgtoa$1920& (0+255),b
  3565   0008F8  EF82  F004         	goto	l5711
  3566   0008FC                     l5709:
  3567                           
  3568                           ; BSR set to: 0
  3569   0008FC  0E00               	movlw	0
  3570   0008FE  6F6E               	movwf	(_efgtoa$1920+1)& (0+255),b
  3571   000900  0E2D               	movlw	45
  3572   000902  6F6D               	movwf	_efgtoa$1920& (0+255),b
  3573   000904                     l5711:
  3574                           
  3575                           ; BSR set to: 0
  3576   000904  C06D  F088         	movff	_efgtoa$1920,efgtoa@sign
  3577   000908                     l5713:
  3578                           
  3579                           ; BSR set to: 0
  3580                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  3581   000908  C089  F007         	movff	efgtoa@g,___fpclassifyf@x
  3582   00090C  C08A  F008         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3583   000910  C08B  F009         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3584   000914  C08C  F00A         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3585   000918  EC38  F01C         	call	___fpclassifyf	;wreg free
  3586   00091C  0407               	decf	?___fpclassifyf^0,w,c
  3587   00091E  1008               	iorwf	(?___fpclassifyf+1)^0,w,c
  3588   000920  A4D8               	btfss	status,2,c
  3589   000922  EF95  F004         	goto	u7211
  3590   000926  EF97  F004         	goto	u7210
  3591   00092A                     u7211:
  3592   00092A  EFCA  F004         	goto	l5731
  3593   00092E                     u7210:
  3594   00092E                     
  3595                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  3596   00092E  0100               	movlb	0	; () banked
  3597   000930  5188               	movf	efgtoa@sign& (0+255),w,b
  3598   000932  B4D8               	btfsc	status,2,c
  3599   000934  EF9E  F004         	goto	u7221
  3600   000938  EFA0  F004         	goto	u7220
  3601   00093C                     u7221:
  3602   00093C  EFA9  F004         	goto	l5723
  3603   000940                     u7220:
  3604   000940                     
  3605                           ; BSR set to: 0
  3606                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  3607   000940  C088  F1AD         	movff	efgtoa@sign,_dbuf
  3608   000944                     
  3609                           ; BSR set to: 0
  3610                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  3611   000944  0778               	decf	efgtoa@w& (0+255),f,b
  3612   000946  A0D8               	btfss	status,0,c
  3613   000948  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  3614   00094A                     
  3615                           ; BSR set to: 0
  3616                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  3617   00094A  0E00               	movlw	0
  3618   00094C  6F8E               	movwf	(efgtoa@n+1)& (0+255),b
  3619   00094E  0E01               	movlw	1
  3620   000950  6F8D               	movwf	efgtoa@n& (0+255),b
  3621   000952                     l5723:
  3622                           
  3623                           ; BSR set to: 0
  3624                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  3625   000952  0EAD               	movlw	low _dbuf
  3626   000954  258D               	addwf	efgtoa@n& (0+255),w,b
  3627   000956  6E07               	movwf	strcpy@dest^0,c
  3628   000958  0E01               	movlw	high _dbuf
  3629   00095A  218E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3630   00095C  6E08               	movwf	(strcpy@dest+1)^0,c
  3631   00095E  0E68               	movlw	low STR_3
  3632   000960  6E09               	movwf	strcpy@src^0,c
  3633   000962  0E08               	movlw	high STR_3
  3634   000964  6E0A               	movwf	(strcpy@src+1)^0,c
  3635   000966  EC68  F020         	call	_strcpy	;wreg free
  3636   00096A                     
  3637                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3638   00096A  0100               	movlb	0	; () banked
  3639   00096C  0EFD               	movlw	253
  3640   00096E  2778               	addwf	efgtoa@w& (0+255),f,b
  3641   000970  0EFF               	movlw	255
  3642   000972  2379               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3643   000974                     
  3644                           ; BSR set to: 0
  3645                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3646   000974  C060  F018         	movff	efgtoa@fp,pad@fp
  3647   000978  C061  F019         	movff	efgtoa@fp+1,pad@fp+1
  3648   00097C  0EAD               	movlw	low _dbuf
  3649   00097E  6E1A               	movwf	pad@buf^0,c
  3650   000980  0E01               	movlw	high _dbuf
  3651   000982  6E1B               	movwf	(pad@buf+1)^0,c
  3652   000984  C078  F01C         	movff	efgtoa@w,pad@p
  3653   000988  C079  F01D         	movff	efgtoa@w+1,pad@p+1
  3654   00098C  ECB5  F01E         	call	_pad	;wreg free
  3655   000990  EF49  F009         	goto	l1001
  3656   000994                     l5731:
  3657                           
  3658                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3659   000994  C089  F007         	movff	efgtoa@g,___fpclassifyf@x
  3660   000998  C08A  F008         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3661   00099C  C08B  F009         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3662   0009A0  C08C  F00A         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3663   0009A4  EC38  F01C         	call	___fpclassifyf	;wreg free
  3664   0009A8  5007               	movf	?___fpclassifyf^0,w,c
  3665   0009AA  1008               	iorwf	(?___fpclassifyf+1)^0,w,c
  3666   0009AC  A4D8               	btfss	status,2,c
  3667   0009AE  EFDB  F004         	goto	u7231
  3668   0009B2  EFDD  F004         	goto	u7230
  3669   0009B6                     u7231:
  3670   0009B6  EF10  F005         	goto	l5749
  3671   0009BA                     u7230:
  3672   0009BA                     
  3673                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  3674   0009BA  0100               	movlb	0	; () banked
  3675   0009BC  5188               	movf	efgtoa@sign& (0+255),w,b
  3676   0009BE  B4D8               	btfsc	status,2,c
  3677   0009C0  EFE4  F004         	goto	u7241
  3678   0009C4  EFE6  F004         	goto	u7240
  3679   0009C8                     u7241:
  3680   0009C8  EFEF  F004         	goto	l5741
  3681   0009CC                     u7240:
  3682   0009CC                     
  3683                           ; BSR set to: 0
  3684                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  3685   0009CC  C088  F1AD         	movff	efgtoa@sign,_dbuf
  3686   0009D0                     
  3687                           ; BSR set to: 0
  3688                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  3689   0009D0  0778               	decf	efgtoa@w& (0+255),f,b
  3690   0009D2  A0D8               	btfss	status,0,c
  3691   0009D4  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  3692   0009D6                     
  3693                           ; BSR set to: 0
  3694                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  3695   0009D6  0E00               	movlw	0
  3696   0009D8  6F8E               	movwf	(efgtoa@n+1)& (0+255),b
  3697   0009DA  0E01               	movlw	1
  3698   0009DC  6F8D               	movwf	efgtoa@n& (0+255),b
  3699   0009DE                     l5741:
  3700                           
  3701                           ; BSR set to: 0
  3702                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  3703   0009DE  0EAD               	movlw	low _dbuf
  3704   0009E0  258D               	addwf	efgtoa@n& (0+255),w,b
  3705   0009E2  6E07               	movwf	strcpy@dest^0,c
  3706   0009E4  0E01               	movlw	high _dbuf
  3707   0009E6  218E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3708   0009E8  6E08               	movwf	(strcpy@dest+1)^0,c
  3709   0009EA  0E6C               	movlw	low STR_6
  3710   0009EC  6E09               	movwf	strcpy@src^0,c
  3711   0009EE  0E08               	movlw	high STR_6
  3712   0009F0  6E0A               	movwf	(strcpy@src+1)^0,c
  3713   0009F2  EC68  F020         	call	_strcpy	;wreg free
  3714   0009F6                     
  3715                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 570:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 571:         w -= ((
      +                          sizeof("nan")/sizeof("nan"[0]))-1);
  3716   0009F6  0100               	movlb	0	; () banked
  3717   0009F8  0EFD               	movlw	253
  3718   0009FA  2778               	addwf	efgtoa@w& (0+255),f,b
  3719   0009FC  0EFF               	movlw	255
  3720   0009FE  2379               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3721   000A00                     
  3722                           ; BSR set to: 0
  3723                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 572:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3724   000A00  C060  F018         	movff	efgtoa@fp,pad@fp
  3725   000A04  C061  F019         	movff	efgtoa@fp+1,pad@fp+1
  3726   000A08  0EAD               	movlw	low _dbuf
  3727   000A0A  6E1A               	movwf	pad@buf^0,c
  3728   000A0C  0E01               	movlw	high _dbuf
  3729   000A0E  6E1B               	movwf	(pad@buf+1)^0,c
  3730   000A10  C078  F01C         	movff	efgtoa@w,pad@p
  3731   000A14  C079  F01D         	movff	efgtoa@w+1,pad@p+1
  3732   000A18  ECB5  F01E         	call	_pad	;wreg free
  3733   000A1C  EF49  F009         	goto	l1001
  3734   000A20                     l5749:
  3735                           
  3736                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  3737   000A20  0E00               	movlw	0
  3738   000A22  0100               	movlb	0	; () banked
  3739   000A24  6F8F               	movwf	efgtoa@u& (0+255),b
  3740   000A26  0E00               	movlw	0
  3741   000A28  6F90               	movwf	(efgtoa@u+1)& (0+255),b
  3742   000A2A  0E80               	movlw	128
  3743   000A2C  6F91               	movwf	(efgtoa@u+2)& (0+255),b
  3744   000A2E  0E3F               	movlw	63
  3745   000A30  6F92               	movwf	(efgtoa@u+3)& (0+255),b
  3746                           
  3747                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  3748   000A32  0E00               	movlw	0
  3749   000A34  6F77               	movwf	(efgtoa@e+1)& (0+255),b
  3750   000A36  0E00               	movlw	0
  3751   000A38  6F76               	movwf	efgtoa@e& (0+255),b
  3752   000A3A                     
  3753                           ; BSR set to: 0
  3754                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  3755   000A3A  C089  F007         	movff	efgtoa@g,___fleq@ff1
  3756   000A3E  C08A  F008         	movff	efgtoa@g+1,___fleq@ff1+1
  3757   000A42  C08B  F009         	movff	efgtoa@g+2,___fleq@ff1+2
  3758   000A46  C08C  F00A         	movff	efgtoa@g+3,___fleq@ff1+3
  3759   000A4A  0E00               	movlw	0
  3760   000A4C  6E0B               	movwf	___fleq@ff2^0,c
  3761   000A4E  0E00               	movlw	0
  3762   000A50  6E0C               	movwf	(___fleq@ff2+1)^0,c
  3763   000A52  0E00               	movlw	0
  3764   000A54  6E0D               	movwf	(___fleq@ff2+2)^0,c
  3765   000A56  0E00               	movlw	0
  3766   000A58  6E0E               	movwf	(___fleq@ff2+3)^0,c
  3767   000A5A  EC90  F01D         	call	___fleq	;wreg free
  3768   000A5E  B0D8               	btfsc	status,0,c
  3769   000A60  EF34  F005         	goto	u7251
  3770   000A64  EF36  F005         	goto	u7250
  3771   000A68                     u7251:
  3772   000A68  EF15  F006         	goto	l1004
  3773   000A6C                     u7250:
  3774   000A6C  EF43  F005         	goto	l5757
  3775   000A70                     l1006:
  3776                           
  3777                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  3778   000A70  C07A  F08F         	movff	efgtoa@ou,efgtoa@u
  3779   000A74  C07B  F090         	movff	efgtoa@ou+1,efgtoa@u+1
  3780   000A78  C07C  F091         	movff	efgtoa@ou+2,efgtoa@u+2
  3781   000A7C  C07D  F092         	movff	efgtoa@ou+3,efgtoa@u+3
  3782   000A80                     
  3783                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  3784   000A80  0100               	movlb	0	; () banked
  3785   000A82  4B76               	infsnz	efgtoa@e& (0+255),f,b
  3786   000A84  2B77               	incf	(efgtoa@e+1)& (0+255),f,b
  3787   000A86                     l5757:
  3788                           
  3789                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3790   000A86  C08F  F007         	movff	efgtoa@u,___flmul@b
  3791   000A8A  C090  F008         	movff	efgtoa@u+1,___flmul@b+1
  3792   000A8E  C091  F009         	movff	efgtoa@u+2,___flmul@b+2
  3793   000A92  C092  F00A         	movff	efgtoa@u+3,___flmul@b+3
  3794   000A96  0E00               	movlw	0
  3795   000A98  6E0B               	movwf	___flmul@a^0,c
  3796   000A9A  0E00               	movlw	0
  3797   000A9C  6E0C               	movwf	(___flmul@a+1)^0,c
  3798   000A9E  0E20               	movlw	32
  3799   000AA0  6E0D               	movwf	(___flmul@a+2)^0,c
  3800   000AA2  0E41               	movlw	65
  3801   000AA4  6E0E               	movwf	(___flmul@a+3)^0,c
  3802   000AA6  ECA9  F010         	call	___flmul	;wreg free
  3803   000AAA  C007  F07A         	movff	?___flmul,efgtoa@ou
  3804   000AAE  C008  F07B         	movff	?___flmul+1,efgtoa@ou+1
  3805   000AB2  C009  F07C         	movff	?___flmul+2,efgtoa@ou+2
  3806   000AB6  C00A  F07D         	movff	?___flmul+3,efgtoa@ou+3
  3807   000ABA  0100               	movlb	0	; () banked
  3808   000ABC  517A               	movf	efgtoa@ou& (0+255),w,b
  3809   000ABE  5D89               	subwf	efgtoa@g& (0+255),w,b
  3810   000AC0  6E07               	movwf	labs@a^0,c
  3811   000AC2  517B               	movf	(efgtoa@ou+1)& (0+255),w,b
  3812   000AC4  598A               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3813   000AC6  6E08               	movwf	(labs@a+1)^0,c
  3814   000AC8  517C               	movf	(efgtoa@ou+2)& (0+255),w,b
  3815   000ACA  598B               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3816   000ACC  6E09               	movwf	(labs@a+2)^0,c
  3817   000ACE  517D               	movf	(efgtoa@ou+3)& (0+255),w,b
  3818   000AD0  598C               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3819   000AD2  6E0A               	movwf	(labs@a+3)^0,c
  3820   000AD4  EC26  F01F         	call	_labs	;wreg free
  3821   000AD8  BE0A               	btfsc	(?_labs+3)^0,7,c
  3822   000ADA  EF7A  F005         	goto	u7261
  3823   000ADE  500A               	movf	(?_labs+3)^0,w,c
  3824   000AE0  1009               	iorwf	(?_labs+2)^0,w,c
  3825   000AE2  1008               	iorwf	(?_labs+1)^0,w,c
  3826   000AE4  E109               	bnz	u7260
  3827   000AE6  0E02               	movlw	2
  3828   000AE8  5C07               	subwf	?_labs^0,w,c
  3829   000AEA  A0D8               	btfss	status,0,c
  3830   000AEC  EF7A  F005         	goto	u7261
  3831   000AF0  EF7C  F005         	goto	u7260
  3832   000AF4                     u7261:
  3833   000AF4  EF38  F005         	goto	l1006
  3834   000AF8                     u7260:
  3835   000AF8  C07A  F020         	movff	efgtoa@ou,___flge@ff1
  3836   000AFC  C07B  F021         	movff	efgtoa@ou+1,___flge@ff1+1
  3837   000B00  C07C  F022         	movff	efgtoa@ou+2,___flge@ff1+2
  3838   000B04  C07D  F023         	movff	efgtoa@ou+3,___flge@ff1+3
  3839   000B08  C089  F024         	movff	efgtoa@g,___flge@ff2
  3840   000B0C  C08A  F025         	movff	efgtoa@g+1,___flge@ff2+1
  3841   000B10  C08B  F026         	movff	efgtoa@g+2,___flge@ff2+2
  3842   000B14  C08C  F027         	movff	efgtoa@g+3,___flge@ff2+3
  3843   000B18  ECB6  F01B         	call	___flge	;wreg free
  3844   000B1C  A0D8               	btfss	status,0,c
  3845   000B1E  EF93  F005         	goto	u7271
  3846   000B22  EF95  F005         	goto	u7270
  3847   000B26                     u7271:
  3848   000B26  EF38  F005         	goto	l1006
  3849   000B2A                     u7270:
  3850   000B2A                     
  3851                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  3852   000B2A  0100               	movlb	0	; () banked
  3853   000B2C  518F               	movf	efgtoa@u& (0+255),w,b
  3854   000B2E  5D89               	subwf	efgtoa@g& (0+255),w,b
  3855   000B30  6E07               	movwf	labs@a^0,c
  3856   000B32  5190               	movf	(efgtoa@u+1)& (0+255),w,b
  3857   000B34  598A               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3858   000B36  6E08               	movwf	(labs@a+1)^0,c
  3859   000B38  5191               	movf	(efgtoa@u+2)& (0+255),w,b
  3860   000B3A  598B               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3861   000B3C  6E09               	movwf	(labs@a+2)^0,c
  3862   000B3E  5192               	movf	(efgtoa@u+3)& (0+255),w,b
  3863   000B40  598C               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3864   000B42  6E0A               	movwf	(labs@a+3)^0,c
  3865   000B44  EC26  F01F         	call	_labs	;wreg free
  3866   000B48  BE0A               	btfsc	(?_labs+3)^0,7,c
  3867   000B4A  EFB4  F005         	goto	u7280
  3868   000B4E  500A               	movf	(?_labs+3)^0,w,c
  3869   000B50  1009               	iorwf	(?_labs+2)^0,w,c
  3870   000B52  1008               	iorwf	(?_labs+1)^0,w,c
  3871   000B54  E107               	bnz	u7281
  3872   000B56  0E02               	movlw	2
  3873   000B58  5C07               	subwf	?_labs^0,w,c
  3874   000B5A  B0D8               	btfsc	status,0,c
  3875   000B5C  EFB2  F005         	goto	u7281
  3876   000B60  EFB4  F005         	goto	u7280
  3877   000B64                     u7281:
  3878   000B64  EFFC  F005         	goto	l5775
  3879   000B68                     u7280:
  3880   000B68                     l5765:
  3881                           
  3882                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  3883   000B68  C08F  F089         	movff	efgtoa@u,efgtoa@g
  3884   000B6C  C090  F08A         	movff	efgtoa@u+1,efgtoa@g+1
  3885   000B70  C091  F08B         	movff	efgtoa@u+2,efgtoa@g+2
  3886   000B74  C092  F08C         	movff	efgtoa@u+3,efgtoa@g+3
  3887                           
  3888                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  3889   000B78  EF15  F006         	goto	l1004
  3890   000B7C                     l5767:
  3891                           
  3892                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  3893   000B7C  C08F  F021         	movff	efgtoa@u,___fldiv@b
  3894   000B80  C090  F022         	movff	efgtoa@u+1,___fldiv@b+1
  3895   000B84  C091  F023         	movff	efgtoa@u+2,___fldiv@b+2
  3896   000B88  C092  F024         	movff	efgtoa@u+3,___fldiv@b+3
  3897   000B8C  0E00               	movlw	0
  3898   000B8E  6E25               	movwf	___fldiv@a^0,c
  3899   000B90  0E00               	movlw	0
  3900   000B92  6E26               	movwf	(___fldiv@a+1)^0,c
  3901   000B94  0E20               	movlw	32
  3902   000B96  6E27               	movwf	(___fldiv@a+2)^0,c
  3903   000B98  0E41               	movlw	65
  3904   000B9A  6E28               	movwf	(___fldiv@a+3)^0,c
  3905   000B9C  ECBE  F012         	call	___fldiv	;wreg free
  3906   000BA0  C021  F08F         	movff	?___fldiv,efgtoa@u
  3907   000BA4  C022  F090         	movff	?___fldiv+1,efgtoa@u+1
  3908   000BA8  C023  F091         	movff	?___fldiv+2,efgtoa@u+2
  3909   000BAC  C024  F092         	movff	?___fldiv+3,efgtoa@u+3
  3910   000BB0                     
  3911                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  3912   000BB0  0100               	movlb	0	; () banked
  3913   000BB2  0776               	decf	efgtoa@e& (0+255),f,b
  3914   000BB4  A0D8               	btfss	status,0,c
  3915   000BB6  0777               	decf	(efgtoa@e+1)& (0+255),f,b
  3916   000BB8                     
  3917                           ; BSR set to: 0
  3918                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3919   000BB8  518F               	movf	efgtoa@u& (0+255),w,b
  3920   000BBA  5D89               	subwf	efgtoa@g& (0+255),w,b
  3921   000BBC  6E07               	movwf	labs@a^0,c
  3922   000BBE  5190               	movf	(efgtoa@u+1)& (0+255),w,b
  3923   000BC0  598A               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3924   000BC2  6E08               	movwf	(labs@a+1)^0,c
  3925   000BC4  5191               	movf	(efgtoa@u+2)& (0+255),w,b
  3926   000BC6  598B               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3927   000BC8  6E09               	movwf	(labs@a+2)^0,c
  3928   000BCA  5192               	movf	(efgtoa@u+3)& (0+255),w,b
  3929   000BCC  598C               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3930   000BCE  6E0A               	movwf	(labs@a+3)^0,c
  3931   000BD0  EC26  F01F         	call	_labs	;wreg free
  3932   000BD4  BE0A               	btfsc	(?_labs+3)^0,7,c
  3933   000BD6  EFFA  F005         	goto	u7290
  3934   000BDA  500A               	movf	(?_labs+3)^0,w,c
  3935   000BDC  1009               	iorwf	(?_labs+2)^0,w,c
  3936   000BDE  1008               	iorwf	(?_labs+1)^0,w,c
  3937   000BE0  E107               	bnz	u7291
  3938   000BE2  0E02               	movlw	2
  3939   000BE4  5C07               	subwf	?_labs^0,w,c
  3940   000BE6  B0D8               	btfsc	status,0,c
  3941   000BE8  EFF8  F005         	goto	u7291
  3942   000BEC  EFFA  F005         	goto	u7290
  3943   000BF0                     u7291:
  3944   000BF0  EFFC  F005         	goto	l5775
  3945   000BF4                     u7290:
  3946   000BF4  EFB4  F005         	goto	l5765
  3947   000BF8                     l5775:
  3948                           
  3949                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  3950   000BF8  C089  F020         	movff	efgtoa@g,___flge@ff1
  3951   000BFC  C08A  F021         	movff	efgtoa@g+1,___flge@ff1+1
  3952   000C00  C08B  F022         	movff	efgtoa@g+2,___flge@ff1+2
  3953   000C04  C08C  F023         	movff	efgtoa@g+3,___flge@ff1+3
  3954   000C08  C08F  F024         	movff	efgtoa@u,___flge@ff2
  3955   000C0C  C090  F025         	movff	efgtoa@u+1,___flge@ff2+1
  3956   000C10  C091  F026         	movff	efgtoa@u+2,___flge@ff2+2
  3957   000C14  C092  F027         	movff	efgtoa@u+3,___flge@ff2+3
  3958   000C18  ECB6  F01B         	call	___flge	;wreg free
  3959   000C1C  A0D8               	btfss	status,0,c
  3960   000C1E  EF13  F006         	goto	u7301
  3961   000C22  EF15  F006         	goto	u7300
  3962   000C26                     u7301:
  3963   000C26  EFBE  F005         	goto	l5767
  3964   000C2A                     u7300:
  3965   000C2A                     l1004:
  3966                           
  3967                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  3968   000C2A  C066  F070         	movff	efgtoa@c,efgtoa@mode
  3969                           
  3970                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  3971   000C2E  C070  F071         	movff	efgtoa@mode,efgtoa@nmode
  3972   000C32                     
  3973                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  3974   000C32  BE57               	btfsc	(_prec+1)^0,7,c
  3975   000C34  EF1E  F006         	goto	u7311
  3976   000C38  EF20  F006         	goto	u7310
  3977   000C3C                     u7311:
  3978   000C3C  EF26  F006         	goto	l5781
  3979   000C40                     u7310:
  3980   000C40  C056  F069         	movff	_prec,efgtoa@p
  3981   000C44  C057  F06A         	movff	_prec+1,efgtoa@p+1
  3982   000C48  EF2B  F006         	goto	l5783
  3983   000C4C                     l5781:
  3984   000C4C  0E00               	movlw	0
  3985   000C4E  0100               	movlb	0	; () banked
  3986   000C50  6F6A               	movwf	(efgtoa@p+1)& (0+255),b
  3987   000C52  0E06               	movlw	6
  3988   000C54  6F69               	movwf	efgtoa@p& (0+255),b
  3989   000C56                     l5783:
  3990                           
  3991                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  3992   000C56  C069  F074         	movff	efgtoa@p,efgtoa@m
  3993   000C5A  C06A  F075         	movff	efgtoa@p+1,efgtoa@m+1
  3994   000C5E                     
  3995                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  3996   000C5E  0100               	movlb	0	; () banked
  3997   000C60  4B74               	infsnz	efgtoa@m& (0+255),f,b
  3998   000C62  2B75               	incf	(efgtoa@m+1)& (0+255),f,b
  3999   000C64                     
  4000                           ; BSR set to: 0
  4001                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  4002   000C64  0E66               	movlw	102
  4003   000C66  1971               	xorwf	efgtoa@nmode& (0+255),w,b
  4004   000C68  A4D8               	btfss	status,2,c
  4005   000C6A  EF39  F006         	goto	u7321
  4006   000C6E  EF3B  F006         	goto	u7320
  4007   000C72                     u7321:
  4008   000C72  EF5B  F006         	goto	l5797
  4009   000C76                     u7320:
  4010   000C76                     
  4011                           ; BSR set to: 0
  4012                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  4013   000C76  BF77               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4014   000C78  EF42  F006         	goto	u7330
  4015   000C7C  EF40  F006         	goto	u7331
  4016   000C80                     u7331:
  4017   000C80  EF4E  F006         	goto	l5793
  4018   000C84                     u7330:
  4019   000C84                     
  4020                           ; BSR set to: 0
  4021                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  4022   000C84  0E00               	movlw	0
  4023   000C86  6F8F               	movwf	efgtoa@u& (0+255),b
  4024   000C88  0E00               	movlw	0
  4025   000C8A  6F90               	movwf	(efgtoa@u+1)& (0+255),b
  4026   000C8C  0E80               	movlw	128
  4027   000C8E  6F91               	movwf	(efgtoa@u+2)& (0+255),b
  4028   000C90  0E3F               	movlw	63
  4029   000C92  6F92               	movwf	(efgtoa@u+3)& (0+255),b
  4030                           
  4031                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  4032   000C94  0E00               	movlw	0
  4033   000C96  6F77               	movwf	(efgtoa@e+1)& (0+255),b
  4034   000C98  0E00               	movlw	0
  4035   000C9A  6F76               	movwf	efgtoa@e& (0+255),b
  4036   000C9C                     l5793:
  4037                           
  4038                           ; BSR set to: 0
  4039                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  4040   000C9C  0E67               	movlw	103
  4041   000C9E  1970               	xorwf	efgtoa@mode& (0+255),w,b
  4042   000CA0  B4D8               	btfsc	status,2,c
  4043   000CA2  EF55  F006         	goto	u7341
  4044   000CA6  EF57  F006         	goto	u7340
  4045   000CAA                     u7341:
  4046   000CAA  EF5B  F006         	goto	l5797
  4047   000CAE                     u7340:
  4048   000CAE                     
  4049                           ; BSR set to: 0
  4050                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  4051   000CAE  5176               	movf	efgtoa@e& (0+255),w,b
  4052   000CB0  2774               	addwf	efgtoa@m& (0+255),f,b
  4053   000CB2  5177               	movf	(efgtoa@e+1)& (0+255),w,b
  4054   000CB4  2375               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4055   000CB6                     l5797:
  4056                           
  4057                           ; BSR set to: 0
  4058                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  4059   000CB6  0E00               	movlw	0
  4060   000CB8  6F7F               	movwf	(efgtoa@i+1)& (0+255),b
  4061   000CBA  0E00               	movlw	0
  4062   000CBC  6F7E               	movwf	efgtoa@i& (0+255),b
  4063   000CBE                     
  4064                           ; BSR set to: 0
  4065                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  4066   000CBE  C089  F080         	movff	efgtoa@g,efgtoa@h
  4067   000CC2  C08A  F081         	movff	efgtoa@g+1,efgtoa@h+1
  4068   000CC6  C08B  F082         	movff	efgtoa@g+2,efgtoa@h+2
  4069   000CCA  C08C  F083         	movff	efgtoa@g+3,efgtoa@h+3
  4070   000CCE                     
  4071                           ; BSR set to: 0
  4072                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  4073   000CCE  C08F  F07A         	movff	efgtoa@u,efgtoa@ou
  4074   000CD2  C090  F07B         	movff	efgtoa@u+1,efgtoa@ou+1
  4075   000CD6  C091  F07C         	movff	efgtoa@u+2,efgtoa@ou+2
  4076   000CDA  C092  F07D         	movff	efgtoa@u+3,efgtoa@ou+3
  4077                           
  4078                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  4079   000CDE  EFEC  F006         	goto	l5811
  4080   000CE2                     l5803:
  4081                           
  4082                           ; BSR set to: 0
  4083                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  4084   000CE2  C080  F021         	movff	efgtoa@h,___fldiv@b
  4085   000CE6  C081  F022         	movff	efgtoa@h+1,___fldiv@b+1
  4086   000CEA  C082  F023         	movff	efgtoa@h+2,___fldiv@b+2
  4087   000CEE  C083  F024         	movff	efgtoa@h+3,___fldiv@b+3
  4088   000CF2  C08F  F025         	movff	efgtoa@u,___fldiv@a
  4089   000CF6  C090  F026         	movff	efgtoa@u+1,___fldiv@a+1
  4090   000CFA  C091  F027         	movff	efgtoa@u+2,___fldiv@a+2
  4091   000CFE  C092  F028         	movff	efgtoa@u+3,___fldiv@a+3
  4092   000D02  ECBE  F012         	call	___fldiv	;wreg free
  4093   000D06  C021  F03A         	movff	?___fldiv,floorf@x
  4094   000D0A  C022  F03B         	movff	?___fldiv+1,floorf@x+1
  4095   000D0E  C023  F03C         	movff	?___fldiv+2,floorf@x+2
  4096   000D12  C024  F03D         	movff	?___fldiv+3,floorf@x+3
  4097   000D16  EC1E  F017         	call	_floorf	;wreg free
  4098   000D1A  C03A  F084         	movff	?_floorf,efgtoa@l
  4099   000D1E  C03B  F085         	movff	?_floorf+1,efgtoa@l+1
  4100   000D22  C03C  F086         	movff	?_floorf+2,efgtoa@l+2
  4101   000D26  C03D  F087         	movff	?_floorf+3,efgtoa@l+3
  4102                           
  4103                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  4104   000D2A  C084  F007         	movff	efgtoa@l,___fltol@f1
  4105   000D2E  C085  F008         	movff	efgtoa@l+1,___fltol@f1+1
  4106   000D32  C086  F009         	movff	efgtoa@l+2,___fltol@f1+2
  4107   000D36  C087  F00A         	movff	efgtoa@l+3,___fltol@f1+3
  4108   000D3A  EC33  F01B         	call	___fltol	;wreg free
  4109   000D3E  C007  F072         	movff	?___fltol,efgtoa@d
  4110   000D42  C008  F073         	movff	?___fltol+1,efgtoa@d+1
  4111   000D46                     
  4112                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  4113   000D46  C080  F020         	movff	efgtoa@h,___flsub@b
  4114   000D4A  C081  F021         	movff	efgtoa@h+1,___flsub@b+1
  4115   000D4E  C082  F022         	movff	efgtoa@h+2,___flsub@b+2
  4116   000D52  C083  F023         	movff	efgtoa@h+3,___flsub@b+3
  4117   000D56  C084  F00B         	movff	efgtoa@l,___flmul@a
  4118   000D5A  C085  F00C         	movff	efgtoa@l+1,___flmul@a+1
  4119   000D5E  C086  F00D         	movff	efgtoa@l+2,___flmul@a+2
  4120   000D62  C087  F00E         	movff	efgtoa@l+3,___flmul@a+3
  4121   000D66  C08F  F007         	movff	efgtoa@u,___flmul@b
  4122   000D6A  C090  F008         	movff	efgtoa@u+1,___flmul@b+1
  4123   000D6E  C091  F009         	movff	efgtoa@u+2,___flmul@b+2
  4124   000D72  C092  F00A         	movff	efgtoa@u+3,___flmul@b+3
  4125   000D76  ECA9  F010         	call	___flmul	;wreg free
  4126   000D7A  C007  F024         	movff	?___flmul,___flsub@a
  4127   000D7E  C008  F025         	movff	?___flmul+1,___flsub@a+1
  4128   000D82  C009  F026         	movff	?___flmul+2,___flsub@a+2
  4129   000D86  C00A  F027         	movff	?___flmul+3,___flsub@a+3
  4130   000D8A  EC00  F020         	call	___flsub	;wreg free
  4131   000D8E  C020  F080         	movff	?___flsub,efgtoa@h
  4132   000D92  C021  F081         	movff	?___flsub+1,efgtoa@h+1
  4133   000D96  C022  F082         	movff	?___flsub+2,efgtoa@h+2
  4134   000D9A  C023  F083         	movff	?___flsub+3,efgtoa@h+3
  4135   000D9E                     
  4136                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  4137   000D9E  C08F  F021         	movff	efgtoa@u,___fldiv@b
  4138   000DA2  C090  F022         	movff	efgtoa@u+1,___fldiv@b+1
  4139   000DA6  C091  F023         	movff	efgtoa@u+2,___fldiv@b+2
  4140   000DAA  C092  F024         	movff	efgtoa@u+3,___fldiv@b+3
  4141   000DAE  0E00               	movlw	0
  4142   000DB0  6E25               	movwf	___fldiv@a^0,c
  4143   000DB2  0E00               	movlw	0
  4144   000DB4  6E26               	movwf	(___fldiv@a+1)^0,c
  4145   000DB6  0E20               	movlw	32
  4146   000DB8  6E27               	movwf	(___fldiv@a+2)^0,c
  4147   000DBA  0E41               	movlw	65
  4148   000DBC  6E28               	movwf	(___fldiv@a+3)^0,c
  4149   000DBE  ECBE  F012         	call	___fldiv	;wreg free
  4150   000DC2  C021  F08F         	movff	?___fldiv,efgtoa@u
  4151   000DC6  C022  F090         	movff	?___fldiv+1,efgtoa@u+1
  4152   000DCA  C023  F091         	movff	?___fldiv+2,efgtoa@u+2
  4153   000DCE  C024  F092         	movff	?___fldiv+3,efgtoa@u+3
  4154   000DD2                     
  4155                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  4156   000DD2  0100               	movlb	0	; () banked
  4157   000DD4  4B7E               	infsnz	efgtoa@i& (0+255),f,b
  4158   000DD6  2B7F               	incf	(efgtoa@i+1)& (0+255),f,b
  4159   000DD8                     l5811:
  4160                           
  4161                           ; BSR set to: 0
  4162                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  4163   000DD8  5174               	movf	efgtoa@m& (0+255),w,b
  4164   000DDA  5D7E               	subwf	efgtoa@i& (0+255),w,b
  4165   000DDC  517F               	movf	(efgtoa@i+1)& (0+255),w,b
  4166   000DDE  0A80               	xorlw	128
  4167   000DE0  6E4E               	movwf	??_efgtoa^0,c
  4168   000DE2  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  4169   000DE4  0A80               	xorlw	128
  4170   000DE6  584E               	subwfb	??_efgtoa^0,w,c
  4171   000DE8  A0D8               	btfss	status,0,c
  4172   000DEA  EFF9  F006         	goto	u7351
  4173   000DEE  EFFB  F006         	goto	u7350
  4174   000DF2                     u7351:
  4175   000DF2  EF71  F006         	goto	l5803
  4176   000DF6                     u7350:
  4177   000DF6                     
  4178                           ; BSR set to: 0
  4179                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  4180   000DF6  C08F  F007         	movff	efgtoa@u,___flmul@b
  4181   000DFA  C090  F008         	movff	efgtoa@u+1,___flmul@b+1
  4182   000DFE  C091  F009         	movff	efgtoa@u+2,___flmul@b+2
  4183   000E02  C092  F00A         	movff	efgtoa@u+3,___flmul@b+3
  4184   000E06  0E00               	movlw	0
  4185   000E08  6E0B               	movwf	___flmul@a^0,c
  4186   000E0A  0E00               	movlw	0
  4187   000E0C  6E0C               	movwf	(___flmul@a+1)^0,c
  4188   000E0E  0EA0               	movlw	160
  4189   000E10  6E0D               	movwf	(___flmul@a+2)^0,c
  4190   000E12  0E40               	movlw	64
  4191   000E14  6E0E               	movwf	(___flmul@a+3)^0,c
  4192   000E16  ECA9  F010         	call	___flmul	;wreg free
  4193   000E1A  C007  F084         	movff	?___flmul,efgtoa@l
  4194   000E1E  C008  F085         	movff	?___flmul+1,efgtoa@l+1
  4195   000E22  C009  F086         	movff	?___flmul+2,efgtoa@l+2
  4196   000E26  C00A  F087         	movff	?___flmul+3,efgtoa@l+3
  4197   000E2A                     
  4198                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  4199   000E2A  C080  F020         	movff	efgtoa@h,___flge@ff1
  4200   000E2E  C081  F021         	movff	efgtoa@h+1,___flge@ff1+1
  4201   000E32  C082  F022         	movff	efgtoa@h+2,___flge@ff1+2
  4202   000E36  C083  F023         	movff	efgtoa@h+3,___flge@ff1+3
  4203   000E3A  C084  F024         	movff	efgtoa@l,___flge@ff2
  4204   000E3E  C085  F025         	movff	efgtoa@l+1,___flge@ff2+1
  4205   000E42  C086  F026         	movff	efgtoa@l+2,___flge@ff2+2
  4206   000E46  C087  F027         	movff	efgtoa@l+3,___flge@ff2+3
  4207   000E4A  ECB6  F01B         	call	___flge	;wreg free
  4208   000E4E  B0D8               	btfsc	status,0,c
  4209   000E50  EF2C  F007         	goto	u7361
  4210   000E54  EF2E  F007         	goto	u7360
  4211   000E58                     u7361:
  4212   000E58  EF39  F007         	goto	l5819
  4213   000E5C                     u7360:
  4214   000E5C                     
  4215                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  4216   000E5C  0E00               	movlw	0
  4217   000E5E  0100               	movlb	0	; () banked
  4218   000E60  6F84               	movwf	efgtoa@l& (0+255),b
  4219   000E62  0E00               	movlw	0
  4220   000E64  6F85               	movwf	(efgtoa@l+1)& (0+255),b
  4221   000E66  0E00               	movlw	0
  4222   000E68  6F86               	movwf	(efgtoa@l+2)& (0+255),b
  4223   000E6A  0E00               	movlw	0
  4224   000E6C  6F87               	movwf	(efgtoa@l+3)& (0+255),b
  4225                           
  4226                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  4227   000E6E  EF62  F007         	goto	l5825
  4228   000E72                     l5819:
  4229                           
  4230                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  4231   000E72  C080  F007         	movff	efgtoa@h,___fleq@ff1
  4232   000E76  C081  F008         	movff	efgtoa@h+1,___fleq@ff1+1
  4233   000E7A  C082  F009         	movff	efgtoa@h+2,___fleq@ff1+2
  4234   000E7E  C083  F00A         	movff	efgtoa@h+3,___fleq@ff1+3
  4235   000E82  C084  F00B         	movff	efgtoa@l,___fleq@ff2
  4236   000E86  C085  F00C         	movff	efgtoa@l+1,___fleq@ff2+1
  4237   000E8A  C086  F00D         	movff	efgtoa@l+2,___fleq@ff2+2
  4238   000E8E  C087  F00E         	movff	efgtoa@l+3,___fleq@ff2+3
  4239   000E92  EC90  F01D         	call	___fleq	;wreg free
  4240   000E96  A0D8               	btfss	status,0,c
  4241   000E98  EF50  F007         	goto	u7371
  4242   000E9C  EF52  F007         	goto	u7370
  4243   000EA0                     u7371:
  4244   000EA0  EF62  F007         	goto	l5825
  4245   000EA4                     u7370:
  4246   000EA4  0100               	movlb	0	; () banked
  4247   000EA6  B172               	btfsc	efgtoa@d& (0+255),0,b
  4248   000EA8  EF58  F007         	goto	u7381
  4249   000EAC  EF5A  F007         	goto	u7380
  4250   000EB0                     u7381:
  4251   000EB0  EF62  F007         	goto	l5825
  4252   000EB4                     u7380:
  4253   000EB4                     
  4254                           ; BSR set to: 0
  4255                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  4256   000EB4  0E00               	movlw	0
  4257   000EB6  6F84               	movwf	efgtoa@l& (0+255),b
  4258   000EB8  0E00               	movlw	0
  4259   000EBA  6F85               	movwf	(efgtoa@l+1)& (0+255),b
  4260   000EBC  0E00               	movlw	0
  4261   000EBE  6F86               	movwf	(efgtoa@l+2)& (0+255),b
  4262   000EC0  0E00               	movlw	0
  4263   000EC2  6F87               	movwf	(efgtoa@l+3)& (0+255),b
  4264   000EC4                     l5825:
  4265                           
  4266                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  4267   000EC4  C089  F007         	movff	efgtoa@g,___fladd@b
  4268   000EC8  C08A  F008         	movff	efgtoa@g+1,___fladd@b+1
  4269   000ECC  C08B  F009         	movff	efgtoa@g+2,___fladd@b+2
  4270   000ED0  C08C  F00A         	movff	efgtoa@g+3,___fladd@b+3
  4271   000ED4  C084  F00B         	movff	efgtoa@l,___fladd@a
  4272   000ED8  C085  F00C         	movff	efgtoa@l+1,___fladd@a+1
  4273   000EDC  C086  F00D         	movff	efgtoa@l+2,___fladd@a+2
  4274   000EE0  C087  F00E         	movff	efgtoa@l+3,___fladd@a+3
  4275   000EE4  EC49  F00E         	call	___fladd	;wreg free
  4276   000EE8  C007  F080         	movff	?___fladd,efgtoa@h
  4277   000EEC  C008  F081         	movff	?___fladd+1,efgtoa@h+1
  4278   000EF0  C009  F082         	movff	?___fladd+2,efgtoa@h+2
  4279   000EF4  C00A  F083         	movff	?___fladd+3,efgtoa@h+3
  4280   000EF8                     
  4281                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  4282   000EF8  C080  F020         	movff	efgtoa@h,___flge@ff1
  4283   000EFC  C081  F021         	movff	efgtoa@h+1,___flge@ff1+1
  4284   000F00  C082  F022         	movff	efgtoa@h+2,___flge@ff1+2
  4285   000F04  C083  F023         	movff	efgtoa@h+3,___flge@ff1+3
  4286   000F08  0E00               	movlw	0
  4287   000F0A  6E0B               	movwf	___flmul@a^0,c
  4288   000F0C  0E00               	movlw	0
  4289   000F0E  6E0C               	movwf	(___flmul@a+1)^0,c
  4290   000F10  0E20               	movlw	32
  4291   000F12  6E0D               	movwf	(___flmul@a+2)^0,c
  4292   000F14  0E41               	movlw	65
  4293   000F16  6E0E               	movwf	(___flmul@a+3)^0,c
  4294   000F18  C07A  F007         	movff	efgtoa@ou,___flmul@b
  4295   000F1C  C07B  F008         	movff	efgtoa@ou+1,___flmul@b+1
  4296   000F20  C07C  F009         	movff	efgtoa@ou+2,___flmul@b+2
  4297   000F24  C07D  F00A         	movff	efgtoa@ou+3,___flmul@b+3
  4298   000F28  ECA9  F010         	call	___flmul	;wreg free
  4299   000F2C  C007  F024         	movff	?___flmul,___flge@ff2
  4300   000F30  C008  F025         	movff	?___flmul+1,___flge@ff2+1
  4301   000F34  C009  F026         	movff	?___flmul+2,___flge@ff2+2
  4302   000F38  C00A  F027         	movff	?___flmul+3,___flge@ff2+3
  4303   000F3C  ECB6  F01B         	call	___flge	;wreg free
  4304   000F40  A0D8               	btfss	status,0,c
  4305   000F42  EFA5  F007         	goto	u7391
  4306   000F46  EFA7  F007         	goto	u7390
  4307   000F4A                     u7391:
  4308   000F4A  EFD0  F007         	goto	l5837
  4309   000F4E                     u7390:
  4310   000F4E                     
  4311                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  4312   000F4E  0100               	movlb	0	; () banked
  4313   000F50  4B76               	infsnz	efgtoa@e& (0+255),f,b
  4314   000F52  2B77               	incf	(efgtoa@e+1)& (0+255),f,b
  4315   000F54                     
  4316                           ; BSR set to: 0
  4317                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  4318   000F54  C07A  F007         	movff	efgtoa@ou,___flmul@b
  4319   000F58  C07B  F008         	movff	efgtoa@ou+1,___flmul@b+1
  4320   000F5C  C07C  F009         	movff	efgtoa@ou+2,___flmul@b+2
  4321   000F60  C07D  F00A         	movff	efgtoa@ou+3,___flmul@b+3
  4322   000F64  0E00               	movlw	0
  4323   000F66  6E0B               	movwf	___flmul@a^0,c
  4324   000F68  0E00               	movlw	0
  4325   000F6A  6E0C               	movwf	(___flmul@a+1)^0,c
  4326   000F6C  0E20               	movlw	32
  4327   000F6E  6E0D               	movwf	(___flmul@a+2)^0,c
  4328   000F70  0E41               	movlw	65
  4329   000F72  6E0E               	movwf	(___flmul@a+3)^0,c
  4330   000F74  ECA9  F010         	call	___flmul	;wreg free
  4331   000F78  C007  F07A         	movff	?___flmul,efgtoa@ou
  4332   000F7C  C008  F07B         	movff	?___flmul+1,efgtoa@ou+1
  4333   000F80  C009  F07C         	movff	?___flmul+2,efgtoa@ou+2
  4334   000F84  C00A  F07D         	movff	?___flmul+3,efgtoa@ou+3
  4335   000F88                     
  4336                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  4337   000F88  0E66               	movlw	102
  4338   000F8A  0100               	movlb	0	; () banked
  4339   000F8C  1971               	xorwf	efgtoa@nmode& (0+255),w,b
  4340   000F8E  A4D8               	btfss	status,2,c
  4341   000F90  EFCC  F007         	goto	u7401
  4342   000F94  EFCE  F007         	goto	u7400
  4343   000F98                     u7401:
  4344   000F98  EFD0  F007         	goto	l5837
  4345   000F9C                     u7400:
  4346   000F9C                     
  4347                           ; BSR set to: 0
  4348                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  4349   000F9C  4B74               	infsnz	efgtoa@m& (0+255),f,b
  4350   000F9E  2B75               	incf	(efgtoa@m+1)& (0+255),f,b
  4351   000FA0                     l5837:
  4352                           
  4353                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  4354   000FA0  C07A  F08F         	movff	efgtoa@ou,efgtoa@u
  4355   000FA4  C07B  F090         	movff	efgtoa@ou+1,efgtoa@u+1
  4356   000FA8  C07C  F091         	movff	efgtoa@ou+2,efgtoa@u+2
  4357   000FAC  C07D  F092         	movff	efgtoa@ou+3,efgtoa@u+3
  4358   000FB0                     
  4359                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  4360   000FB0  C076  F067         	movff	efgtoa@e,efgtoa@ne
  4361   000FB4  C077  F068         	movff	efgtoa@e+1,efgtoa@ne+1
  4362   000FB8                     
  4363                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  4364   000FB8  0E00               	movlw	0
  4365   000FBA  0100               	movlb	0	; () banked
  4366   000FBC  6F6F               	movwf	efgtoa@pp& (0+255),b
  4367   000FBE                     
  4368                           ; BSR set to: 0
  4369                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  4370   000FBE  0E00               	movlw	0
  4371   000FC0  6F6C               	movwf	(efgtoa@t+1)& (0+255),b
  4372   000FC2  0E00               	movlw	0
  4373   000FC4  6F6B               	movwf	efgtoa@t& (0+255),b
  4374   000FC6                     
  4375                           ; BSR set to: 0
  4376                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  4377   000FC6  0E00               	movlw	0
  4378   000FC8  6F7F               	movwf	(efgtoa@i+1)& (0+255),b
  4379   000FCA  0E00               	movlw	0
  4380   000FCC  6F7E               	movwf	efgtoa@i& (0+255),b
  4381                           
  4382                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4383   000FCE  EFCE  F008         	goto	l5887
  4384   000FD2                     l5847:
  4385                           
  4386                           ; BSR set to: 0
  4387                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  4388   000FD2  C080  F021         	movff	efgtoa@h,___fldiv@b
  4389   000FD6  C081  F022         	movff	efgtoa@h+1,___fldiv@b+1
  4390   000FDA  C082  F023         	movff	efgtoa@h+2,___fldiv@b+2
  4391   000FDE  C083  F024         	movff	efgtoa@h+3,___fldiv@b+3
  4392   000FE2  C08F  F025         	movff	efgtoa@u,___fldiv@a
  4393   000FE6  C090  F026         	movff	efgtoa@u+1,___fldiv@a+1
  4394   000FEA  C091  F027         	movff	efgtoa@u+2,___fldiv@a+2
  4395   000FEE  C092  F028         	movff	efgtoa@u+3,___fldiv@a+3
  4396   000FF2  ECBE  F012         	call	___fldiv	;wreg free
  4397   000FF6  C021  F03A         	movff	?___fldiv,floorf@x
  4398   000FFA  C022  F03B         	movff	?___fldiv+1,floorf@x+1
  4399   000FFE  C023  F03C         	movff	?___fldiv+2,floorf@x+2
  4400   001002  C024  F03D         	movff	?___fldiv+3,floorf@x+3
  4401   001006  EC1E  F017         	call	_floorf	;wreg free
  4402   00100A  C03A  F084         	movff	?_floorf,efgtoa@l
  4403   00100E  C03B  F085         	movff	?_floorf+1,efgtoa@l+1
  4404   001012  C03C  F086         	movff	?_floorf+2,efgtoa@l+2
  4405   001016  C03D  F087         	movff	?_floorf+3,efgtoa@l+3
  4406                           
  4407                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  4408   00101A  C084  F007         	movff	efgtoa@l,___fltol@f1
  4409   00101E  C085  F008         	movff	efgtoa@l+1,___fltol@f1+1
  4410   001022  C086  F009         	movff	efgtoa@l+2,___fltol@f1+2
  4411   001026  C087  F00A         	movff	efgtoa@l+3,___fltol@f1+3
  4412   00102A  EC33  F01B         	call	___fltol	;wreg free
  4413   00102E  BE08               	btfsc	(?___fltol+1)^0,7,c
  4414   001030  EF25  F008         	goto	u7410
  4415   001034  5008               	movf	(?___fltol+1)^0,w,c
  4416   001036  E107               	bnz	u7411
  4417   001038  0E0A               	movlw	10
  4418   00103A  5C07               	subwf	?___fltol^0,w,c
  4419   00103C  B0D8               	btfsc	status,0,c
  4420   00103E  EF23  F008         	goto	u7411
  4421   001042  EF25  F008         	goto	u7410
  4422   001046                     u7411:
  4423   001046  EF35  F008         	goto	l5851
  4424   00104A                     u7410:
  4425   00104A  C084  F007         	movff	efgtoa@l,___fltol@f1
  4426   00104E  C085  F008         	movff	efgtoa@l+1,___fltol@f1+1
  4427   001052  C086  F009         	movff	efgtoa@l+2,___fltol@f1+2
  4428   001056  C087  F00A         	movff	efgtoa@l+3,___fltol@f1+3
  4429   00105A  EC33  F01B         	call	___fltol	;wreg free
  4430   00105E  C007  F072         	movff	?___fltol,efgtoa@d
  4431   001062  C008  F073         	movff	?___fltol+1,efgtoa@d+1
  4432   001066  EF3A  F008         	goto	l1034
  4433   00106A                     l5851:
  4434   00106A  0E00               	movlw	0
  4435   00106C  0100               	movlb	0	; () banked
  4436   00106E  6F73               	movwf	(efgtoa@d+1)& (0+255),b
  4437   001070  0E09               	movlw	9
  4438   001072  6F72               	movwf	efgtoa@d& (0+255),b
  4439   001074                     l1034:
  4440                           
  4441                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  4442   001074  0100               	movlb	0	; () banked
  4443   001076  516F               	movf	efgtoa@pp& (0+255),w,b
  4444   001078  A4D8               	btfss	status,2,c
  4445   00107A  EF41  F008         	goto	u7421
  4446   00107E  EF43  F008         	goto	u7420
  4447   001082                     u7421:
  4448   001082  EF6B  F008         	goto	l5871
  4449   001086                     u7420:
  4450   001086                     
  4451                           ; BSR set to: 0
  4452   001086  BF68               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4453   001088  EF4A  F008         	goto	u7430
  4454   00108C  EF48  F008         	goto	u7431
  4455   001090                     u7431:
  4456   001090  EF6B  F008         	goto	l5871
  4457   001094                     u7430:
  4458   001094                     
  4459                           ; BSR set to: 0
  4460                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  4461   001094  0EAD               	movlw	low _dbuf
  4462   001096  258D               	addwf	efgtoa@n& (0+255),w,b
  4463   001098  6ED9               	movwf	fsr2l,c
  4464   00109A  0E01               	movlw	high _dbuf
  4465   00109C  218E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4466   00109E  6EDA               	movwf	fsr2h,c
  4467   0010A0  0E2E               	movlw	46
  4468   0010A2  6EDF               	movwf	indf2,c
  4469   0010A4                     
  4470                           ; BSR set to: 0
  4471   0010A4  4B8D               	infsnz	efgtoa@n& (0+255),f,b
  4472   0010A6  2B8E               	incf	(efgtoa@n+1)& (0+255),f,b
  4473   0010A8                     
  4474                           ; BSR set to: 0
  4475                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  4476   0010A8  0778               	decf	efgtoa@w& (0+255),f,b
  4477   0010AA  A0D8               	btfss	status,0,c
  4478   0010AC  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  4479   0010AE                     
  4480                           ; BSR set to: 0
  4481                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  4482   0010AE  0E01               	movlw	1
  4483   0010B0  6F6F               	movwf	efgtoa@pp& (0+255),b
  4484   0010B2  EF6B  F008         	goto	l5871
  4485   0010B6                     l5863:
  4486                           
  4487                           ; BSR set to: 0
  4488                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  4489   0010B6  0EAD               	movlw	low _dbuf
  4490   0010B8  258D               	addwf	efgtoa@n& (0+255),w,b
  4491   0010BA  6ED9               	movwf	fsr2l,c
  4492   0010BC  0E01               	movlw	high _dbuf
  4493   0010BE  218E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4494   0010C0  6EDA               	movwf	fsr2h,c
  4495   0010C2  0E30               	movlw	48
  4496   0010C4  6EDF               	movwf	indf2,c
  4497   0010C6                     
  4498                           ; BSR set to: 0
  4499   0010C6  4B8D               	infsnz	efgtoa@n& (0+255),f,b
  4500   0010C8  2B8E               	incf	(efgtoa@n+1)& (0+255),f,b
  4501   0010CA                     
  4502                           ; BSR set to: 0
  4503                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  4504   0010CA  0778               	decf	efgtoa@w& (0+255),f,b
  4505   0010CC  A0D8               	btfss	status,0,c
  4506   0010CE  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  4507   0010D0                     
  4508                           ; BSR set to: 0
  4509                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  4510   0010D0  076B               	decf	efgtoa@t& (0+255),f,b
  4511   0010D2  A0D8               	btfss	status,0,c
  4512   0010D4  076C               	decf	(efgtoa@t+1)& (0+255),f,b
  4513   0010D6                     l5871:
  4514                           
  4515                           ; BSR set to: 0
  4516                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  4517   0010D6  516B               	movf	efgtoa@t& (0+255),w,b
  4518   0010D8  116C               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4519   0010DA  A4D8               	btfss	status,2,c
  4520   0010DC  EF72  F008         	goto	u7441
  4521   0010E0  EF74  F008         	goto	u7440
  4522   0010E4                     u7441:
  4523   0010E4  EF5B  F008         	goto	l5863
  4524   0010E8                     u7440:
  4525   0010E8                     
  4526                           ; BSR set to: 0
  4527                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4528   0010E8  0EAD               	movlw	low _dbuf
  4529   0010EA  258D               	addwf	efgtoa@n& (0+255),w,b
  4530   0010EC  6ED9               	movwf	fsr2l,c
  4531   0010EE  0E01               	movlw	high _dbuf
  4532   0010F0  218E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4533   0010F2  6EDA               	movwf	fsr2h,c
  4534   0010F4  5172               	movf	efgtoa@d& (0+255),w,b
  4535   0010F6  0F30               	addlw	48
  4536   0010F8  6EDF               	movwf	indf2,c
  4537   0010FA                     
  4538                           ; BSR set to: 0
  4539   0010FA  4B8D               	infsnz	efgtoa@n& (0+255),f,b
  4540   0010FC  2B8E               	incf	(efgtoa@n+1)& (0+255),f,b
  4541   0010FE                     
  4542                           ; BSR set to: 0
  4543                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  4544   0010FE  0778               	decf	efgtoa@w& (0+255),f,b
  4545   001100  A0D8               	btfss	status,0,c
  4546   001102  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  4547   001104                     
  4548                           ; BSR set to: 0
  4549                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  4550   001104  C080  F020         	movff	efgtoa@h,___flsub@b
  4551   001108  C081  F021         	movff	efgtoa@h+1,___flsub@b+1
  4552   00110C  C082  F022         	movff	efgtoa@h+2,___flsub@b+2
  4553   001110  C083  F023         	movff	efgtoa@h+3,___flsub@b+3
  4554   001114  C084  F00B         	movff	efgtoa@l,___flmul@a
  4555   001118  C085  F00C         	movff	efgtoa@l+1,___flmul@a+1
  4556   00111C  C086  F00D         	movff	efgtoa@l+2,___flmul@a+2
  4557   001120  C087  F00E         	movff	efgtoa@l+3,___flmul@a+3
  4558   001124  C08F  F007         	movff	efgtoa@u,___flmul@b
  4559   001128  C090  F008         	movff	efgtoa@u+1,___flmul@b+1
  4560   00112C  C091  F009         	movff	efgtoa@u+2,___flmul@b+2
  4561   001130  C092  F00A         	movff	efgtoa@u+3,___flmul@b+3
  4562   001134  ECA9  F010         	call	___flmul	;wreg free
  4563   001138  C007  F024         	movff	?___flmul,___flsub@a
  4564   00113C  C008  F025         	movff	?___flmul+1,___flsub@a+1
  4565   001140  C009  F026         	movff	?___flmul+2,___flsub@a+2
  4566   001144  C00A  F027         	movff	?___flmul+3,___flsub@a+3
  4567   001148  EC00  F020         	call	___flsub	;wreg free
  4568   00114C  C020  F080         	movff	?___flsub,efgtoa@h
  4569   001150  C021  F081         	movff	?___flsub+1,efgtoa@h+1
  4570   001154  C022  F082         	movff	?___flsub+2,efgtoa@h+2
  4571   001158  C023  F083         	movff	?___flsub+3,efgtoa@h+3
  4572   00115C                     
  4573                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  4574   00115C  C08F  F021         	movff	efgtoa@u,___fldiv@b
  4575   001160  C090  F022         	movff	efgtoa@u+1,___fldiv@b+1
  4576   001164  C091  F023         	movff	efgtoa@u+2,___fldiv@b+2
  4577   001168  C092  F024         	movff	efgtoa@u+3,___fldiv@b+3
  4578   00116C  0E00               	movlw	0
  4579   00116E  6E25               	movwf	___fldiv@a^0,c
  4580   001170  0E00               	movlw	0
  4581   001172  6E26               	movwf	(___fldiv@a+1)^0,c
  4582   001174  0E20               	movlw	32
  4583   001176  6E27               	movwf	(___fldiv@a+2)^0,c
  4584   001178  0E41               	movlw	65
  4585   00117A  6E28               	movwf	(___fldiv@a+3)^0,c
  4586   00117C  ECBE  F012         	call	___fldiv	;wreg free
  4587   001180  C021  F08F         	movff	?___fldiv,efgtoa@u
  4588   001184  C022  F090         	movff	?___fldiv+1,efgtoa@u+1
  4589   001188  C023  F091         	movff	?___fldiv+2,efgtoa@u+2
  4590   00118C  C024  F092         	movff	?___fldiv+3,efgtoa@u+3
  4591   001190                     
  4592                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  4593   001190  0100               	movlb	0	; () banked
  4594   001192  0767               	decf	efgtoa@ne& (0+255),f,b
  4595   001194  A0D8               	btfss	status,0,c
  4596   001196  0768               	decf	(efgtoa@ne+1)& (0+255),f,b
  4597   001198                     
  4598                           ; BSR set to: 0
  4599                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  4600   001198  4B7E               	infsnz	efgtoa@i& (0+255),f,b
  4601   00119A  2B7F               	incf	(efgtoa@i+1)& (0+255),f,b
  4602   00119C                     l5887:
  4603                           
  4604                           ; BSR set to: 0
  4605                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4606   00119C  5174               	movf	efgtoa@m& (0+255),w,b
  4607   00119E  5D7E               	subwf	efgtoa@i& (0+255),w,b
  4608   0011A0  517F               	movf	(efgtoa@i+1)& (0+255),w,b
  4609   0011A2  0A80               	xorlw	128
  4610   0011A4  6E4E               	movwf	??_efgtoa^0,c
  4611   0011A6  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  4612   0011A8  0A80               	xorlw	128
  4613   0011AA  584E               	subwfb	??_efgtoa^0,w,c
  4614   0011AC  B0D8               	btfsc	status,0,c
  4615   0011AE  EFDB  F008         	goto	u7451
  4616   0011B2  EFDD  F008         	goto	u7450
  4617   0011B6                     u7451:
  4618   0011B6  EFEB  F008         	goto	l5891
  4619   0011BA                     u7450:
  4620   0011BA                     
  4621                           ; BSR set to: 0
  4622   0011BA  BF8E               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4623   0011BC  EFE9  F008         	goto	u7461
  4624   0011C0  518E               	movf	(efgtoa@n+1)& (0+255),w,b
  4625   0011C2  E109               	bnz	u7460
  4626   0011C4  0E4B               	movlw	75
  4627   0011C6  5D8D               	subwf	efgtoa@n& (0+255),w,b
  4628   0011C8  A0D8               	btfss	status,0,c
  4629   0011CA  EFE9  F008         	goto	u7461
  4630   0011CE  EFEB  F008         	goto	u7460
  4631   0011D2                     u7461:
  4632   0011D2  EFE9  F007         	goto	l5847
  4633   0011D6                     u7460:
  4634   0011D6                     l5891:
  4635                           
  4636                           ; BSR set to: 0
  4637                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  4638   0011D6  0E00               	movlw	0
  4639   0011D8  6F7F               	movwf	(efgtoa@i+1)& (0+255),b
  4640   0011DA  0E4F               	movlw	79
  4641   0011DC  6F7E               	movwf	efgtoa@i& (0+255),b
  4642   0011DE                     
  4643                           ; BSR set to: 0
  4644                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  4645   0011DE  0EAD               	movlw	low _dbuf
  4646   0011E0  257E               	addwf	efgtoa@i& (0+255),w,b
  4647   0011E2  6ED9               	movwf	fsr2l,c
  4648   0011E4  0E01               	movlw	high _dbuf
  4649   0011E6  217F               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4650   0011E8  6EDA               	movwf	fsr2h,c
  4651   0011EA  0E00               	movlw	0
  4652   0011EC  6EDF               	movwf	indf2,c
  4653   0011EE                     
  4654                           ; BSR set to: 0
  4655                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  4656   0011EE  0EAD               	movlw	low _dbuf
  4657   0011F0  6E4E               	movwf	??_efgtoa^0,c
  4658   0011F2  0E01               	movlw	high _dbuf
  4659   0011F4  6E4F               	movwf	(??_efgtoa+1)^0,c
  4660   0011F6  518D               	movf	efgtoa@n& (0+255),w,b
  4661   0011F8  5E4E               	subwf	??_efgtoa^0,f,c
  4662   0011FA  518E               	movf	(efgtoa@n+1)& (0+255),w,b
  4663   0011FC  5A4F               	subwfb	(??_efgtoa+1)^0,f,c
  4664   0011FE  517E               	movf	efgtoa@i& (0+255),w,b
  4665   001200  244E               	addwf	??_efgtoa^0,w,c
  4666   001202  6E07               	movwf	memcpy@d1^0,c
  4667   001204  517F               	movf	(efgtoa@i+1)& (0+255),w,b
  4668   001206  204F               	addwfc	(??_efgtoa+1)^0,w,c
  4669   001208  6E08               	movwf	(memcpy@d1+1)^0,c
  4670   00120A  0EAD               	movlw	low _dbuf
  4671   00120C  6E09               	movwf	memcpy@s1^0,c
  4672   00120E  0E01               	movlw	high _dbuf
  4673   001210  6E0A               	movwf	(memcpy@s1+1)^0,c
  4674   001212  C08D  F00B         	movff	efgtoa@n,memcpy@n
  4675   001216  C08E  F00C         	movff	efgtoa@n+1,memcpy@n+1
  4676   00121A  ECB5  F01F         	call	_memcpy	;wreg free
  4677   00121E                     
  4678                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  4679   00121E  0100               	movlb	0	; () banked
  4680   001220  518D               	movf	efgtoa@n& (0+255),w,b
  4681   001222  5D7E               	subwf	efgtoa@i& (0+255),w,b
  4682   001224  6F8D               	movwf	efgtoa@n& (0+255),b
  4683   001226  518E               	movf	(efgtoa@n+1)& (0+255),w,b
  4684   001228  597F               	subwfb	(efgtoa@i+1)& (0+255),w,b
  4685   00122A  6F8E               	movwf	(efgtoa@n+1)& (0+255),b
  4686   00122C                     
  4687                           ; BSR set to: 0
  4688                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  4689   00122C  5188               	movf	efgtoa@sign& (0+255),w,b
  4690   00122E  A4D8               	btfss	status,2,c
  4691   001230  EF1C  F009         	goto	u7471
  4692   001234  EF1F  F009         	goto	u7470
  4693   001238                     u7471:
  4694   001238  0E01               	movlw	1
  4695   00123A  EF20  F009         	goto	u7480
  4696   00123E                     u7470:
  4697   00123E  0E00               	movlw	0
  4698   001240                     u7480:
  4699   001240  6F7E               	movwf	efgtoa@i& (0+255),b
  4700   001242  6B7F               	clrf	(efgtoa@i+1)& (0+255),b
  4701   001244                     
  4702                           ; BSR set to: 0
  4703                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  4704   001244  5188               	movf	efgtoa@sign& (0+255),w,b
  4705   001246  B4D8               	btfsc	status,2,c
  4706   001248  EF28  F009         	goto	u7491
  4707   00124C  EF2A  F009         	goto	u7490
  4708   001250                     u7491:
  4709   001250  EF35  F009         	goto	l5905
  4710   001254                     u7490:
  4711   001254                     
  4712                           ; BSR set to: 0
  4713                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  4714   001254  078D               	decf	efgtoa@n& (0+255),f,b
  4715   001256  A0D8               	btfss	status,0,c
  4716   001258  078E               	decf	(efgtoa@n+1)& (0+255),f,b
  4717   00125A  0EAD               	movlw	low _dbuf
  4718   00125C  258D               	addwf	efgtoa@n& (0+255),w,b
  4719   00125E  6ED9               	movwf	fsr2l,c
  4720   001260  0E01               	movlw	high _dbuf
  4721   001262  218E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4722   001264  6EDA               	movwf	fsr2h,c
  4723   001266  C088  FFDF         	movff	efgtoa@sign,indf2
  4724   00126A                     l5905:
  4725                           
  4726                           ; BSR set to: 0
  4727                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  4728   00126A  517E               	movf	efgtoa@i& (0+255),w,b
  4729   00126C  5F78               	subwf	efgtoa@w& (0+255),f,b
  4730   00126E  517F               	movf	(efgtoa@i+1)& (0+255),w,b
  4731   001270  5B79               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4732   001272                     
  4733                           ; BSR set to: 0
  4734                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  4735   001272  C060  F018         	movff	efgtoa@fp,pad@fp
  4736   001276  C061  F019         	movff	efgtoa@fp+1,pad@fp+1
  4737   00127A  0EAD               	movlw	low _dbuf
  4738   00127C  258D               	addwf	efgtoa@n& (0+255),w,b
  4739   00127E  6E1A               	movwf	pad@buf^0,c
  4740   001280  0E01               	movlw	high _dbuf
  4741   001282  218E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4742   001284  6E1B               	movwf	(pad@buf+1)^0,c
  4743   001286  C078  F01C         	movff	efgtoa@w,pad@p
  4744   00128A  C079  F01D         	movff	efgtoa@w+1,pad@p+1
  4745   00128E  ECB5  F01E         	call	_pad	;wreg free
  4746   001292                     l1001:
  4747   001292  0012               	return		;funcret
  4748   001294                     __end_of_efgtoa:
  4749                           	callstack 0
  4750                           
  4751 ;; *************** function _strcpy *****************
  4752 ;; Defined at:
  4753 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  4754 ;; Parameters:    Size  Location     Type
  4755 ;;  dest            2    6[COMRAM] PTR unsigned char 
  4756 ;;		 -> dbuf(80), 
  4757 ;;  src             2    8[COMRAM] PTR const unsigned char 
  4758 ;;		 -> STR_6(4), STR_3(4), 
  4759 ;; Auto vars:     Size  Location     Type
  4760 ;;  d               2   12[COMRAM] PTR unsigned char 
  4761 ;;		 -> dbuf(80), 
  4762 ;;  s               2   10[COMRAM] PTR const unsigned char 
  4763 ;;		 -> STR_6(4), STR_3(4), 
  4764 ;; Return value:  Size  Location     Type
  4765 ;;                  2    6[COMRAM] PTR unsigned char 
  4766 ;; Registers used:
  4767 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4768 ;; Tracked objects:
  4769 ;;		On entry : 0/0
  4770 ;;		On exit  : 0/0
  4771 ;;		Unchanged: 0/0
  4772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4773 ;;      Params:         4       0       0       0       0       0       0       0       0
  4774 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4775 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4776 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4777 ;;Total ram usage:        8 bytes
  4778 ;; Hardware stack levels used: 1
  4779 ;; Hardware stack levels required when called: 1
  4780 ;; This function calls:
  4781 ;;		Nothing
  4782 ;; This function is called by:
  4783 ;;		_efgtoa
  4784 ;; This function uses a non-reentrant model
  4785 ;;
  4786                           
  4787                           	psect	text9
  4788   0040D0                     __ptext9:
  4789                           	callstack 0
  4790   0040D0                     _strcpy:
  4791                           	callstack 24
  4792   0040D0  C009  F00B         	movff	strcpy@src,strcpy@s
  4793   0040D4  C00A  F00C         	movff	strcpy@src+1,strcpy@s+1
  4794   0040D8  C007  F00D         	movff	strcpy@dest,strcpy@d
  4795   0040DC  C008  F00E         	movff	strcpy@dest+1,strcpy@d+1
  4796   0040E0                     l5575:
  4797   0040E0  C00B  FFF6         	movff	strcpy@s,tblptrl
  4798   0040E4  C00C  FFF7         	movff	strcpy@s+1,tblptrh
  4799   0040E8  4A0B               	infsnz	strcpy@s^0,f,c
  4800   0040EA  2A0C               	incf	(strcpy@s+1)^0,f,c
  4801   0040EC                     	if	0	;tblptru may be non-zero
  4802   0040EC                     	endif
  4803   0040EC                     	if	0	;tblptru may be non-zero
  4804   0040EC                     	endif
  4805   0040EC  C00D  FFD9         	movff	strcpy@d,fsr2l
  4806   0040F0  C00E  FFDA         	movff	strcpy@d+1,fsr2h
  4807   0040F4  4A0D               	infsnz	strcpy@d^0,f,c
  4808   0040F6  2A0E               	incf	(strcpy@d+1)^0,f,c
  4809   0040F8  0008               	tblrd		*
  4810   0040FA  CFF5 FFDF          	movff	tablat,indf2
  4811   0040FE  50DF               	movf	indf2,w,c
  4812   004100  A4D8               	btfss	status,2,c
  4813   004102  EF85  F020         	goto	u6911
  4814   004106  EF87  F020         	goto	u6910
  4815   00410A                     u6911:
  4816   00410A  EF70  F020         	goto	l5575
  4817   00410E                     u6910:
  4818   00410E  0012               	return		;funcret
  4819   004110                     __end_of_strcpy:
  4820                           	callstack 0
  4821                           
  4822 ;; *************** function _memcpy *****************
  4823 ;; Defined at:
  4824 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  4825 ;; Parameters:    Size  Location     Type
  4826 ;;  d1              2    6[COMRAM] PTR void 
  4827 ;;		 -> dbuf(80), 
  4828 ;;  s1              2    8[COMRAM] PTR const void 
  4829 ;;		 -> dbuf(80), 
  4830 ;;  n               2   10[COMRAM] unsigned int 
  4831 ;; Auto vars:     Size  Location     Type
  4832 ;;  s               2   15[COMRAM] PTR const unsigned char 
  4833 ;;		 -> dbuf(80), 
  4834 ;;  d               2   13[COMRAM] PTR unsigned char 
  4835 ;;		 -> dbuf(80), 
  4836 ;;  tmp             1   12[COMRAM] unsigned char 
  4837 ;; Return value:  Size  Location     Type
  4838 ;;                  2    6[COMRAM] PTR void 
  4839 ;; Registers used:
  4840 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4841 ;; Tracked objects:
  4842 ;;		On entry : 0/0
  4843 ;;		On exit  : 0/0
  4844 ;;		Unchanged: 0/0
  4845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4846 ;;      Params:         6       0       0       0       0       0       0       0       0
  4847 ;;      Locals:         5       0       0       0       0       0       0       0       0
  4848 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4849 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4850 ;;Total ram usage:       11 bytes
  4851 ;; Hardware stack levels used: 1
  4852 ;; Hardware stack levels required when called: 1
  4853 ;; This function calls:
  4854 ;;		Nothing
  4855 ;; This function is called by:
  4856 ;;		_efgtoa
  4857 ;; This function uses a non-reentrant model
  4858 ;;
  4859                           
  4860                           	psect	text10
  4861   003F6A                     __ptext10:
  4862                           	callstack 0
  4863   003F6A                     _memcpy:
  4864                           	callstack 24
  4865   003F6A  C009  F010         	movff	memcpy@s1,memcpy@s
  4866   003F6E  C00A  F011         	movff	memcpy@s1+1,memcpy@s+1
  4867   003F72  C007  F00E         	movff	memcpy@d1,memcpy@d
  4868   003F76  C008  F00F         	movff	memcpy@d1+1,memcpy@d+1
  4869   003F7A  EFCF  F01F         	goto	l5619
  4870   003F7E                     l5611:
  4871   003F7E  C010  FFD9         	movff	memcpy@s,fsr2l
  4872   003F82  C011  FFDA         	movff	memcpy@s+1,fsr2h
  4873   003F86  50DF               	movf	indf2,w,c
  4874   003F88  6E0D               	movwf	memcpy@tmp^0,c
  4875   003F8A  4A10               	infsnz	memcpy@s^0,f,c
  4876   003F8C  2A11               	incf	(memcpy@s+1)^0,f,c
  4877   003F8E  C00E  FFD9         	movff	memcpy@d,fsr2l
  4878   003F92  C00F  FFDA         	movff	memcpy@d+1,fsr2h
  4879   003F96  C00D  FFDF         	movff	memcpy@tmp,indf2
  4880   003F9A  4A0E               	infsnz	memcpy@d^0,f,c
  4881   003F9C  2A0F               	incf	(memcpy@d+1)^0,f,c
  4882   003F9E                     l5619:
  4883   003F9E  060B               	decf	memcpy@n^0,f,c
  4884   003FA0  A0D8               	btfss	status,0,c
  4885   003FA2  060C               	decf	(memcpy@n+1)^0,f,c
  4886   003FA4  280B               	incf	memcpy@n^0,w,c
  4887   003FA6  E106               	bnz	u7031
  4888   003FA8  280C               	incf	(memcpy@n+1)^0,w,c
  4889   003FAA  A4D8               	btfss	status,2,c
  4890   003FAC  EFDA  F01F         	goto	u7031
  4891   003FB0  EFDC  F01F         	goto	u7030
  4892   003FB4                     u7031:
  4893   003FB4  EFBF  F01F         	goto	l5611
  4894   003FB8                     u7030:
  4895   003FB8  0012               	return		;funcret
  4896   003FBA                     __end_of_memcpy:
  4897                           	callstack 0
  4898                           
  4899 ;; *************** function _labs *****************
  4900 ;; Defined at:
  4901 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  4902 ;; Parameters:    Size  Location     Type
  4903 ;;  a               4    6[COMRAM] long 
  4904 ;; Auto vars:     Size  Location     Type
  4905 ;;		None
  4906 ;; Return value:  Size  Location     Type
  4907 ;;                  4    6[COMRAM] long 
  4908 ;; Registers used:
  4909 ;;		wreg, status,2, status,0
  4910 ;; Tracked objects:
  4911 ;;		On entry : 0/0
  4912 ;;		On exit  : 0/0
  4913 ;;		Unchanged: 0/0
  4914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4915 ;;      Params:         4       0       0       0       0       0       0       0       0
  4916 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4917 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4918 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4919 ;;Total ram usage:        8 bytes
  4920 ;; Hardware stack levels used: 1
  4921 ;; Hardware stack levels required when called: 1
  4922 ;; This function calls:
  4923 ;;		Nothing
  4924 ;; This function is called by:
  4925 ;;		_efgtoa
  4926 ;; This function uses a non-reentrant model
  4927 ;;
  4928                           
  4929                           	psect	text11
  4930   003E4C                     __ptext11:
  4931                           	callstack 0
  4932   003E4C                     _labs:
  4933                           	callstack 24
  4934   003E4C  BE0A               	btfsc	(labs@a+3)^0,7,c
  4935   003E4E  EF35  F01F         	goto	u6920
  4936   003E52  500A               	movf	(labs@a+3)^0,w,c
  4937   003E54  1009               	iorwf	(labs@a+2)^0,w,c
  4938   003E56  1008               	iorwf	(labs@a+1)^0,w,c
  4939   003E58  E106               	bnz	u6921
  4940   003E5A  0407               	decf	labs@a^0,w,c
  4941   003E5C  B0D8               	btfsc	status,0,c
  4942   003E5E  EF33  F01F         	goto	u6921
  4943   003E62  EF35  F01F         	goto	u6920
  4944   003E66                     u6921:
  4945   003E66  EF50  F01F         	goto	l1164
  4946   003E6A                     u6920:
  4947   003E6A  C007  F00B         	movff	labs@a,??_labs
  4948   003E6E  C008  F00C         	movff	labs@a+1,??_labs+1
  4949   003E72  C009  F00D         	movff	labs@a+2,??_labs+2
  4950   003E76  C00A  F00E         	movff	labs@a+3,??_labs+3
  4951   003E7A  1E0B               	comf	??_labs^0,f,c
  4952   003E7C  1E0C               	comf	(??_labs+1)^0,f,c
  4953   003E7E  1E0D               	comf	(??_labs+2)^0,f,c
  4954   003E80  1E0E               	comf	(??_labs+3)^0,f,c
  4955   003E82  2A0B               	incf	??_labs^0,f,c
  4956   003E84  0E00               	movlw	0
  4957   003E86  220C               	addwfc	(??_labs+1)^0,f,c
  4958   003E88  220D               	addwfc	(??_labs+2)^0,f,c
  4959   003E8A  220E               	addwfc	(??_labs+3)^0,f,c
  4960   003E8C  C00B  F007         	movff	??_labs,?_labs
  4961   003E90  C00C  F008         	movff	??_labs+1,?_labs+1
  4962   003E94  C00D  F009         	movff	??_labs+2,?_labs+2
  4963   003E98  C00E  F00A         	movff	??_labs+3,?_labs+3
  4964   003E9C  EF58  F01F         	goto	l1167
  4965   003EA0                     l1164:
  4966   003EA0  C007  F007         	movff	labs@a,?_labs
  4967   003EA4  C008  F008         	movff	labs@a+1,?_labs+1
  4968   003EA8  C009  F009         	movff	labs@a+2,?_labs+2
  4969   003EAC  C00A  F00A         	movff	labs@a+3,?_labs+3
  4970   003EB0                     l1167:
  4971   003EB0  0012               	return		;funcret
  4972   003EB2                     __end_of_labs:
  4973                           	callstack 0
  4974                           
  4975 ;; *************** function _floorf *****************
  4976 ;; Defined at:
  4977 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  4978 ;; Parameters:    Size  Location     Type
  4979 ;;  x               4   57[COMRAM] float 
  4980 ;; Auto vars:     Size  Location     Type
  4981 ;;  u               4   73[COMRAM] struct .
  4982 ;;  m               4   67[COMRAM] unsigned long 
  4983 ;;  e               2   71[COMRAM] int 
  4984 ;; Return value:  Size  Location     Type
  4985 ;;                  4   57[COMRAM] float 
  4986 ;; Registers used:
  4987 ;;		wreg, status,2, status,0
  4988 ;; Tracked objects:
  4989 ;;		On entry : 0/0
  4990 ;;		On exit  : 0/0
  4991 ;;		Unchanged: 0/0
  4992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4993 ;;      Params:         4       0       0       0       0       0       0       0       0
  4994 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4995 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4996 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4997 ;;Total ram usage:       20 bytes
  4998 ;; Hardware stack levels used: 1
  4999 ;; Hardware stack levels required when called: 1
  5000 ;; This function calls:
  5001 ;;		Nothing
  5002 ;; This function is called by:
  5003 ;;		_efgtoa
  5004 ;; This function uses a non-reentrant model
  5005 ;;
  5006                           
  5007                           	psect	text12
  5008   002E3C                     __ptext12:
  5009                           	callstack 0
  5010   002E3C                     _floorf:
  5011                           	callstack 24
  5012   002E3C  C0F4  F04A         	movff	floorf@F526,floorf@u
  5013   002E40  C0F5  F04B         	movff	floorf@F526+1,floorf@u+1
  5014   002E44  C0F6  F04C         	movff	floorf@F526+2,floorf@u+2
  5015   002E48  C0F7  F04D         	movff	floorf@F526+3,floorf@u+3
  5016   002E4C  C03A  F04A         	movff	floorf@x,floorf@u
  5017   002E50  C03B  F04B         	movff	floorf@x+1,floorf@u+1
  5018   002E54  C03C  F04C         	movff	floorf@x+2,floorf@u+2
  5019   002E58  C03D  F04D         	movff	floorf@x+3,floorf@u+3
  5020   002E5C  0E81               	movlw	129
  5021   002E5E  6E3E               	movwf	??_floorf^0,c
  5022   002E60  0EFF               	movlw	255
  5023   002E62  6E3F               	movwf	(??_floorf+1)^0,c
  5024   002E64  C04A  F040         	movff	floorf@u,??_floorf+2
  5025   002E68  C04B  F041         	movff	floorf@u+1,??_floorf+3
  5026   002E6C  C04C  F042         	movff	floorf@u+2,??_floorf+4
  5027   002E70  C04D  F043         	movff	floorf@u+3,??_floorf+5
  5028   002E74  0E18               	movlw	24
  5029   002E76  EF42  F017         	goto	u6930
  5030   002E7A                     u6935:
  5031   002E7A  90D8               	bcf	status,0,c
  5032   002E7C  3243               	rrcf	(??_floorf+5)^0,f,c
  5033   002E7E  3242               	rrcf	(??_floorf+4)^0,f,c
  5034   002E80  3241               	rrcf	(??_floorf+3)^0,f,c
  5035   002E82  3240               	rrcf	(??_floorf+2)^0,f,c
  5036   002E84                     u6930:
  5037   002E84  2EE8               	decfsz	wreg,f,c
  5038   002E86  EF3D  F017         	goto	u6935
  5039   002E8A  5040               	movf	(??_floorf+2)^0,w,c
  5040   002E8C  243E               	addwf	??_floorf^0,w,c
  5041   002E8E  6E48               	movwf	floorf@e^0,c
  5042   002E90  0E00               	movlw	0
  5043   002E92  203F               	addwfc	(??_floorf+1)^0,w,c
  5044   002E94  6E49               	movwf	(floorf@e+1)^0,c
  5045   002E96  BE49               	btfsc	(floorf@e+1)^0,7,c
  5046   002E98  EF57  F017         	goto	u6941
  5047   002E9C  5049               	movf	(floorf@e+1)^0,w,c
  5048   002E9E  E109               	bnz	u6940
  5049   002EA0  0E17               	movlw	23
  5050   002EA2  5C48               	subwf	floorf@e^0,w,c
  5051   002EA4  A0D8               	btfss	status,0,c
  5052   002EA6  EF57  F017         	goto	u6941
  5053   002EAA  EF59  F017         	goto	u6940
  5054   002EAE                     u6941:
  5055   002EAE  EF63  F017         	goto	l5587
  5056   002EB2                     u6940:
  5057   002EB2                     l5585:
  5058   002EB2  C03A  F03A         	movff	floorf@x,?_floorf
  5059   002EB6  C03B  F03B         	movff	floorf@x+1,?_floorf+1
  5060   002EBA  C03C  F03C         	movff	floorf@x+2,?_floorf+2
  5061   002EBE  C03D  F03D         	movff	floorf@x+3,?_floorf+3
  5062   002EC2  EF26  F018         	goto	l1139
  5063   002EC6                     l5587:
  5064   002EC6  BE49               	btfsc	(floorf@e+1)^0,7,c
  5065   002EC8  EF68  F017         	goto	u6951
  5066   002ECC  EF6A  F017         	goto	u6950
  5067   002ED0                     u6951:
  5068   002ED0  EFDA  F017         	goto	l5597
  5069   002ED4                     u6950:
  5070   002ED4  C048  F03E         	movff	floorf@e,??_floorf
  5071   002ED8  0EFF               	movlw	255
  5072   002EDA  6E3F               	movwf	(??_floorf+1)^0,c
  5073   002EDC  0EFF               	movlw	255
  5074   002EDE  6E40               	movwf	(??_floorf+2)^0,c
  5075   002EE0  0E7F               	movlw	127
  5076   002EE2  6E41               	movwf	(??_floorf+3)^0,c
  5077   002EE4  0E00               	movlw	0
  5078   002EE6  6E42               	movwf	(??_floorf+4)^0,c
  5079   002EE8                     u6965:
  5080   002EE8  663E               	tstfsz	??_floorf^0,c
  5081   002EEA  EF79  F017         	goto	u6966
  5082   002EEE  EF81  F017         	goto	u6967
  5083   002EF2                     u6966:
  5084   002EF2  3442               	rlcf	(??_floorf+4)^0,w,c
  5085   002EF4  3242               	rrcf	(??_floorf+4)^0,f,c
  5086   002EF6  3241               	rrcf	(??_floorf+3)^0,f,c
  5087   002EF8  3240               	rrcf	(??_floorf+2)^0,f,c
  5088   002EFA  323F               	rrcf	(??_floorf+1)^0,f,c
  5089   002EFC  2E3E               	decfsz	??_floorf^0,f,c
  5090   002EFE  EF74  F017         	goto	u6965
  5091   002F02                     u6967:
  5092   002F02  C03F  F044         	movff	??_floorf+1,floorf@m
  5093   002F06  C040  F045         	movff	??_floorf+2,floorf@m+1
  5094   002F0A  C041  F046         	movff	??_floorf+3,floorf@m+2
  5095   002F0E  C042  F047         	movff	??_floorf+4,floorf@m+3
  5096   002F12  5044               	movf	floorf@m^0,w,c
  5097   002F14  144A               	andwf	floorf@u^0,w,c
  5098   002F16  6E3E               	movwf	??_floorf^0,c
  5099   002F18  5045               	movf	(floorf@m+1)^0,w,c
  5100   002F1A  144B               	andwf	(floorf@u+1)^0,w,c
  5101   002F1C  6E3F               	movwf	(??_floorf+1)^0,c
  5102   002F1E  5046               	movf	(floorf@m+2)^0,w,c
  5103   002F20  144C               	andwf	(floorf@u+2)^0,w,c
  5104   002F22  6E40               	movwf	(??_floorf+2)^0,c
  5105   002F24  5047               	movf	(floorf@m+3)^0,w,c
  5106   002F26  144D               	andwf	(floorf@u+3)^0,w,c
  5107   002F28  6E41               	movwf	(??_floorf+3)^0,c
  5108   002F2A  503E               	movf	??_floorf^0,w,c
  5109   002F2C  103F               	iorwf	(??_floorf+1)^0,w,c
  5110   002F2E  1040               	iorwf	(??_floorf+2)^0,w,c
  5111   002F30  1041               	iorwf	(??_floorf+3)^0,w,c
  5112   002F32  A4D8               	btfss	status,2,c
  5113   002F34  EF9E  F017         	goto	u6971
  5114   002F38  EFA0  F017         	goto	u6970
  5115   002F3C                     u6971:
  5116   002F3C  EFA2  F017         	goto	l5593
  5117   002F40                     u6970:
  5118   002F40  EF59  F017         	goto	l5585
  5119   002F44                     l5593:
  5120   002F44  C04A  F03E         	movff	floorf@u,??_floorf
  5121   002F48  C04B  F03F         	movff	floorf@u+1,??_floorf+1
  5122   002F4C  C04C  F040         	movff	floorf@u+2,??_floorf+2
  5123   002F50  C04D  F041         	movff	floorf@u+3,??_floorf+3
  5124   002F54  0E20               	movlw	32
  5125   002F56  EFB2  F017         	goto	u6980
  5126   002F5A                     u6985:
  5127   002F5A  90D8               	bcf	status,0,c
  5128   002F5C  3241               	rrcf	(??_floorf+3)^0,f,c
  5129   002F5E  3240               	rrcf	(??_floorf+2)^0,f,c
  5130   002F60  323F               	rrcf	(??_floorf+1)^0,f,c
  5131   002F62  323E               	rrcf	??_floorf^0,f,c
  5132   002F64                     u6980:
  5133   002F64  2EE8               	decfsz	wreg,f,c
  5134   002F66  EFAD  F017         	goto	u6985
  5135   002F6A  503E               	movf	??_floorf^0,w,c
  5136   002F6C  103F               	iorwf	(??_floorf+1)^0,w,c
  5137   002F6E  1040               	iorwf	(??_floorf+2)^0,w,c
  5138   002F70  1041               	iorwf	(??_floorf+3)^0,w,c
  5139   002F72  B4D8               	btfsc	status,2,c
  5140   002F74  EFBE  F017         	goto	u6991
  5141   002F78  EFC0  F017         	goto	u6990
  5142   002F7C                     u6991:
  5143   002F7C  EFC8  F017         	goto	l1142
  5144   002F80                     u6990:
  5145   002F80  5044               	movf	floorf@m^0,w,c
  5146   002F82  264A               	addwf	floorf@u^0,f,c
  5147   002F84  5045               	movf	(floorf@m+1)^0,w,c
  5148   002F86  224B               	addwfc	(floorf@u+1)^0,f,c
  5149   002F88  5046               	movf	(floorf@m+2)^0,w,c
  5150   002F8A  224C               	addwfc	(floorf@u+2)^0,f,c
  5151   002F8C  5047               	movf	(floorf@m+3)^0,w,c
  5152   002F8E  224D               	addwfc	(floorf@u+3)^0,f,c
  5153   002F90                     l1142:
  5154   002F90  1C44               	comf	floorf@m^0,w,c
  5155   002F92  6E3E               	movwf	??_floorf^0,c
  5156   002F94  1C45               	comf	(floorf@m+1)^0,w,c
  5157   002F96  6E3F               	movwf	(??_floorf+1)^0,c
  5158   002F98  1C46               	comf	(floorf@m+2)^0,w,c
  5159   002F9A  6E40               	movwf	(??_floorf+2)^0,c
  5160   002F9C  1C47               	comf	(floorf@m+3)^0,w,c
  5161   002F9E  6E41               	movwf	(??_floorf+3)^0,c
  5162   002FA0  503E               	movf	??_floorf^0,w,c
  5163   002FA2  164A               	andwf	floorf@u^0,f,c
  5164   002FA4  503F               	movf	(??_floorf+1)^0,w,c
  5165   002FA6  164B               	andwf	(floorf@u+1)^0,f,c
  5166   002FA8  5040               	movf	(??_floorf+2)^0,w,c
  5167   002FAA  164C               	andwf	(floorf@u+2)^0,f,c
  5168   002FAC  5041               	movf	(??_floorf+3)^0,w,c
  5169   002FAE  164D               	andwf	(floorf@u+3)^0,f,c
  5170   002FB0  EF1E  F018         	goto	l5605
  5171   002FB4                     l5597:
  5172   002FB4  C04A  F03E         	movff	floorf@u,??_floorf
  5173   002FB8  C04B  F03F         	movff	floorf@u+1,??_floorf+1
  5174   002FBC  C04C  F040         	movff	floorf@u+2,??_floorf+2
  5175   002FC0  C04D  F041         	movff	floorf@u+3,??_floorf+3
  5176   002FC4  0E20               	movlw	32
  5177   002FC6  EFEA  F017         	goto	u7000
  5178   002FCA                     u7005:
  5179   002FCA  90D8               	bcf	status,0,c
  5180   002FCC  3241               	rrcf	(??_floorf+3)^0,f,c
  5181   002FCE  3240               	rrcf	(??_floorf+2)^0,f,c
  5182   002FD0  323F               	rrcf	(??_floorf+1)^0,f,c
  5183   002FD2  323E               	rrcf	??_floorf^0,f,c
  5184   002FD4                     u7000:
  5185   002FD4  2EE8               	decfsz	wreg,f,c
  5186   002FD6  EFE5  F017         	goto	u7005
  5187   002FDA  503E               	movf	??_floorf^0,w,c
  5188   002FDC  103F               	iorwf	(??_floorf+1)^0,w,c
  5189   002FDE  1040               	iorwf	(??_floorf+2)^0,w,c
  5190   002FE0  1041               	iorwf	(??_floorf+3)^0,w,c
  5191   002FE2  A4D8               	btfss	status,2,c
  5192   002FE4  EFF6  F017         	goto	u7011
  5193   002FE8  EFF8  F017         	goto	u7010
  5194   002FEC                     u7011:
  5195   002FEC  EF02  F018         	goto	l5601
  5196   002FF0                     u7010:
  5197   002FF0  0E00               	movlw	0
  5198   002FF2  6E4A               	movwf	floorf@u^0,c
  5199   002FF4  0E00               	movlw	0
  5200   002FF6  6E4B               	movwf	(floorf@u+1)^0,c
  5201   002FF8  0E00               	movlw	0
  5202   002FFA  6E4C               	movwf	(floorf@u+2)^0,c
  5203   002FFC  0E00               	movlw	0
  5204   002FFE  6E4D               	movwf	(floorf@u+3)^0,c
  5205   003000  EF1E  F018         	goto	l5605
  5206   003004                     l5601:
  5207   003004  90D8               	bcf	status,0,c
  5208   003006  344A               	rlcf	floorf@u^0,w,c
  5209   003008  6E3E               	movwf	??_floorf^0,c
  5210   00300A  344B               	rlcf	(floorf@u+1)^0,w,c
  5211   00300C  6E3F               	movwf	(??_floorf+1)^0,c
  5212   00300E  344C               	rlcf	(floorf@u+2)^0,w,c
  5213   003010  6E40               	movwf	(??_floorf+2)^0,c
  5214   003012  344D               	rlcf	(floorf@u+3)^0,w,c
  5215   003014  6E41               	movwf	(??_floorf+3)^0,c
  5216   003016  503E               	movf	??_floorf^0,w,c
  5217   003018  103F               	iorwf	(??_floorf+1)^0,w,c
  5218   00301A  1040               	iorwf	(??_floorf+2)^0,w,c
  5219   00301C  1041               	iorwf	(??_floorf+3)^0,w,c
  5220   00301E  B4D8               	btfsc	status,2,c
  5221   003020  EF14  F018         	goto	u7021
  5222   003024  EF16  F018         	goto	u7020
  5223   003028                     u7021:
  5224   003028  EF1E  F018         	goto	l5605
  5225   00302C                     u7020:
  5226   00302C  0E00               	movlw	0
  5227   00302E  6E4A               	movwf	floorf@u^0,c
  5228   003030  0E00               	movlw	0
  5229   003032  6E4B               	movwf	(floorf@u+1)^0,c
  5230   003034  0E80               	movlw	128
  5231   003036  6E4C               	movwf	(floorf@u+2)^0,c
  5232   003038  0EBF               	movlw	191
  5233   00303A  6E4D               	movwf	(floorf@u+3)^0,c
  5234   00303C                     l5605:
  5235   00303C  C04A  F03A         	movff	floorf@u,?_floorf
  5236   003040  C04B  F03B         	movff	floorf@u+1,?_floorf+1
  5237   003044  C04C  F03C         	movff	floorf@u+2,?_floorf+2
  5238   003048  C04D  F03D         	movff	floorf@u+3,?_floorf+3
  5239   00304C                     l1139:
  5240   00304C  0012               	return		;funcret
  5241   00304E                     __end_of_floorf:
  5242                           	callstack 0
  5243                           
  5244 ;; *************** function ___fpclassifyf *****************
  5245 ;; Defined at:
  5246 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  5247 ;; Parameters:    Size  Location     Type
  5248 ;;  x               4    6[COMRAM] float 
  5249 ;; Auto vars:     Size  Location     Type
  5250 ;;  u               4   16[COMRAM] struct .
  5251 ;;  e               2   14[COMRAM] int 
  5252 ;; Return value:  Size  Location     Type
  5253 ;;                  2    6[COMRAM] int 
  5254 ;; Registers used:
  5255 ;;		wreg, status,2, status,0
  5256 ;; Tracked objects:
  5257 ;;		On entry : 0/0
  5258 ;;		On exit  : 0/0
  5259 ;;		Unchanged: 0/0
  5260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5261 ;;      Params:         4       0       0       0       0       0       0       0       0
  5262 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5263 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5264 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5265 ;;Total ram usage:       14 bytes
  5266 ;; Hardware stack levels used: 1
  5267 ;; Hardware stack levels required when called: 1
  5268 ;; This function calls:
  5269 ;;		Nothing
  5270 ;; This function is called by:
  5271 ;;		_efgtoa
  5272 ;; This function uses a non-reentrant model
  5273 ;;
  5274                           
  5275                           	psect	text13
  5276   003870                     __ptext13:
  5277                           	callstack 0
  5278   003870                     ___fpclassifyf:
  5279                           	callstack 24
  5280   003870  C0F8  F011         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5281   003874  C0F9  F012         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5282   003878  C0FA  F013         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5283   00387C  C0FB  F014         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5284   003880  C007  F011         	movff	___fpclassifyf@x,___fpclassifyf@u
  5285   003884  C008  F012         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5286   003888  C009  F013         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5287   00388C  C00A  F014         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5288   003890  C011  F00B         	movff	___fpclassifyf@u,??___fpclassifyf
  5289   003894  C012  F00C         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5290   003898  C013  F00D         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5291   00389C  C014  F00E         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5292   0038A0  0E18               	movlw	24
  5293   0038A2  EF58  F01C         	goto	u6840
  5294   0038A6                     u6845:
  5295   0038A6  90D8               	bcf	status,0,c
  5296   0038A8  320E               	rrcf	(??___fpclassifyf+3)^0,f,c
  5297   0038AA  320D               	rrcf	(??___fpclassifyf+2)^0,f,c
  5298   0038AC  320C               	rrcf	(??___fpclassifyf+1)^0,f,c
  5299   0038AE  320B               	rrcf	??___fpclassifyf^0,f,c
  5300   0038B0                     u6840:
  5301   0038B0  2EE8               	decfsz	wreg,f,c
  5302   0038B2  EF53  F01C         	goto	u6845
  5303   0038B6  500B               	movf	??___fpclassifyf^0,w,c
  5304   0038B8  6E0F               	movwf	___fpclassifyf@e^0,c
  5305   0038BA  6A10               	clrf	(___fpclassifyf@e+1)^0,c
  5306   0038BC  500F               	movf	___fpclassifyf@e^0,w,c
  5307   0038BE  1010               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5308   0038C0  A4D8               	btfss	status,2,c
  5309   0038C2  EF65  F01C         	goto	u6851
  5310   0038C6  EF67  F01C         	goto	u6850
  5311   0038CA                     u6851:
  5312   0038CA  EF87  F01C         	goto	l5563
  5313   0038CE                     u6850:
  5314   0038CE  90D8               	bcf	status,0,c
  5315   0038D0  3411               	rlcf	___fpclassifyf@u^0,w,c
  5316   0038D2  6E0B               	movwf	??___fpclassifyf^0,c
  5317   0038D4  3412               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5318   0038D6  6E0C               	movwf	(??___fpclassifyf+1)^0,c
  5319   0038D8  3413               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5320   0038DA  6E0D               	movwf	(??___fpclassifyf+2)^0,c
  5321   0038DC  3414               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5322   0038DE  6E0E               	movwf	(??___fpclassifyf+3)^0,c
  5323   0038E0  500B               	movf	??___fpclassifyf^0,w,c
  5324   0038E2  100C               	iorwf	(??___fpclassifyf+1)^0,w,c
  5325   0038E4  100D               	iorwf	(??___fpclassifyf+2)^0,w,c
  5326   0038E6  100E               	iorwf	(??___fpclassifyf+3)^0,w,c
  5327   0038E8  A4D8               	btfss	status,2,c
  5328   0038EA  EF79  F01C         	goto	u6861
  5329   0038EE  EF7B  F01C         	goto	u6860
  5330   0038F2                     u6861:
  5331   0038F2  EF81  F01C         	goto	l5559
  5332   0038F6                     u6860:
  5333   0038F6  0E00               	movlw	0
  5334   0038F8  6E08               	movwf	(?___fpclassifyf+1)^0,c
  5335   0038FA  0E02               	movlw	2
  5336   0038FC  6E07               	movwf	?___fpclassifyf^0,c
  5337   0038FE  EFB6  F01C         	goto	l1100
  5338   003902                     l5559:
  5339   003902  0E00               	movlw	0
  5340   003904  6E08               	movwf	(?___fpclassifyf+1)^0,c
  5341   003906  0E03               	movlw	3
  5342   003908  6E07               	movwf	?___fpclassifyf^0,c
  5343   00390A  EFB6  F01C         	goto	l1100
  5344   00390E                     l5563:
  5345   00390E  280F               	incf	___fpclassifyf@e^0,w,c
  5346   003910  1010               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5347   003912  A4D8               	btfss	status,2,c
  5348   003914  EF8E  F01C         	goto	u6871
  5349   003918  EF90  F01C         	goto	u6870
  5350   00391C                     u6871:
  5351   00391C  EFB2  F01C         	goto	l5569
  5352   003920                     u6870:
  5353   003920  C011  F00B         	movff	___fpclassifyf@u,??___fpclassifyf
  5354   003924  C012  F00C         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5355   003928  C013  F00D         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5356   00392C  C014  F00E         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5357   003930  0E09               	movlw	9
  5358   003932                     u6885:
  5359   003932  90D8               	bcf	status,0,c
  5360   003934  360B               	rlcf	??___fpclassifyf^0,f,c
  5361   003936  360C               	rlcf	(??___fpclassifyf+1)^0,f,c
  5362   003938  360D               	rlcf	(??___fpclassifyf+2)^0,f,c
  5363   00393A  360E               	rlcf	(??___fpclassifyf+3)^0,f,c
  5364   00393C  2EE8               	decfsz	wreg,f,c
  5365   00393E  EF99  F01C         	goto	u6885
  5366   003942  500B               	movf	??___fpclassifyf^0,w,c
  5367   003944  100C               	iorwf	(??___fpclassifyf+1)^0,w,c
  5368   003946  100D               	iorwf	(??___fpclassifyf+2)^0,w,c
  5369   003948  100E               	iorwf	(??___fpclassifyf+3)^0,w,c
  5370   00394A  B4D8               	btfsc	status,2,c
  5371   00394C  EFAA  F01C         	goto	u6891
  5372   003950  EFAD  F01C         	goto	u6890
  5373   003954                     u6891:
  5374   003954  0E01               	movlw	1
  5375   003956  EFAE  F01C         	goto	u6900
  5376   00395A                     u6890:
  5377   00395A  0E00               	movlw	0
  5378   00395C                     u6900:
  5379   00395C  6E07               	movwf	?___fpclassifyf^0,c
  5380   00395E  6A08               	clrf	(?___fpclassifyf+1)^0,c
  5381   003960  EFB6  F01C         	goto	l1100
  5382   003964                     l5569:
  5383   003964  0E00               	movlw	0
  5384   003966  6E08               	movwf	(?___fpclassifyf+1)^0,c
  5385   003968  0E04               	movlw	4
  5386   00396A  6E07               	movwf	?___fpclassifyf^0,c
  5387   00396C                     l1100:
  5388   00396C  0012               	return		;funcret
  5389   00396E                     __end_of___fpclassifyf:
  5390                           	callstack 0
  5391                           
  5392 ;; *************** function ___fltol *****************
  5393 ;; Defined at:
  5394 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  5395 ;; Parameters:    Size  Location     Type
  5396 ;;  f1              4    6[COMRAM] int 
  5397 ;; Auto vars:     Size  Location     Type
  5398 ;;  exp1            1   15[COMRAM] unsigned char 
  5399 ;;  sign1           1   14[COMRAM] unsigned char 
  5400 ;; Return value:  Size  Location     Type
  5401 ;;                  4    6[COMRAM] long 
  5402 ;; Registers used:
  5403 ;;		wreg, status,2, status,0
  5404 ;; Tracked objects:
  5405 ;;		On entry : 0/0
  5406 ;;		On exit  : 0/0
  5407 ;;		Unchanged: 0/0
  5408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5409 ;;      Params:         4       0       0       0       0       0       0       0       0
  5410 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5411 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5412 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5413 ;;Total ram usage:       10 bytes
  5414 ;; Hardware stack levels used: 1
  5415 ;; Hardware stack levels required when called: 1
  5416 ;; This function calls:
  5417 ;;		Nothing
  5418 ;; This function is called by:
  5419 ;;		_efgtoa
  5420 ;; This function uses a non-reentrant model
  5421 ;;
  5422                           
  5423                           	psect	text14
  5424   003666                     __ptext14:
  5425                           	callstack 0
  5426   003666                     ___fltol:
  5427                           	callstack 24
  5428   003666  3409               	rlcf	(___fltol@f1+2)^0,w,c
  5429   003668  340A               	rlcf	(___fltol@f1+3)^0,w,c
  5430   00366A  6E10               	movwf	___fltol@exp1^0,c
  5431   00366C  5010               	movf	___fltol@exp1^0,w,c
  5432   00366E  A4D8               	btfss	status,2,c
  5433   003670  EF3C  F01B         	goto	u6741
  5434   003674  EF3E  F01B         	goto	u6740
  5435   003678                     u6741:
  5436   003678  EF48  F01B         	goto	l5495
  5437   00367C                     u6740:
  5438   00367C                     l5491:
  5439   00367C  0E00               	movlw	0
  5440   00367E  6E07               	movwf	?___fltol^0,c
  5441   003680  0E00               	movlw	0
  5442   003682  6E08               	movwf	(?___fltol+1)^0,c
  5443   003684  0E00               	movlw	0
  5444   003686  6E09               	movwf	(?___fltol+2)^0,c
  5445   003688  0E00               	movlw	0
  5446   00368A  6E0A               	movwf	(?___fltol+3)^0,c
  5447   00368C  EFB5  F01B         	goto	l550
  5448   003690                     l5495:
  5449   003690  C007  F00B         	movff	___fltol@f1,??___fltol
  5450   003694  C008  F00C         	movff	___fltol@f1+1,??___fltol+1
  5451   003698  C009  F00D         	movff	___fltol@f1+2,??___fltol+2
  5452   00369C  C00A  F00E         	movff	___fltol@f1+3,??___fltol+3
  5453   0036A0  0E20               	movlw	32
  5454   0036A2  EF58  F01B         	goto	u6750
  5455   0036A6                     u6755:
  5456   0036A6  90D8               	bcf	status,0,c
  5457   0036A8  320E               	rrcf	(??___fltol+3)^0,f,c
  5458   0036AA  320D               	rrcf	(??___fltol+2)^0,f,c
  5459   0036AC  320C               	rrcf	(??___fltol+1)^0,f,c
  5460   0036AE  320B               	rrcf	??___fltol^0,f,c
  5461   0036B0                     u6750:
  5462   0036B0  2EE8               	decfsz	wreg,f,c
  5463   0036B2  EF53  F01B         	goto	u6755
  5464   0036B6  500B               	movf	??___fltol^0,w,c
  5465   0036B8  6E0F               	movwf	___fltol@sign1^0,c
  5466   0036BA  8E09               	bsf	(___fltol@f1+2)^0,7,c
  5467   0036BC  0EFF               	movlw	255
  5468   0036BE  1607               	andwf	___fltol@f1^0,f,c
  5469   0036C0  0EFF               	movlw	255
  5470   0036C2  1608               	andwf	(___fltol@f1+1)^0,f,c
  5471   0036C4  0EFF               	movlw	255
  5472   0036C6  1609               	andwf	(___fltol@f1+2)^0,f,c
  5473   0036C8  0E00               	movlw	0
  5474   0036CA  160A               	andwf	(___fltol@f1+3)^0,f,c
  5475   0036CC  0E96               	movlw	150
  5476   0036CE  5E10               	subwf	___fltol@exp1^0,f,c
  5477   0036D0  BE10               	btfsc	___fltol@exp1^0,7,c
  5478   0036D2  EF6F  F01B         	goto	u6760
  5479   0036D6  EF6D  F01B         	goto	u6761
  5480   0036DA                     u6761:
  5481   0036DA  EF85  F01B         	goto	l5515
  5482   0036DE                     u6760:
  5483   0036DE  5010               	movf	___fltol@exp1^0,w,c
  5484   0036E0  0A80               	xorlw	128
  5485   0036E2  0F97               	addlw	151
  5486   0036E4  B0D8               	btfsc	status,0,c
  5487   0036E6  EF77  F01B         	goto	u6771
  5488   0036EA  EF79  F01B         	goto	u6770
  5489   0036EE                     u6771:
  5490   0036EE  EF7B  F01B         	goto	l5511
  5491   0036F2                     u6770:
  5492   0036F2  EF3E  F01B         	goto	l5491
  5493   0036F6                     l5511:
  5494   0036F6  90D8               	bcf	status,0,c
  5495   0036F8  320A               	rrcf	(___fltol@f1+3)^0,f,c
  5496   0036FA  3209               	rrcf	(___fltol@f1+2)^0,f,c
  5497   0036FC  3208               	rrcf	(___fltol@f1+1)^0,f,c
  5498   0036FE  3207               	rrcf	___fltol@f1^0,f,c
  5499   003700  3E10               	incfsz	___fltol@exp1^0,f,c
  5500   003702  EF7B  F01B         	goto	l5511
  5501   003706  EF9D  F01B         	goto	l5525
  5502   00370A                     l5515:
  5503   00370A  0E1F               	movlw	31
  5504   00370C  6410               	cpfsgt	___fltol@exp1^0,c
  5505   00370E  EF8B  F01B         	goto	u6781
  5506   003712  EF8D  F01B         	goto	u6780
  5507   003716                     u6781:
  5508   003716  EF95  F01B         	goto	l5523
  5509   00371A                     u6780:
  5510   00371A  EF3E  F01B         	goto	l5491
  5511   00371E                     l5521:
  5512   00371E  90D8               	bcf	status,0,c
  5513   003720  3607               	rlcf	___fltol@f1^0,f,c
  5514   003722  3608               	rlcf	(___fltol@f1+1)^0,f,c
  5515   003724  3609               	rlcf	(___fltol@f1+2)^0,f,c
  5516   003726  360A               	rlcf	(___fltol@f1+3)^0,f,c
  5517   003728  0610               	decf	___fltol@exp1^0,f,c
  5518   00372A                     l5523:
  5519   00372A  5010               	movf	___fltol@exp1^0,w,c
  5520   00372C  A4D8               	btfss	status,2,c
  5521   00372E  EF9B  F01B         	goto	u6791
  5522   003732  EF9D  F01B         	goto	u6790
  5523   003736                     u6791:
  5524   003736  EF8F  F01B         	goto	l5521
  5525   00373A                     u6790:
  5526   00373A                     l5525:
  5527   00373A  500F               	movf	___fltol@sign1^0,w,c
  5528   00373C  B4D8               	btfsc	status,2,c
  5529   00373E  EFA3  F01B         	goto	u6801
  5530   003742  EFA5  F01B         	goto	u6800
  5531   003746                     u6801:
  5532   003746  EFAD  F01B         	goto	l5529
  5533   00374A                     u6800:
  5534   00374A  1E0A               	comf	(___fltol@f1+3)^0,f,c
  5535   00374C  1E09               	comf	(___fltol@f1+2)^0,f,c
  5536   00374E  1E08               	comf	(___fltol@f1+1)^0,f,c
  5537   003750  6C07               	negf	___fltol@f1^0,c
  5538   003752  0E00               	movlw	0
  5539   003754  2208               	addwfc	(___fltol@f1+1)^0,f,c
  5540   003756  2209               	addwfc	(___fltol@f1+2)^0,f,c
  5541   003758  220A               	addwfc	(___fltol@f1+3)^0,f,c
  5542   00375A                     l5529:
  5543   00375A  C007  F007         	movff	___fltol@f1,?___fltol
  5544   00375E  C008  F008         	movff	___fltol@f1+1,?___fltol+1
  5545   003762  C009  F009         	movff	___fltol@f1+2,?___fltol+2
  5546   003766  C00A  F00A         	movff	___fltol@f1+3,?___fltol+3
  5547   00376A                     l550:
  5548   00376A  0012               	return		;funcret
  5549   00376C                     __end_of___fltol:
  5550                           	callstack 0
  5551                           
  5552 ;; *************** function ___flsub *****************
  5553 ;; Defined at:
  5554 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  5555 ;; Parameters:    Size  Location     Type
  5556 ;;  b               4   31[COMRAM] long 
  5557 ;;  a               4   35[COMRAM] long 
  5558 ;; Auto vars:     Size  Location     Type
  5559 ;;		None
  5560 ;; Return value:  Size  Location     Type
  5561 ;;                  4   31[COMRAM] long 
  5562 ;; Registers used:
  5563 ;;		wreg, status,2, status,0, cstack
  5564 ;; Tracked objects:
  5565 ;;		On entry : 0/0
  5566 ;;		On exit  : 0/0
  5567 ;;		Unchanged: 0/0
  5568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5569 ;;      Params:         8       0       0       0       0       0       0       0       0
  5570 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5571 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5572 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5573 ;;Total ram usage:        8 bytes
  5574 ;; Hardware stack levels used: 1
  5575 ;; Hardware stack levels required when called: 2
  5576 ;; This function calls:
  5577 ;;		___fladd
  5578 ;; This function is called by:
  5579 ;;		_efgtoa
  5580 ;; This function uses a non-reentrant model
  5581 ;;
  5582                           
  5583                           	psect	text15
  5584   004000                     __ptext15:
  5585                           	callstack 0
  5586   004000                     ___flsub:
  5587                           	callstack 23
  5588   004000  0E00               	movlw	0
  5589   004002  1A24               	xorwf	___flsub@a^0,f,c
  5590   004004  0E00               	movlw	0
  5591   004006  1A25               	xorwf	(___flsub@a+1)^0,f,c
  5592   004008  0E00               	movlw	0
  5593   00400A  1A26               	xorwf	(___flsub@a+2)^0,f,c
  5594   00400C  0E80               	movlw	128
  5595   00400E  1A27               	xorwf	(___flsub@a+3)^0,f,c
  5596   004010  C020  F007         	movff	___flsub@b,___fladd@b
  5597   004014  C021  F008         	movff	___flsub@b+1,___fladd@b+1
  5598   004018  C022  F009         	movff	___flsub@b+2,___fladd@b+2
  5599   00401C  C023  F00A         	movff	___flsub@b+3,___fladd@b+3
  5600   004020  C024  F00B         	movff	___flsub@a,___fladd@a
  5601   004024  C025  F00C         	movff	___flsub@a+1,___fladd@a+1
  5602   004028  C026  F00D         	movff	___flsub@a+2,___fladd@a+2
  5603   00402C  C027  F00E         	movff	___flsub@a+3,___fladd@a+3
  5604   004030  EC49  F00E         	call	___fladd	;wreg free
  5605   004034  C007  F020         	movff	?___fladd,?___flsub
  5606   004038  C008  F021         	movff	?___fladd+1,?___flsub+1
  5607   00403C  C009  F022         	movff	?___fladd+2,?___flsub+2
  5608   004040  C00A  F023         	movff	?___fladd+3,?___flsub+3
  5609   004044  0012               	return		;funcret
  5610   004046                     __end_of___flsub:
  5611                           	callstack 0
  5612                           
  5613 ;; *************** function ___fladd *****************
  5614 ;; Defined at:
  5615 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  5616 ;; Parameters:    Size  Location     Type
  5617 ;;  b               4    6[COMRAM] long 
  5618 ;;  a               4   10[COMRAM] long 
  5619 ;; Auto vars:     Size  Location     Type
  5620 ;;  grs             1   21[COMRAM] unsigned char 
  5621 ;;  bexp            1   20[COMRAM] unsigned char 
  5622 ;;  aexp            1   19[COMRAM] unsigned char 
  5623 ;;  signs           1   18[COMRAM] unsigned char 
  5624 ;; Return value:  Size  Location     Type
  5625 ;;                  4    6[COMRAM] unsigned char 
  5626 ;; Registers used:
  5627 ;;		wreg, status,2, status,0
  5628 ;; Tracked objects:
  5629 ;;		On entry : 0/0
  5630 ;;		On exit  : 0/0
  5631 ;;		Unchanged: 0/0
  5632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5633 ;;      Params:         8       0       0       0       0       0       0       0       0
  5634 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5635 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5636 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5637 ;;Total ram usage:       16 bytes
  5638 ;; Hardware stack levels used: 1
  5639 ;; Hardware stack levels required when called: 1
  5640 ;; This function calls:
  5641 ;;		Nothing
  5642 ;; This function is called by:
  5643 ;;		___flsub
  5644 ;;		_efgtoa
  5645 ;; This function uses a non-reentrant model
  5646 ;;
  5647                           
  5648                           	psect	text16
  5649   001C92                     __ptext16:
  5650                           	callstack 0
  5651   001C92                     ___fladd:
  5652                           	callstack 23
  5653   001C92  500A               	movf	(___fladd@b+3)^0,w,c
  5654   001C94  0B80               	andlw	128
  5655   001C96  6E13               	movwf	___fladd@signs^0,c
  5656   001C98  500A               	movf	(___fladd@b+3)^0,w,c
  5657   001C9A  240A               	addwf	(___fladd@b+3)^0,w,c
  5658   001C9C  6E15               	movwf	___fladd@bexp^0,c
  5659   001C9E  AE09               	btfss	(___fladd@b+2)^0,7,c
  5660   001CA0  EF54  F00E         	goto	u5701
  5661   001CA4  EF56  F00E         	goto	u5700
  5662   001CA8                     u5701:
  5663   001CA8  EF57  F00E         	goto	l4879
  5664   001CAC                     u5700:
  5665   001CAC  8015               	bsf	___fladd@bexp^0,0,c
  5666   001CAE                     l4879:
  5667   001CAE  5015               	movf	___fladd@bexp^0,w,c
  5668   001CB0  B4D8               	btfsc	status,2,c
  5669   001CB2  EF5D  F00E         	goto	u5711
  5670   001CB6  EF5F  F00E         	goto	u5710
  5671   001CBA                     u5711:
  5672   001CBA  EF74  F00E         	goto	l4889
  5673   001CBE                     u5710:
  5674   001CBE  2815               	incf	___fladd@bexp^0,w,c
  5675   001CC0  A4D8               	btfss	status,2,c
  5676   001CC2  EF65  F00E         	goto	u5721
  5677   001CC6  EF67  F00E         	goto	u5720
  5678   001CCA                     u5721:
  5679   001CCA  EF6F  F00E         	goto	l4885
  5680   001CCE                     u5720:
  5681   001CCE  0E00               	movlw	0
  5682   001CD0  6E07               	movwf	___fladd@b^0,c
  5683   001CD2  0E00               	movlw	0
  5684   001CD4  6E08               	movwf	(___fladd@b+1)^0,c
  5685   001CD6  0E00               	movlw	0
  5686   001CD8  6E09               	movwf	(___fladd@b+2)^0,c
  5687   001CDA  0E00               	movlw	0
  5688   001CDC  6E0A               	movwf	(___fladd@b+3)^0,c
  5689   001CDE                     l4885:
  5690   001CDE  8E09               	bsf	(___fladd@b+2)^0,7,c
  5691   001CE0  0E00               	movlw	0
  5692   001CE2  6E0A               	movwf	(___fladd@b+3)^0,c
  5693   001CE4  EF7C  F00E         	goto	l4891
  5694   001CE8                     l4889:
  5695   001CE8  0E00               	movlw	0
  5696   001CEA  6E07               	movwf	___fladd@b^0,c
  5697   001CEC  0E00               	movlw	0
  5698   001CEE  6E08               	movwf	(___fladd@b+1)^0,c
  5699   001CF0  0E00               	movlw	0
  5700   001CF2  6E09               	movwf	(___fladd@b+2)^0,c
  5701   001CF4  0E00               	movlw	0
  5702   001CF6  6E0A               	movwf	(___fladd@b+3)^0,c
  5703   001CF8                     l4891:
  5704   001CF8  500E               	movf	(___fladd@a+3)^0,w,c
  5705   001CFA  0B80               	andlw	128
  5706   001CFC  6E14               	movwf	___fladd@aexp^0,c
  5707   001CFE  5013               	movf	___fladd@signs^0,w,c
  5708   001D00  1814               	xorwf	___fladd@aexp^0,w,c
  5709   001D02  B4D8               	btfsc	status,2,c
  5710   001D04  EF86  F00E         	goto	u5731
  5711   001D08  EF88  F00E         	goto	u5730
  5712   001D0C                     u5731:
  5713   001D0C  EF89  F00E         	goto	l4897
  5714   001D10                     u5730:
  5715   001D10  8C13               	bsf	___fladd@signs^0,6,c
  5716   001D12                     l4897:
  5717   001D12  500E               	movf	(___fladd@a+3)^0,w,c
  5718   001D14  240E               	addwf	(___fladd@a+3)^0,w,c
  5719   001D16  6E14               	movwf	___fladd@aexp^0,c
  5720   001D18  AE0D               	btfss	(___fladd@a+2)^0,7,c
  5721   001D1A  EF91  F00E         	goto	u5741
  5722   001D1E  EF93  F00E         	goto	u5740
  5723   001D22                     u5741:
  5724   001D22  EF94  F00E         	goto	l4903
  5725   001D26                     u5740:
  5726   001D26  8014               	bsf	___fladd@aexp^0,0,c
  5727   001D28                     l4903:
  5728   001D28  5014               	movf	___fladd@aexp^0,w,c
  5729   001D2A  B4D8               	btfsc	status,2,c
  5730   001D2C  EF9A  F00E         	goto	u5751
  5731   001D30  EF9C  F00E         	goto	u5750
  5732   001D34                     u5751:
  5733   001D34  EFB1  F00E         	goto	l4913
  5734   001D38                     u5750:
  5735   001D38  2814               	incf	___fladd@aexp^0,w,c
  5736   001D3A  A4D8               	btfss	status,2,c
  5737   001D3C  EFA2  F00E         	goto	u5761
  5738   001D40  EFA4  F00E         	goto	u5760
  5739   001D44                     u5761:
  5740   001D44  EFAC  F00E         	goto	l4909
  5741   001D48                     u5760:
  5742   001D48  0E00               	movlw	0
  5743   001D4A  6E0B               	movwf	___fladd@a^0,c
  5744   001D4C  0E00               	movlw	0
  5745   001D4E  6E0C               	movwf	(___fladd@a+1)^0,c
  5746   001D50  0E00               	movlw	0
  5747   001D52  6E0D               	movwf	(___fladd@a+2)^0,c
  5748   001D54  0E00               	movlw	0
  5749   001D56  6E0E               	movwf	(___fladd@a+3)^0,c
  5750   001D58                     l4909:
  5751   001D58  8E0D               	bsf	(___fladd@a+2)^0,7,c
  5752   001D5A  0E00               	movlw	0
  5753   001D5C  6E0E               	movwf	(___fladd@a+3)^0,c
  5754   001D5E  EFB9  F00E         	goto	l4915
  5755   001D62                     l4913:
  5756   001D62  0E00               	movlw	0
  5757   001D64  6E0B               	movwf	___fladd@a^0,c
  5758   001D66  0E00               	movlw	0
  5759   001D68  6E0C               	movwf	(___fladd@a+1)^0,c
  5760   001D6A  0E00               	movlw	0
  5761   001D6C  6E0D               	movwf	(___fladd@a+2)^0,c
  5762   001D6E  0E00               	movlw	0
  5763   001D70  6E0E               	movwf	(___fladd@a+3)^0,c
  5764   001D72                     l4915:
  5765   001D72  5015               	movf	___fladd@bexp^0,w,c
  5766   001D74  5C14               	subwf	___fladd@aexp^0,w,c
  5767   001D76  B0D8               	btfsc	status,0,c
  5768   001D78  EFC0  F00E         	goto	u5771
  5769   001D7C  EFC2  F00E         	goto	u5770
  5770   001D80                     u5771:
  5771   001D80  EFE9  F00E         	goto	l4951
  5772   001D84                     u5770:
  5773   001D84  AC13               	btfss	___fladd@signs^0,6,c
  5774   001D86  EFC7  F00E         	goto	u5781
  5775   001D8A  EFC9  F00E         	goto	u5780
  5776   001D8E                     u5781:
  5777   001D8E  EFCB  F00E         	goto	l4921
  5778   001D92                     u5780:
  5779   001D92  0E80               	movlw	128
  5780   001D94  1A13               	xorwf	___fladd@signs^0,f,c
  5781   001D96                     l4921:
  5782   001D96  C015  F016         	movff	___fladd@bexp,___fladd@grs
  5783   001D9A  C014  F015         	movff	___fladd@aexp,___fladd@bexp
  5784   001D9E  C016  F014         	movff	___fladd@grs,___fladd@aexp
  5785   001DA2  C007  F016         	movff	___fladd@b,___fladd@grs
  5786   001DA6  C00B  F007         	movff	___fladd@a,___fladd@b
  5787   001DAA  C016  F00B         	movff	___fladd@grs,___fladd@a
  5788   001DAE  C008  F016         	movff	___fladd@b+1,___fladd@grs
  5789   001DB2  C00C  F008         	movff	___fladd@a+1,___fladd@b+1
  5790   001DB6  C016  F00C         	movff	___fladd@grs,___fladd@a+1
  5791   001DBA  C009  F016         	movff	___fladd@b+2,___fladd@grs
  5792   001DBE  C00D  F009         	movff	___fladd@a+2,___fladd@b+2
  5793   001DC2  C016  F00D         	movff	___fladd@grs,___fladd@a+2
  5794   001DC6  C00A  F016         	movff	___fladd@b+3,___fladd@grs
  5795   001DCA  C00E  F00A         	movff	___fladd@a+3,___fladd@b+3
  5796   001DCE  C016  F00E         	movff	___fladd@grs,___fladd@a+3
  5797   001DD2                     l4951:
  5798   001DD2  0E00               	movlw	0
  5799   001DD4  6E16               	movwf	___fladd@grs^0,c
  5800   001DD6  5015               	movf	___fladd@bexp^0,w,c
  5801   001DD8  C014  F00F         	movff	___fladd@aexp,??___fladd
  5802   001DDC  6A10               	clrf	(??___fladd+1)^0,c
  5803   001DDE  5E0F               	subwf	??___fladd^0,f,c
  5804   001DE0  0E00               	movlw	0
  5805   001DE2  5A10               	subwfb	(??___fladd+1)^0,f,c
  5806   001DE4  BE10               	btfsc	(??___fladd+1)^0,7,c
  5807   001DE6  EFFE  F00E         	goto	u5791
  5808   001DEA  5010               	movf	(??___fladd+1)^0,w,c
  5809   001DEC  E109               	bnz	u5790
  5810   001DEE  0E1A               	movlw	26
  5811   001DF0  5C0F               	subwf	??___fladd^0,w,c
  5812   001DF2  A0D8               	btfss	status,0,c
  5813   001DF4  EFFE  F00E         	goto	u5791
  5814   001DF8  EF00  F00F         	goto	u5790
  5815   001DFC                     u5791:
  5816   001DFC  EF37  F00F         	goto	l782
  5817   001E00                     u5790:
  5818   001E00  5007               	movf	___fladd@b^0,w,c
  5819   001E02  1008               	iorwf	(___fladd@b+1)^0,w,c
  5820   001E04  1009               	iorwf	(___fladd@b+2)^0,w,c
  5821   001E06  100A               	iorwf	(___fladd@b+3)^0,w,c
  5822   001E08  A4D8               	btfss	status,2,c
  5823   001E0A  EF09  F00F         	goto	u5801
  5824   001E0E  EF0C  F00F         	goto	u5800
  5825   001E12                     u5801:
  5826   001E12  0E01               	movlw	1
  5827   001E14  EF0D  F00F         	goto	u5810
  5828   001E18                     u5800:
  5829   001E18  0E00               	movlw	0
  5830   001E1A                     u5810:
  5831   001E1A  6E16               	movwf	___fladd@grs^0,c
  5832   001E1C  0E00               	movlw	0
  5833   001E1E  6E07               	movwf	___fladd@b^0,c
  5834   001E20  0E00               	movlw	0
  5835   001E22  6E08               	movwf	(___fladd@b+1)^0,c
  5836   001E24  0E00               	movlw	0
  5837   001E26  6E09               	movwf	(___fladd@b+2)^0,c
  5838   001E28  0E00               	movlw	0
  5839   001E2A  6E0A               	movwf	(___fladd@b+3)^0,c
  5840   001E2C  C014  F015         	movff	___fladd@aexp,___fladd@bexp
  5841   001E30  EF40  F00F         	goto	l781
  5842   001E34                     l783:
  5843   001E34  A016               	btfss	___fladd@grs^0,0,c
  5844   001E36  EF1F  F00F         	goto	u5821
  5845   001E3A  EF21  F00F         	goto	u5820
  5846   001E3E                     u5821:
  5847   001E3E  EF27  F00F         	goto	l4963
  5848   001E42                     u5820:
  5849   001E42  90D8               	bcf	status,0,c
  5850   001E44  3016               	rrcf	___fladd@grs^0,w,c
  5851   001E46  0901               	iorlw	1
  5852   001E48  6E16               	movwf	___fladd@grs^0,c
  5853   001E4A  EF29  F00F         	goto	l4965
  5854   001E4E                     l4963:
  5855   001E4E  90D8               	bcf	status,0,c
  5856   001E50  3216               	rrcf	___fladd@grs^0,f,c
  5857   001E52                     l4965:
  5858   001E52  A007               	btfss	___fladd@b^0,0,c
  5859   001E54  EF2E  F00F         	goto	u5831
  5860   001E58  EF30  F00F         	goto	u5830
  5861   001E5C                     u5831:
  5862   001E5C  EF31  F00F         	goto	l4969
  5863   001E60                     u5830:
  5864   001E60  8E16               	bsf	___fladd@grs^0,7,c
  5865   001E62                     l4969:
  5866   001E62  340A               	rlcf	(___fladd@b+3)^0,w,c
  5867   001E64  320A               	rrcf	(___fladd@b+3)^0,f,c
  5868   001E66  3209               	rrcf	(___fladd@b+2)^0,f,c
  5869   001E68  3208               	rrcf	(___fladd@b+1)^0,f,c
  5870   001E6A  3207               	rrcf	___fladd@b^0,f,c
  5871   001E6C  2A15               	incf	___fladd@bexp^0,f,c
  5872   001E6E                     l782:
  5873   001E6E  5014               	movf	___fladd@aexp^0,w,c
  5874   001E70  5C15               	subwf	___fladd@bexp^0,w,c
  5875   001E72  A0D8               	btfss	status,0,c
  5876   001E74  EF3E  F00F         	goto	u5841
  5877   001E78  EF40  F00F         	goto	u5840
  5878   001E7C                     u5841:
  5879   001E7C  EF1A  F00F         	goto	l783
  5880   001E80                     u5840:
  5881   001E80                     l781:
  5882   001E80  BC13               	btfsc	___fladd@signs^0,6,c
  5883   001E82  EF45  F00F         	goto	u5851
  5884   001E86  EF47  F00F         	goto	u5850
  5885   001E8A                     u5851:
  5886   001E8A  EF87  F00F         	goto	l4997
  5887   001E8E                     u5850:
  5888   001E8E  5015               	movf	___fladd@bexp^0,w,c
  5889   001E90  A4D8               	btfss	status,2,c
  5890   001E92  EF4D  F00F         	goto	u5861
  5891   001E96  EF4F  F00F         	goto	u5860
  5892   001E9A                     u5861:
  5893   001E9A  EF59  F00F         	goto	l4979
  5894   001E9E                     u5860:
  5895   001E9E  0E00               	movlw	0
  5896   001EA0  6E07               	movwf	?___fladd^0,c
  5897   001EA2  0E00               	movlw	0
  5898   001EA4  6E08               	movwf	(?___fladd+1)^0,c
  5899   001EA6  0E00               	movlw	0
  5900   001EA8  6E09               	movwf	(?___fladd+2)^0,c
  5901   001EAA  0E00               	movlw	0
  5902   001EAC  6E0A               	movwf	(?___fladd+3)^0,c
  5903   001EAE  EFA8  F010         	goto	l790
  5904   001EB2                     l4979:
  5905   001EB2  500B               	movf	___fladd@a^0,w,c
  5906   001EB4  2607               	addwf	___fladd@b^0,f,c
  5907   001EB6  500C               	movf	(___fladd@a+1)^0,w,c
  5908   001EB8  2208               	addwfc	(___fladd@b+1)^0,f,c
  5909   001EBA  500D               	movf	(___fladd@a+2)^0,w,c
  5910   001EBC  2209               	addwfc	(___fladd@b+2)^0,f,c
  5911   001EBE  500E               	movf	(___fladd@a+3)^0,w,c
  5912   001EC0  220A               	addwfc	(___fladd@b+3)^0,f,c
  5913   001EC2  A00A               	btfss	(___fladd@b+3)^0,0,c
  5914   001EC4  EF66  F00F         	goto	u5871
  5915   001EC8  EF68  F00F         	goto	u5870
  5916   001ECC                     u5871:
  5917   001ECC  EF14  F010         	goto	l5033
  5918   001ED0                     u5870:
  5919   001ED0  A016               	btfss	___fladd@grs^0,0,c
  5920   001ED2  EF6D  F00F         	goto	u5881
  5921   001ED6  EF6F  F00F         	goto	u5880
  5922   001EDA                     u5881:
  5923   001EDA  EF75  F00F         	goto	l4987
  5924   001EDE                     u5880:
  5925   001EDE  90D8               	bcf	status,0,c
  5926   001EE0  3016               	rrcf	___fladd@grs^0,w,c
  5927   001EE2  0901               	iorlw	1
  5928   001EE4  6E16               	movwf	___fladd@grs^0,c
  5929   001EE6  EF77  F00F         	goto	l4989
  5930   001EEA                     l4987:
  5931   001EEA  90D8               	bcf	status,0,c
  5932   001EEC  3216               	rrcf	___fladd@grs^0,f,c
  5933   001EEE                     l4989:
  5934   001EEE  A007               	btfss	___fladd@b^0,0,c
  5935   001EF0  EF7C  F00F         	goto	u5891
  5936   001EF4  EF7E  F00F         	goto	u5890
  5937   001EF8                     u5891:
  5938   001EF8  EF7F  F00F         	goto	l4993
  5939   001EFC                     u5890:
  5940   001EFC  8E16               	bsf	___fladd@grs^0,7,c
  5941   001EFE                     l4993:
  5942   001EFE  340A               	rlcf	(___fladd@b+3)^0,w,c
  5943   001F00  320A               	rrcf	(___fladd@b+3)^0,f,c
  5944   001F02  3209               	rrcf	(___fladd@b+2)^0,f,c
  5945   001F04  3208               	rrcf	(___fladd@b+1)^0,f,c
  5946   001F06  3207               	rrcf	___fladd@b^0,f,c
  5947   001F08  2A15               	incf	___fladd@bexp^0,f,c
  5948   001F0A  EF14  F010         	goto	l5033
  5949   001F0E                     l4997:
  5950   001F0E  500B               	movf	___fladd@a^0,w,c
  5951   001F10  5C07               	subwf	___fladd@b^0,w,c
  5952   001F12  500C               	movf	(___fladd@a+1)^0,w,c
  5953   001F14  5808               	subwfb	(___fladd@b+1)^0,w,c
  5954   001F16  500D               	movf	(___fladd@a+2)^0,w,c
  5955   001F18  5809               	subwfb	(___fladd@b+2)^0,w,c
  5956   001F1A  500A               	movf	(___fladd@b+3)^0,w,c
  5957   001F1C  0A80               	xorlw	128
  5958   001F1E  6E0F               	movwf	??___fladd^0,c
  5959   001F20  500E               	movf	(___fladd@a+3)^0,w,c
  5960   001F22  0A80               	xorlw	128
  5961   001F24  580F               	subwfb	??___fladd^0,w,c
  5962   001F26  B0D8               	btfsc	status,0,c
  5963   001F28  EF98  F00F         	goto	u5901
  5964   001F2C  EF9A  F00F         	goto	u5900
  5965   001F30                     u5901:
  5966   001F30  EFC5  F00F         	goto	l5007
  5967   001F34                     u5900:
  5968   001F34  5007               	movf	___fladd@b^0,w,c
  5969   001F36  5C0B               	subwf	___fladd@a^0,w,c
  5970   001F38  6E0F               	movwf	??___fladd^0,c
  5971   001F3A  5008               	movf	(___fladd@b+1)^0,w,c
  5972   001F3C  580C               	subwfb	(___fladd@a+1)^0,w,c
  5973   001F3E  6E10               	movwf	(??___fladd+1)^0,c
  5974   001F40  5009               	movf	(___fladd@b+2)^0,w,c
  5975   001F42  580D               	subwfb	(___fladd@a+2)^0,w,c
  5976   001F44  6E11               	movwf	(??___fladd+2)^0,c
  5977   001F46  500A               	movf	(___fladd@b+3)^0,w,c
  5978   001F48  580E               	subwfb	(___fladd@a+3)^0,w,c
  5979   001F4A  6E12               	movwf	(??___fladd+3)^0,c
  5980   001F4C  0EFF               	movlw	255
  5981   001F4E  240F               	addwf	??___fladd^0,w,c
  5982   001F50  6E07               	movwf	___fladd@b^0,c
  5983   001F52  0EFF               	movlw	255
  5984   001F54  2010               	addwfc	(??___fladd+1)^0,w,c
  5985   001F56  6E08               	movwf	(___fladd@b+1)^0,c
  5986   001F58  0EFF               	movlw	255
  5987   001F5A  2011               	addwfc	(??___fladd+2)^0,w,c
  5988   001F5C  6E09               	movwf	(___fladd@b+2)^0,c
  5989   001F5E  0EFF               	movlw	255
  5990   001F60  2012               	addwfc	(??___fladd+3)^0,w,c
  5991   001F62  6E0A               	movwf	(___fladd@b+3)^0,c
  5992   001F64  0E80               	movlw	128
  5993   001F66  1A13               	xorwf	___fladd@signs^0,f,c
  5994   001F68  6C16               	negf	___fladd@grs^0,c
  5995   001F6A  5016               	movf	___fladd@grs^0,w,c
  5996   001F6C  A4D8               	btfss	status,2,c
  5997   001F6E  EFBB  F00F         	goto	u5911
  5998   001F72  EFBD  F00F         	goto	u5910
  5999   001F76                     u5911:
  6000   001F76  EFCD  F00F         	goto	l798
  6001   001F7A                     u5910:
  6002   001F7A  0E01               	movlw	1
  6003   001F7C  2607               	addwf	___fladd@b^0,f,c
  6004   001F7E  0E00               	movlw	0
  6005   001F80  2208               	addwfc	(___fladd@b+1)^0,f,c
  6006   001F82  2209               	addwfc	(___fladd@b+2)^0,f,c
  6007   001F84  220A               	addwfc	(___fladd@b+3)^0,f,c
  6008   001F86  EFCD  F00F         	goto	l798
  6009   001F8A                     l5007:
  6010   001F8A  500B               	movf	___fladd@a^0,w,c
  6011   001F8C  5E07               	subwf	___fladd@b^0,f,c
  6012   001F8E  500C               	movf	(___fladd@a+1)^0,w,c
  6013   001F90  5A08               	subwfb	(___fladd@b+1)^0,f,c
  6014   001F92  500D               	movf	(___fladd@a+2)^0,w,c
  6015   001F94  5A09               	subwfb	(___fladd@b+2)^0,f,c
  6016   001F96  500E               	movf	(___fladd@a+3)^0,w,c
  6017   001F98  5A0A               	subwfb	(___fladd@b+3)^0,f,c
  6018   001F9A                     l798:
  6019   001F9A  5007               	movf	___fladd@b^0,w,c
  6020   001F9C  1008               	iorwf	(___fladd@b+1)^0,w,c
  6021   001F9E  1009               	iorwf	(___fladd@b+2)^0,w,c
  6022   001FA0  100A               	iorwf	(___fladd@b+3)^0,w,c
  6023   001FA2  A4D8               	btfss	status,2,c
  6024   001FA4  EFD6  F00F         	goto	u5921
  6025   001FA8  EFD8  F00F         	goto	u5920
  6026   001FAC                     u5921:
  6027   001FAC  EF0D  F010         	goto	l5031
  6028   001FB0                     u5920:
  6029   001FB0  5016               	movf	___fladd@grs^0,w,c
  6030   001FB2  A4D8               	btfss	status,2,c
  6031   001FB4  EFDE  F00F         	goto	u5931
  6032   001FB8  EFE0  F00F         	goto	u5930
  6033   001FBC                     u5931:
  6034   001FBC  EF0D  F010         	goto	l5031
  6035   001FC0                     u5930:
  6036   001FC0  0E00               	movlw	0
  6037   001FC2  6E07               	movwf	?___fladd^0,c
  6038   001FC4  0E00               	movlw	0
  6039   001FC6  6E08               	movwf	(?___fladd+1)^0,c
  6040   001FC8  0E00               	movlw	0
  6041   001FCA  6E09               	movwf	(?___fladd+2)^0,c
  6042   001FCC  0E00               	movlw	0
  6043   001FCE  6E0A               	movwf	(?___fladd+3)^0,c
  6044   001FD0  EFA8  F010         	goto	l790
  6045   001FD4                     l5015:
  6046   001FD4  90D8               	bcf	status,0,c
  6047   001FD6  3607               	rlcf	___fladd@b^0,f,c
  6048   001FD8  3608               	rlcf	(___fladd@b+1)^0,f,c
  6049   001FDA  3609               	rlcf	(___fladd@b+2)^0,f,c
  6050   001FDC  360A               	rlcf	(___fladd@b+3)^0,f,c
  6051   001FDE  AE16               	btfss	___fladd@grs^0,7,c
  6052   001FE0  EFF4  F00F         	goto	u5941
  6053   001FE4  EFF6  F00F         	goto	u5940
  6054   001FE8                     u5941:
  6055   001FE8  EFF7  F00F         	goto	l5021
  6056   001FEC                     u5940:
  6057   001FEC  8007               	bsf	___fladd@b^0,0,c
  6058   001FEE                     l5021:
  6059   001FEE  A016               	btfss	___fladd@grs^0,0,c
  6060   001FF0  EFFC  F00F         	goto	u5951
  6061   001FF4  EFFE  F00F         	goto	u5950
  6062   001FF8                     u5951:
  6063   001FF8  EF02  F010         	goto	l5025
  6064   001FFC                     u5950:
  6065   001FFC  80D8               	bsf	status,0,c
  6066   001FFE  3616               	rlcf	___fladd@grs^0,f,c
  6067   002000  EF04  F010         	goto	l5027
  6068   002004                     l5025:
  6069   002004  90D8               	bcf	status,0,c
  6070   002006  3616               	rlcf	___fladd@grs^0,f,c
  6071   002008                     l5027:
  6072   002008  5015               	movf	___fladd@bexp^0,w,c
  6073   00200A  B4D8               	btfsc	status,2,c
  6074   00200C  EF0A  F010         	goto	u5961
  6075   002010  EF0C  F010         	goto	u5960
  6076   002014                     u5961:
  6077   002014  EF0D  F010         	goto	l5031
  6078   002018                     u5960:
  6079   002018  0615               	decf	___fladd@bexp^0,f,c
  6080   00201A                     l5031:
  6081   00201A  AE09               	btfss	(___fladd@b+2)^0,7,c
  6082   00201C  EF12  F010         	goto	u5971
  6083   002020  EF14  F010         	goto	u5970
  6084   002024                     u5971:
  6085   002024  EFEA  F00F         	goto	l5015
  6086   002028                     u5970:
  6087   002028                     l5033:
  6088   002028  0E00               	movlw	0
  6089   00202A  6E14               	movwf	___fladd@aexp^0,c
  6090   00202C  AE16               	btfss	___fladd@grs^0,7,c
  6091   00202E  EF1B  F010         	goto	u5981
  6092   002032  EF1D  F010         	goto	u5980
  6093   002036                     u5981:
  6094   002036  EF35  F010         	goto	l807
  6095   00203A                     u5980:
  6096   00203A  C016  F00F         	movff	___fladd@grs,??___fladd
  6097   00203E  0E7F               	movlw	127
  6098   002040  160F               	andwf	??___fladd^0,f,c
  6099   002042  B4D8               	btfsc	status,2,c
  6100   002044  EF26  F010         	goto	u5991
  6101   002048  EF28  F010         	goto	u5990
  6102   00204C                     u5991:
  6103   00204C  EF2C  F010         	goto	l808
  6104   002050                     u5990:
  6105   002050                     l5039:
  6106   002050  0E01               	movlw	1
  6107   002052  6E14               	movwf	___fladd@aexp^0,c
  6108   002054  EF35  F010         	goto	l807
  6109   002058                     l808:
  6110   002058  A007               	btfss	___fladd@b^0,0,c
  6111   00205A  EF31  F010         	goto	u6001
  6112   00205E  EF33  F010         	goto	u6000
  6113   002062                     u6001:
  6114   002062  EF35  F010         	goto	l807
  6115   002066                     u6000:
  6116   002066  EF28  F010         	goto	l5039
  6117   00206A                     l807:
  6118   00206A  5014               	movf	___fladd@aexp^0,w,c
  6119   00206C  B4D8               	btfsc	status,2,c
  6120   00206E  EF3B  F010         	goto	u6011
  6121   002072  EF3D  F010         	goto	u6010
  6122   002076                     u6011:
  6123   002076  EF68  F010         	goto	l5051
  6124   00207A                     u6010:
  6125   00207A  0E01               	movlw	1
  6126   00207C  2607               	addwf	___fladd@b^0,f,c
  6127   00207E  0E00               	movlw	0
  6128   002080  2208               	addwfc	(___fladd@b+1)^0,f,c
  6129   002082  2209               	addwfc	(___fladd@b+2)^0,f,c
  6130   002084  220A               	addwfc	(___fladd@b+3)^0,f,c
  6131   002086  A00A               	btfss	(___fladd@b+3)^0,0,c
  6132   002088  EF48  F010         	goto	u6021
  6133   00208C  EF4A  F010         	goto	u6020
  6134   002090                     u6021:
  6135   002090  EF68  F010         	goto	l5051
  6136   002094                     u6020:
  6137   002094  C007  F00F         	movff	___fladd@b,??___fladd
  6138   002098  C008  F010         	movff	___fladd@b+1,??___fladd+1
  6139   00209C  C009  F011         	movff	___fladd@b+2,??___fladd+2
  6140   0020A0  C00A  F012         	movff	___fladd@b+3,??___fladd+3
  6141   0020A4  3412               	rlcf	(??___fladd+3)^0,w,c
  6142   0020A6  3212               	rrcf	(??___fladd+3)^0,f,c
  6143   0020A8  3211               	rrcf	(??___fladd+2)^0,f,c
  6144   0020AA  3210               	rrcf	(??___fladd+1)^0,f,c
  6145   0020AC  320F               	rrcf	??___fladd^0,f,c
  6146   0020AE  C00F  F007         	movff	??___fladd,___fladd@b
  6147   0020B2  C010  F008         	movff	??___fladd+1,___fladd@b+1
  6148   0020B6  C011  F009         	movff	??___fladd+2,___fladd@b+2
  6149   0020BA  C012  F00A         	movff	??___fladd+3,___fladd@b+3
  6150   0020BE  2815               	incf	___fladd@bexp^0,w,c
  6151   0020C0  B4D8               	btfsc	status,2,c
  6152   0020C2  EF65  F010         	goto	u6031
  6153   0020C6  EF67  F010         	goto	u6030
  6154   0020CA                     u6031:
  6155   0020CA  EF68  F010         	goto	l5051
  6156   0020CE                     u6030:
  6157   0020CE  2A15               	incf	___fladd@bexp^0,f,c
  6158   0020D0                     l5051:
  6159   0020D0  2815               	incf	___fladd@bexp^0,w,c
  6160   0020D2  B4D8               	btfsc	status,2,c
  6161   0020D4  EF6E  F010         	goto	u6041
  6162   0020D8  EF70  F010         	goto	u6040
  6163   0020DC                     u6041:
  6164   0020DC  EF78  F010         	goto	l5055
  6165   0020E0                     u6040:
  6166   0020E0  5015               	movf	___fladd@bexp^0,w,c
  6167   0020E2  A4D8               	btfss	status,2,c
  6168   0020E4  EF76  F010         	goto	u6051
  6169   0020E8  EF78  F010         	goto	u6050
  6170   0020EC                     u6051:
  6171   0020EC  EF8A  F010         	goto	l5059
  6172   0020F0                     u6050:
  6173   0020F0                     l5055:
  6174   0020F0  0E00               	movlw	0
  6175   0020F2  6E07               	movwf	___fladd@b^0,c
  6176   0020F4  0E00               	movlw	0
  6177   0020F6  6E08               	movwf	(___fladd@b+1)^0,c
  6178   0020F8  0E00               	movlw	0
  6179   0020FA  6E09               	movwf	(___fladd@b+2)^0,c
  6180   0020FC  0E00               	movlw	0
  6181   0020FE  6E0A               	movwf	(___fladd@b+3)^0,c
  6182   002100  5015               	movf	___fladd@bexp^0,w,c
  6183   002102  A4D8               	btfss	status,2,c
  6184   002104  EF86  F010         	goto	u6061
  6185   002108  EF88  F010         	goto	u6060
  6186   00210C                     u6061:
  6187   00210C  EF8A  F010         	goto	l5059
  6188   002110                     u6060:
  6189   002110  0E00               	movlw	0
  6190   002112  6E13               	movwf	___fladd@signs^0,c
  6191   002114                     l5059:
  6192   002114  A015               	btfss	___fladd@bexp^0,0,c
  6193   002116  EF8F  F010         	goto	u6071
  6194   00211A  EF91  F010         	goto	u6070
  6195   00211E                     u6071:
  6196   00211E  EF94  F010         	goto	l5063
  6197   002122                     u6070:
  6198   002122  8E09               	bsf	(___fladd@b+2)^0,7,c
  6199   002124  EF95  F010         	goto	l5065
  6200   002128                     l5063:
  6201   002128  9E09               	bcf	(___fladd@b+2)^0,7,c
  6202   00212A                     l5065:
  6203   00212A  90D8               	bcf	status,0,c
  6204   00212C  3015               	rrcf	___fladd@bexp^0,w,c
  6205   00212E  6E0A               	movwf	(___fladd@b+3)^0,c
  6206   002130  AE13               	btfss	___fladd@signs^0,7,c
  6207   002132  EF9D  F010         	goto	u6081
  6208   002136  EF9F  F010         	goto	u6080
  6209   00213A                     u6081:
  6210   00213A  EFA0  F010         	goto	l5071
  6211   00213E                     u6080:
  6212   00213E  8E0A               	bsf	(___fladd@b+3)^0,7,c
  6213   002140                     l5071:
  6214   002140  C007  F007         	movff	___fladd@b,?___fladd
  6215   002144  C008  F008         	movff	___fladd@b+1,?___fladd+1
  6216   002148  C009  F009         	movff	___fladd@b+2,?___fladd+2
  6217   00214C  C00A  F00A         	movff	___fladd@b+3,?___fladd+3
  6218   002150                     l790:
  6219   002150  0012               	return		;funcret
  6220   002152                     __end_of___fladd:
  6221                           	callstack 0
  6222                           
  6223 ;; *************** function ___flneg *****************
  6224 ;; Defined at:
  6225 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  6226 ;; Parameters:    Size  Location     Type
  6227 ;;  f1              4    6[COMRAM] unsigned char 
  6228 ;; Auto vars:     Size  Location     Type
  6229 ;;		None
  6230 ;; Return value:  Size  Location     Type
  6231 ;;                  4    6[COMRAM] unsigned char 
  6232 ;; Registers used:
  6233 ;;		wreg, status,2, status,0
  6234 ;; Tracked objects:
  6235 ;;		On entry : 0/0
  6236 ;;		On exit  : 0/0
  6237 ;;		Unchanged: 0/0
  6238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6239 ;;      Params:         4       0       0       0       0       0       0       0       0
  6240 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6241 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6242 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6243 ;;Total ram usage:        4 bytes
  6244 ;; Hardware stack levels used: 1
  6245 ;; Hardware stack levels required when called: 1
  6246 ;; This function calls:
  6247 ;;		Nothing
  6248 ;; This function is called by:
  6249 ;;		_efgtoa
  6250 ;; This function uses a non-reentrant model
  6251 ;;
  6252                           
  6253                           	psect	text17
  6254   004150                     __ptext17:
  6255                           	callstack 0
  6256   004150                     ___flneg:
  6257                           	callstack 24
  6258   004150  5007               	movf	___flneg@f1^0,w,c
  6259   004152  1008               	iorwf	(___flneg@f1+1)^0,w,c
  6260   004154  1009               	iorwf	(___flneg@f1+2)^0,w,c
  6261   004156  100A               	iorwf	(___flneg@f1+3)^0,w,c
  6262   004158  B4D8               	btfsc	status,2,c
  6263   00415A  EFB1  F020         	goto	u6731
  6264   00415E  EFB3  F020         	goto	u6730
  6265   004162                     u6731:
  6266   004162  EFBB  F020         	goto	l5485
  6267   004166                     u6730:
  6268   004166  0E00               	movlw	0
  6269   004168  1A07               	xorwf	___flneg@f1^0,f,c
  6270   00416A  0E00               	movlw	0
  6271   00416C  1A08               	xorwf	(___flneg@f1+1)^0,f,c
  6272   00416E  0E00               	movlw	0
  6273   004170  1A09               	xorwf	(___flneg@f1+2)^0,f,c
  6274   004172  0E80               	movlw	128
  6275   004174  1A0A               	xorwf	(___flneg@f1+3)^0,f,c
  6276   004176                     l5485:
  6277   004176  C007  F007         	movff	___flneg@f1,?___flneg
  6278   00417A  C008  F008         	movff	___flneg@f1+1,?___flneg+1
  6279   00417E  C009  F009         	movff	___flneg@f1+2,?___flneg+2
  6280   004182  C00A  F00A         	movff	___flneg@f1+3,?___flneg+3
  6281   004186  0012               	return		;funcret
  6282   004188                     __end_of___flneg:
  6283                           	callstack 0
  6284                           
  6285 ;; *************** function ___flmul *****************
  6286 ;; Defined at:
  6287 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  6288 ;; Parameters:    Size  Location     Type
  6289 ;;  b               4    6[COMRAM] unsigned char 
  6290 ;;  a               4   10[COMRAM] unsigned char 
  6291 ;; Auto vars:     Size  Location     Type
  6292 ;;  prod            4   25[COMRAM] struct .
  6293 ;;  grs             4   20[COMRAM] unsigned long 
  6294 ;;  temp            2   29[COMRAM] struct .
  6295 ;;  bexp            1   24[COMRAM] unsigned char 
  6296 ;;  aexp            1   19[COMRAM] unsigned char 
  6297 ;;  sign            1   18[COMRAM] unsigned char 
  6298 ;; Return value:  Size  Location     Type
  6299 ;;                  4    6[COMRAM] unsigned char 
  6300 ;; Registers used:
  6301 ;;		wreg, status,2, status,0, prodl, prodh
  6302 ;; Tracked objects:
  6303 ;;		On entry : 0/0
  6304 ;;		On exit  : 0/0
  6305 ;;		Unchanged: 0/0
  6306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6307 ;;      Params:         8       0       0       0       0       0       0       0       0
  6308 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6309 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6310 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6311 ;;Total ram usage:       25 bytes
  6312 ;; Hardware stack levels used: 1
  6313 ;; Hardware stack levels required when called: 1
  6314 ;; This function calls:
  6315 ;;		Nothing
  6316 ;; This function is called by:
  6317 ;;		_efgtoa
  6318 ;; This function uses a non-reentrant model
  6319 ;;
  6320                           
  6321                           	psect	text18
  6322   002152                     __ptext18:
  6323                           	callstack 0
  6324   002152                     ___flmul:
  6325                           	callstack 24
  6326   002152  500A               	movf	(___flmul@b+3)^0,w,c
  6327   002154  0B80               	andlw	128
  6328   002156  6E13               	movwf	___flmul@sign^0,c
  6329   002158  500A               	movf	(___flmul@b+3)^0,w,c
  6330   00215A  240A               	addwf	(___flmul@b+3)^0,w,c
  6331   00215C  6E19               	movwf	___flmul@bexp^0,c
  6332   00215E  AE09               	btfss	(___flmul@b+2)^0,7,c
  6333   002160  EFB4  F010         	goto	u6461
  6334   002164  EFB6  F010         	goto	u6460
  6335   002168                     u6461:
  6336   002168  EFB7  F010         	goto	l5313
  6337   00216C                     u6460:
  6338   00216C  8019               	bsf	___flmul@bexp^0,0,c
  6339   00216E                     l5313:
  6340   00216E  5019               	movf	___flmul@bexp^0,w,c
  6341   002170  B4D8               	btfsc	status,2,c
  6342   002172  EFBD  F010         	goto	u6471
  6343   002176  EFBF  F010         	goto	u6470
  6344   00217A                     u6471:
  6345   00217A  EFD2  F010         	goto	l5321
  6346   00217E                     u6470:
  6347   00217E  2819               	incf	___flmul@bexp^0,w,c
  6348   002180  A4D8               	btfss	status,2,c
  6349   002182  EFC5  F010         	goto	u6481
  6350   002186  EFC7  F010         	goto	u6480
  6351   00218A                     u6481:
  6352   00218A  EFCF  F010         	goto	l5319
  6353   00218E                     u6480:
  6354   00218E  0E00               	movlw	0
  6355   002190  6E07               	movwf	___flmul@b^0,c
  6356   002192  0E00               	movlw	0
  6357   002194  6E08               	movwf	(___flmul@b+1)^0,c
  6358   002196  0E00               	movlw	0
  6359   002198  6E09               	movwf	(___flmul@b+2)^0,c
  6360   00219A  0E00               	movlw	0
  6361   00219C  6E0A               	movwf	(___flmul@b+3)^0,c
  6362   00219E                     l5319:
  6363   00219E  8E09               	bsf	(___flmul@b+2)^0,7,c
  6364   0021A0  EFDA  F010         	goto	l5323
  6365   0021A4                     l5321:
  6366   0021A4  0E00               	movlw	0
  6367   0021A6  6E07               	movwf	___flmul@b^0,c
  6368   0021A8  0E00               	movlw	0
  6369   0021AA  6E08               	movwf	(___flmul@b+1)^0,c
  6370   0021AC  0E00               	movlw	0
  6371   0021AE  6E09               	movwf	(___flmul@b+2)^0,c
  6372   0021B0  0E00               	movlw	0
  6373   0021B2  6E0A               	movwf	(___flmul@b+3)^0,c
  6374   0021B4                     l5323:
  6375   0021B4  500E               	movf	(___flmul@a+3)^0,w,c
  6376   0021B6  0B80               	andlw	128
  6377   0021B8  1A13               	xorwf	___flmul@sign^0,f,c
  6378   0021BA  500E               	movf	(___flmul@a+3)^0,w,c
  6379   0021BC  240E               	addwf	(___flmul@a+3)^0,w,c
  6380   0021BE  6E14               	movwf	___flmul@aexp^0,c
  6381   0021C0  AE0D               	btfss	(___flmul@a+2)^0,7,c
  6382   0021C2  EFE5  F010         	goto	u6491
  6383   0021C6  EFE7  F010         	goto	u6490
  6384   0021CA                     u6491:
  6385   0021CA  EFE8  F010         	goto	l5331
  6386   0021CE                     u6490:
  6387   0021CE  8014               	bsf	___flmul@aexp^0,0,c
  6388   0021D0                     l5331:
  6389   0021D0  5014               	movf	___flmul@aexp^0,w,c
  6390   0021D2  B4D8               	btfsc	status,2,c
  6391   0021D4  EFEE  F010         	goto	u6501
  6392   0021D8  EFF0  F010         	goto	u6500
  6393   0021DC                     u6501:
  6394   0021DC  EF03  F011         	goto	l5339
  6395   0021E0                     u6500:
  6396   0021E0  2814               	incf	___flmul@aexp^0,w,c
  6397   0021E2  A4D8               	btfss	status,2,c
  6398   0021E4  EFF6  F010         	goto	u6511
  6399   0021E8  EFF8  F010         	goto	u6510
  6400   0021EC                     u6511:
  6401   0021EC  EF00  F011         	goto	l5337
  6402   0021F0                     u6510:
  6403   0021F0  0E00               	movlw	0
  6404   0021F2  6E0B               	movwf	___flmul@a^0,c
  6405   0021F4  0E00               	movlw	0
  6406   0021F6  6E0C               	movwf	(___flmul@a+1)^0,c
  6407   0021F8  0E00               	movlw	0
  6408   0021FA  6E0D               	movwf	(___flmul@a+2)^0,c
  6409   0021FC  0E00               	movlw	0
  6410   0021FE  6E0E               	movwf	(___flmul@a+3)^0,c
  6411   002200                     l5337:
  6412   002200  8E0D               	bsf	(___flmul@a+2)^0,7,c
  6413   002202  EF0B  F011         	goto	l867
  6414   002206                     l5339:
  6415   002206  0E00               	movlw	0
  6416   002208  6E0B               	movwf	___flmul@a^0,c
  6417   00220A  0E00               	movlw	0
  6418   00220C  6E0C               	movwf	(___flmul@a+1)^0,c
  6419   00220E  0E00               	movlw	0
  6420   002210  6E0D               	movwf	(___flmul@a+2)^0,c
  6421   002212  0E00               	movlw	0
  6422   002214  6E0E               	movwf	(___flmul@a+3)^0,c
  6423   002216                     l867:
  6424   002216  5014               	movf	___flmul@aexp^0,w,c
  6425   002218  B4D8               	btfsc	status,2,c
  6426   00221A  EF11  F011         	goto	u6521
  6427   00221E  EF13  F011         	goto	u6520
  6428   002222                     u6521:
  6429   002222  EF1B  F011         	goto	l5343
  6430   002226                     u6520:
  6431   002226  5019               	movf	___flmul@bexp^0,w,c
  6432   002228  A4D8               	btfss	status,2,c
  6433   00222A  EF19  F011         	goto	u6531
  6434   00222E  EF1B  F011         	goto	u6530
  6435   002232                     u6531:
  6436   002232  EF25  F011         	goto	l5347
  6437   002236                     u6530:
  6438   002236                     l5343:
  6439   002236  0E00               	movlw	0
  6440   002238  6E07               	movwf	?___flmul^0,c
  6441   00223A  0E00               	movlw	0
  6442   00223C  6E08               	movwf	(?___flmul+1)^0,c
  6443   00223E  0E00               	movlw	0
  6444   002240  6E09               	movwf	(?___flmul+2)^0,c
  6445   002242  0E00               	movlw	0
  6446   002244  6E0A               	movwf	(?___flmul+3)^0,c
  6447   002246  EFBD  F012         	goto	l871
  6448   00224A                     l5347:
  6449   00224A  500D               	movf	(___flmul@a+2)^0,w,c
  6450   00224C  0207               	mulwf	___flmul@b^0,c
  6451   00224E  CFF3 F01E          	movff	prodl,___flmul@temp
  6452   002252  CFF4 F01F          	movff	prodh,___flmul@temp+1
  6453   002256  501E               	movf	___flmul@temp^0,w,c
  6454   002258  6E15               	movwf	___flmul@grs^0,c
  6455   00225A  6A16               	clrf	(___flmul@grs+1)^0,c
  6456   00225C  6A17               	clrf	(___flmul@grs+2)^0,c
  6457   00225E  6A18               	clrf	(___flmul@grs+3)^0,c
  6458   002260  501F               	movf	(___flmul@temp+1)^0,w,c
  6459   002262  6E1A               	movwf	___flmul@prod^0,c
  6460   002264  6A1B               	clrf	(___flmul@prod+1)^0,c
  6461   002266  6A1C               	clrf	(___flmul@prod+2)^0,c
  6462   002268  6A1D               	clrf	(___flmul@prod+3)^0,c
  6463   00226A  500C               	movf	(___flmul@a+1)^0,w,c
  6464   00226C  0208               	mulwf	(___flmul@b+1)^0,c
  6465   00226E  CFF3 F01E          	movff	prodl,___flmul@temp
  6466   002272  CFF4 F01F          	movff	prodh,___flmul@temp+1
  6467   002276  501E               	movf	___flmul@temp^0,w,c
  6468   002278  2615               	addwf	___flmul@grs^0,f,c
  6469   00227A  0E00               	movlw	0
  6470   00227C  2216               	addwfc	(___flmul@grs+1)^0,f,c
  6471   00227E  2217               	addwfc	(___flmul@grs+2)^0,f,c
  6472   002280  2218               	addwfc	(___flmul@grs+3)^0,f,c
  6473   002282  501F               	movf	(___flmul@temp+1)^0,w,c
  6474   002284  261A               	addwf	___flmul@prod^0,f,c
  6475   002286  0E00               	movlw	0
  6476   002288  221B               	addwfc	(___flmul@prod+1)^0,f,c
  6477   00228A  221C               	addwfc	(___flmul@prod+2)^0,f,c
  6478   00228C  221D               	addwfc	(___flmul@prod+3)^0,f,c
  6479   00228E  500B               	movf	___flmul@a^0,w,c
  6480   002290  0209               	mulwf	(___flmul@b+2)^0,c
  6481   002292  CFF3 F01E          	movff	prodl,___flmul@temp
  6482   002296  CFF4 F01F          	movff	prodh,___flmul@temp+1
  6483   00229A  501E               	movf	___flmul@temp^0,w,c
  6484   00229C  2615               	addwf	___flmul@grs^0,f,c
  6485   00229E  0E00               	movlw	0
  6486   0022A0  2216               	addwfc	(___flmul@grs+1)^0,f,c
  6487   0022A2  2217               	addwfc	(___flmul@grs+2)^0,f,c
  6488   0022A4  2218               	addwfc	(___flmul@grs+3)^0,f,c
  6489   0022A6  501F               	movf	(___flmul@temp+1)^0,w,c
  6490   0022A8  261A               	addwf	___flmul@prod^0,f,c
  6491   0022AA  0E00               	movlw	0
  6492   0022AC  221B               	addwfc	(___flmul@prod+1)^0,f,c
  6493   0022AE  221C               	addwfc	(___flmul@prod+2)^0,f,c
  6494   0022B0  221D               	addwfc	(___flmul@prod+3)^0,f,c
  6495   0022B2  C017  F018         	movff	___flmul@grs+2,___flmul@grs+3
  6496   0022B6  C016  F017         	movff	___flmul@grs+1,___flmul@grs+2
  6497   0022BA  C015  F016         	movff	___flmul@grs,___flmul@grs+1
  6498   0022BE  6A15               	clrf	___flmul@grs^0,c
  6499   0022C0  500B               	movf	___flmul@a^0,w,c
  6500   0022C2  0208               	mulwf	(___flmul@b+1)^0,c
  6501   0022C4  CFF3 F01E          	movff	prodl,___flmul@temp
  6502   0022C8  CFF4 F01F          	movff	prodh,___flmul@temp+1
  6503   0022CC  501E               	movf	___flmul@temp^0,w,c
  6504   0022CE  2615               	addwf	___flmul@grs^0,f,c
  6505   0022D0  501F               	movf	(___flmul@temp+1)^0,w,c
  6506   0022D2  2216               	addwfc	(___flmul@grs+1)^0,f,c
  6507   0022D4  0E00               	movlw	0
  6508   0022D6  2217               	addwfc	(___flmul@grs+2)^0,f,c
  6509   0022D8  0E00               	movlw	0
  6510   0022DA  2218               	addwfc	(___flmul@grs+3)^0,f,c
  6511   0022DC  500C               	movf	(___flmul@a+1)^0,w,c
  6512   0022DE  0207               	mulwf	___flmul@b^0,c
  6513   0022E0  CFF3 F01E          	movff	prodl,___flmul@temp
  6514   0022E4  CFF4 F01F          	movff	prodh,___flmul@temp+1
  6515   0022E8  501E               	movf	___flmul@temp^0,w,c
  6516   0022EA  2615               	addwf	___flmul@grs^0,f,c
  6517   0022EC  501F               	movf	(___flmul@temp+1)^0,w,c
  6518   0022EE  2216               	addwfc	(___flmul@grs+1)^0,f,c
  6519   0022F0  0E00               	movlw	0
  6520   0022F2  2217               	addwfc	(___flmul@grs+2)^0,f,c
  6521   0022F4  0E00               	movlw	0
  6522   0022F6  2218               	addwfc	(___flmul@grs+3)^0,f,c
  6523   0022F8  C017  F018         	movff	___flmul@grs+2,___flmul@grs+3
  6524   0022FC  C016  F017         	movff	___flmul@grs+1,___flmul@grs+2
  6525   002300  C015  F016         	movff	___flmul@grs,___flmul@grs+1
  6526   002304  6A15               	clrf	___flmul@grs^0,c
  6527   002306  500B               	movf	___flmul@a^0,w,c
  6528   002308  0207               	mulwf	___flmul@b^0,c
  6529   00230A  CFF3 F01E          	movff	prodl,___flmul@temp
  6530   00230E  CFF4 F01F          	movff	prodh,___flmul@temp+1
  6531   002312  501E               	movf	___flmul@temp^0,w,c
  6532   002314  2615               	addwf	___flmul@grs^0,f,c
  6533   002316  501F               	movf	(___flmul@temp+1)^0,w,c
  6534   002318  2216               	addwfc	(___flmul@grs+1)^0,f,c
  6535   00231A  0E00               	movlw	0
  6536   00231C  2217               	addwfc	(___flmul@grs+2)^0,f,c
  6537   00231E  0E00               	movlw	0
  6538   002320  2218               	addwfc	(___flmul@grs+3)^0,f,c
  6539   002322  500D               	movf	(___flmul@a+2)^0,w,c
  6540   002324  0208               	mulwf	(___flmul@b+1)^0,c
  6541   002326  CFF3 F01E          	movff	prodl,___flmul@temp
  6542   00232A  CFF4 F01F          	movff	prodh,___flmul@temp+1
  6543   00232E  501E               	movf	___flmul@temp^0,w,c
  6544   002330  261A               	addwf	___flmul@prod^0,f,c
  6545   002332  501F               	movf	(___flmul@temp+1)^0,w,c
  6546   002334  221B               	addwfc	(___flmul@prod+1)^0,f,c
  6547   002336  0E00               	movlw	0
  6548   002338  221C               	addwfc	(___flmul@prod+2)^0,f,c
  6549   00233A  0E00               	movlw	0
  6550   00233C  221D               	addwfc	(___flmul@prod+3)^0,f,c
  6551   00233E  500C               	movf	(___flmul@a+1)^0,w,c
  6552   002340  0209               	mulwf	(___flmul@b+2)^0,c
  6553   002342  CFF3 F01E          	movff	prodl,___flmul@temp
  6554   002346  CFF4 F01F          	movff	prodh,___flmul@temp+1
  6555   00234A  501E               	movf	___flmul@temp^0,w,c
  6556   00234C  261A               	addwf	___flmul@prod^0,f,c
  6557   00234E  501F               	movf	(___flmul@temp+1)^0,w,c
  6558   002350  221B               	addwfc	(___flmul@prod+1)^0,f,c
  6559   002352  0E00               	movlw	0
  6560   002354  221C               	addwfc	(___flmul@prod+2)^0,f,c
  6561   002356  0E00               	movlw	0
  6562   002358  221D               	addwfc	(___flmul@prod+3)^0,f,c
  6563   00235A  500D               	movf	(___flmul@a+2)^0,w,c
  6564   00235C  0209               	mulwf	(___flmul@b+2)^0,c
  6565   00235E  CFF3 F01E          	movff	prodl,___flmul@temp
  6566   002362  CFF4 F01F          	movff	prodh,___flmul@temp+1
  6567   002366  501E               	movf	___flmul@temp^0,w,c
  6568   002368  6E0F               	movwf	??___flmul^0,c
  6569   00236A  501F               	movf	(___flmul@temp+1)^0,w,c
  6570   00236C  6E10               	movwf	(??___flmul+1)^0,c
  6571   00236E  6A11               	clrf	(??___flmul+2)^0,c
  6572   002370  6A12               	clrf	(??___flmul+3)^0,c
  6573   002372  C011  F012         	movff	??___flmul+2,??___flmul+3
  6574   002376  C010  F011         	movff	??___flmul+1,??___flmul+2
  6575   00237A  C00F  F010         	movff	??___flmul,??___flmul+1
  6576   00237E  6A0F               	clrf	??___flmul^0,c
  6577   002380  500F               	movf	??___flmul^0,w,c
  6578   002382  261A               	addwf	___flmul@prod^0,f,c
  6579   002384  5010               	movf	(??___flmul+1)^0,w,c
  6580   002386  221B               	addwfc	(___flmul@prod+1)^0,f,c
  6581   002388  5011               	movf	(??___flmul+2)^0,w,c
  6582   00238A  221C               	addwfc	(___flmul@prod+2)^0,f,c
  6583   00238C  5012               	movf	(??___flmul+3)^0,w,c
  6584   00238E  221D               	addwfc	(___flmul@prod+3)^0,f,c
  6585   002390  C015  F00F         	movff	___flmul@grs,??___flmul
  6586   002394  C016  F010         	movff	___flmul@grs+1,??___flmul+1
  6587   002398  C017  F011         	movff	___flmul@grs+2,??___flmul+2
  6588   00239C  C018  F012         	movff	___flmul@grs+3,??___flmul+3
  6589   0023A0  0E19               	movlw	25
  6590   0023A2  EFD8  F011         	goto	u6540
  6591   0023A6                     u6545:
  6592   0023A6  90D8               	bcf	status,0,c
  6593   0023A8  3212               	rrcf	(??___flmul+3)^0,f,c
  6594   0023AA  3211               	rrcf	(??___flmul+2)^0,f,c
  6595   0023AC  3210               	rrcf	(??___flmul+1)^0,f,c
  6596   0023AE  320F               	rrcf	??___flmul^0,f,c
  6597   0023B0                     u6540:
  6598   0023B0  2EE8               	decfsz	wreg,f,c
  6599   0023B2  EFD3  F011         	goto	u6545
  6600   0023B6  500F               	movf	??___flmul^0,w,c
  6601   0023B8  261A               	addwf	___flmul@prod^0,f,c
  6602   0023BA  5010               	movf	(??___flmul+1)^0,w,c
  6603   0023BC  221B               	addwfc	(___flmul@prod+1)^0,f,c
  6604   0023BE  5011               	movf	(??___flmul+2)^0,w,c
  6605   0023C0  221C               	addwfc	(___flmul@prod+2)^0,f,c
  6606   0023C2  5012               	movf	(??___flmul+3)^0,w,c
  6607   0023C4  221D               	addwfc	(___flmul@prod+3)^0,f,c
  6608   0023C6  C017  F018         	movff	___flmul@grs+2,___flmul@grs+3
  6609   0023CA  C016  F017         	movff	___flmul@grs+1,___flmul@grs+2
  6610   0023CE  C015  F016         	movff	___flmul@grs,___flmul@grs+1
  6611   0023D2  6A15               	clrf	___flmul@grs^0,c
  6612   0023D4  5014               	movf	___flmul@aexp^0,w,c
  6613   0023D6  C019  F00F         	movff	___flmul@bexp,??___flmul
  6614   0023DA  6A10               	clrf	(??___flmul+1)^0,c
  6615   0023DC  260F               	addwf	??___flmul^0,f,c
  6616   0023DE  0E00               	movlw	0
  6617   0023E0  2210               	addwfc	(??___flmul+1)^0,f,c
  6618   0023E2  0E82               	movlw	130
  6619   0023E4  240F               	addwf	??___flmul^0,w,c
  6620   0023E6  6E1E               	movwf	___flmul@temp^0,c
  6621   0023E8  0EFF               	movlw	255
  6622   0023EA  2010               	addwfc	(??___flmul+1)^0,w,c
  6623   0023EC  6E1F               	movwf	(___flmul@temp+1)^0,c
  6624   0023EE  EF0E  F012         	goto	l5395
  6625   0023F2                     l5389:
  6626   0023F2  90D8               	bcf	status,0,c
  6627   0023F4  361A               	rlcf	___flmul@prod^0,f,c
  6628   0023F6  361B               	rlcf	(___flmul@prod+1)^0,f,c
  6629   0023F8  361C               	rlcf	(___flmul@prod+2)^0,f,c
  6630   0023FA  361D               	rlcf	(___flmul@prod+3)^0,f,c
  6631   0023FC  AE18               	btfss	(___flmul@grs+3)^0,7,c
  6632   0023FE  EF03  F012         	goto	u6551
  6633   002402  EF05  F012         	goto	u6550
  6634   002406                     u6551:
  6635   002406  EF06  F012         	goto	l874
  6636   00240A                     u6550:
  6637   00240A  801A               	bsf	___flmul@prod^0,0,c
  6638   00240C                     l874:
  6639   00240C  90D8               	bcf	status,0,c
  6640   00240E  3615               	rlcf	___flmul@grs^0,f,c
  6641   002410  3616               	rlcf	(___flmul@grs+1)^0,f,c
  6642   002412  3617               	rlcf	(___flmul@grs+2)^0,f,c
  6643   002414  3618               	rlcf	(___flmul@grs+3)^0,f,c
  6644   002416  061E               	decf	___flmul@temp^0,f,c
  6645   002418  A0D8               	btfss	status,0,c
  6646   00241A  061F               	decf	(___flmul@temp+1)^0,f,c
  6647   00241C                     l5395:
  6648   00241C  AE1C               	btfss	(___flmul@prod+2)^0,7,c
  6649   00241E  EF13  F012         	goto	u6561
  6650   002422  EF15  F012         	goto	u6560
  6651   002426                     u6561:
  6652   002426  EFF9  F011         	goto	l5389
  6653   00242A                     u6560:
  6654   00242A  0E00               	movlw	0
  6655   00242C  6E14               	movwf	___flmul@aexp^0,c
  6656   00242E  AE18               	btfss	(___flmul@grs+3)^0,7,c
  6657   002430  EF1C  F012         	goto	u6571
  6658   002434  EF1E  F012         	goto	u6570
  6659   002438                     u6571:
  6660   002438  EF42  F012         	goto	l876
  6661   00243C                     u6570:
  6662   00243C  0EFF               	movlw	255
  6663   00243E  1415               	andwf	___flmul@grs^0,w,c
  6664   002440  6E0F               	movwf	??___flmul^0,c
  6665   002442  0EFF               	movlw	255
  6666   002444  1416               	andwf	(___flmul@grs+1)^0,w,c
  6667   002446  6E10               	movwf	(??___flmul+1)^0,c
  6668   002448  0EFF               	movlw	255
  6669   00244A  1417               	andwf	(___flmul@grs+2)^0,w,c
  6670   00244C  6E11               	movwf	(??___flmul+2)^0,c
  6671   00244E  0E7F               	movlw	127
  6672   002450  1418               	andwf	(___flmul@grs+3)^0,w,c
  6673   002452  6E12               	movwf	(??___flmul+3)^0,c
  6674   002454  500F               	movf	??___flmul^0,w,c
  6675   002456  1010               	iorwf	(??___flmul+1)^0,w,c
  6676   002458  1011               	iorwf	(??___flmul+2)^0,w,c
  6677   00245A  1012               	iorwf	(??___flmul+3)^0,w,c
  6678   00245C  B4D8               	btfsc	status,2,c
  6679   00245E  EF33  F012         	goto	u6581
  6680   002462  EF35  F012         	goto	u6580
  6681   002466                     u6581:
  6682   002466  EF39  F012         	goto	l877
  6683   00246A                     u6580:
  6684   00246A                     l5403:
  6685   00246A  0E01               	movlw	1
  6686   00246C  6E14               	movwf	___flmul@aexp^0,c
  6687   00246E  EF42  F012         	goto	l876
  6688   002472                     l877:
  6689   002472  A01A               	btfss	___flmul@prod^0,0,c
  6690   002474  EF3E  F012         	goto	u6591
  6691   002478  EF40  F012         	goto	u6590
  6692   00247C                     u6591:
  6693   00247C  EF42  F012         	goto	l876
  6694   002480                     u6590:
  6695   002480  EF35  F012         	goto	l5403
  6696   002484                     l876:
  6697   002484  5014               	movf	___flmul@aexp^0,w,c
  6698   002486  B4D8               	btfsc	status,2,c
  6699   002488  EF48  F012         	goto	u6601
  6700   00248C  EF4A  F012         	goto	u6600
  6701   002490                     u6601:
  6702   002490  EF6E  F012         	goto	l5415
  6703   002494                     u6600:
  6704   002494  0E01               	movlw	1
  6705   002496  261A               	addwf	___flmul@prod^0,f,c
  6706   002498  0E00               	movlw	0
  6707   00249A  221B               	addwfc	(___flmul@prod+1)^0,f,c
  6708   00249C  221C               	addwfc	(___flmul@prod+2)^0,f,c
  6709   00249E  221D               	addwfc	(___flmul@prod+3)^0,f,c
  6710   0024A0  A01D               	btfss	(___flmul@prod+3)^0,0,c
  6711   0024A2  EF55  F012         	goto	u6611
  6712   0024A6  EF57  F012         	goto	u6610
  6713   0024AA                     u6611:
  6714   0024AA  EF6E  F012         	goto	l5415
  6715   0024AE                     u6610:
  6716   0024AE  C01A  F00F         	movff	___flmul@prod,??___flmul
  6717   0024B2  C01B  F010         	movff	___flmul@prod+1,??___flmul+1
  6718   0024B6  C01C  F011         	movff	___flmul@prod+2,??___flmul+2
  6719   0024BA  C01D  F012         	movff	___flmul@prod+3,??___flmul+3
  6720   0024BE  3412               	rlcf	(??___flmul+3)^0,w,c
  6721   0024C0  3212               	rrcf	(??___flmul+3)^0,f,c
  6722   0024C2  3211               	rrcf	(??___flmul+2)^0,f,c
  6723   0024C4  3210               	rrcf	(??___flmul+1)^0,f,c
  6724   0024C6  320F               	rrcf	??___flmul^0,f,c
  6725   0024C8  C00F  F01A         	movff	??___flmul,___flmul@prod
  6726   0024CC  C010  F01B         	movff	??___flmul+1,___flmul@prod+1
  6727   0024D0  C011  F01C         	movff	??___flmul+2,___flmul@prod+2
  6728   0024D4  C012  F01D         	movff	??___flmul+3,___flmul@prod+3
  6729   0024D8  4A1E               	infsnz	___flmul@temp^0,f,c
  6730   0024DA  2A1F               	incf	(___flmul@temp+1)^0,f,c
  6731   0024DC                     l5415:
  6732   0024DC  BE1F               	btfsc	(___flmul@temp+1)^0,7,c
  6733   0024DE  EF79  F012         	goto	u6621
  6734   0024E2  501F               	movf	(___flmul@temp+1)^0,w,c
  6735   0024E4  E108               	bnz	u6620
  6736   0024E6  281E               	incf	___flmul@temp^0,w,c
  6737   0024E8  A0D8               	btfss	status,0,c
  6738   0024EA  EF79  F012         	goto	u6621
  6739   0024EE  EF7B  F012         	goto	u6620
  6740   0024F2                     u6621:
  6741   0024F2  EF85  F012         	goto	l5419
  6742   0024F6                     u6620:
  6743   0024F6  0E00               	movlw	0
  6744   0024F8  6E1A               	movwf	___flmul@prod^0,c
  6745   0024FA  0E00               	movlw	0
  6746   0024FC  6E1B               	movwf	(___flmul@prod+1)^0,c
  6747   0024FE  0E80               	movlw	128
  6748   002500  6E1C               	movwf	(___flmul@prod+2)^0,c
  6749   002502  0E7F               	movlw	127
  6750   002504  6E1D               	movwf	(___flmul@prod+3)^0,c
  6751   002506  EFB3  F012         	goto	l5431
  6752   00250A                     l5419:
  6753   00250A  BE1F               	btfsc	(___flmul@temp+1)^0,7,c
  6754   00250C  EF92  F012         	goto	u6630
  6755   002510  501F               	movf	(___flmul@temp+1)^0,w,c
  6756   002512  E106               	bnz	u6631
  6757   002514  041E               	decf	___flmul@temp^0,w,c
  6758   002516  B0D8               	btfsc	status,0,c
  6759   002518  EF90  F012         	goto	u6631
  6760   00251C  EF92  F012         	goto	u6630
  6761   002520                     u6631:
  6762   002520  EF9E  F012         	goto	l884
  6763   002524                     u6630:
  6764   002524  0E00               	movlw	0
  6765   002526  6E1A               	movwf	___flmul@prod^0,c
  6766   002528  0E00               	movlw	0
  6767   00252A  6E1B               	movwf	(___flmul@prod+1)^0,c
  6768   00252C  0E00               	movlw	0
  6769   00252E  6E1C               	movwf	(___flmul@prod+2)^0,c
  6770   002530  0E00               	movlw	0
  6771   002532  6E1D               	movwf	(___flmul@prod+3)^0,c
  6772   002534  0E00               	movlw	0
  6773   002536  6E13               	movwf	___flmul@sign^0,c
  6774   002538  EFB3  F012         	goto	l5431
  6775   00253C                     l884:
  6776   00253C  C01E  F019         	movff	___flmul@temp,___flmul@bexp
  6777   002540  0EFF               	movlw	255
  6778   002542  161A               	andwf	___flmul@prod^0,f,c
  6779   002544  0EFF               	movlw	255
  6780   002546  161B               	andwf	(___flmul@prod+1)^0,f,c
  6781   002548  0E7F               	movlw	127
  6782   00254A  161C               	andwf	(___flmul@prod+2)^0,f,c
  6783   00254C  0E00               	movlw	0
  6784   00254E  161D               	andwf	(___flmul@prod+3)^0,f,c
  6785   002550  A019               	btfss	___flmul@bexp^0,0,c
  6786   002552  EFAD  F012         	goto	u6641
  6787   002556  EFAF  F012         	goto	u6640
  6788   00255A                     u6641:
  6789   00255A  EFB0  F012         	goto	l5429
  6790   00255E                     u6640:
  6791   00255E  8E1C               	bsf	(___flmul@prod+2)^0,7,c
  6792   002560                     l5429:
  6793   002560  90D8               	bcf	status,0,c
  6794   002562  3019               	rrcf	___flmul@bexp^0,w,c
  6795   002564  6E1D               	movwf	(___flmul@prod+3)^0,c
  6796   002566                     l5431:
  6797   002566  5013               	movf	___flmul@sign^0,w,c
  6798   002568  121D               	iorwf	(___flmul@prod+3)^0,f,c
  6799   00256A  C01A  F007         	movff	___flmul@prod,?___flmul
  6800   00256E  C01B  F008         	movff	___flmul@prod+1,?___flmul+1
  6801   002572  C01C  F009         	movff	___flmul@prod+2,?___flmul+2
  6802   002576  C01D  F00A         	movff	___flmul@prod+3,?___flmul+3
  6803   00257A                     l871:
  6804   00257A  0012               	return		;funcret
  6805   00257C                     __end_of___flmul:
  6806                           	callstack 0
  6807                           
  6808 ;; *************** function ___flge *****************
  6809 ;; Defined at:
  6810 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  6811 ;; Parameters:    Size  Location     Type
  6812 ;;  ff1             4   31[COMRAM] unsigned char 
  6813 ;;  ff2             4   35[COMRAM] unsigned char 
  6814 ;; Auto vars:     Size  Location     Type
  6815 ;;		None
  6816 ;; Return value:  Size  Location     Type
  6817 ;;		None               void
  6818 ;; Registers used:
  6819 ;;		wreg, status,2, status,0
  6820 ;; Tracked objects:
  6821 ;;		On entry : 0/0
  6822 ;;		On exit  : 0/0
  6823 ;;		Unchanged: 0/0
  6824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6825 ;;      Params:         8       0       0       0       0       0       0       0       0
  6826 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6827 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6828 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6829 ;;Total ram usage:       12 bytes
  6830 ;; Hardware stack levels used: 1
  6831 ;; Hardware stack levels required when called: 1
  6832 ;; This function calls:
  6833 ;;		Nothing
  6834 ;; This function is called by:
  6835 ;;		_efgtoa
  6836 ;; This function uses a non-reentrant model
  6837 ;;
  6838                           
  6839                           	psect	text19
  6840   00376C                     __ptext19:
  6841                           	callstack 0
  6842   00376C                     ___flge:
  6843                           	callstack 24
  6844   00376C  0E00               	movlw	0
  6845   00376E  1420               	andwf	___flge@ff1^0,w,c
  6846   003770  6E28               	movwf	??___flge^0,c
  6847   003772  0E00               	movlw	0
  6848   003774  1421               	andwf	(___flge@ff1+1)^0,w,c
  6849   003776  6E29               	movwf	(??___flge+1)^0,c
  6850   003778  0E80               	movlw	128
  6851   00377A  1422               	andwf	(___flge@ff1+2)^0,w,c
  6852   00377C  6E2A               	movwf	(??___flge+2)^0,c
  6853   00377E  0E7F               	movlw	127
  6854   003780  1423               	andwf	(___flge@ff1+3)^0,w,c
  6855   003782  6E2B               	movwf	(??___flge+3)^0,c
  6856   003784  5028               	movf	??___flge^0,w,c
  6857   003786  1029               	iorwf	(??___flge+1)^0,w,c
  6858   003788  102A               	iorwf	(??___flge+2)^0,w,c
  6859   00378A  102B               	iorwf	(??___flge+3)^0,w,c
  6860   00378C  A4D8               	btfss	status,2,c
  6861   00378E  EFCB  F01B         	goto	u6681
  6862   003792  EFCD  F01B         	goto	u6680
  6863   003796                     u6681:
  6864   003796  EFD5  F01B         	goto	l5463
  6865   00379A                     u6680:
  6866   00379A  0E00               	movlw	0
  6867   00379C  6E20               	movwf	___flge@ff1^0,c
  6868   00379E  0E00               	movlw	0
  6869   0037A0  6E21               	movwf	(___flge@ff1+1)^0,c
  6870   0037A2  0E00               	movlw	0
  6871   0037A4  6E22               	movwf	(___flge@ff1+2)^0,c
  6872   0037A6  0E00               	movlw	0
  6873   0037A8  6E23               	movwf	(___flge@ff1+3)^0,c
  6874   0037AA                     l5463:
  6875   0037AA  0E00               	movlw	0
  6876   0037AC  1424               	andwf	___flge@ff2^0,w,c
  6877   0037AE  6E28               	movwf	??___flge^0,c
  6878   0037B0  0E00               	movlw	0
  6879   0037B2  1425               	andwf	(___flge@ff2+1)^0,w,c
  6880   0037B4  6E29               	movwf	(??___flge+1)^0,c
  6881   0037B6  0E80               	movlw	128
  6882   0037B8  1426               	andwf	(___flge@ff2+2)^0,w,c
  6883   0037BA  6E2A               	movwf	(??___flge+2)^0,c
  6884   0037BC  0E7F               	movlw	127
  6885   0037BE  1427               	andwf	(___flge@ff2+3)^0,w,c
  6886   0037C0  6E2B               	movwf	(??___flge+3)^0,c
  6887   0037C2  5028               	movf	??___flge^0,w,c
  6888   0037C4  1029               	iorwf	(??___flge+1)^0,w,c
  6889   0037C6  102A               	iorwf	(??___flge+2)^0,w,c
  6890   0037C8  102B               	iorwf	(??___flge+3)^0,w,c
  6891   0037CA  A4D8               	btfss	status,2,c
  6892   0037CC  EFEA  F01B         	goto	u6691
  6893   0037D0  EFEC  F01B         	goto	u6690
  6894   0037D4                     u6691:
  6895   0037D4  EFF4  F01B         	goto	l5467
  6896   0037D8                     u6690:
  6897   0037D8  0E00               	movlw	0
  6898   0037DA  6E24               	movwf	___flge@ff2^0,c
  6899   0037DC  0E00               	movlw	0
  6900   0037DE  6E25               	movwf	(___flge@ff2+1)^0,c
  6901   0037E0  0E00               	movlw	0
  6902   0037E2  6E26               	movwf	(___flge@ff2+2)^0,c
  6903   0037E4  0E00               	movlw	0
  6904   0037E6  6E27               	movwf	(___flge@ff2+3)^0,c
  6905   0037E8                     l5467:
  6906   0037E8  AE23               	btfss	(___flge@ff1+3)^0,7,c
  6907   0037EA  EFF9  F01B         	goto	u6701
  6908   0037EE  EFFB  F01B         	goto	u6700
  6909   0037F2                     u6701:
  6910   0037F2  EF04  F01C         	goto	l5471
  6911   0037F6                     u6700:
  6912   0037F6  6C20               	negf	___flge@ff1^0,c
  6913   0037F8  1E21               	comf	(___flge@ff1+1)^0,f,c
  6914   0037FA  B0D8               	btfsc	status,0,c
  6915   0037FC  2A21               	incf	(___flge@ff1+1)^0,f,c
  6916   0037FE  1E22               	comf	(___flge@ff1+2)^0,f,c
  6917   003800  B0D8               	btfsc	status,0,c
  6918   003802  2A22               	incf	(___flge@ff1+2)^0,f,c
  6919   003804  0E80               	movlw	128
  6920   003806  5623               	subfwb	(___flge@ff1+3)^0,f,c
  6921   003808                     l5471:
  6922   003808  AE27               	btfss	(___flge@ff2+3)^0,7,c
  6923   00380A  EF09  F01C         	goto	u6711
  6924   00380E  EF0B  F01C         	goto	u6710
  6925   003812                     u6711:
  6926   003812  EF14  F01C         	goto	l518
  6927   003816                     u6710:
  6928   003816  6C24               	negf	___flge@ff2^0,c
  6929   003818  1E25               	comf	(___flge@ff2+1)^0,f,c
  6930   00381A  B0D8               	btfsc	status,0,c
  6931   00381C  2A25               	incf	(___flge@ff2+1)^0,f,c
  6932   00381E  1E26               	comf	(___flge@ff2+2)^0,f,c
  6933   003820  B0D8               	btfsc	status,0,c
  6934   003822  2A26               	incf	(___flge@ff2+2)^0,f,c
  6935   003824  0E80               	movlw	128
  6936   003826  5627               	subfwb	(___flge@ff2+3)^0,f,c
  6937   003828                     l518:
  6938   003828  0E00               	movlw	0
  6939   00382A  1A20               	xorwf	___flge@ff1^0,f,c
  6940   00382C  0E00               	movlw	0
  6941   00382E  1A21               	xorwf	(___flge@ff1+1)^0,f,c
  6942   003830  0E00               	movlw	0
  6943   003832  1A22               	xorwf	(___flge@ff1+2)^0,f,c
  6944   003834  0E80               	movlw	128
  6945   003836  1A23               	xorwf	(___flge@ff1+3)^0,f,c
  6946   003838  0E00               	movlw	0
  6947   00383A  1A24               	xorwf	___flge@ff2^0,f,c
  6948   00383C  0E00               	movlw	0
  6949   00383E  1A25               	xorwf	(___flge@ff2+1)^0,f,c
  6950   003840  0E00               	movlw	0
  6951   003842  1A26               	xorwf	(___flge@ff2+2)^0,f,c
  6952   003844  0E80               	movlw	128
  6953   003846  1A27               	xorwf	(___flge@ff2+3)^0,f,c
  6954   003848  5024               	movf	___flge@ff2^0,w,c
  6955   00384A  5C20               	subwf	___flge@ff1^0,w,c
  6956   00384C  5025               	movf	(___flge@ff2+1)^0,w,c
  6957   00384E  5821               	subwfb	(___flge@ff1+1)^0,w,c
  6958   003850  5026               	movf	(___flge@ff2+2)^0,w,c
  6959   003852  5822               	subwfb	(___flge@ff1+2)^0,w,c
  6960   003854  5027               	movf	(___flge@ff2+3)^0,w,c
  6961   003856  5823               	subwfb	(___flge@ff1+3)^0,w,c
  6962   003858  B0D8               	btfsc	status,0,c
  6963   00385A  EF31  F01C         	goto	u6721
  6964   00385E  EF33  F01C         	goto	u6720
  6965   003862                     u6721:
  6966   003862  EF36  F01C         	goto	l5477
  6967   003866                     u6720:
  6968   003866  90D8               	bcf	status,0,c
  6969   003868  EF37  F01C         	goto	l523
  6970   00386C                     l5477:
  6971   00386C  80D8               	bsf	status,0,c
  6972   00386E                     l523:
  6973   00386E  0012               	return		;funcret
  6974   003870                     __end_of___flge:
  6975                           	callstack 0
  6976                           
  6977 ;; *************** function ___fleq *****************
  6978 ;; Defined at:
  6979 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  6980 ;; Parameters:    Size  Location     Type
  6981 ;;  ff1             4    6[COMRAM] unsigned char 
  6982 ;;  ff2             4   10[COMRAM] unsigned char 
  6983 ;; Auto vars:     Size  Location     Type
  6984 ;;		None
  6985 ;; Return value:  Size  Location     Type
  6986 ;;		None               void
  6987 ;; Registers used:
  6988 ;;		wreg, status,2, status,0
  6989 ;; Tracked objects:
  6990 ;;		On entry : 0/0
  6991 ;;		On exit  : 0/0
  6992 ;;		Unchanged: 0/0
  6993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6994 ;;      Params:         8       0       0       0       0       0       0       0       0
  6995 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6996 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6997 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6998 ;;Total ram usage:       12 bytes
  6999 ;; Hardware stack levels used: 1
  7000 ;; Hardware stack levels required when called: 1
  7001 ;; This function calls:
  7002 ;;		Nothing
  7003 ;; This function is called by:
  7004 ;;		_efgtoa
  7005 ;; This function uses a non-reentrant model
  7006 ;;
  7007                           
  7008                           	psect	text20
  7009   003B20                     __ptext20:
  7010                           	callstack 0
  7011   003B20                     ___fleq:
  7012                           	callstack 24
  7013   003B20  0E00               	movlw	0
  7014   003B22  1407               	andwf	___fleq@ff1^0,w,c
  7015   003B24  6E0F               	movwf	??___fleq^0,c
  7016   003B26  0E00               	movlw	0
  7017   003B28  1408               	andwf	(___fleq@ff1+1)^0,w,c
  7018   003B2A  6E10               	movwf	(??___fleq+1)^0,c
  7019   003B2C  0E80               	movlw	128
  7020   003B2E  1409               	andwf	(___fleq@ff1+2)^0,w,c
  7021   003B30  6E11               	movwf	(??___fleq+2)^0,c
  7022   003B32  0E7F               	movlw	127
  7023   003B34  140A               	andwf	(___fleq@ff1+3)^0,w,c
  7024   003B36  6E12               	movwf	(??___fleq+3)^0,c
  7025   003B38  500F               	movf	??___fleq^0,w,c
  7026   003B3A  1010               	iorwf	(??___fleq+1)^0,w,c
  7027   003B3C  1011               	iorwf	(??___fleq+2)^0,w,c
  7028   003B3E  1012               	iorwf	(??___fleq+3)^0,w,c
  7029   003B40  A4D8               	btfss	status,2,c
  7030   003B42  EFA5  F01D         	goto	u6651
  7031   003B46  EFA7  F01D         	goto	u6650
  7032   003B4A                     u6651:
  7033   003B4A  EFAF  F01D         	goto	l5447
  7034   003B4E                     u6650:
  7035   003B4E  0E00               	movlw	0
  7036   003B50  6E07               	movwf	___fleq@ff1^0,c
  7037   003B52  0E00               	movlw	0
  7038   003B54  6E08               	movwf	(___fleq@ff1+1)^0,c
  7039   003B56  0E00               	movlw	0
  7040   003B58  6E09               	movwf	(___fleq@ff1+2)^0,c
  7041   003B5A  0E00               	movlw	0
  7042   003B5C  6E0A               	movwf	(___fleq@ff1+3)^0,c
  7043   003B5E                     l5447:
  7044   003B5E  0E00               	movlw	0
  7045   003B60  140B               	andwf	___fleq@ff2^0,w,c
  7046   003B62  6E0F               	movwf	??___fleq^0,c
  7047   003B64  0E00               	movlw	0
  7048   003B66  140C               	andwf	(___fleq@ff2+1)^0,w,c
  7049   003B68  6E10               	movwf	(??___fleq+1)^0,c
  7050   003B6A  0E80               	movlw	128
  7051   003B6C  140D               	andwf	(___fleq@ff2+2)^0,w,c
  7052   003B6E  6E11               	movwf	(??___fleq+2)^0,c
  7053   003B70  0E7F               	movlw	127
  7054   003B72  140E               	andwf	(___fleq@ff2+3)^0,w,c
  7055   003B74  6E12               	movwf	(??___fleq+3)^0,c
  7056   003B76  500F               	movf	??___fleq^0,w,c
  7057   003B78  1010               	iorwf	(??___fleq+1)^0,w,c
  7058   003B7A  1011               	iorwf	(??___fleq+2)^0,w,c
  7059   003B7C  1012               	iorwf	(??___fleq+3)^0,w,c
  7060   003B7E  A4D8               	btfss	status,2,c
  7061   003B80  EFC4  F01D         	goto	u6661
  7062   003B84  EFC6  F01D         	goto	u6660
  7063   003B88                     u6661:
  7064   003B88  EFCE  F01D         	goto	l5451
  7065   003B8C                     u6660:
  7066   003B8C  0E00               	movlw	0
  7067   003B8E  6E0B               	movwf	___fleq@ff2^0,c
  7068   003B90  0E00               	movlw	0
  7069   003B92  6E0C               	movwf	(___fleq@ff2+1)^0,c
  7070   003B94  0E00               	movlw	0
  7071   003B96  6E0D               	movwf	(___fleq@ff2+2)^0,c
  7072   003B98  0E00               	movlw	0
  7073   003B9A  6E0E               	movwf	(___fleq@ff2+3)^0,c
  7074   003B9C                     l5451:
  7075   003B9C  500B               	movf	___fleq@ff2^0,w,c
  7076   003B9E  1807               	xorwf	___fleq@ff1^0,w,c
  7077   003BA0  E10F               	bnz	u6670
  7078   003BA2  500C               	movf	(___fleq@ff2+1)^0,w,c
  7079   003BA4  1808               	xorwf	(___fleq@ff1+1)^0,w,c
  7080   003BA6  E10C               	bnz	u6670
  7081   003BA8  500D               	movf	(___fleq@ff2+2)^0,w,c
  7082   003BAA  1809               	xorwf	(___fleq@ff1+2)^0,w,c
  7083   003BAC  E109               	bnz	u6670
  7084   003BAE  500E               	movf	(___fleq@ff2+3)^0,w,c
  7085   003BB0  180A               	xorwf	(___fleq@ff1+3)^0,w,c
  7086   003BB2  B4D8               	btfsc	status,2,c
  7087   003BB4  EFDE  F01D         	goto	u6671
  7088   003BB8  EFE0  F01D         	goto	u6670
  7089   003BBC                     u6671:
  7090   003BBC  EFE3  F01D         	goto	l5455
  7091   003BC0                     u6670:
  7092   003BC0  90D8               	bcf	status,0,c
  7093   003BC2  EFE4  F01D         	goto	l512
  7094   003BC6                     l5455:
  7095   003BC6  80D8               	bsf	status,0,c
  7096   003BC8                     l512:
  7097   003BC8  0012               	return		;funcret
  7098   003BCA                     __end_of___fleq:
  7099                           	callstack 0
  7100                           
  7101 ;; *************** function ___fldiv *****************
  7102 ;; Defined at:
  7103 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  7104 ;; Parameters:    Size  Location     Type
  7105 ;;  b               4   32[COMRAM] unsigned char 
  7106 ;;  a               4   36[COMRAM] unsigned char 
  7107 ;; Auto vars:     Size  Location     Type
  7108 ;;  grs             4   51[COMRAM] unsigned long 
  7109 ;;  rem             4   44[COMRAM] unsigned long 
  7110 ;;  new_exp         2   49[COMRAM] short 
  7111 ;;  aexp            1   56[COMRAM] unsigned char 
  7112 ;;  bexp            1   55[COMRAM] unsigned char 
  7113 ;;  sign            1   48[COMRAM] unsigned char 
  7114 ;; Return value:  Size  Location     Type
  7115 ;;                  4   32[COMRAM] unsigned char 
  7116 ;; Registers used:
  7117 ;;		wreg, status,2, status,0
  7118 ;; Tracked objects:
  7119 ;;		On entry : 0/0
  7120 ;;		On exit  : 0/0
  7121 ;;		Unchanged: 0/0
  7122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7123 ;;      Params:         8       0       0       0       0       0       0       0       0
  7124 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7125 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7126 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7127 ;;Total ram usage:       25 bytes
  7128 ;; Hardware stack levels used: 1
  7129 ;; Hardware stack levels required when called: 1
  7130 ;; This function calls:
  7131 ;;		Nothing
  7132 ;; This function is called by:
  7133 ;;		_loop
  7134 ;;		_efgtoa
  7135 ;; This function uses a non-reentrant model
  7136 ;;
  7137                           
  7138                           	psect	text21
  7139   00257C                     __ptext21:
  7140                           	callstack 0
  7141   00257C                     ___fldiv:
  7142                           	callstack 24
  7143   00257C  5024               	movf	(___fldiv@b+3)^0,w,c
  7144   00257E  0B80               	andlw	128
  7145   002580  6E31               	movwf	___fldiv@sign^0,c
  7146   002582  5024               	movf	(___fldiv@b+3)^0,w,c
  7147   002584  2424               	addwf	(___fldiv@b+3)^0,w,c
  7148   002586  6E38               	movwf	___fldiv@bexp^0,c
  7149   002588  AE23               	btfss	(___fldiv@b+2)^0,7,c
  7150   00258A  EFC9  F012         	goto	u6231
  7151   00258E  EFCB  F012         	goto	u6230
  7152   002592                     u6231:
  7153   002592  EFCC  F012         	goto	l5175
  7154   002596                     u6230:
  7155   002596  8038               	bsf	___fldiv@bexp^0,0,c
  7156   002598                     l5175:
  7157   002598  5038               	movf	___fldiv@bexp^0,w,c
  7158   00259A  B4D8               	btfsc	status,2,c
  7159   00259C  EFD2  F012         	goto	u6241
  7160   0025A0  EFD4  F012         	goto	u6240
  7161   0025A4                     u6241:
  7162   0025A4  EFE9  F012         	goto	l5185
  7163   0025A8                     u6240:
  7164   0025A8  2838               	incf	___fldiv@bexp^0,w,c
  7165   0025AA  A4D8               	btfss	status,2,c
  7166   0025AC  EFDA  F012         	goto	u6251
  7167   0025B0  EFDC  F012         	goto	u6250
  7168   0025B4                     u6251:
  7169   0025B4  EFE4  F012         	goto	l5181
  7170   0025B8                     u6250:
  7171   0025B8  0E00               	movlw	0
  7172   0025BA  6E21               	movwf	___fldiv@b^0,c
  7173   0025BC  0E00               	movlw	0
  7174   0025BE  6E22               	movwf	(___fldiv@b+1)^0,c
  7175   0025C0  0E00               	movlw	0
  7176   0025C2  6E23               	movwf	(___fldiv@b+2)^0,c
  7177   0025C4  0E00               	movlw	0
  7178   0025C6  6E24               	movwf	(___fldiv@b+3)^0,c
  7179   0025C8                     l5181:
  7180   0025C8  8E23               	bsf	(___fldiv@b+2)^0,7,c
  7181   0025CA  0E00               	movlw	0
  7182   0025CC  6E24               	movwf	(___fldiv@b+3)^0,c
  7183   0025CE  EFF1  F012         	goto	l5187
  7184   0025D2                     l5185:
  7185   0025D2  0E00               	movlw	0
  7186   0025D4  6E21               	movwf	___fldiv@b^0,c
  7187   0025D6  0E00               	movlw	0
  7188   0025D8  6E22               	movwf	(___fldiv@b+1)^0,c
  7189   0025DA  0E00               	movlw	0
  7190   0025DC  6E23               	movwf	(___fldiv@b+2)^0,c
  7191   0025DE  0E00               	movlw	0
  7192   0025E0  6E24               	movwf	(___fldiv@b+3)^0,c
  7193   0025E2                     l5187:
  7194   0025E2  5028               	movf	(___fldiv@a+3)^0,w,c
  7195   0025E4  0B80               	andlw	128
  7196   0025E6  1A31               	xorwf	___fldiv@sign^0,f,c
  7197   0025E8  5028               	movf	(___fldiv@a+3)^0,w,c
  7198   0025EA  2428               	addwf	(___fldiv@a+3)^0,w,c
  7199   0025EC  6E39               	movwf	___fldiv@aexp^0,c
  7200   0025EE  AE27               	btfss	(___fldiv@a+2)^0,7,c
  7201   0025F0  EFFC  F012         	goto	u6261
  7202   0025F4  EFFE  F012         	goto	u6260
  7203   0025F8                     u6261:
  7204   0025F8  EFFF  F012         	goto	l5195
  7205   0025FC                     u6260:
  7206   0025FC  8039               	bsf	___fldiv@aexp^0,0,c
  7207   0025FE                     l5195:
  7208   0025FE  5039               	movf	___fldiv@aexp^0,w,c
  7209   002600  B4D8               	btfsc	status,2,c
  7210   002602  EF05  F013         	goto	u6271
  7211   002606  EF07  F013         	goto	u6270
  7212   00260A                     u6271:
  7213   00260A  EF1C  F013         	goto	l5205
  7214   00260E                     u6270:
  7215   00260E  2839               	incf	___fldiv@aexp^0,w,c
  7216   002610  A4D8               	btfss	status,2,c
  7217   002612  EF0D  F013         	goto	u6281
  7218   002616  EF0F  F013         	goto	u6280
  7219   00261A                     u6281:
  7220   00261A  EF17  F013         	goto	l5201
  7221   00261E                     u6280:
  7222   00261E  0E00               	movlw	0
  7223   002620  6E25               	movwf	___fldiv@a^0,c
  7224   002622  0E00               	movlw	0
  7225   002624  6E26               	movwf	(___fldiv@a+1)^0,c
  7226   002626  0E00               	movlw	0
  7227   002628  6E27               	movwf	(___fldiv@a+2)^0,c
  7228   00262A  0E00               	movlw	0
  7229   00262C  6E28               	movwf	(___fldiv@a+3)^0,c
  7230   00262E                     l5201:
  7231   00262E  8E27               	bsf	(___fldiv@a+2)^0,7,c
  7232   002630  0E00               	movlw	0
  7233   002632  6E28               	movwf	(___fldiv@a+3)^0,c
  7234   002634  EF24  F013         	goto	l5207
  7235   002638                     l5205:
  7236   002638  0E00               	movlw	0
  7237   00263A  6E25               	movwf	___fldiv@a^0,c
  7238   00263C  0E00               	movlw	0
  7239   00263E  6E26               	movwf	(___fldiv@a+1)^0,c
  7240   002640  0E00               	movlw	0
  7241   002642  6E27               	movwf	(___fldiv@a+2)^0,c
  7242   002644  0E00               	movlw	0
  7243   002646  6E28               	movwf	(___fldiv@a+3)^0,c
  7244   002648                     l5207:
  7245   002648  5025               	movf	___fldiv@a^0,w,c
  7246   00264A  1026               	iorwf	(___fldiv@a+1)^0,w,c
  7247   00264C  1027               	iorwf	(___fldiv@a+2)^0,w,c
  7248   00264E  1028               	iorwf	(___fldiv@a+3)^0,w,c
  7249   002650  A4D8               	btfss	status,2,c
  7250   002652  EF2D  F013         	goto	u6291
  7251   002656  EF2F  F013         	goto	u6290
  7252   00265A                     u6291:
  7253   00265A  EF47  F013         	goto	l5219
  7254   00265E                     u6290:
  7255   00265E  0E00               	movlw	0
  7256   002660  6E21               	movwf	___fldiv@b^0,c
  7257   002662  0E00               	movlw	0
  7258   002664  6E22               	movwf	(___fldiv@b+1)^0,c
  7259   002666  0E00               	movlw	0
  7260   002668  6E23               	movwf	(___fldiv@b+2)^0,c
  7261   00266A  0E00               	movlw	0
  7262   00266C  6E24               	movwf	(___fldiv@b+3)^0,c
  7263   00266E  0E80               	movlw	128
  7264   002670  1223               	iorwf	(___fldiv@b+2)^0,f,c
  7265   002672  0E7F               	movlw	127
  7266   002674  1224               	iorwf	(___fldiv@b+3)^0,f,c
  7267   002676                     l5213:
  7268   002676  5031               	movf	___fldiv@sign^0,w,c
  7269   002678  1224               	iorwf	(___fldiv@b+3)^0,f,c
  7270   00267A  C021  F021         	movff	___fldiv@b,?___fldiv
  7271   00267E  C022  F022         	movff	___fldiv@b+1,?___fldiv+1
  7272   002682  C023  F023         	movff	___fldiv@b+2,?___fldiv+2
  7273   002686  C024  F024         	movff	___fldiv@b+3,?___fldiv+3
  7274   00268A  EF8A  F014         	goto	l835
  7275   00268E                     l5219:
  7276   00268E  5038               	movf	___fldiv@bexp^0,w,c
  7277   002690  A4D8               	btfss	status,2,c
  7278   002692  EF4D  F013         	goto	u6301
  7279   002696  EF4F  F013         	goto	u6300
  7280   00269A                     u6301:
  7281   00269A  EF59  F013         	goto	l5227
  7282   00269E                     u6300:
  7283   00269E  0E00               	movlw	0
  7284   0026A0  6E21               	movwf	?___fldiv^0,c
  7285   0026A2  0E00               	movlw	0
  7286   0026A4  6E22               	movwf	(?___fldiv+1)^0,c
  7287   0026A6  0E00               	movlw	0
  7288   0026A8  6E23               	movwf	(?___fldiv+2)^0,c
  7289   0026AA  0E00               	movlw	0
  7290   0026AC  6E24               	movwf	(?___fldiv+3)^0,c
  7291   0026AE  EF8A  F014         	goto	l835
  7292   0026B2                     l5227:
  7293   0026B2  5039               	movf	___fldiv@aexp^0,w,c
  7294   0026B4  C038  F029         	movff	___fldiv@bexp,??___fldiv
  7295   0026B8  6A2A               	clrf	(??___fldiv+1)^0,c
  7296   0026BA  5E29               	subwf	??___fldiv^0,f,c
  7297   0026BC  0E00               	movlw	0
  7298   0026BE  5A2A               	subwfb	(??___fldiv+1)^0,f,c
  7299   0026C0  0E7F               	movlw	127
  7300   0026C2  2429               	addwf	??___fldiv^0,w,c
  7301   0026C4  6E32               	movwf	___fldiv@new_exp^0,c
  7302   0026C6  0E00               	movlw	0
  7303   0026C8  202A               	addwfc	(??___fldiv+1)^0,w,c
  7304   0026CA  6E33               	movwf	(___fldiv@new_exp+1)^0,c
  7305   0026CC  C021  F02D         	movff	___fldiv@b,___fldiv@rem
  7306   0026D0  C022  F02E         	movff	___fldiv@b+1,___fldiv@rem+1
  7307   0026D4  C023  F02F         	movff	___fldiv@b+2,___fldiv@rem+2
  7308   0026D8  C024  F030         	movff	___fldiv@b+3,___fldiv@rem+3
  7309   0026DC  0E00               	movlw	0
  7310   0026DE  6E21               	movwf	___fldiv@b^0,c
  7311   0026E0  0E00               	movlw	0
  7312   0026E2  6E22               	movwf	(___fldiv@b+1)^0,c
  7313   0026E4  0E00               	movlw	0
  7314   0026E6  6E23               	movwf	(___fldiv@b+2)^0,c
  7315   0026E8  0E00               	movlw	0
  7316   0026EA  6E24               	movwf	(___fldiv@b+3)^0,c
  7317   0026EC  0E00               	movlw	0
  7318   0026EE  6E34               	movwf	___fldiv@grs^0,c
  7319   0026F0  0E00               	movlw	0
  7320   0026F2  6E35               	movwf	(___fldiv@grs+1)^0,c
  7321   0026F4  0E00               	movlw	0
  7322   0026F6  6E36               	movwf	(___fldiv@grs+2)^0,c
  7323   0026F8  0E00               	movlw	0
  7324   0026FA  6E37               	movwf	(___fldiv@grs+3)^0,c
  7325   0026FC  0E00               	movlw	0
  7326   0026FE  6E39               	movwf	___fldiv@aexp^0,c
  7327   002700  EFBA  F013         	goto	l837
  7328   002704                     l5237:
  7329   002704  5039               	movf	___fldiv@aexp^0,w,c
  7330   002706  B4D8               	btfsc	status,2,c
  7331   002708  EF88  F013         	goto	u6311
  7332   00270C  EF8A  F013         	goto	u6310
  7333   002710                     u6311:
  7334   002710  EFA1  F013         	goto	l5245
  7335   002714                     u6310:
  7336   002714  90D8               	bcf	status,0,c
  7337   002716  362D               	rlcf	___fldiv@rem^0,f,c
  7338   002718  362E               	rlcf	(___fldiv@rem+1)^0,f,c
  7339   00271A  362F               	rlcf	(___fldiv@rem+2)^0,f,c
  7340   00271C  3630               	rlcf	(___fldiv@rem+3)^0,f,c
  7341   00271E  90D8               	bcf	status,0,c
  7342   002720  3621               	rlcf	___fldiv@b^0,f,c
  7343   002722  3622               	rlcf	(___fldiv@b+1)^0,f,c
  7344   002724  3623               	rlcf	(___fldiv@b+2)^0,f,c
  7345   002726  3624               	rlcf	(___fldiv@b+3)^0,f,c
  7346   002728  AE37               	btfss	(___fldiv@grs+3)^0,7,c
  7347   00272A  EF99  F013         	goto	u6321
  7348   00272E  EF9B  F013         	goto	u6320
  7349   002732                     u6321:
  7350   002732  EF9C  F013         	goto	l840
  7351   002736                     u6320:
  7352   002736  8021               	bsf	___fldiv@b^0,0,c
  7353   002738                     l840:
  7354   002738  90D8               	bcf	status,0,c
  7355   00273A  3634               	rlcf	___fldiv@grs^0,f,c
  7356   00273C  3635               	rlcf	(___fldiv@grs+1)^0,f,c
  7357   00273E  3636               	rlcf	(___fldiv@grs+2)^0,f,c
  7358   002740  3637               	rlcf	(___fldiv@grs+3)^0,f,c
  7359   002742                     l5245:
  7360   002742  5025               	movf	___fldiv@a^0,w,c
  7361   002744  5C2D               	subwf	___fldiv@rem^0,w,c
  7362   002746  5026               	movf	(___fldiv@a+1)^0,w,c
  7363   002748  582E               	subwfb	(___fldiv@rem+1)^0,w,c
  7364   00274A  5027               	movf	(___fldiv@a+2)^0,w,c
  7365   00274C  582F               	subwfb	(___fldiv@rem+2)^0,w,c
  7366   00274E  5028               	movf	(___fldiv@a+3)^0,w,c
  7367   002750  5830               	subwfb	(___fldiv@rem+3)^0,w,c
  7368   002752  A0D8               	btfss	status,0,c
  7369   002754  EFAE  F013         	goto	u6331
  7370   002758  EFB0  F013         	goto	u6330
  7371   00275C                     u6331:
  7372   00275C  EFB9  F013         	goto	l5251
  7373   002760                     u6330:
  7374   002760  8C37               	bsf	(___fldiv@grs+3)^0,6,c
  7375   002762  5025               	movf	___fldiv@a^0,w,c
  7376   002764  5E2D               	subwf	___fldiv@rem^0,f,c
  7377   002766  5026               	movf	(___fldiv@a+1)^0,w,c
  7378   002768  5A2E               	subwfb	(___fldiv@rem+1)^0,f,c
  7379   00276A  5027               	movf	(___fldiv@a+2)^0,w,c
  7380   00276C  5A2F               	subwfb	(___fldiv@rem+2)^0,f,c
  7381   00276E  5028               	movf	(___fldiv@a+3)^0,w,c
  7382   002770  5A30               	subwfb	(___fldiv@rem+3)^0,f,c
  7383   002772                     l5251:
  7384   002772  2A39               	incf	___fldiv@aexp^0,f,c
  7385   002774                     l837:
  7386   002774  0E19               	movlw	25
  7387   002776  6439               	cpfsgt	___fldiv@aexp^0,c
  7388   002778  EFC0  F013         	goto	u6341
  7389   00277C  EFC2  F013         	goto	u6340
  7390   002780                     u6341:
  7391   002780  EF82  F013         	goto	l5237
  7392   002784                     u6340:
  7393   002784  502D               	movf	___fldiv@rem^0,w,c
  7394   002786  102E               	iorwf	(___fldiv@rem+1)^0,w,c
  7395   002788  102F               	iorwf	(___fldiv@rem+2)^0,w,c
  7396   00278A  1030               	iorwf	(___fldiv@rem+3)^0,w,c
  7397   00278C  B4D8               	btfsc	status,2,c
  7398   00278E  EFCB  F013         	goto	u6351
  7399   002792  EFCD  F013         	goto	u6350
  7400   002796                     u6351:
  7401   002796  EFE5  F013         	goto	l5263
  7402   00279A                     u6350:
  7403   00279A  8034               	bsf	___fldiv@grs^0,0,c
  7404   00279C  EFE5  F013         	goto	l5263
  7405   0027A0                     l5257:
  7406   0027A0  90D8               	bcf	status,0,c
  7407   0027A2  3621               	rlcf	___fldiv@b^0,f,c
  7408   0027A4  3622               	rlcf	(___fldiv@b+1)^0,f,c
  7409   0027A6  3623               	rlcf	(___fldiv@b+2)^0,f,c
  7410   0027A8  3624               	rlcf	(___fldiv@b+3)^0,f,c
  7411   0027AA  AE37               	btfss	(___fldiv@grs+3)^0,7,c
  7412   0027AC  EFDA  F013         	goto	u6361
  7413   0027B0  EFDC  F013         	goto	u6360
  7414   0027B4                     u6361:
  7415   0027B4  EFDD  F013         	goto	l846
  7416   0027B8                     u6360:
  7417   0027B8  8021               	bsf	___fldiv@b^0,0,c
  7418   0027BA                     l846:
  7419   0027BA  90D8               	bcf	status,0,c
  7420   0027BC  3634               	rlcf	___fldiv@grs^0,f,c
  7421   0027BE  3635               	rlcf	(___fldiv@grs+1)^0,f,c
  7422   0027C0  3636               	rlcf	(___fldiv@grs+2)^0,f,c
  7423   0027C2  3637               	rlcf	(___fldiv@grs+3)^0,f,c
  7424   0027C4  0632               	decf	___fldiv@new_exp^0,f,c
  7425   0027C6  A0D8               	btfss	status,0,c
  7426   0027C8  0633               	decf	(___fldiv@new_exp+1)^0,f,c
  7427   0027CA                     l5263:
  7428   0027CA  AE23               	btfss	(___fldiv@b+2)^0,7,c
  7429   0027CC  EFEA  F013         	goto	u6371
  7430   0027D0  EFEC  F013         	goto	u6370
  7431   0027D4                     u6371:
  7432   0027D4  EFD0  F013         	goto	l5257
  7433   0027D8                     u6370:
  7434   0027D8  0E00               	movlw	0
  7435   0027DA  6E39               	movwf	___fldiv@aexp^0,c
  7436   0027DC  AE37               	btfss	(___fldiv@grs+3)^0,7,c
  7437   0027DE  EFF3  F013         	goto	u6381
  7438   0027E2  EFF5  F013         	goto	u6380
  7439   0027E6                     u6381:
  7440   0027E6  EF19  F014         	goto	l848
  7441   0027EA                     u6380:
  7442   0027EA  0EFF               	movlw	255
  7443   0027EC  1434               	andwf	___fldiv@grs^0,w,c
  7444   0027EE  6E29               	movwf	??___fldiv^0,c
  7445   0027F0  0EFF               	movlw	255
  7446   0027F2  1435               	andwf	(___fldiv@grs+1)^0,w,c
  7447   0027F4  6E2A               	movwf	(??___fldiv+1)^0,c
  7448   0027F6  0EFF               	movlw	255
  7449   0027F8  1436               	andwf	(___fldiv@grs+2)^0,w,c
  7450   0027FA  6E2B               	movwf	(??___fldiv+2)^0,c
  7451   0027FC  0E7F               	movlw	127
  7452   0027FE  1437               	andwf	(___fldiv@grs+3)^0,w,c
  7453   002800  6E2C               	movwf	(??___fldiv+3)^0,c
  7454   002802  5029               	movf	??___fldiv^0,w,c
  7455   002804  102A               	iorwf	(??___fldiv+1)^0,w,c
  7456   002806  102B               	iorwf	(??___fldiv+2)^0,w,c
  7457   002808  102C               	iorwf	(??___fldiv+3)^0,w,c
  7458   00280A  B4D8               	btfsc	status,2,c
  7459   00280C  EF0A  F014         	goto	u6391
  7460   002810  EF0C  F014         	goto	u6390
  7461   002814                     u6391:
  7462   002814  EF10  F014         	goto	l849
  7463   002818                     u6390:
  7464   002818                     l5271:
  7465   002818  0E01               	movlw	1
  7466   00281A  6E39               	movwf	___fldiv@aexp^0,c
  7467   00281C  EF19  F014         	goto	l848
  7468   002820                     l849:
  7469   002820  A021               	btfss	___fldiv@b^0,0,c
  7470   002822  EF15  F014         	goto	u6401
  7471   002826  EF17  F014         	goto	u6400
  7472   00282A                     u6401:
  7473   00282A  EF19  F014         	goto	l848
  7474   00282E                     u6400:
  7475   00282E  EF0C  F014         	goto	l5271
  7476   002832                     l848:
  7477   002832  5039               	movf	___fldiv@aexp^0,w,c
  7478   002834  B4D8               	btfsc	status,2,c
  7479   002836  EF1F  F014         	goto	u6411
  7480   00283A  EF21  F014         	goto	u6410
  7481   00283E                     u6411:
  7482   00283E  EF45  F014         	goto	l5283
  7483   002842                     u6410:
  7484   002842  0E01               	movlw	1
  7485   002844  2621               	addwf	___fldiv@b^0,f,c
  7486   002846  0E00               	movlw	0
  7487   002848  2222               	addwfc	(___fldiv@b+1)^0,f,c
  7488   00284A  2223               	addwfc	(___fldiv@b+2)^0,f,c
  7489   00284C  2224               	addwfc	(___fldiv@b+3)^0,f,c
  7490   00284E  A024               	btfss	(___fldiv@b+3)^0,0,c
  7491   002850  EF2C  F014         	goto	u6421
  7492   002854  EF2E  F014         	goto	u6420
  7493   002858                     u6421:
  7494   002858  EF45  F014         	goto	l5283
  7495   00285C                     u6420:
  7496   00285C  C021  F029         	movff	___fldiv@b,??___fldiv
  7497   002860  C022  F02A         	movff	___fldiv@b+1,??___fldiv+1
  7498   002864  C023  F02B         	movff	___fldiv@b+2,??___fldiv+2
  7499   002868  C024  F02C         	movff	___fldiv@b+3,??___fldiv+3
  7500   00286C  342C               	rlcf	(??___fldiv+3)^0,w,c
  7501   00286E  322C               	rrcf	(??___fldiv+3)^0,f,c
  7502   002870  322B               	rrcf	(??___fldiv+2)^0,f,c
  7503   002872  322A               	rrcf	(??___fldiv+1)^0,f,c
  7504   002874  3229               	rrcf	??___fldiv^0,f,c
  7505   002876  C029  F021         	movff	??___fldiv,___fldiv@b
  7506   00287A  C02A  F022         	movff	??___fldiv+1,___fldiv@b+1
  7507   00287E  C02B  F023         	movff	??___fldiv+2,___fldiv@b+2
  7508   002882  C02C  F024         	movff	??___fldiv+3,___fldiv@b+3
  7509   002886  4A32               	infsnz	___fldiv@new_exp^0,f,c
  7510   002888  2A33               	incf	(___fldiv@new_exp+1)^0,f,c
  7511   00288A                     l5283:
  7512   00288A  BE33               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7513   00288C  EF50  F014         	goto	u6431
  7514   002890  5033               	movf	(___fldiv@new_exp+1)^0,w,c
  7515   002892  E108               	bnz	u6430
  7516   002894  2832               	incf	___fldiv@new_exp^0,w,c
  7517   002896  A0D8               	btfss	status,0,c
  7518   002898  EF50  F014         	goto	u6431
  7519   00289C  EF52  F014         	goto	u6430
  7520   0028A0                     u6431:
  7521   0028A0  EF5D  F014         	goto	l5287
  7522   0028A4                     u6430:
  7523   0028A4  0E00               	movlw	0
  7524   0028A6  6E33               	movwf	(___fldiv@new_exp+1)^0,c
  7525   0028A8  6832               	setf	___fldiv@new_exp^0,c
  7526   0028AA  0E00               	movlw	0
  7527   0028AC  6E21               	movwf	___fldiv@b^0,c
  7528   0028AE  0E00               	movlw	0
  7529   0028B0  6E22               	movwf	(___fldiv@b+1)^0,c
  7530   0028B2  0E00               	movlw	0
  7531   0028B4  6E23               	movwf	(___fldiv@b+2)^0,c
  7532   0028B6  0E00               	movlw	0
  7533   0028B8  6E24               	movwf	(___fldiv@b+3)^0,c
  7534   0028BA                     l5287:
  7535   0028BA  BE33               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7536   0028BC  EF6A  F014         	goto	u6440
  7537   0028C0  5033               	movf	(___fldiv@new_exp+1)^0,w,c
  7538   0028C2  E106               	bnz	u6441
  7539   0028C4  0432               	decf	___fldiv@new_exp^0,w,c
  7540   0028C6  B0D8               	btfsc	status,0,c
  7541   0028C8  EF68  F014         	goto	u6441
  7542   0028CC  EF6A  F014         	goto	u6440
  7543   0028D0                     u6441:
  7544   0028D0  EF78  F014         	goto	l5291
  7545   0028D4                     u6440:
  7546   0028D4  0E00               	movlw	0
  7547   0028D6  6E33               	movwf	(___fldiv@new_exp+1)^0,c
  7548   0028D8  0E00               	movlw	0
  7549   0028DA  6E32               	movwf	___fldiv@new_exp^0,c
  7550   0028DC  0E00               	movlw	0
  7551   0028DE  6E21               	movwf	___fldiv@b^0,c
  7552   0028E0  0E00               	movlw	0
  7553   0028E2  6E22               	movwf	(___fldiv@b+1)^0,c
  7554   0028E4  0E00               	movlw	0
  7555   0028E6  6E23               	movwf	(___fldiv@b+2)^0,c
  7556   0028E8  0E00               	movlw	0
  7557   0028EA  6E24               	movwf	(___fldiv@b+3)^0,c
  7558   0028EC  0E00               	movlw	0
  7559   0028EE  6E31               	movwf	___fldiv@sign^0,c
  7560   0028F0                     l5291:
  7561   0028F0  C032  F038         	movff	___fldiv@new_exp,___fldiv@bexp
  7562   0028F4  A038               	btfss	___fldiv@bexp^0,0,c
  7563   0028F6  EF7F  F014         	goto	u6451
  7564   0028FA  EF81  F014         	goto	u6450
  7565   0028FE                     u6451:
  7566   0028FE  EF84  F014         	goto	l5297
  7567   002902                     u6450:
  7568   002902  8E23               	bsf	(___fldiv@b+2)^0,7,c
  7569   002904  EF85  F014         	goto	l5299
  7570   002908                     l5297:
  7571   002908  9E23               	bcf	(___fldiv@b+2)^0,7,c
  7572   00290A                     l5299:
  7573   00290A  90D8               	bcf	status,0,c
  7574   00290C  3038               	rrcf	___fldiv@bexp^0,w,c
  7575   00290E  6E24               	movwf	(___fldiv@b+3)^0,c
  7576   002910  EF3B  F013         	goto	l5213
  7577   002914                     l835:
  7578   002914  0012               	return		;funcret
  7579   002916                     __end_of___fldiv:
  7580                           	callstack 0
  7581                           
  7582 ;; *************** function _dtoa *****************
  7583 ;; Defined at:
  7584 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  7585 ;; Parameters:    Size  Location     Type
  7586 ;;  fp              2   34[COMRAM] PTR struct _IO_FILE
  7587 ;;		 -> NULL(0), 
  7588 ;;  d               8   36[COMRAM] long long 
  7589 ;; Auto vars:     Size  Location     Type
  7590 ;;  n               8   58[COMRAM] long long 
  7591 ;;  i               2   67[COMRAM] int 
  7592 ;;  w               2   56[COMRAM] int 
  7593 ;;  p               2   54[COMRAM] int 
  7594 ;;  s               1   66[COMRAM] unsigned char 
  7595 ;; Return value:  Size  Location     Type
  7596 ;;                  1    wreg      void 
  7597 ;; Registers used:
  7598 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7599 ;; Tracked objects:
  7600 ;;		On entry : 0/0
  7601 ;;		On exit  : 0/0
  7602 ;;		Unchanged: 0/0
  7603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7604 ;;      Params:        10       0       0       0       0       0       0       0       0
  7605 ;;      Locals:        17       0       0       0       0       0       0       0       0
  7606 ;;      Temps:          8       0       0       0       0       0       0       0       0
  7607 ;;      Totals:        35       0       0       0       0       0       0       0       0
  7608 ;;Total ram usage:       35 bytes
  7609 ;; Hardware stack levels used: 1
  7610 ;; Hardware stack levels required when called: 5
  7611 ;; This function calls:
  7612 ;;		___aodiv
  7613 ;;		___aomod
  7614 ;;		_abs
  7615 ;;		_pad
  7616 ;; This function is called by:
  7617 ;;		_vfpfcnvrt
  7618 ;; This function uses a non-reentrant model
  7619 ;;
  7620                           
  7621                           	psect	text22
  7622   002BC0                     __ptext22:
  7623                           	callstack 0
  7624   002BC0                     _dtoa:
  7625                           	callstack 21
  7626   002BC0                     
  7627                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  7628   002BC0  C025  F03B         	movff	dtoa@d,dtoa@n
  7629   002BC4  C026  F03C         	movff	dtoa@d+1,dtoa@n+1
  7630   002BC8  C027  F03D         	movff	dtoa@d+2,dtoa@n+2
  7631   002BCC  C028  F03E         	movff	dtoa@d+3,dtoa@n+3
  7632   002BD0  C029  F03F         	movff	dtoa@d+4,dtoa@n+4
  7633   002BD4  C02A  F040         	movff	dtoa@d+5,dtoa@n+5
  7634   002BD8  C02B  F041         	movff	dtoa@d+6,dtoa@n+6
  7635   002BDC  C02C  F042         	movff	dtoa@d+7,dtoa@n+7
  7636   002BE0                     
  7637                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  7638   002BE0  BE42               	btfsc	(dtoa@n+7)^0,7,c
  7639   002BE2  EFF5  F015         	goto	u7081
  7640   002BE6  EFF8  F015         	goto	u7080
  7641   002BEA                     u7081:
  7642   002BEA  0E01               	movlw	1
  7643   002BEC  EFF9  F015         	goto	u7090
  7644   002BF0                     u7080:
  7645   002BF0  0E00               	movlw	0
  7646   002BF2                     u7090:
  7647   002BF2  6E43               	movwf	dtoa@s^0,c
  7648   002BF4                     
  7649                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  7650   002BF4  5043               	movf	dtoa@s^0,w,c
  7651   002BF6  B4D8               	btfsc	status,2,c
  7652   002BF8  EF00  F016         	goto	u7101
  7653   002BFC  EF02  F016         	goto	u7100
  7654   002C00                     u7101:
  7655   002C00  EF12  F016         	goto	l5645
  7656   002C04                     u7100:
  7657   002C04                     
  7658                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  7659   002C04  1E42               	comf	(dtoa@n+7)^0,f,c
  7660   002C06  1E41               	comf	(dtoa@n+6)^0,f,c
  7661   002C08  1E40               	comf	(dtoa@n+5)^0,f,c
  7662   002C0A  1E3F               	comf	(dtoa@n+4)^0,f,c
  7663   002C0C  1E3E               	comf	(dtoa@n+3)^0,f,c
  7664   002C0E  1E3D               	comf	(dtoa@n+2)^0,f,c
  7665   002C10  1E3C               	comf	(dtoa@n+1)^0,f,c
  7666   002C12  6C3B               	negf	dtoa@n^0,c
  7667   002C14  0E00               	movlw	0
  7668   002C16  223C               	addwfc	(dtoa@n+1)^0,f,c
  7669   002C18  223D               	addwfc	(dtoa@n+2)^0,f,c
  7670   002C1A  223E               	addwfc	(dtoa@n+3)^0,f,c
  7671   002C1C  223F               	addwfc	(dtoa@n+4)^0,f,c
  7672   002C1E  2240               	addwfc	(dtoa@n+5)^0,f,c
  7673   002C20  2241               	addwfc	(dtoa@n+6)^0,f,c
  7674   002C22  2242               	addwfc	(dtoa@n+7)^0,f,c
  7675   002C24                     l5645:
  7676                           
  7677                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  7678   002C24  BE57               	btfsc	(_prec+1)^0,7,c
  7679   002C26  EF1F  F016         	goto	u7110
  7680   002C2A  5057               	movf	(_prec+1)^0,w,c
  7681   002C2C  E106               	bnz	u7111
  7682   002C2E  0456               	decf	_prec^0,w,c
  7683   002C30  B0D8               	btfsc	status,0,c
  7684   002C32  EF1D  F016         	goto	u7111
  7685   002C36  EF1F  F016         	goto	u7110
  7686   002C3A                     u7111:
  7687   002C3A  EF25  F016         	goto	l976
  7688   002C3E                     u7110:
  7689   002C3E  0E00               	movlw	0
  7690   002C40  6E38               	movwf	(dtoa@p+1)^0,c
  7691   002C42  0E01               	movlw	1
  7692   002C44  6E37               	movwf	dtoa@p^0,c
  7693   002C46  EF29  F016         	goto	l978
  7694   002C4A                     l976:
  7695   002C4A  C056  F037         	movff	_prec,dtoa@p
  7696   002C4E  C057  F038         	movff	_prec+1,dtoa@p+1
  7697   002C52                     l978:
  7698                           
  7699                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  7700   002C52  C0FC  F039         	movff	_width,dtoa@w
  7701   002C56  C0FD  F03A         	movff	_width+1,dtoa@w+1
  7702   002C5A                     
  7703                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  7704   002C5A  5043               	movf	dtoa@s^0,w,c
  7705   002C5C  B4D8               	btfsc	status,2,c
  7706   002C5E  EF33  F016         	goto	u7121
  7707   002C62  EF35  F016         	goto	u7120
  7708   002C66                     u7121:
  7709   002C66  EF4C  F016         	goto	l979
  7710   002C6A                     u7120:
  7711   002C6A                     
  7712                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  7713   002C6A  0639               	decf	dtoa@w^0,f,c
  7714   002C6C  A0D8               	btfss	status,0,c
  7715   002C6E  063A               	decf	(dtoa@w+1)^0,f,c
  7716   002C70                     
  7717                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  7718   002C70  5043               	movf	dtoa@s^0,w,c
  7719   002C72  A4D8               	btfss	status,2,c
  7720   002C74  EF3E  F016         	goto	u7131
  7721   002C78  EF40  F016         	goto	u7130
  7722   002C7C                     u7131:
  7723   002C7C  EF46  F016         	goto	l5657
  7724   002C80                     u7130:
  7725   002C80  0E00               	movlw	0
  7726   002C82  6E36               	movwf	(_dtoa$1889+1)^0,c
  7727   002C84  0E2B               	movlw	43
  7728   002C86  6E35               	movwf	_dtoa$1889^0,c
  7729   002C88  EF4A  F016         	goto	l5659
  7730   002C8C                     l5657:
  7731   002C8C  0E00               	movlw	0
  7732   002C8E  6E36               	movwf	(_dtoa$1889+1)^0,c
  7733   002C90  0E2D               	movlw	45
  7734   002C92  6E35               	movwf	_dtoa$1889^0,c
  7735   002C94                     l5659:
  7736   002C94  C035  F043         	movff	_dtoa$1889,dtoa@s
  7737   002C98                     l979:
  7738                           
  7739                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  7740   002C98  0E00               	movlw	0
  7741   002C9A  6E45               	movwf	(dtoa@i+1)^0,c
  7742   002C9C  0E4F               	movlw	79
  7743   002C9E  6E44               	movwf	dtoa@i^0,c
  7744   002CA0                     
  7745                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  7746   002CA0  0E00               	movlw	0
  7747   002CA2  0101               	movlb	1	; () banked
  7748   002CA4  6FFC               	movwf	(_dbuf+79)& (0+255),b
  7749                           
  7750                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  7751   002CA6  EFD1  F016         	goto	l5673
  7752   002CAA                     l5663:
  7753                           
  7754                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  7755   002CAA  0644               	decf	dtoa@i^0,f,c
  7756   002CAC  A0D8               	btfss	status,0,c
  7757   002CAE  0645               	decf	(dtoa@i+1)^0,f,c
  7758   002CB0                     
  7759                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7760   002CB0  0EAD               	movlw	low _dbuf
  7761   002CB2  2444               	addwf	dtoa@i^0,w,c
  7762   002CB4  6ED9               	movwf	fsr2l,c
  7763   002CB6  0E01               	movlw	high _dbuf
  7764   002CB8  2045               	addwfc	(dtoa@i+1)^0,w,c
  7765   002CBA  6EDA               	movwf	fsr2h,c
  7766   002CBC  C03B  F007         	movff	dtoa@n,___aomod@dividend
  7767   002CC0  C03C  F008         	movff	dtoa@n+1,___aomod@dividend+1
  7768   002CC4  C03D  F009         	movff	dtoa@n+2,___aomod@dividend+2
  7769   002CC8  C03E  F00A         	movff	dtoa@n+3,___aomod@dividend+3
  7770   002CCC  C03F  F00B         	movff	dtoa@n+4,___aomod@dividend+4
  7771   002CD0  C040  F00C         	movff	dtoa@n+5,___aomod@dividend+5
  7772   002CD4  C041  F00D         	movff	dtoa@n+6,___aomod@dividend+6
  7773   002CD8  C042  F00E         	movff	dtoa@n+7,___aomod@dividend+7
  7774   002CDC  0E0A               	movlw	10
  7775   002CDE  6E0F               	movwf	___aomod@divisor^0,c
  7776   002CE0  0E00               	movlw	0
  7777   002CE2  6E10               	movwf	(___aomod@divisor+1)^0,c
  7778   002CE4  0E00               	movlw	0
  7779   002CE6  6E11               	movwf	(___aomod@divisor+2)^0,c
  7780   002CE8  0E00               	movlw	0
  7781   002CEA  6E12               	movwf	(___aomod@divisor+3)^0,c
  7782   002CEC  0E00               	movlw	0
  7783   002CEE  6E13               	movwf	(___aomod@divisor+4)^0,c
  7784   002CF0  0E00               	movlw	0
  7785   002CF2  6E14               	movwf	(___aomod@divisor+5)^0,c
  7786   002CF4  0E00               	movlw	0
  7787   002CF6  6E15               	movwf	(___aomod@divisor+6)^0,c
  7788   002CF8  0E00               	movlw	0
  7789   002CFA  6E16               	movwf	(___aomod@divisor+7)^0,c
  7790   002CFC  ECDC  F019         	call	___aomod	;wreg free
  7791   002D00  C007  F02D         	movff	?___aomod,??_dtoa
  7792   002D04  C008  F02E         	movff	?___aomod+1,??_dtoa+1
  7793   002D08  C009  F02F         	movff	?___aomod+2,??_dtoa+2
  7794   002D0C  C00A  F030         	movff	?___aomod+3,??_dtoa+3
  7795   002D10  C00B  F031         	movff	?___aomod+4,??_dtoa+4
  7796   002D14  C00C  F032         	movff	?___aomod+5,??_dtoa+5
  7797   002D18  C00D  F033         	movff	?___aomod+6,??_dtoa+6
  7798   002D1C  C00E  F034         	movff	?___aomod+7,??_dtoa+7
  7799   002D20  C02D  F019         	movff	??_dtoa,abs@a
  7800   002D24  C02E  F01A         	movff	??_dtoa+1,abs@a+1
  7801   002D28  EC88  F020         	call	_abs	;wreg free
  7802   002D2C  5019               	movf	?_abs^0,w,c
  7803   002D2E  0F30               	addlw	48
  7804   002D30  6EDF               	movwf	indf2,c
  7805   002D32                     
  7806                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  7807   002D32  0637               	decf	dtoa@p^0,f,c
  7808   002D34  A0D8               	btfss	status,0,c
  7809   002D36  0638               	decf	(dtoa@p+1)^0,f,c
  7810   002D38                     
  7811                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  7812   002D38  0639               	decf	dtoa@w^0,f,c
  7813   002D3A  A0D8               	btfss	status,0,c
  7814   002D3C  063A               	decf	(dtoa@w+1)^0,f,c
  7815   002D3E                     
  7816                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  7817   002D3E  C03B  F007         	movff	dtoa@n,___aodiv@dividend
  7818   002D42  C03C  F008         	movff	dtoa@n+1,___aodiv@dividend+1
  7819   002D46  C03D  F009         	movff	dtoa@n+2,___aodiv@dividend+2
  7820   002D4A  C03E  F00A         	movff	dtoa@n+3,___aodiv@dividend+3
  7821   002D4E  C03F  F00B         	movff	dtoa@n+4,___aodiv@dividend+4
  7822   002D52  C040  F00C         	movff	dtoa@n+5,___aodiv@dividend+5
  7823   002D56  C041  F00D         	movff	dtoa@n+6,___aodiv@dividend+6
  7824   002D5A  C042  F00E         	movff	dtoa@n+7,___aodiv@dividend+7
  7825   002D5E  0E0A               	movlw	10
  7826   002D60  6E0F               	movwf	___aodiv@divisor^0,c
  7827   002D62  0E00               	movlw	0
  7828   002D64  6E10               	movwf	(___aodiv@divisor+1)^0,c
  7829   002D66  0E00               	movlw	0
  7830   002D68  6E11               	movwf	(___aodiv@divisor+2)^0,c
  7831   002D6A  0E00               	movlw	0
  7832   002D6C  6E12               	movwf	(___aodiv@divisor+3)^0,c
  7833   002D6E  0E00               	movlw	0
  7834   002D70  6E13               	movwf	(___aodiv@divisor+4)^0,c
  7835   002D72  0E00               	movlw	0
  7836   002D74  6E14               	movwf	(___aodiv@divisor+5)^0,c
  7837   002D76  0E00               	movlw	0
  7838   002D78  6E15               	movwf	(___aodiv@divisor+6)^0,c
  7839   002D7A  0E00               	movlw	0
  7840   002D7C  6E16               	movwf	(___aodiv@divisor+7)^0,c
  7841   002D7E  EC18  F019         	call	___aodiv	;wreg free
  7842   002D82  C007  F03B         	movff	?___aodiv,dtoa@n
  7843   002D86  C008  F03C         	movff	?___aodiv+1,dtoa@n+1
  7844   002D8A  C009  F03D         	movff	?___aodiv+2,dtoa@n+2
  7845   002D8E  C00A  F03E         	movff	?___aodiv+3,dtoa@n+3
  7846   002D92  C00B  F03F         	movff	?___aodiv+4,dtoa@n+4
  7847   002D96  C00C  F040         	movff	?___aodiv+5,dtoa@n+5
  7848   002D9A  C00D  F041         	movff	?___aodiv+6,dtoa@n+6
  7849   002D9E  C00E  F042         	movff	?___aodiv+7,dtoa@n+7
  7850   002DA2                     l5673:
  7851                           
  7852                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  7853   002DA2  BE45               	btfsc	(dtoa@i+1)^0,7,c
  7854   002DA4  EFDC  F016         	goto	u7141
  7855   002DA8  5045               	movf	(dtoa@i+1)^0,w,c
  7856   002DAA  E108               	bnz	u7140
  7857   002DAC  0444               	decf	dtoa@i^0,w,c
  7858   002DAE  A0D8               	btfss	status,0,c
  7859   002DB0  EFDC  F016         	goto	u7141
  7860   002DB4  EFDE  F016         	goto	u7140
  7861   002DB8                     u7141:
  7862   002DB8  EFFA  F016         	goto	l5679
  7863   002DBC                     u7140:
  7864   002DBC  503B               	movf	dtoa@n^0,w,c
  7865   002DBE  103C               	iorwf	(dtoa@n+1)^0,w,c
  7866   002DC0  103D               	iorwf	(dtoa@n+2)^0,w,c
  7867   002DC2  103E               	iorwf	(dtoa@n+3)^0,w,c
  7868   002DC4  103F               	iorwf	(dtoa@n+4)^0,w,c
  7869   002DC6  1040               	iorwf	(dtoa@n+5)^0,w,c
  7870   002DC8  1041               	iorwf	(dtoa@n+6)^0,w,c
  7871   002DCA  1042               	iorwf	(dtoa@n+7)^0,w,c
  7872   002DCC  A4D8               	btfss	status,2,c
  7873   002DCE  EFEB  F016         	goto	u7151
  7874   002DD2  EFED  F016         	goto	u7150
  7875   002DD6                     u7151:
  7876   002DD6  EF55  F016         	goto	l5663
  7877   002DDA                     u7150:
  7878   002DDA  BE38               	btfsc	(dtoa@p+1)^0,7,c
  7879   002DDC  EFFA  F016         	goto	u7160
  7880   002DE0  5038               	movf	(dtoa@p+1)^0,w,c
  7881   002DE2  E106               	bnz	u7161
  7882   002DE4  0437               	decf	dtoa@p^0,w,c
  7883   002DE6  B0D8               	btfsc	status,0,c
  7884   002DE8  EFF8  F016         	goto	u7161
  7885   002DEC  EFFA  F016         	goto	u7160
  7886   002DF0                     u7161:
  7887   002DF0  EF55  F016         	goto	l5663
  7888   002DF4                     u7160:
  7889   002DF4                     l5679:
  7890                           
  7891                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  7892   002DF4  5043               	movf	dtoa@s^0,w,c
  7893   002DF6  B4D8               	btfsc	status,2,c
  7894   002DF8  EF00  F017         	goto	u7171
  7895   002DFC  EF02  F017         	goto	u7170
  7896   002E00                     u7171:
  7897   002E00  EF0D  F017         	goto	l5685
  7898   002E04                     u7170:
  7899   002E04                     
  7900                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  7901   002E04  0644               	decf	dtoa@i^0,f,c
  7902   002E06  A0D8               	btfss	status,0,c
  7903   002E08  0645               	decf	(dtoa@i+1)^0,f,c
  7904   002E0A                     
  7905                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  7906   002E0A  0EAD               	movlw	low _dbuf
  7907   002E0C  2444               	addwf	dtoa@i^0,w,c
  7908   002E0E  6ED9               	movwf	fsr2l,c
  7909   002E10  0E01               	movlw	high _dbuf
  7910   002E12  2045               	addwfc	(dtoa@i+1)^0,w,c
  7911   002E14  6EDA               	movwf	fsr2h,c
  7912   002E16  C043  FFDF         	movff	dtoa@s,indf2
  7913   002E1A                     l5685:
  7914                           
  7915                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  7916   002E1A  C023  F018         	movff	dtoa@fp,pad@fp
  7917   002E1E  C024  F019         	movff	dtoa@fp+1,pad@fp+1
  7918   002E22  0EAD               	movlw	low _dbuf
  7919   002E24  2444               	addwf	dtoa@i^0,w,c
  7920   002E26  6E1A               	movwf	pad@buf^0,c
  7921   002E28  0E01               	movlw	high _dbuf
  7922   002E2A  2045               	addwfc	(dtoa@i+1)^0,w,c
  7923   002E2C  6E1B               	movwf	(pad@buf+1)^0,c
  7924   002E2E  C039  F01C         	movff	dtoa@w,pad@p
  7925   002E32  C03A  F01D         	movff	dtoa@w+1,pad@p+1
  7926   002E36  ECB5  F01E         	call	_pad	;wreg free
  7927   002E3A  0012               	return		;funcret
  7928   002E3C                     __end_of_dtoa:
  7929                           	callstack 0
  7930                           
  7931 ;; *************** function _pad *****************
  7932 ;; Defined at:
  7933 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  7934 ;; Parameters:    Size  Location     Type
  7935 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  7936 ;;		 -> NULL(0), 
  7937 ;;  buf             2   25[COMRAM] PTR unsigned char 
  7938 ;;		 -> dbuf(80), 
  7939 ;;  p               2   27[COMRAM] int 
  7940 ;; Auto vars:     Size  Location     Type
  7941 ;;  w               2   32[COMRAM] int 
  7942 ;;  i               2   30[COMRAM] int 
  7943 ;; Return value:  Size  Location     Type
  7944 ;;                  1    wreg      void 
  7945 ;; Registers used:
  7946 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7947 ;; Tracked objects:
  7948 ;;		On entry : 0/0
  7949 ;;		On exit  : 0/0
  7950 ;;		Unchanged: 0/0
  7951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7952 ;;      Params:         6       0       0       0       0       0       0       0       0
  7953 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7954 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7955 ;;      Totals:        11       0       0       0       0       0       0       0       0
  7956 ;;Total ram usage:       11 bytes
  7957 ;; Hardware stack levels used: 1
  7958 ;; Hardware stack levels required when called: 4
  7959 ;; This function calls:
  7960 ;;		_fputc
  7961 ;;		_fputs
  7962 ;; This function is called by:
  7963 ;;		_dtoa
  7964 ;;		_efgtoa
  7965 ;; This function uses a non-reentrant model
  7966 ;;
  7967                           
  7968                           	psect	text23
  7969   003D6A                     __ptext23:
  7970                           	callstack 0
  7971   003D6A                     _pad:
  7972                           	callstack 21
  7973   003D6A                     
  7974                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  7975   003D6A  BE1D               	btfsc	(pad@p+1)^0,7,c
  7976   003D6C  EFBA  F01E         	goto	u6811
  7977   003D70  EFBC  F01E         	goto	u6810
  7978   003D74                     u6811:
  7979   003D74  EFC2  F01E         	goto	l5537
  7980   003D78                     u6810:
  7981   003D78  C01C  F021         	movff	pad@p,pad@w
  7982   003D7C  C01D  F022         	movff	pad@p+1,pad@w+1
  7983   003D80  EFC6  F01E         	goto	l967
  7984   003D84                     l5537:
  7985   003D84  0E00               	movlw	0
  7986   003D86  6E22               	movwf	(pad@w+1)^0,c
  7987   003D88  0E00               	movlw	0
  7988   003D8A  6E21               	movwf	pad@w^0,c
  7989   003D8C                     l967:
  7990                           
  7991                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  7992   003D8C  0E00               	movlw	0
  7993   003D8E  6E20               	movwf	(pad@i+1)^0,c
  7994   003D90  0E00               	movlw	0
  7995   003D92  6E1F               	movwf	pad@i^0,c
  7996                           
  7997                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  7998   003D94  EFD8  F01E         	goto	l5543
  7999   003D98                     l5539:
  8000                           
  8001                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  8002   003D98  0E00               	movlw	0
  8003   003D9A  6E09               	movwf	(fputc@c+1)^0,c
  8004   003D9C  0E20               	movlw	32
  8005   003D9E  6E08               	movwf	fputc@c^0,c
  8006   003DA0  C018  F00A         	movff	pad@fp,fputc@fp
  8007   003DA4  C019  F00B         	movff	pad@fp+1,fputc@fp+1
  8008   003DA8  ECE5  F01D         	call	_fputc	;wreg free
  8009   003DAC                     
  8010                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  8011   003DAC  4A1F               	infsnz	pad@i^0,f,c
  8012   003DAE  2A20               	incf	(pad@i+1)^0,f,c
  8013   003DB0                     l5543:
  8014                           
  8015                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  8016   003DB0  5021               	movf	pad@w^0,w,c
  8017   003DB2  5C1F               	subwf	pad@i^0,w,c
  8018   003DB4  5020               	movf	(pad@i+1)^0,w,c
  8019   003DB6  0A80               	xorlw	128
  8020   003DB8  6E1E               	movwf	??_pad^0,c
  8021   003DBA  5022               	movf	(pad@w+1)^0,w,c
  8022   003DBC  0A80               	xorlw	128
  8023   003DBE  581E               	subwfb	??_pad^0,w,c
  8024   003DC0  A0D8               	btfss	status,0,c
  8025   003DC2  EFE5  F01E         	goto	u6821
  8026   003DC6  EFE7  F01E         	goto	u6820
  8027   003DCA                     u6821:
  8028   003DCA  EFCC  F01E         	goto	l5539
  8029   003DCE                     u6820:
  8030   003DCE                     
  8031                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  8032   003DCE  C01A  F011         	movff	pad@buf,fputs@s
  8033   003DD2  C01B  F012         	movff	pad@buf+1,fputs@s+1
  8034   003DD6  C018  F013         	movff	pad@fp,fputs@fp
  8035   003DDA  C019  F014         	movff	pad@fp+1,fputs@fp+1
  8036   003DDE  EC46  F020         	call	_fputs	;wreg free
  8037   003DE2  0012               	return		;funcret
  8038   003DE4                     __end_of_pad:
  8039                           	callstack 0
  8040                           
  8041 ;; *************** function _fputs *****************
  8042 ;; Defined at:
  8043 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  8044 ;; Parameters:    Size  Location     Type
  8045 ;;  s               2   16[COMRAM] PTR const unsigned char 
  8046 ;;		 -> dbuf(80), 
  8047 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  8048 ;;		 -> NULL(0), 
  8049 ;; Auto vars:     Size  Location     Type
  8050 ;;  i               2   21[COMRAM] int 
  8051 ;;  c               1   20[COMRAM] unsigned char 
  8052 ;; Return value:  Size  Location     Type
  8053 ;;                  2   16[COMRAM] int 
  8054 ;; Registers used:
  8055 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8056 ;; Tracked objects:
  8057 ;;		On entry : 0/0
  8058 ;;		On exit  : 0/0
  8059 ;;		Unchanged: 0/0
  8060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8061 ;;      Params:         4       0       0       0       0       0       0       0       0
  8062 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8063 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8064 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8065 ;;Total ram usage:        7 bytes
  8066 ;; Hardware stack levels used: 1
  8067 ;; Hardware stack levels required when called: 3
  8068 ;; This function calls:
  8069 ;;		_fputc
  8070 ;; This function is called by:
  8071 ;;		_pad
  8072 ;; This function uses a non-reentrant model
  8073 ;;
  8074                           
  8075                           	psect	text24
  8076   00408C                     __ptext24:
  8077                           	callstack 0
  8078   00408C                     _fputs:
  8079                           	callstack 21
  8080   00408C  0E00               	movlw	0
  8081   00408E  6E17               	movwf	(fputs@i+1)^0,c
  8082   004090  0E00               	movlw	0
  8083   004092  6E16               	movwf	fputs@i^0,c
  8084   004094  EF57  F020         	goto	l5081
  8085   004098                     l5077:
  8086   004098  C015  F008         	movff	fputs@c,fputc@c
  8087   00409C  6A09               	clrf	(fputc@c+1)^0,c
  8088   00409E  C013  F00A         	movff	fputs@fp,fputc@fp
  8089   0040A2  C014  F00B         	movff	fputs@fp+1,fputc@fp+1
  8090   0040A6  ECE5  F01D         	call	_fputc	;wreg free
  8091   0040AA  4A16               	infsnz	fputs@i^0,f,c
  8092   0040AC  2A17               	incf	(fputs@i+1)^0,f,c
  8093   0040AE                     l5081:
  8094   0040AE  5016               	movf	fputs@i^0,w,c
  8095   0040B0  2411               	addwf	fputs@s^0,w,c
  8096   0040B2  6ED9               	movwf	fsr2l,c
  8097   0040B4  5017               	movf	(fputs@i+1)^0,w,c
  8098   0040B6  2012               	addwfc	(fputs@s+1)^0,w,c
  8099   0040B8  6EDA               	movwf	fsr2h,c
  8100   0040BA  50DF               	movf	indf2,w,c
  8101   0040BC  6E15               	movwf	fputs@c^0,c
  8102   0040BE  5015               	movf	fputs@c^0,w,c
  8103   0040C0  A4D8               	btfss	status,2,c
  8104   0040C2  EF65  F020         	goto	u6091
  8105   0040C6  EF67  F020         	goto	u6090
  8106   0040CA                     u6091:
  8107   0040CA  EF4C  F020         	goto	l5077
  8108   0040CE                     u6090:
  8109   0040CE  0012               	return		;funcret
  8110   0040D0                     __end_of_fputs:
  8111                           	callstack 0
  8112                           
  8113 ;; *************** function _fputc *****************
  8114 ;; Defined at:
  8115 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  8116 ;; Parameters:    Size  Location     Type
  8117 ;;  c               2    7[COMRAM] int 
  8118 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  8119 ;;		 -> NULL(0), 
  8120 ;; Auto vars:     Size  Location     Type
  8121 ;;		None
  8122 ;; Return value:  Size  Location     Type
  8123 ;;                  2    7[COMRAM] int 
  8124 ;; Registers used:
  8125 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8126 ;; Tracked objects:
  8127 ;;		On entry : 0/0
  8128 ;;		On exit  : 0/0
  8129 ;;		Unchanged: 0/0
  8130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8131 ;;      Params:         4       0       0       0       0       0       0       0       0
  8132 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8133 ;;      Temps:          5       0       0       0       0       0       0       0       0
  8134 ;;      Totals:         9       0       0       0       0       0       0       0       0
  8135 ;;Total ram usage:        9 bytes
  8136 ;; Hardware stack levels used: 1
  8137 ;; Hardware stack levels required when called: 2
  8138 ;; This function calls:
  8139 ;;		_putch
  8140 ;; This function is called by:
  8141 ;;		_pad
  8142 ;;		_vfpfcnvrt
  8143 ;;		_fputs
  8144 ;; This function uses a non-reentrant model
  8145 ;;
  8146                           
  8147                           	psect	text25
  8148   003BCA                     __ptext25:
  8149                           	callstack 0
  8150   003BCA                     _fputc:
  8151                           	callstack 24
  8152   003BCA  500A               	movf	fputc@fp^0,w,c
  8153   003BCC  100B               	iorwf	(fputc@fp+1)^0,w,c
  8154   003BCE  B4D8               	btfsc	status,2,c
  8155   003BD0  EFEC  F01D         	goto	u5661
  8156   003BD4  EFEE  F01D         	goto	u5660
  8157   003BD8                     u5661:
  8158   003BD8  EFF7  F01D         	goto	l4863
  8159   003BDC                     u5660:
  8160   003BDC  500A               	movf	fputc@fp^0,w,c
  8161   003BDE  100B               	iorwf	(fputc@fp+1)^0,w,c
  8162   003BE0  A4D8               	btfss	status,2,c
  8163   003BE2  EFF5  F01D         	goto	u5671
  8164   003BE6  EFF7  F01D         	goto	u5670
  8165   003BEA                     u5671:
  8166   003BEA  EFFC  F01D         	goto	l4865
  8167   003BEE                     u5670:
  8168   003BEE                     l4863:
  8169   003BEE  5008               	movf	fputc@c^0,w,c
  8170   003BF0  EC11  F021         	call	_putch
  8171   003BF4  EF2F  F01E         	goto	l1185
  8172   003BF8                     l4865:
  8173   003BF8  EE20 F009          	lfsr	2,9
  8174   003BFC  500A               	movf	fputc@fp^0,w,c
  8175   003BFE  26D9               	addwf	fsr2l,f,c
  8176   003C00  500B               	movf	(fputc@fp+1)^0,w,c
  8177   003C02  22DA               	addwfc	fsr2h,f,c
  8178   003C04  50DE               	movf	postinc2,w,c
  8179   003C06  10DE               	iorwf	postinc2,w,c
  8180   003C08  B4D8               	btfsc	status,2,c
  8181   003C0A  EF09  F01E         	goto	u5681
  8182   003C0E  EF0B  F01E         	goto	u5680
  8183   003C12                     u5681:
  8184   003C12  EF26  F01E         	goto	l4869
  8185   003C16                     u5680:
  8186   003C16  EE20 F009          	lfsr	2,9
  8187   003C1A  500A               	movf	fputc@fp^0,w,c
  8188   003C1C  26D9               	addwf	fsr2l,f,c
  8189   003C1E  500B               	movf	(fputc@fp+1)^0,w,c
  8190   003C20  22DA               	addwfc	fsr2h,f,c
  8191   003C22  EE10 F003          	lfsr	1,3
  8192   003C26  500A               	movf	fputc@fp^0,w,c
  8193   003C28  26E1               	addwf	fsr1l,f,c
  8194   003C2A  500B               	movf	(fputc@fp+1)^0,w,c
  8195   003C2C  22E2               	addwfc	fsr1h,f,c
  8196   003C2E  50DE               	movf	postinc2,w,c
  8197   003C30  5CE6               	subwf	postinc1,w,c
  8198   003C32  50E6               	movf	postinc1,w,c
  8199   003C34  0A80               	xorlw	128
  8200   003C36  6E10               	movwf	(??_fputc+4)^0,c
  8201   003C38  50DE               	movf	postinc2,w,c
  8202   003C3A  0A80               	xorlw	128
  8203   003C3C  5810               	subwfb	(??_fputc+4)^0,w,c
  8204   003C3E  B0D8               	btfsc	status,0,c
  8205   003C40  EF24  F01E         	goto	u5691
  8206   003C44  EF26  F01E         	goto	u5690
  8207   003C48                     u5691:
  8208   003C48  EF2F  F01E         	goto	l1185
  8209   003C4C                     u5690:
  8210   003C4C                     l4869:
  8211   003C4C  EE20 F003          	lfsr	2,3
  8212   003C50  500A               	movf	fputc@fp^0,w,c
  8213   003C52  26D9               	addwf	fsr2l,f,c
  8214   003C54  500B               	movf	(fputc@fp+1)^0,w,c
  8215   003C56  22DA               	addwfc	fsr2h,f,c
  8216   003C58  2ADE               	incf	postinc2,f,c
  8217   003C5A  0E00               	movlw	0
  8218   003C5C  22DD               	addwfc	postdec2,f,c
  8219   003C5E                     l1185:
  8220   003C5E  0012               	return		;funcret
  8221   003C60                     __end_of_fputc:
  8222                           	callstack 0
  8223                           
  8224 ;; *************** function _putch *****************
  8225 ;; Defined at:
  8226 ;;		line 280 in file "main.c"
  8227 ;; Parameters:    Size  Location     Type
  8228 ;;  data            1    wreg     unsigned char 
  8229 ;; Auto vars:     Size  Location     Type
  8230 ;;  data            1    6[COMRAM] unsigned char 
  8231 ;; Return value:  Size  Location     Type
  8232 ;;                  1    wreg      void 
  8233 ;; Registers used:
  8234 ;;		wreg
  8235 ;; Tracked objects:
  8236 ;;		On entry : 0/0
  8237 ;;		On exit  : 0/0
  8238 ;;		Unchanged: 0/0
  8239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8240 ;;      Params:         0       0       0       0       0       0       0       0       0
  8241 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8242 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8243 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8244 ;;Total ram usage:        1 bytes
  8245 ;; Hardware stack levels used: 1
  8246 ;; Hardware stack levels required when called: 1
  8247 ;; This function calls:
  8248 ;;		Nothing
  8249 ;; This function is called by:
  8250 ;;		_fputc
  8251 ;; This function uses a non-reentrant model
  8252 ;;
  8253                           
  8254                           	psect	text26
  8255   004222                     __ptext26:
  8256                           	callstack 0
  8257   004222                     _putch:
  8258                           	callstack 24
  8259                           
  8260                           ;incstack = 0
  8261                           ;putch@data stored from wreg
  8262   004222  6E07               	movwf	putch@data^0,c
  8263   004224                     l131:
  8264                           
  8265                           ;main.c: 281:     while( ! TXIF)
  8266   004224  A89E               	btfss	3998,4,c	;volatile
  8267   004226  EF17  F021         	goto	u5651
  8268   00422A  EF19  F021         	goto	u5650
  8269   00422E                     u5651:
  8270   00422E  EF12  F021         	goto	l131
  8271   004232                     u5650:
  8272   004232                     
  8273                           ;main.c: 283:     TXREG = data;
  8274   004232  C007  FFAD         	movff	putch@data,4013	;volatile
  8275   004236  0012               	return		;funcret
  8276   004238                     __end_of_putch:
  8277                           	callstack 0
  8278                           
  8279 ;; *************** function _abs *****************
  8280 ;; Defined at:
  8281 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  8282 ;; Parameters:    Size  Location     Type
  8283 ;;  a               2   24[COMRAM] int 
  8284 ;; Auto vars:     Size  Location     Type
  8285 ;;		None
  8286 ;; Return value:  Size  Location     Type
  8287 ;;                  2   24[COMRAM] int 
  8288 ;; Registers used:
  8289 ;;		wreg, status,2, status,0
  8290 ;; Tracked objects:
  8291 ;;		On entry : 0/0
  8292 ;;		On exit  : 0/0
  8293 ;;		Unchanged: 0/0
  8294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8295 ;;      Params:         2       0       0       0       0       0       0       0       0
  8296 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8297 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8298 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8299 ;;Total ram usage:        4 bytes
  8300 ;; Hardware stack levels used: 1
  8301 ;; Hardware stack levels required when called: 1
  8302 ;; This function calls:
  8303 ;;		Nothing
  8304 ;; This function is called by:
  8305 ;;		_dtoa
  8306 ;; This function uses a non-reentrant model
  8307 ;;
  8308                           
  8309                           	psect	text27
  8310   004110                     __ptext27:
  8311                           	callstack 0
  8312   004110                     _abs:
  8313                           	callstack 24
  8314   004110  BE1A               	btfsc	(abs@a+1)^0,7,c
  8315   004112  EF95  F020         	goto	u6830
  8316   004116  501A               	movf	(abs@a+1)^0,w,c
  8317   004118  E106               	bnz	u6831
  8318   00411A  0419               	decf	abs@a^0,w,c
  8319   00411C  B0D8               	btfsc	status,0,c
  8320   00411E  EF93  F020         	goto	u6831
  8321   004122  EF95  F020         	goto	u6830
  8322   004126                     u6831:
  8323   004126  EFA3  F020         	goto	l1105
  8324   00412A                     u6830:
  8325   00412A  C019  F01B         	movff	abs@a,??_abs
  8326   00412E  C01A  F01C         	movff	abs@a+1,??_abs+1
  8327   004132  1E1B               	comf	??_abs^0,f,c
  8328   004134  1E1C               	comf	(??_abs+1)^0,f,c
  8329   004136  4A1B               	infsnz	??_abs^0,f,c
  8330   004138  2A1C               	incf	(??_abs+1)^0,f,c
  8331   00413A  C01B  F019         	movff	??_abs,?_abs
  8332   00413E  C01C  F01A         	movff	??_abs+1,?_abs+1
  8333   004142  EFA7  F020         	goto	l1108
  8334   004146                     l1105:
  8335   004146  C019  F019         	movff	abs@a,?_abs
  8336   00414A  C01A  F01A         	movff	abs@a+1,?_abs+1
  8337   00414E                     l1108:
  8338   00414E  0012               	return		;funcret
  8339   004150                     __end_of_abs:
  8340                           	callstack 0
  8341                           
  8342 ;; *************** function ___aomod *****************
  8343 ;; Defined at:
  8344 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  8345 ;; Parameters:    Size  Location     Type
  8346 ;;  dividend        8    6[COMRAM] long long 
  8347 ;;  divisor         8   14[COMRAM] long long 
  8348 ;; Auto vars:     Size  Location     Type
  8349 ;;  sign            1   23[COMRAM] unsigned char 
  8350 ;;  counter         1   22[COMRAM] unsigned char 
  8351 ;; Return value:  Size  Location     Type
  8352 ;;                  8    6[COMRAM] long long 
  8353 ;; Registers used:
  8354 ;;		wreg, status,2, status,0
  8355 ;; Tracked objects:
  8356 ;;		On entry : 0/0
  8357 ;;		On exit  : 0/0
  8358 ;;		Unchanged: 0/0
  8359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8360 ;;      Params:        16       0       0       0       0       0       0       0       0
  8361 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8362 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8363 ;;      Totals:        18       0       0       0       0       0       0       0       0
  8364 ;;Total ram usage:       18 bytes
  8365 ;; Hardware stack levels used: 1
  8366 ;; Hardware stack levels required when called: 1
  8367 ;; This function calls:
  8368 ;;		Nothing
  8369 ;; This function is called by:
  8370 ;;		_dtoa
  8371 ;; This function uses a non-reentrant model
  8372 ;;
  8373                           
  8374                           	psect	text28
  8375   0033B8                     __ptext28:
  8376                           	callstack 0
  8377   0033B8                     ___aomod:
  8378                           	callstack 24
  8379   0033B8  0E00               	movlw	0
  8380   0033BA  6E18               	movwf	___aomod@sign^0,c
  8381   0033BC  BE0E               	btfsc	(___aomod@dividend+7)^0,7,c
  8382   0033BE  EFE5  F019         	goto	u6170
  8383   0033C2  EFE3  F019         	goto	u6171
  8384   0033C6                     u6171:
  8385   0033C6  EFF7  F019         	goto	l5141
  8386   0033CA                     u6170:
  8387   0033CA  1E0E               	comf	(___aomod@dividend+7)^0,f,c
  8388   0033CC  1E0D               	comf	(___aomod@dividend+6)^0,f,c
  8389   0033CE  1E0C               	comf	(___aomod@dividend+5)^0,f,c
  8390   0033D0  1E0B               	comf	(___aomod@dividend+4)^0,f,c
  8391   0033D2  1E0A               	comf	(___aomod@dividend+3)^0,f,c
  8392   0033D4  1E09               	comf	(___aomod@dividend+2)^0,f,c
  8393   0033D6  1E08               	comf	(___aomod@dividend+1)^0,f,c
  8394   0033D8  6C07               	negf	___aomod@dividend^0,c
  8395   0033DA  0E00               	movlw	0
  8396   0033DC  2208               	addwfc	(___aomod@dividend+1)^0,f,c
  8397   0033DE  2209               	addwfc	(___aomod@dividend+2)^0,f,c
  8398   0033E0  220A               	addwfc	(___aomod@dividend+3)^0,f,c
  8399   0033E2  220B               	addwfc	(___aomod@dividend+4)^0,f,c
  8400   0033E4  220C               	addwfc	(___aomod@dividend+5)^0,f,c
  8401   0033E6  220D               	addwfc	(___aomod@dividend+6)^0,f,c
  8402   0033E8  220E               	addwfc	(___aomod@dividend+7)^0,f,c
  8403   0033EA  0E01               	movlw	1
  8404   0033EC  6E18               	movwf	___aomod@sign^0,c
  8405   0033EE                     l5141:
  8406   0033EE  BE16               	btfsc	(___aomod@divisor+7)^0,7,c
  8407   0033F0  EFFE  F019         	goto	u6180
  8408   0033F4  EFFC  F019         	goto	u6181
  8409   0033F8                     u6181:
  8410   0033F8  EF0E  F01A         	goto	l5145
  8411   0033FC                     u6180:
  8412   0033FC  1E16               	comf	(___aomod@divisor+7)^0,f,c
  8413   0033FE  1E15               	comf	(___aomod@divisor+6)^0,f,c
  8414   003400  1E14               	comf	(___aomod@divisor+5)^0,f,c
  8415   003402  1E13               	comf	(___aomod@divisor+4)^0,f,c
  8416   003404  1E12               	comf	(___aomod@divisor+3)^0,f,c
  8417   003406  1E11               	comf	(___aomod@divisor+2)^0,f,c
  8418   003408  1E10               	comf	(___aomod@divisor+1)^0,f,c
  8419   00340A  6C0F               	negf	___aomod@divisor^0,c
  8420   00340C  0E00               	movlw	0
  8421   00340E  2210               	addwfc	(___aomod@divisor+1)^0,f,c
  8422   003410  2211               	addwfc	(___aomod@divisor+2)^0,f,c
  8423   003412  2212               	addwfc	(___aomod@divisor+3)^0,f,c
  8424   003414  2213               	addwfc	(___aomod@divisor+4)^0,f,c
  8425   003416  2214               	addwfc	(___aomod@divisor+5)^0,f,c
  8426   003418  2215               	addwfc	(___aomod@divisor+6)^0,f,c
  8427   00341A  2216               	addwfc	(___aomod@divisor+7)^0,f,c
  8428   00341C                     l5145:
  8429   00341C  500F               	movf	___aomod@divisor^0,w,c
  8430   00341E  1010               	iorwf	(___aomod@divisor+1)^0,w,c
  8431   003420  1011               	iorwf	(___aomod@divisor+2)^0,w,c
  8432   003422  1012               	iorwf	(___aomod@divisor+3)^0,w,c
  8433   003424  1013               	iorwf	(___aomod@divisor+4)^0,w,c
  8434   003426  1014               	iorwf	(___aomod@divisor+5)^0,w,c
  8435   003428  1015               	iorwf	(___aomod@divisor+6)^0,w,c
  8436   00342A  1016               	iorwf	(___aomod@divisor+7)^0,w,c
  8437   00342C  B4D8               	btfsc	status,2,c
  8438   00342E  EF1B  F01A         	goto	u6191
  8439   003432  EF1D  F01A         	goto	u6190
  8440   003436                     u6191:
  8441   003436  EF65  F01A         	goto	l5161
  8442   00343A                     u6190:
  8443   00343A  0E01               	movlw	1
  8444   00343C  6E17               	movwf	___aomod@counter^0,c
  8445   00343E  EF2B  F01A         	goto	l5151
  8446   003442                     l5149:
  8447   003442  90D8               	bcf	status,0,c
  8448   003444  360F               	rlcf	___aomod@divisor^0,f,c
  8449   003446  3610               	rlcf	(___aomod@divisor+1)^0,f,c
  8450   003448  3611               	rlcf	(___aomod@divisor+2)^0,f,c
  8451   00344A  3612               	rlcf	(___aomod@divisor+3)^0,f,c
  8452   00344C  3613               	rlcf	(___aomod@divisor+4)^0,f,c
  8453   00344E  3614               	rlcf	(___aomod@divisor+5)^0,f,c
  8454   003450  3615               	rlcf	(___aomod@divisor+6)^0,f,c
  8455   003452  3616               	rlcf	(___aomod@divisor+7)^0,f,c
  8456   003454  2A17               	incf	___aomod@counter^0,f,c
  8457   003456                     l5151:
  8458   003456  AE16               	btfss	(___aomod@divisor+7)^0,7,c
  8459   003458  EF30  F01A         	goto	u6201
  8460   00345C  EF32  F01A         	goto	u6200
  8461   003460                     u6201:
  8462   003460  EF21  F01A         	goto	l5149
  8463   003464                     u6200:
  8464   003464                     l5153:
  8465   003464  500F               	movf	___aomod@divisor^0,w,c
  8466   003466  5C07               	subwf	___aomod@dividend^0,w,c
  8467   003468  5010               	movf	(___aomod@divisor+1)^0,w,c
  8468   00346A  5808               	subwfb	(___aomod@dividend+1)^0,w,c
  8469   00346C  5011               	movf	(___aomod@divisor+2)^0,w,c
  8470   00346E  5809               	subwfb	(___aomod@dividend+2)^0,w,c
  8471   003470  5012               	movf	(___aomod@divisor+3)^0,w,c
  8472   003472  580A               	subwfb	(___aomod@dividend+3)^0,w,c
  8473   003474  5013               	movf	(___aomod@divisor+4)^0,w,c
  8474   003476  580B               	subwfb	(___aomod@dividend+4)^0,w,c
  8475   003478  5014               	movf	(___aomod@divisor+5)^0,w,c
  8476   00347A  580C               	subwfb	(___aomod@dividend+5)^0,w,c
  8477   00347C  5015               	movf	(___aomod@divisor+6)^0,w,c
  8478   00347E  580D               	subwfb	(___aomod@dividend+6)^0,w,c
  8479   003480  5016               	movf	(___aomod@divisor+7)^0,w,c
  8480   003482  580E               	subwfb	(___aomod@dividend+7)^0,w,c
  8481   003484  A0D8               	btfss	status,0,c
  8482   003486  EF47  F01A         	goto	u6211
  8483   00348A  EF49  F01A         	goto	u6210
  8484   00348E                     u6211:
  8485   00348E  EF59  F01A         	goto	l5157
  8486   003492                     u6210:
  8487   003492  500F               	movf	___aomod@divisor^0,w,c
  8488   003494  5E07               	subwf	___aomod@dividend^0,f,c
  8489   003496  5010               	movf	(___aomod@divisor+1)^0,w,c
  8490   003498  5A08               	subwfb	(___aomod@dividend+1)^0,f,c
  8491   00349A  5011               	movf	(___aomod@divisor+2)^0,w,c
  8492   00349C  5A09               	subwfb	(___aomod@dividend+2)^0,f,c
  8493   00349E  5012               	movf	(___aomod@divisor+3)^0,w,c
  8494   0034A0  5A0A               	subwfb	(___aomod@dividend+3)^0,f,c
  8495   0034A2  5013               	movf	(___aomod@divisor+4)^0,w,c
  8496   0034A4  5A0B               	subwfb	(___aomod@dividend+4)^0,f,c
  8497   0034A6  5014               	movf	(___aomod@divisor+5)^0,w,c
  8498   0034A8  5A0C               	subwfb	(___aomod@dividend+5)^0,f,c
  8499   0034AA  5015               	movf	(___aomod@divisor+6)^0,w,c
  8500   0034AC  5A0D               	subwfb	(___aomod@dividend+6)^0,f,c
  8501   0034AE  5016               	movf	(___aomod@divisor+7)^0,w,c
  8502   0034B0  5A0E               	subwfb	(___aomod@dividend+7)^0,f,c
  8503   0034B2                     l5157:
  8504   0034B2  90D8               	bcf	status,0,c
  8505   0034B4  3216               	rrcf	(___aomod@divisor+7)^0,f,c
  8506   0034B6  3215               	rrcf	(___aomod@divisor+6)^0,f,c
  8507   0034B8  3214               	rrcf	(___aomod@divisor+5)^0,f,c
  8508   0034BA  3213               	rrcf	(___aomod@divisor+4)^0,f,c
  8509   0034BC  3212               	rrcf	(___aomod@divisor+3)^0,f,c
  8510   0034BE  3211               	rrcf	(___aomod@divisor+2)^0,f,c
  8511   0034C0  3210               	rrcf	(___aomod@divisor+1)^0,f,c
  8512   0034C2  320F               	rrcf	___aomod@divisor^0,f,c
  8513   0034C4  2E17               	decfsz	___aomod@counter^0,f,c
  8514   0034C6  EF32  F01A         	goto	l5153
  8515   0034CA                     l5161:
  8516   0034CA  5018               	movf	___aomod@sign^0,w,c
  8517   0034CC  B4D8               	btfsc	status,2,c
  8518   0034CE  EF6B  F01A         	goto	u6221
  8519   0034D2  EF6D  F01A         	goto	u6220
  8520   0034D6                     u6221:
  8521   0034D6  EF7D  F01A         	goto	l5165
  8522   0034DA                     u6220:
  8523   0034DA  1E0E               	comf	(___aomod@dividend+7)^0,f,c
  8524   0034DC  1E0D               	comf	(___aomod@dividend+6)^0,f,c
  8525   0034DE  1E0C               	comf	(___aomod@dividend+5)^0,f,c
  8526   0034E0  1E0B               	comf	(___aomod@dividend+4)^0,f,c
  8527   0034E2  1E0A               	comf	(___aomod@dividend+3)^0,f,c
  8528   0034E4  1E09               	comf	(___aomod@dividend+2)^0,f,c
  8529   0034E6  1E08               	comf	(___aomod@dividend+1)^0,f,c
  8530   0034E8  6C07               	negf	___aomod@dividend^0,c
  8531   0034EA  0E00               	movlw	0
  8532   0034EC  2208               	addwfc	(___aomod@dividend+1)^0,f,c
  8533   0034EE  2209               	addwfc	(___aomod@dividend+2)^0,f,c
  8534   0034F0  220A               	addwfc	(___aomod@dividend+3)^0,f,c
  8535   0034F2  220B               	addwfc	(___aomod@dividend+4)^0,f,c
  8536   0034F4  220C               	addwfc	(___aomod@dividend+5)^0,f,c
  8537   0034F6  220D               	addwfc	(___aomod@dividend+6)^0,f,c
  8538   0034F8  220E               	addwfc	(___aomod@dividend+7)^0,f,c
  8539   0034FA                     l5165:
  8540   0034FA  C007  F007         	movff	___aomod@dividend,?___aomod
  8541   0034FE  C008  F008         	movff	___aomod@dividend+1,?___aomod+1
  8542   003502  C009  F009         	movff	___aomod@dividend+2,?___aomod+2
  8543   003506  C00A  F00A         	movff	___aomod@dividend+3,?___aomod+3
  8544   00350A  C00B  F00B         	movff	___aomod@dividend+4,?___aomod+4
  8545   00350E  C00C  F00C         	movff	___aomod@dividend+5,?___aomod+5
  8546   003512  C00D  F00D         	movff	___aomod@dividend+6,?___aomod+6
  8547   003516  C00E  F00E         	movff	___aomod@dividend+7,?___aomod+7
  8548   00351A  0012               	return		;funcret
  8549   00351C                     __end_of___aomod:
  8550                           	callstack 0
  8551                           
  8552 ;; *************** function ___aodiv *****************
  8553 ;; Defined at:
  8554 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  8555 ;; Parameters:    Size  Location     Type
  8556 ;;  dividend        8    6[COMRAM] long long 
  8557 ;;  divisor         8   14[COMRAM] long long 
  8558 ;; Auto vars:     Size  Location     Type
  8559 ;;  quotient        8   24[COMRAM] long long 
  8560 ;;  sign            1   23[COMRAM] unsigned char 
  8561 ;;  counter         1   22[COMRAM] unsigned char 
  8562 ;; Return value:  Size  Location     Type
  8563 ;;                  8    6[COMRAM] long long 
  8564 ;; Registers used:
  8565 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8566 ;; Tracked objects:
  8567 ;;		On entry : 0/0
  8568 ;;		On exit  : 0/0
  8569 ;;		Unchanged: 0/0
  8570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8571 ;;      Params:        16       0       0       0       0       0       0       0       0
  8572 ;;      Locals:        10       0       0       0       0       0       0       0       0
  8573 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8574 ;;      Totals:        26       0       0       0       0       0       0       0       0
  8575 ;;Total ram usage:       26 bytes
  8576 ;; Hardware stack levels used: 1
  8577 ;; Hardware stack levels required when called: 1
  8578 ;; This function calls:
  8579 ;;		Nothing
  8580 ;; This function is called by:
  8581 ;;		_dtoa
  8582 ;; This function uses a non-reentrant model
  8583 ;;
  8584                           
  8585                           	psect	text29
  8586   003230                     __ptext29:
  8587                           	callstack 0
  8588   003230                     ___aodiv:
  8589                           	callstack 24
  8590   003230  0E00               	movlw	0
  8591   003232  6E18               	movwf	___aodiv@sign^0,c
  8592   003234  BE16               	btfsc	(___aodiv@divisor+7)^0,7,c
  8593   003236  EF21  F019         	goto	u6100
  8594   00323A  EF1F  F019         	goto	u6101
  8595   00323E                     u6101:
  8596   00323E  EF33  F019         	goto	l5097
  8597   003242                     u6100:
  8598   003242  1E16               	comf	(___aodiv@divisor+7)^0,f,c
  8599   003244  1E15               	comf	(___aodiv@divisor+6)^0,f,c
  8600   003246  1E14               	comf	(___aodiv@divisor+5)^0,f,c
  8601   003248  1E13               	comf	(___aodiv@divisor+4)^0,f,c
  8602   00324A  1E12               	comf	(___aodiv@divisor+3)^0,f,c
  8603   00324C  1E11               	comf	(___aodiv@divisor+2)^0,f,c
  8604   00324E  1E10               	comf	(___aodiv@divisor+1)^0,f,c
  8605   003250  6C0F               	negf	___aodiv@divisor^0,c
  8606   003252  0E00               	movlw	0
  8607   003254  2210               	addwfc	(___aodiv@divisor+1)^0,f,c
  8608   003256  2211               	addwfc	(___aodiv@divisor+2)^0,f,c
  8609   003258  2212               	addwfc	(___aodiv@divisor+3)^0,f,c
  8610   00325A  2213               	addwfc	(___aodiv@divisor+4)^0,f,c
  8611   00325C  2214               	addwfc	(___aodiv@divisor+5)^0,f,c
  8612   00325E  2215               	addwfc	(___aodiv@divisor+6)^0,f,c
  8613   003260  2216               	addwfc	(___aodiv@divisor+7)^0,f,c
  8614   003262  0E01               	movlw	1
  8615   003264  6E18               	movwf	___aodiv@sign^0,c
  8616   003266                     l5097:
  8617   003266  BE0E               	btfsc	(___aodiv@dividend+7)^0,7,c
  8618   003268  EF3A  F019         	goto	u6110
  8619   00326C  EF38  F019         	goto	u6111
  8620   003270                     u6111:
  8621   003270  EF4C  F019         	goto	l5103
  8622   003274                     u6110:
  8623   003274  1E0E               	comf	(___aodiv@dividend+7)^0,f,c
  8624   003276  1E0D               	comf	(___aodiv@dividend+6)^0,f,c
  8625   003278  1E0C               	comf	(___aodiv@dividend+5)^0,f,c
  8626   00327A  1E0B               	comf	(___aodiv@dividend+4)^0,f,c
  8627   00327C  1E0A               	comf	(___aodiv@dividend+3)^0,f,c
  8628   00327E  1E09               	comf	(___aodiv@dividend+2)^0,f,c
  8629   003280  1E08               	comf	(___aodiv@dividend+1)^0,f,c
  8630   003282  6C07               	negf	___aodiv@dividend^0,c
  8631   003284  0E00               	movlw	0
  8632   003286  2208               	addwfc	(___aodiv@dividend+1)^0,f,c
  8633   003288  2209               	addwfc	(___aodiv@dividend+2)^0,f,c
  8634   00328A  220A               	addwfc	(___aodiv@dividend+3)^0,f,c
  8635   00328C  220B               	addwfc	(___aodiv@dividend+4)^0,f,c
  8636   00328E  220C               	addwfc	(___aodiv@dividend+5)^0,f,c
  8637   003290  220D               	addwfc	(___aodiv@dividend+6)^0,f,c
  8638   003292  220E               	addwfc	(___aodiv@dividend+7)^0,f,c
  8639   003294  0E01               	movlw	1
  8640   003296  1A18               	xorwf	___aodiv@sign^0,f,c
  8641   003298                     l5103:
  8642   003298  EE20  F019         	lfsr	2,___aodiv@quotient
  8643   00329C  0E07               	movlw	7
  8644   00329E                     u6121:
  8645   00329E  6ADE               	clrf	postinc2,c
  8646   0032A0  06E8               	decf	wreg,f,c
  8647   0032A2  E2FD               	bc	u6121
  8648   0032A4  500F               	movf	___aodiv@divisor^0,w,c
  8649   0032A6  1010               	iorwf	(___aodiv@divisor+1)^0,w,c
  8650   0032A8  1011               	iorwf	(___aodiv@divisor+2)^0,w,c
  8651   0032AA  1012               	iorwf	(___aodiv@divisor+3)^0,w,c
  8652   0032AC  1013               	iorwf	(___aodiv@divisor+4)^0,w,c
  8653   0032AE  1014               	iorwf	(___aodiv@divisor+5)^0,w,c
  8654   0032B0  1015               	iorwf	(___aodiv@divisor+6)^0,w,c
  8655   0032B2  1016               	iorwf	(___aodiv@divisor+7)^0,w,c
  8656   0032B4  B4D8               	btfsc	status,2,c
  8657   0032B6  EF5F  F019         	goto	u6131
  8658   0032BA  EF61  F019         	goto	u6130
  8659   0032BE                     u6131:
  8660   0032BE  EFB3  F019         	goto	l5125
  8661   0032C2                     u6130:
  8662   0032C2  0E01               	movlw	1
  8663   0032C4  6E17               	movwf	___aodiv@counter^0,c
  8664   0032C6  EF6F  F019         	goto	l5111
  8665   0032CA                     l5109:
  8666   0032CA  90D8               	bcf	status,0,c
  8667   0032CC  360F               	rlcf	___aodiv@divisor^0,f,c
  8668   0032CE  3610               	rlcf	(___aodiv@divisor+1)^0,f,c
  8669   0032D0  3611               	rlcf	(___aodiv@divisor+2)^0,f,c
  8670   0032D2  3612               	rlcf	(___aodiv@divisor+3)^0,f,c
  8671   0032D4  3613               	rlcf	(___aodiv@divisor+4)^0,f,c
  8672   0032D6  3614               	rlcf	(___aodiv@divisor+5)^0,f,c
  8673   0032D8  3615               	rlcf	(___aodiv@divisor+6)^0,f,c
  8674   0032DA  3616               	rlcf	(___aodiv@divisor+7)^0,f,c
  8675   0032DC  2A17               	incf	___aodiv@counter^0,f,c
  8676   0032DE                     l5111:
  8677   0032DE  AE16               	btfss	(___aodiv@divisor+7)^0,7,c
  8678   0032E0  EF74  F019         	goto	u6141
  8679   0032E4  EF76  F019         	goto	u6140
  8680   0032E8                     u6141:
  8681   0032E8  EF65  F019         	goto	l5109
  8682   0032EC                     u6140:
  8683   0032EC                     l5113:
  8684   0032EC  90D8               	bcf	status,0,c
  8685   0032EE  3619               	rlcf	___aodiv@quotient^0,f,c
  8686   0032F0  361A               	rlcf	(___aodiv@quotient+1)^0,f,c
  8687   0032F2  361B               	rlcf	(___aodiv@quotient+2)^0,f,c
  8688   0032F4  361C               	rlcf	(___aodiv@quotient+3)^0,f,c
  8689   0032F6  361D               	rlcf	(___aodiv@quotient+4)^0,f,c
  8690   0032F8  361E               	rlcf	(___aodiv@quotient+5)^0,f,c
  8691   0032FA  361F               	rlcf	(___aodiv@quotient+6)^0,f,c
  8692   0032FC  3620               	rlcf	(___aodiv@quotient+7)^0,f,c
  8693   0032FE  500F               	movf	___aodiv@divisor^0,w,c
  8694   003300  5C07               	subwf	___aodiv@dividend^0,w,c
  8695   003302  5010               	movf	(___aodiv@divisor+1)^0,w,c
  8696   003304  5808               	subwfb	(___aodiv@dividend+1)^0,w,c
  8697   003306  5011               	movf	(___aodiv@divisor+2)^0,w,c
  8698   003308  5809               	subwfb	(___aodiv@dividend+2)^0,w,c
  8699   00330A  5012               	movf	(___aodiv@divisor+3)^0,w,c
  8700   00330C  580A               	subwfb	(___aodiv@dividend+3)^0,w,c
  8701   00330E  5013               	movf	(___aodiv@divisor+4)^0,w,c
  8702   003310  580B               	subwfb	(___aodiv@dividend+4)^0,w,c
  8703   003312  5014               	movf	(___aodiv@divisor+5)^0,w,c
  8704   003314  580C               	subwfb	(___aodiv@dividend+5)^0,w,c
  8705   003316  5015               	movf	(___aodiv@divisor+6)^0,w,c
  8706   003318  580D               	subwfb	(___aodiv@dividend+6)^0,w,c
  8707   00331A  5016               	movf	(___aodiv@divisor+7)^0,w,c
  8708   00331C  580E               	subwfb	(___aodiv@dividend+7)^0,w,c
  8709   00331E  A0D8               	btfss	status,0,c
  8710   003320  EF94  F019         	goto	u6151
  8711   003324  EF96  F019         	goto	u6150
  8712   003328                     u6151:
  8713   003328  EFA7  F019         	goto	l5121
  8714   00332C                     u6150:
  8715   00332C  500F               	movf	___aodiv@divisor^0,w,c
  8716   00332E  5E07               	subwf	___aodiv@dividend^0,f,c
  8717   003330  5010               	movf	(___aodiv@divisor+1)^0,w,c
  8718   003332  5A08               	subwfb	(___aodiv@dividend+1)^0,f,c
  8719   003334  5011               	movf	(___aodiv@divisor+2)^0,w,c
  8720   003336  5A09               	subwfb	(___aodiv@dividend+2)^0,f,c
  8721   003338  5012               	movf	(___aodiv@divisor+3)^0,w,c
  8722   00333A  5A0A               	subwfb	(___aodiv@dividend+3)^0,f,c
  8723   00333C  5013               	movf	(___aodiv@divisor+4)^0,w,c
  8724   00333E  5A0B               	subwfb	(___aodiv@dividend+4)^0,f,c
  8725   003340  5014               	movf	(___aodiv@divisor+5)^0,w,c
  8726   003342  5A0C               	subwfb	(___aodiv@dividend+5)^0,f,c
  8727   003344  5015               	movf	(___aodiv@divisor+6)^0,w,c
  8728   003346  5A0D               	subwfb	(___aodiv@dividend+6)^0,f,c
  8729   003348  5016               	movf	(___aodiv@divisor+7)^0,w,c
  8730   00334A  5A0E               	subwfb	(___aodiv@dividend+7)^0,f,c
  8731   00334C  8019               	bsf	___aodiv@quotient^0,0,c
  8732   00334E                     l5121:
  8733   00334E  90D8               	bcf	status,0,c
  8734   003350  3216               	rrcf	(___aodiv@divisor+7)^0,f,c
  8735   003352  3215               	rrcf	(___aodiv@divisor+6)^0,f,c
  8736   003354  3214               	rrcf	(___aodiv@divisor+5)^0,f,c
  8737   003356  3213               	rrcf	(___aodiv@divisor+4)^0,f,c
  8738   003358  3212               	rrcf	(___aodiv@divisor+3)^0,f,c
  8739   00335A  3211               	rrcf	(___aodiv@divisor+2)^0,f,c
  8740   00335C  3210               	rrcf	(___aodiv@divisor+1)^0,f,c
  8741   00335E  320F               	rrcf	___aodiv@divisor^0,f,c
  8742   003360  2E17               	decfsz	___aodiv@counter^0,f,c
  8743   003362  EF76  F019         	goto	l5113
  8744   003366                     l5125:
  8745   003366  5018               	movf	___aodiv@sign^0,w,c
  8746   003368  B4D8               	btfsc	status,2,c
  8747   00336A  EFB9  F019         	goto	u6161
  8748   00336E  EFBB  F019         	goto	u6160
  8749   003372                     u6161:
  8750   003372  EFCB  F019         	goto	l5129
  8751   003376                     u6160:
  8752   003376  1E20               	comf	(___aodiv@quotient+7)^0,f,c
  8753   003378  1E1F               	comf	(___aodiv@quotient+6)^0,f,c
  8754   00337A  1E1E               	comf	(___aodiv@quotient+5)^0,f,c
  8755   00337C  1E1D               	comf	(___aodiv@quotient+4)^0,f,c
  8756   00337E  1E1C               	comf	(___aodiv@quotient+3)^0,f,c
  8757   003380  1E1B               	comf	(___aodiv@quotient+2)^0,f,c
  8758   003382  1E1A               	comf	(___aodiv@quotient+1)^0,f,c
  8759   003384  6C19               	negf	___aodiv@quotient^0,c
  8760   003386  0E00               	movlw	0
  8761   003388  221A               	addwfc	(___aodiv@quotient+1)^0,f,c
  8762   00338A  221B               	addwfc	(___aodiv@quotient+2)^0,f,c
  8763   00338C  221C               	addwfc	(___aodiv@quotient+3)^0,f,c
  8764   00338E  221D               	addwfc	(___aodiv@quotient+4)^0,f,c
  8765   003390  221E               	addwfc	(___aodiv@quotient+5)^0,f,c
  8766   003392  221F               	addwfc	(___aodiv@quotient+6)^0,f,c
  8767   003394  2220               	addwfc	(___aodiv@quotient+7)^0,f,c
  8768   003396                     l5129:
  8769   003396  C019  F007         	movff	___aodiv@quotient,?___aodiv
  8770   00339A  C01A  F008         	movff	___aodiv@quotient+1,?___aodiv+1
  8771   00339E  C01B  F009         	movff	___aodiv@quotient+2,?___aodiv+2
  8772   0033A2  C01C  F00A         	movff	___aodiv@quotient+3,?___aodiv+3
  8773   0033A6  C01D  F00B         	movff	___aodiv@quotient+4,?___aodiv+4
  8774   0033AA  C01E  F00C         	movff	___aodiv@quotient+5,?___aodiv+5
  8775   0033AE  C01F  F00D         	movff	___aodiv@quotient+6,?___aodiv+6
  8776   0033B2  C020  F00E         	movff	___aodiv@quotient+7,?___aodiv+7
  8777   0033B6  0012               	return		;funcret
  8778   0033B8                     __end_of___aodiv:
  8779                           	callstack 0
  8780                           
  8781 ;; *************** function _atoi *****************
  8782 ;; Defined at:
  8783 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  8784 ;; Parameters:    Size  Location     Type
  8785 ;;  s               2   12[COMRAM] PTR const unsigned char 
  8786 ;;		 -> STR_2(60), STR_1(43), 
  8787 ;; Auto vars:     Size  Location     Type
  8788 ;;  n               2   19[COMRAM] int 
  8789 ;;  neg             2   17[COMRAM] int 
  8790 ;; Return value:  Size  Location     Type
  8791 ;;                  2   12[COMRAM] int 
  8792 ;; Registers used:
  8793 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8794 ;; Tracked objects:
  8795 ;;		On entry : 0/0
  8796 ;;		On exit  : 0/0
  8797 ;;		Unchanged: 0/0
  8798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8799 ;;      Params:         2       0       0       0       0       0       0       0       0
  8800 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8801 ;;      Temps:          3       0       0       0       0       0       0       0       0
  8802 ;;      Totals:         9       0       0       0       0       0       0       0       0
  8803 ;;Total ram usage:        9 bytes
  8804 ;; Hardware stack levels used: 1
  8805 ;; Hardware stack levels required when called: 2
  8806 ;; This function calls:
  8807 ;;		___wmul
  8808 ;;		_isdigit
  8809 ;;		_isspace
  8810 ;; This function is called by:
  8811 ;;		_vfpfcnvrt
  8812 ;; This function uses a non-reentrant model
  8813 ;;
  8814                           
  8815                           	psect	text30
  8816   00351C                     __ptext30:
  8817                           	callstack 0
  8818   00351C                     _atoi:
  8819                           	callstack 24
  8820   00351C  0E00               	movlw	0
  8821   00351E  6E15               	movwf	(atoi@n+1)^0,c
  8822   003520  0E00               	movlw	0
  8823   003522  6E14               	movwf	atoi@n^0,c
  8824   003524  0E00               	movlw	0
  8825   003526  6E13               	movwf	(atoi@neg+1)^0,c
  8826   003528  0E00               	movlw	0
  8827   00352A  6E12               	movwf	atoi@neg^0,c
  8828   00352C  EF9A  F01A         	goto	l5917
  8829   003530                     l5913:
  8830   003530  4A0D               	infsnz	atoi@s^0,f,c
  8831   003532  2A0E               	incf	(atoi@s+1)^0,f,c
  8832   003534                     l5917:
  8833   003534  C00D  FFF6         	movff	atoi@s,tblptrl
  8834   003538  C00E  FFF7         	movff	atoi@s+1,tblptrh
  8835   00353C                     	if	0	;tblptru may be non-zero
  8836   00353C                     	endif
  8837   00353C                     	if	0	;tblptru may be non-zero
  8838   00353C                     	endif
  8839   00353C  0008               	tblrd		*
  8840   00353E  50F5               	movf	tablat,w,c
  8841   003540  0A20               	xorlw	32
  8842   003542  B4D8               	btfsc	status,2,c
  8843   003544  EFA6  F01A         	goto	u7501
  8844   003548  EFA8  F01A         	goto	u7500
  8845   00354C                     u7501:
  8846   00354C  EF98  F01A         	goto	l5913
  8847   003550                     u7500:
  8848   003550  C00D  FFF6         	movff	atoi@s,tblptrl
  8849   003554  C00E  FFF7         	movff	atoi@s+1,tblptrh
  8850   003558                     	if	0	;tblptru may be non-zero
  8851   003558                     	endif
  8852   003558                     	if	0	;tblptru may be non-zero
  8853   003558                     	endif
  8854   003558  0008               	tblrd		*
  8855   00355A  CFF5 F00F          	movff	tablat,??_atoi
  8856   00355E  0EF7               	movlw	247
  8857   003560  240F               	addwf	??_atoi^0,w,c
  8858   003562  6E10               	movwf	(??_atoi+1)^0,c
  8859   003564  6A11               	clrf	(??_atoi+2)^0,c
  8860   003566  0EFF               	movlw	255
  8861   003568  2211               	addwfc	(??_atoi+2)^0,f,c
  8862   00356A  5011               	movf	(??_atoi+2)^0,w,c
  8863   00356C  E109               	bnz	u7510
  8864   00356E  0E05               	movlw	5
  8865   003570  5C10               	subwf	(??_atoi+1)^0,w,c
  8866   003572  A0D8               	btfss	status,0,c
  8867   003574  EFBE  F01A         	goto	u7511
  8868   003578  EFC0  F01A         	goto	u7510
  8869   00357C                     u7511:
  8870   00357C  EF98  F01A         	goto	l5913
  8871   003580                     u7510:
  8872   003580  EFCA  F01A         	goto	l5925
  8873   003584                     l5921:
  8874   003584  0E00               	movlw	0
  8875   003586  6E13               	movwf	(atoi@neg+1)^0,c
  8876   003588  0E01               	movlw	1
  8877   00358A  6E12               	movwf	atoi@neg^0,c
  8878   00358C                     l5923:
  8879   00358C  4A0D               	infsnz	atoi@s^0,f,c
  8880   00358E  2A0E               	incf	(atoi@s+1)^0,f,c
  8881   003590  EFFF  F01A         	goto	l5933
  8882   003594                     l5925:
  8883   003594  C00D  FFF6         	movff	atoi@s,tblptrl
  8884   003598  C00E  FFF7         	movff	atoi@s+1,tblptrh
  8885   00359C                     	if	0	;tblptru may be non-zero
  8886   00359C                     	endif
  8887   00359C                     	if	0	;tblptru may be non-zero
  8888   00359C                     	endif
  8889   00359C  0008               	tblrd		*
  8890   00359E  50F5               	movf	tablat,w,c
  8891   0035A0  6E0F               	movwf	??_atoi^0,c
  8892   0035A2  6A10               	clrf	(??_atoi+1)^0,c
  8893                           
  8894                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8895                           ; Switch size 1, requested type "simple"
  8896                           ; Number of cases is 1, Range of values is 0 to 0
  8897                           ; switch strategies available:
  8898                           ; Name         Instructions Cycles
  8899                           ; simple_byte            4     3 (average)
  8900                           ;	Chosen strategy is simple_byte
  8901   0035A4  5010               	movf	(??_atoi+1)^0,w,c
  8902   0035A6  0A00               	xorlw	0	; case 0
  8903   0035A8  B4D8               	btfsc	status,2,c
  8904   0035AA  EFD9  F01A         	goto	l6481
  8905   0035AE  EFFF  F01A         	goto	l5933
  8906   0035B2                     l6481:
  8907                           
  8908                           ; Switch size 1, requested type "simple"
  8909                           ; Number of cases is 2, Range of values is 43 to 45
  8910                           ; switch strategies available:
  8911                           ; Name         Instructions Cycles
  8912                           ; simple_byte            7     4 (average)
  8913                           ;	Chosen strategy is simple_byte
  8914   0035B2  500F               	movf	??_atoi^0,w,c
  8915   0035B4  0A2B               	xorlw	43	; case 43
  8916   0035B6  B4D8               	btfsc	status,2,c
  8917   0035B8  EFC6  F01A         	goto	l5923
  8918   0035BC  0A06               	xorlw	6	; case 45
  8919   0035BE  B4D8               	btfsc	status,2,c
  8920   0035C0  EFC2  F01A         	goto	l5921
  8921   0035C4  EFFF  F01A         	goto	l5933
  8922   0035C8                     l5927:
  8923   0035C8  C014  F007         	movff	atoi@n,___wmul@multiplier
  8924   0035CC  C015  F008         	movff	atoi@n+1,___wmul@multiplier+1
  8925   0035D0  0E00               	movlw	0
  8926   0035D2  6E0A               	movwf	(___wmul@multiplicand+1)^0,c
  8927   0035D4  0E0A               	movlw	10
  8928   0035D6  6E09               	movwf	___wmul@multiplicand^0,c
  8929   0035D8  ECEE  F020         	call	___wmul	;wreg free
  8930   0035DC  C00D  FFF6         	movff	atoi@s,tblptrl
  8931   0035E0  C00E  FFF7         	movff	atoi@s+1,tblptrh
  8932   0035E4                     	if	0	;tblptru may be non-zero
  8933   0035E4                     	endif
  8934   0035E4                     	if	0	;tblptru may be non-zero
  8935   0035E4                     	endif
  8936   0035E4  0008               	tblrd		*
  8937   0035E6  50F5               	movf	tablat,w,c
  8938   0035E8  5E07               	subwf	?___wmul^0,f,c
  8939   0035EA  0E00               	movlw	0
  8940   0035EC  5A08               	subwfb	(?___wmul+1)^0,f,c
  8941   0035EE  0E30               	movlw	48
  8942   0035F0  2407               	addwf	?___wmul^0,w,c
  8943   0035F2  6E14               	movwf	atoi@n^0,c
  8944   0035F4  0E00               	movlw	0
  8945   0035F6  2008               	addwfc	(?___wmul+1)^0,w,c
  8946   0035F8  6E15               	movwf	(atoi@n+1)^0,c
  8947   0035FA  EFC6  F01A         	goto	l5923
  8948   0035FE                     l5933:
  8949   0035FE  C00D  FFF6         	movff	atoi@s,tblptrl
  8950   003602  C00E  FFF7         	movff	atoi@s+1,tblptrh
  8951   003606                     	if	0	;tblptru may be non-zero
  8952   003606                     	endif
  8953   003606                     	if	0	;tblptru may be non-zero
  8954   003606                     	endif
  8955   003606  0008               	tblrd		*
  8956   003608  CFF5 F00F          	movff	tablat,??_atoi
  8957   00360C  0ED0               	movlw	208
  8958   00360E  240F               	addwf	??_atoi^0,w,c
  8959   003610  6E10               	movwf	(??_atoi+1)^0,c
  8960   003612  6A11               	clrf	(??_atoi+2)^0,c
  8961   003614  0EFF               	movlw	255
  8962   003616  2211               	addwfc	(??_atoi+2)^0,f,c
  8963   003618  5011               	movf	(??_atoi+2)^0,w,c
  8964   00361A  E109               	bnz	u7520
  8965   00361C  0E0A               	movlw	10
  8966   00361E  5C10               	subwf	(??_atoi+1)^0,w,c
  8967   003620  A0D8               	btfss	status,0,c
  8968   003622  EF15  F01B         	goto	u7521
  8969   003626  EF17  F01B         	goto	u7520
  8970   00362A                     u7521:
  8971   00362A  EFE4  F01A         	goto	l5927
  8972   00362E                     u7520:
  8973   00362E  5012               	movf	atoi@neg^0,w,c
  8974   003630  1013               	iorwf	(atoi@neg+1)^0,w,c
  8975   003632  A4D8               	btfss	status,2,c
  8976   003634  EF1E  F01B         	goto	u7531
  8977   003638  EF20  F01B         	goto	u7530
  8978   00363C                     u7531:
  8979   00363C  EF2E  F01B         	goto	l1130
  8980   003640                     u7530:
  8981   003640  C014  F00F         	movff	atoi@n,??_atoi
  8982   003644  C015  F010         	movff	atoi@n+1,??_atoi+1
  8983   003648  1E0F               	comf	??_atoi^0,f,c
  8984   00364A  1E10               	comf	(??_atoi+1)^0,f,c
  8985   00364C  4A0F               	infsnz	??_atoi^0,f,c
  8986   00364E  2A10               	incf	(??_atoi+1)^0,f,c
  8987   003650  C00F  F00D         	movff	??_atoi,?_atoi
  8988   003654  C010  F00E         	movff	??_atoi+1,?_atoi+1
  8989   003658  EF32  F01B         	goto	l1133
  8990   00365C                     l1130:
  8991   00365C  C014  F00D         	movff	atoi@n,?_atoi
  8992   003660  C015  F00E         	movff	atoi@n+1,?_atoi+1
  8993   003664                     l1133:
  8994   003664  0012               	return		;funcret
  8995   003666                     __end_of_atoi:
  8996                           	callstack 0
  8997                           
  8998 ;; *************** function _isspace *****************
  8999 ;; Defined at:
  9000 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  9001 ;; Parameters:    Size  Location     Type
  9002 ;;  c               2    6[COMRAM] int 
  9003 ;; Auto vars:     Size  Location     Type
  9004 ;;		None
  9005 ;; Return value:  Size  Location     Type
  9006 ;;                  2    6[COMRAM] int 
  9007 ;; Registers used:
  9008 ;;		wreg, status,2, status,0
  9009 ;; Tracked objects:
  9010 ;;		On entry : 0/0
  9011 ;;		On exit  : 0/0
  9012 ;;		Unchanged: 0/0
  9013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9014 ;;      Params:         2       0       0       0       0       0       0       0       0
  9015 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9016 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9017 ;;      Totals:         5       0       0       0       0       0       0       0       0
  9018 ;;Total ram usage:        5 bytes
  9019 ;; Hardware stack levels used: 1
  9020 ;; Hardware stack levels required when called: 1
  9021 ;; This function calls:
  9022 ;;		Nothing
  9023 ;; This function is called by:
  9024 ;;		_atoi
  9025 ;; This function uses a non-reentrant model
  9026 ;;
  9027                           
  9028                           	psect	text31
  9029   004046                     __ptext31:
  9030                           	callstack 0
  9031   004046                     _isspace:
  9032                           	callstack 24
  9033   004046  0E01               	movlw	1
  9034   004048  6E0B               	movwf	_isspace$2000^0,c
  9035   00404A  0E20               	movlw	32
  9036   00404C  1807               	xorwf	isspace@c^0,w,c
  9037   00404E  1008               	iorwf	(isspace@c+1)^0,w,c
  9038   004050  B4D8               	btfsc	status,2,c
  9039   004052  EF2D  F020         	goto	u7061
  9040   004056  EF2F  F020         	goto	u7060
  9041   00405A                     u7061:
  9042   00405A  EF42  F020         	goto	l5633
  9043   00405E                     u7060:
  9044   00405E  0EF7               	movlw	247
  9045   004060  2407               	addwf	isspace@c^0,w,c
  9046   004062  6E09               	movwf	??_isspace^0,c
  9047   004064  0EFF               	movlw	255
  9048   004066  2008               	addwfc	(isspace@c+1)^0,w,c
  9049   004068  6E0A               	movwf	(??_isspace+1)^0,c
  9050   00406A  500A               	movf	(??_isspace+1)^0,w,c
  9051   00406C  E109               	bnz	u7070
  9052   00406E  0E05               	movlw	5
  9053   004070  5C09               	subwf	??_isspace^0,w,c
  9054   004072  A0D8               	btfss	status,0,c
  9055   004074  EF3E  F020         	goto	u7071
  9056   004078  EF40  F020         	goto	u7070
  9057   00407C                     u7071:
  9058   00407C  EF42  F020         	goto	l5633
  9059   004080                     u7070:
  9060   004080  0E00               	movlw	0
  9061   004082  6E0B               	movwf	_isspace$2000^0,c
  9062   004084                     l5633:
  9063   004084  C00B  F007         	movff	_isspace$2000,?_isspace
  9064   004088  6A08               	clrf	(?_isspace+1)^0,c
  9065   00408A  0012               	return		;funcret
  9066   00408C                     __end_of_isspace:
  9067                           	callstack 0
  9068                           
  9069 ;; *************** function _isdigit *****************
  9070 ;; Defined at:
  9071 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  9072 ;; Parameters:    Size  Location     Type
  9073 ;;  c               2    6[COMRAM] int 
  9074 ;; Auto vars:     Size  Location     Type
  9075 ;;		None
  9076 ;; Return value:  Size  Location     Type
  9077 ;;                  2    6[COMRAM] int 
  9078 ;; Registers used:
  9079 ;;		wreg, status,2, status,0
  9080 ;; Tracked objects:
  9081 ;;		On entry : 0/0
  9082 ;;		On exit  : 0/0
  9083 ;;		Unchanged: 0/0
  9084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9085 ;;      Params:         2       0       0       0       0       0       0       0       0
  9086 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9087 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9088 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9089 ;;Total ram usage:        4 bytes
  9090 ;; Hardware stack levels used: 1
  9091 ;; Hardware stack levels required when called: 1
  9092 ;; This function calls:
  9093 ;;		Nothing
  9094 ;; This function is called by:
  9095 ;;		_vfpfcnvrt
  9096 ;;		_atoi
  9097 ;; This function uses a non-reentrant model
  9098 ;;
  9099                           
  9100                           	psect	text32
  9101   004188                     __ptext32:
  9102                           	callstack 0
  9103   004188                     _isdigit:
  9104                           	callstack 25
  9105   004188  0ED0               	movlw	208
  9106   00418A  2407               	addwf	isdigit@c^0,w,c
  9107   00418C  6E09               	movwf	??_isdigit^0,c
  9108   00418E  0EFF               	movlw	255
  9109   004190  2008               	addwfc	(isdigit@c+1)^0,w,c
  9110   004192  6E0A               	movwf	(??_isdigit+1)^0,c
  9111   004194  500A               	movf	(??_isdigit+1)^0,w,c
  9112   004196  E10A               	bnz	u7040
  9113   004198  0E0A               	movlw	10
  9114   00419A  5C09               	subwf	??_isdigit^0,w,c
  9115   00419C  A0D8               	btfss	status,0,c
  9116   00419E  EFD3  F020         	goto	u7041
  9117   0041A2  EFD6  F020         	goto	u7040
  9118   0041A6                     u7041:
  9119   0041A6  0E01               	movlw	1
  9120   0041A8  EFD7  F020         	goto	u7050
  9121   0041AC                     u7040:
  9122   0041AC  0E00               	movlw	0
  9123   0041AE                     u7050:
  9124   0041AE  6E07               	movwf	?_isdigit^0,c
  9125   0041B0  6A08               	clrf	(?_isdigit+1)^0,c
  9126   0041B2  0012               	return		;funcret
  9127   0041B4                     __end_of_isdigit:
  9128                           	callstack 0
  9129                           
  9130 ;; *************** function ___wmul *****************
  9131 ;; Defined at:
  9132 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  9133 ;; Parameters:    Size  Location     Type
  9134 ;;  multiplier      2    6[COMRAM] unsigned int 
  9135 ;;  multiplicand    2    8[COMRAM] unsigned int 
  9136 ;; Auto vars:     Size  Location     Type
  9137 ;;  product         2   10[COMRAM] unsigned int 
  9138 ;; Return value:  Size  Location     Type
  9139 ;;                  2    6[COMRAM] unsigned int 
  9140 ;; Registers used:
  9141 ;;		wreg, status,2, status,0, prodl, prodh
  9142 ;; Tracked objects:
  9143 ;;		On entry : 0/0
  9144 ;;		On exit  : 0/0
  9145 ;;		Unchanged: 0/0
  9146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9147 ;;      Params:         4       0       0       0       0       0       0       0       0
  9148 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9149 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9150 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9151 ;;Total ram usage:        6 bytes
  9152 ;; Hardware stack levels used: 1
  9153 ;; Hardware stack levels required when called: 1
  9154 ;; This function calls:
  9155 ;;		Nothing
  9156 ;; This function is called by:
  9157 ;;		_atoi
  9158 ;; This function uses a non-reentrant model
  9159 ;;
  9160                           
  9161                           	psect	text33
  9162   0041DC                     __ptext33:
  9163                           	callstack 0
  9164   0041DC                     ___wmul:
  9165                           	callstack 24
  9166   0041DC  5007               	movf	___wmul@multiplier^0,w,c
  9167   0041DE  0209               	mulwf	___wmul@multiplicand^0,c
  9168   0041E0  CFF3 F00B          	movff	prodl,___wmul@product
  9169   0041E4  CFF4 F00C          	movff	prodh,___wmul@product+1
  9170   0041E8  5007               	movf	___wmul@multiplier^0,w,c
  9171   0041EA  020A               	mulwf	(___wmul@multiplicand+1)^0,c
  9172   0041EC  50F3               	movf	243,w,c
  9173   0041EE  260C               	addwf	(___wmul@product+1)^0,f,c
  9174   0041F0  5008               	movf	(___wmul@multiplier+1)^0,w,c
  9175   0041F2  0209               	mulwf	___wmul@multiplicand^0,c
  9176   0041F4  50F3               	movf	243,w,c
  9177   0041F6  260C               	addwf	(___wmul@product+1)^0,f,c
  9178   0041F8  C00B  F007         	movff	___wmul@product,?___wmul
  9179   0041FC  C00C  F008         	movff	___wmul@product+1,?___wmul+1
  9180   004200  0012               	return		;funcret
  9181   004202                     __end_of___wmul:
  9182                           	callstack 0
  9183                           
  9184 ;; *************** function ___xotofl *****************
  9185 ;; Defined at:
  9186 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xotofl.c"
  9187 ;; Parameters:    Size  Location     Type
  9188 ;;  sign            1    wreg     unsigned char 
  9189 ;;  val             8    6[COMRAM] long long 
  9190 ;; Auto vars:     Size  Location     Type
  9191 ;;  sign            1   22[COMRAM] unsigned char 
  9192 ;;  arg             8   24[COMRAM] unsigned long long 
  9193 ;;  exp             1   23[COMRAM] unsigned char 
  9194 ;; Return value:  Size  Location     Type
  9195 ;;                  4    6[COMRAM] unsigned char 
  9196 ;; Registers used:
  9197 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9198 ;; Tracked objects:
  9199 ;;		On entry : 0/0
  9200 ;;		On exit  : 0/0
  9201 ;;		Unchanged: 0/0
  9202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9203 ;;      Params:         8       0       0       0       0       0       0       0       0
  9204 ;;      Locals:        10       0       0       0       0       0       0       0       0
  9205 ;;      Temps:          8       0       0       0       0       0       0       0       0
  9206 ;;      Totals:        26       0       0       0       0       0       0       0       0
  9207 ;;Total ram usage:       26 bytes
  9208 ;; Hardware stack levels used: 1
  9209 ;; Hardware stack levels required when called: 1
  9210 ;; This function calls:
  9211 ;;		Nothing
  9212 ;; This function is called by:
  9213 ;;		_loop
  9214 ;; This function uses a non-reentrant model
  9215 ;;
  9216                           
  9217                           	psect	text34
  9218   002916                     __ptext34:
  9219                           	callstack 0
  9220   002916                     ___xotofl:
  9221                           	callstack 28
  9222                           
  9223                           ;incstack = 0
  9224                           ;___xotofl@sign stored from wreg
  9225   002916  6E17               	movwf	___xotofl@sign^0,c
  9226   002918  5017               	movf	___xotofl@sign^0,w,c
  9227   00291A  B4D8               	btfsc	status,2,c
  9228   00291C  EF92  F014         	goto	u7631
  9229   002920  EF94  F014         	goto	u7630
  9230   002924                     u7631:
  9231   002924  EFCE  F014         	goto	l889
  9232   002928                     u7630:
  9233   002928  BE0E               	btfsc	(___xotofl@val+7)^0,7,c
  9234   00292A  EF9B  F014         	goto	u7640
  9235   00292E  EF99  F014         	goto	u7641
  9236   002932                     u7641:
  9237   002932  EFCE  F014         	goto	l889
  9238   002936                     u7640:
  9239   002936  C007  F00F         	movff	___xotofl@val,??___xotofl
  9240   00293A  C008  F010         	movff	___xotofl@val+1,??___xotofl+1
  9241   00293E  C009  F011         	movff	___xotofl@val+2,??___xotofl+2
  9242   002942  C00A  F012         	movff	___xotofl@val+3,??___xotofl+3
  9243   002946  C00B  F013         	movff	___xotofl@val+4,??___xotofl+4
  9244   00294A  C00C  F014         	movff	___xotofl@val+5,??___xotofl+5
  9245   00294E  C00D  F015         	movff	___xotofl@val+6,??___xotofl+6
  9246   002952  C00E  F016         	movff	___xotofl@val+7,??___xotofl+7
  9247   002956  1E0F               	comf	??___xotofl^0,f,c
  9248   002958  1E10               	comf	(??___xotofl+1)^0,f,c
  9249   00295A  1E11               	comf	(??___xotofl+2)^0,f,c
  9250   00295C  1E12               	comf	(??___xotofl+3)^0,f,c
  9251   00295E  1E13               	comf	(??___xotofl+4)^0,f,c
  9252   002960  1E14               	comf	(??___xotofl+5)^0,f,c
  9253   002962  1E15               	comf	(??___xotofl+6)^0,f,c
  9254   002964  1E16               	comf	(??___xotofl+7)^0,f,c
  9255   002966  2A0F               	incf	??___xotofl^0,f,c
  9256   002968  0E00               	movlw	0
  9257   00296A  2210               	addwfc	(??___xotofl+1)^0,f,c
  9258   00296C  2211               	addwfc	(??___xotofl+2)^0,f,c
  9259   00296E  2212               	addwfc	(??___xotofl+3)^0,f,c
  9260   002970  2213               	addwfc	(??___xotofl+4)^0,f,c
  9261   002972  2214               	addwfc	(??___xotofl+5)^0,f,c
  9262   002974  2215               	addwfc	(??___xotofl+6)^0,f,c
  9263   002976  2216               	addwfc	(??___xotofl+7)^0,f,c
  9264   002978  C00F  F019         	movff	??___xotofl,___xotofl@arg
  9265   00297C  C010  F01A         	movff	??___xotofl+1,___xotofl@arg+1
  9266   002980  C011  F01B         	movff	??___xotofl+2,___xotofl@arg+2
  9267   002984  C012  F01C         	movff	??___xotofl+3,___xotofl@arg+3
  9268   002988  C013  F01D         	movff	??___xotofl+4,___xotofl@arg+4
  9269   00298C  C014  F01E         	movff	??___xotofl+5,___xotofl@arg+5
  9270   002990  C015  F01F         	movff	??___xotofl+6,___xotofl@arg+6
  9271   002994  C016  F020         	movff	??___xotofl+7,___xotofl@arg+7
  9272   002998  EFDE  F014         	goto	l6103
  9273   00299C                     l889:
  9274   00299C  C007  F019         	movff	___xotofl@val,___xotofl@arg
  9275   0029A0  C008  F01A         	movff	___xotofl@val+1,___xotofl@arg+1
  9276   0029A4  C009  F01B         	movff	___xotofl@val+2,___xotofl@arg+2
  9277   0029A8  C00A  F01C         	movff	___xotofl@val+3,___xotofl@arg+3
  9278   0029AC  C00B  F01D         	movff	___xotofl@val+4,___xotofl@arg+4
  9279   0029B0  C00C  F01E         	movff	___xotofl@val+5,___xotofl@arg+5
  9280   0029B4  C00D  F01F         	movff	___xotofl@val+6,___xotofl@arg+6
  9281   0029B8  C00E  F020         	movff	___xotofl@val+7,___xotofl@arg+7
  9282   0029BC                     l6103:
  9283   0029BC  5007               	movf	___xotofl@val^0,w,c
  9284   0029BE  1008               	iorwf	(___xotofl@val+1)^0,w,c
  9285   0029C0  1009               	iorwf	(___xotofl@val+2)^0,w,c
  9286   0029C2  100A               	iorwf	(___xotofl@val+3)^0,w,c
  9287   0029C4  100B               	iorwf	(___xotofl@val+4)^0,w,c
  9288   0029C6  100C               	iorwf	(___xotofl@val+5)^0,w,c
  9289   0029C8  100D               	iorwf	(___xotofl@val+6)^0,w,c
  9290   0029CA  100E               	iorwf	(___xotofl@val+7)^0,w,c
  9291   0029CC  A4D8               	btfss	status,2,c
  9292   0029CE  EFEB  F014         	goto	u7651
  9293   0029D2  EFED  F014         	goto	u7650
  9294   0029D6                     u7651:
  9295   0029D6  EFF7  F014         	goto	l6109
  9296   0029DA                     u7650:
  9297   0029DA  0E00               	movlw	0
  9298   0029DC  6E07               	movwf	?___xotofl^0,c
  9299   0029DE  0E00               	movlw	0
  9300   0029E0  6E08               	movwf	(?___xotofl+1)^0,c
  9301   0029E2  0E00               	movlw	0
  9302   0029E4  6E09               	movwf	(?___xotofl+2)^0,c
  9303   0029E6  0E00               	movlw	0
  9304   0029E8  6E0A               	movwf	(?___xotofl+3)^0,c
  9305   0029EA  EFDF  F015         	goto	l892
  9306   0029EE                     l6109:
  9307   0029EE  0E96               	movlw	150
  9308   0029F0  6E18               	movwf	___xotofl@exp^0,c
  9309   0029F2  EF05  F015         	goto	l6113
  9310   0029F6                     l6111:
  9311   0029F6  2A18               	incf	___xotofl@exp^0,f,c
  9312   0029F8  90D8               	bcf	status,0,c
  9313   0029FA  3220               	rrcf	(___xotofl@arg+7)^0,f,c
  9314   0029FC  321F               	rrcf	(___xotofl@arg+6)^0,f,c
  9315   0029FE  321E               	rrcf	(___xotofl@arg+5)^0,f,c
  9316   002A00  321D               	rrcf	(___xotofl@arg+4)^0,f,c
  9317   002A02  321C               	rrcf	(___xotofl@arg+3)^0,f,c
  9318   002A04  321B               	rrcf	(___xotofl@arg+2)^0,f,c
  9319   002A06  321A               	rrcf	(___xotofl@arg+1)^0,f,c
  9320   002A08  3219               	rrcf	___xotofl@arg^0,f,c
  9321   002A0A                     l6113:
  9322   002A0A  EE20  F019         	lfsr	2,___xotofl@arg
  9323   002A0E  0E00               	movlw	0
  9324   002A10  14DE               	andwf	postinc2,w,c
  9325   002A12  6E0F               	movwf	??___xotofl^0,c
  9326   002A14  0E00               	movlw	0
  9327   002A16  14DE               	andwf	postinc2,w,c
  9328   002A18  6E10               	movwf	(??___xotofl+1)^0,c
  9329   002A1A  0E00               	movlw	0
  9330   002A1C  14DE               	andwf	postinc2,w,c
  9331   002A1E  6E11               	movwf	(??___xotofl+2)^0,c
  9332   002A20  0EFE               	movlw	254
  9333   002A22  14DE               	andwf	postinc2,w,c
  9334   002A24  6E12               	movwf	(??___xotofl+3)^0,c
  9335   002A26  0EFF               	movlw	255
  9336   002A28  14DE               	andwf	postinc2,w,c
  9337   002A2A  6E13               	movwf	(??___xotofl+4)^0,c
  9338   002A2C  0EFF               	movlw	255
  9339   002A2E  14DE               	andwf	postinc2,w,c
  9340   002A30  6E14               	movwf	(??___xotofl+5)^0,c
  9341   002A32  0EFF               	movlw	255
  9342   002A34  14DE               	andwf	postinc2,w,c
  9343   002A36  6E15               	movwf	(??___xotofl+6)^0,c
  9344   002A38  0EFF               	movlw	255
  9345   002A3A  14DE               	andwf	postinc2,w,c
  9346   002A3C  6E16               	movwf	(??___xotofl+7)^0,c
  9347   002A3E  500F               	movf	??___xotofl^0,w,c
  9348   002A40  1010               	iorwf	(??___xotofl+1)^0,w,c
  9349   002A42  1011               	iorwf	(??___xotofl+2)^0,w,c
  9350   002A44  1012               	iorwf	(??___xotofl+3)^0,w,c
  9351   002A46  1013               	iorwf	(??___xotofl+4)^0,w,c
  9352   002A48  1014               	iorwf	(??___xotofl+5)^0,w,c
  9353   002A4A  1015               	iorwf	(??___xotofl+6)^0,w,c
  9354   002A4C  1016               	iorwf	(??___xotofl+7)^0,w,c
  9355   002A4E  A4D8               	btfss	status,2,c
  9356   002A50  EF2C  F015         	goto	u7661
  9357   002A54  EF2E  F015         	goto	u7660
  9358   002A58                     u7661:
  9359   002A58  EFFB  F014         	goto	l6111
  9360   002A5C                     u7660:
  9361   002A5C  EF44  F015         	goto	l6121
  9362   002A60                     l6115:
  9363   002A60  2A18               	incf	___xotofl@exp^0,f,c
  9364   002A62  0E01               	movlw	1
  9365   002A64  2619               	addwf	___xotofl@arg^0,f,c
  9366   002A66  0E00               	movlw	0
  9367   002A68  221A               	addwfc	(___xotofl@arg+1)^0,f,c
  9368   002A6A  221B               	addwfc	(___xotofl@arg+2)^0,f,c
  9369   002A6C  221C               	addwfc	(___xotofl@arg+3)^0,f,c
  9370   002A6E  221D               	addwfc	(___xotofl@arg+4)^0,f,c
  9371   002A70  221E               	addwfc	(___xotofl@arg+5)^0,f,c
  9372   002A72  221F               	addwfc	(___xotofl@arg+6)^0,f,c
  9373   002A74  2220               	addwfc	(___xotofl@arg+7)^0,f,c
  9374   002A76  90D8               	bcf	status,0,c
  9375   002A78  3220               	rrcf	(___xotofl@arg+7)^0,f,c
  9376   002A7A  321F               	rrcf	(___xotofl@arg+6)^0,f,c
  9377   002A7C  321E               	rrcf	(___xotofl@arg+5)^0,f,c
  9378   002A7E  321D               	rrcf	(___xotofl@arg+4)^0,f,c
  9379   002A80  321C               	rrcf	(___xotofl@arg+3)^0,f,c
  9380   002A82  321B               	rrcf	(___xotofl@arg+2)^0,f,c
  9381   002A84  321A               	rrcf	(___xotofl@arg+1)^0,f,c
  9382   002A86  3219               	rrcf	___xotofl@arg^0,f,c
  9383   002A88                     l6121:
  9384   002A88  EE20  F019         	lfsr	2,___xotofl@arg
  9385   002A8C  0E00               	movlw	0
  9386   002A8E  14DE               	andwf	postinc2,w,c
  9387   002A90  6E0F               	movwf	??___xotofl^0,c
  9388   002A92  0E00               	movlw	0
  9389   002A94  14DE               	andwf	postinc2,w,c
  9390   002A96  6E10               	movwf	(??___xotofl+1)^0,c
  9391   002A98  0E00               	movlw	0
  9392   002A9A  14DE               	andwf	postinc2,w,c
  9393   002A9C  6E11               	movwf	(??___xotofl+2)^0,c
  9394   002A9E  0EFF               	movlw	255
  9395   002AA0  14DE               	andwf	postinc2,w,c
  9396   002AA2  6E12               	movwf	(??___xotofl+3)^0,c
  9397   002AA4  0EFF               	movlw	255
  9398   002AA6  14DE               	andwf	postinc2,w,c
  9399   002AA8  6E13               	movwf	(??___xotofl+4)^0,c
  9400   002AAA  0EFF               	movlw	255
  9401   002AAC  14DE               	andwf	postinc2,w,c
  9402   002AAE  6E14               	movwf	(??___xotofl+5)^0,c
  9403   002AB0  0EFF               	movlw	255
  9404   002AB2  14DE               	andwf	postinc2,w,c
  9405   002AB4  6E15               	movwf	(??___xotofl+6)^0,c
  9406   002AB6  0EFF               	movlw	255
  9407   002AB8  14DE               	andwf	postinc2,w,c
  9408   002ABA  6E16               	movwf	(??___xotofl+7)^0,c
  9409   002ABC  500F               	movf	??___xotofl^0,w,c
  9410   002ABE  1010               	iorwf	(??___xotofl+1)^0,w,c
  9411   002AC0  1011               	iorwf	(??___xotofl+2)^0,w,c
  9412   002AC2  1012               	iorwf	(??___xotofl+3)^0,w,c
  9413   002AC4  1013               	iorwf	(??___xotofl+4)^0,w,c
  9414   002AC6  1014               	iorwf	(??___xotofl+5)^0,w,c
  9415   002AC8  1015               	iorwf	(??___xotofl+6)^0,w,c
  9416   002ACA  1016               	iorwf	(??___xotofl+7)^0,w,c
  9417   002ACC  A4D8               	btfss	status,2,c
  9418   002ACE  EF6B  F015         	goto	u7671
  9419   002AD2  EF6D  F015         	goto	u7670
  9420   002AD6                     u7671:
  9421   002AD6  EF30  F015         	goto	l6115
  9422   002ADA                     u7670:
  9423   002ADA  EF79  F015         	goto	l6125
  9424   002ADE                     l6123:
  9425   002ADE  0618               	decf	___xotofl@exp^0,f,c
  9426   002AE0  90D8               	bcf	status,0,c
  9427   002AE2  3619               	rlcf	___xotofl@arg^0,f,c
  9428   002AE4  361A               	rlcf	(___xotofl@arg+1)^0,f,c
  9429   002AE6  361B               	rlcf	(___xotofl@arg+2)^0,f,c
  9430   002AE8  361C               	rlcf	(___xotofl@arg+3)^0,f,c
  9431   002AEA  361D               	rlcf	(___xotofl@arg+4)^0,f,c
  9432   002AEC  361E               	rlcf	(___xotofl@arg+5)^0,f,c
  9433   002AEE  361F               	rlcf	(___xotofl@arg+6)^0,f,c
  9434   002AF0  3620               	rlcf	(___xotofl@arg+7)^0,f,c
  9435   002AF2                     l6125:
  9436   002AF2  BE1B               	btfsc	(___xotofl@arg+2)^0,7,c
  9437   002AF4  EF7E  F015         	goto	u7681
  9438   002AF8  EF80  F015         	goto	u7680
  9439   002AFC                     u7681:
  9440   002AFC  EF88  F015         	goto	l903
  9441   002B00                     u7680:
  9442   002B00  0E02               	movlw	2
  9443   002B02  6018               	cpfslt	___xotofl@exp^0,c
  9444   002B04  EF86  F015         	goto	u7691
  9445   002B08  EF88  F015         	goto	u7690
  9446   002B0C                     u7691:
  9447   002B0C  EF6F  F015         	goto	l6123
  9448   002B10                     u7690:
  9449   002B10                     l903:
  9450   002B10  B018               	btfsc	___xotofl@exp^0,0,c
  9451   002B12  EF8D  F015         	goto	u7701
  9452   002B16  EF8F  F015         	goto	u7700
  9453   002B1A                     u7701:
  9454   002B1A  EF9F  F015         	goto	l904
  9455   002B1E                     u7700:
  9456   002B1E  0EFF               	movlw	255
  9457   002B20  1619               	andwf	___xotofl@arg^0,f,c
  9458   002B22  0EFF               	movlw	255
  9459   002B24  161A               	andwf	(___xotofl@arg+1)^0,f,c
  9460   002B26  0E7F               	movlw	127
  9461   002B28  161B               	andwf	(___xotofl@arg+2)^0,f,c
  9462   002B2A  0EFF               	movlw	255
  9463   002B2C  161C               	andwf	(___xotofl@arg+3)^0,f,c
  9464   002B2E  0EFF               	movlw	255
  9465   002B30  161D               	andwf	(___xotofl@arg+4)^0,f,c
  9466   002B32  0EFF               	movlw	255
  9467   002B34  161E               	andwf	(___xotofl@arg+5)^0,f,c
  9468   002B36  0EFF               	movlw	255
  9469   002B38  161F               	andwf	(___xotofl@arg+6)^0,f,c
  9470   002B3A  0EFF               	movlw	255
  9471   002B3C  1620               	andwf	(___xotofl@arg+7)^0,f,c
  9472   002B3E                     l904:
  9473   002B3E  90D8               	bcf	status,0,c
  9474   002B40  3218               	rrcf	___xotofl@exp^0,f,c
  9475   002B42  C018  F00F         	movff	___xotofl@exp,??___xotofl
  9476   002B46  6A10               	clrf	(??___xotofl+1)^0,c
  9477   002B48  6A11               	clrf	(??___xotofl+2)^0,c
  9478   002B4A  6A12               	clrf	(??___xotofl+3)^0,c
  9479   002B4C  6A13               	clrf	(??___xotofl+4)^0,c
  9480   002B4E  6A14               	clrf	(??___xotofl+5)^0,c
  9481   002B50  6A15               	clrf	(??___xotofl+6)^0,c
  9482   002B52  6A16               	clrf	(??___xotofl+7)^0,c
  9483   002B54  C013  F016         	movff	??___xotofl+4,??___xotofl+7
  9484   002B58  C012  F015         	movff	??___xotofl+3,??___xotofl+6
  9485   002B5C  C011  F014         	movff	??___xotofl+2,??___xotofl+5
  9486   002B60  C010  F013         	movff	??___xotofl+1,??___xotofl+4
  9487   002B64  C00F  F012         	movff	??___xotofl,??___xotofl+3
  9488   002B68  6A11               	clrf	(??___xotofl+2)^0,c
  9489   002B6A  6A10               	clrf	(??___xotofl+1)^0,c
  9490   002B6C  6A0F               	clrf	??___xotofl^0,c
  9491   002B6E  500F               	movf	??___xotofl^0,w,c
  9492   002B70  1219               	iorwf	___xotofl@arg^0,f,c
  9493   002B72  5010               	movf	(??___xotofl+1)^0,w,c
  9494   002B74  121A               	iorwf	(___xotofl@arg+1)^0,f,c
  9495   002B76  5011               	movf	(??___xotofl+2)^0,w,c
  9496   002B78  121B               	iorwf	(___xotofl@arg+2)^0,f,c
  9497   002B7A  5012               	movf	(??___xotofl+3)^0,w,c
  9498   002B7C  121C               	iorwf	(___xotofl@arg+3)^0,f,c
  9499   002B7E  5013               	movf	(??___xotofl+4)^0,w,c
  9500   002B80  121D               	iorwf	(___xotofl@arg+4)^0,f,c
  9501   002B82  5014               	movf	(??___xotofl+5)^0,w,c
  9502   002B84  121E               	iorwf	(___xotofl@arg+5)^0,f,c
  9503   002B86  5015               	movf	(??___xotofl+6)^0,w,c
  9504   002B88  121F               	iorwf	(___xotofl@arg+6)^0,f,c
  9505   002B8A  5016               	movf	(??___xotofl+7)^0,w,c
  9506   002B8C  1220               	iorwf	(___xotofl@arg+7)^0,f,c
  9507   002B8E  5017               	movf	___xotofl@sign^0,w,c
  9508   002B90  B4D8               	btfsc	status,2,c
  9509   002B92  EFCD  F015         	goto	u7711
  9510   002B96  EFCF  F015         	goto	u7710
  9511   002B9A                     u7711:
  9512   002B9A  EFD7  F015         	goto	l6137
  9513   002B9E                     u7710:
  9514   002B9E  BE0E               	btfsc	(___xotofl@val+7)^0,7,c
  9515   002BA0  EFD6  F015         	goto	u7720
  9516   002BA4  EFD4  F015         	goto	u7721
  9517   002BA8                     u7721:
  9518   002BA8  EFD7  F015         	goto	l6137
  9519   002BAC                     u7720:
  9520   002BAC  8E1C               	bsf	(___xotofl@arg+3)^0,7,c
  9521   002BAE                     l6137:
  9522   002BAE  C019  F007         	movff	___xotofl@arg,?___xotofl
  9523   002BB2  C01A  F008         	movff	___xotofl@arg+1,?___xotofl+1
  9524   002BB6  C01B  F009         	movff	___xotofl@arg+2,?___xotofl+2
  9525   002BBA  C01C  F00A         	movff	___xotofl@arg+3,?___xotofl+3
  9526   002BBE                     l892:
  9527   002BBE  0012               	return		;funcret
  9528   002BC0                     __end_of___xotofl:
  9529                           	callstack 0
  9530                           
  9531 ;; *************** function _init_vars *****************
  9532 ;; Defined at:
  9533 ;;		line 300 in file "main.c"
  9534 ;; Parameters:    Size  Location     Type
  9535 ;;		None
  9536 ;; Auto vars:     Size  Location     Type
  9537 ;;  i               2    8[COMRAM] int 
  9538 ;; Return value:  Size  Location     Type
  9539 ;;                  1    wreg      void 
  9540 ;; Registers used:
  9541 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9542 ;; Tracked objects:
  9543 ;;		On entry : 0/0
  9544 ;;		On exit  : 0/0
  9545 ;;		Unchanged: 0/0
  9546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9547 ;;      Params:         0       0       0       0       0       0       0       0       0
  9548 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9549 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9550 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9551 ;;Total ram usage:        4 bytes
  9552 ;; Hardware stack levels used: 1
  9553 ;; Hardware stack levels required when called: 1
  9554 ;; This function calls:
  9555 ;;		Nothing
  9556 ;; This function is called by:
  9557 ;;		_main
  9558 ;; This function uses a non-reentrant model
  9559 ;;
  9560                           
  9561                           	psect	text35
  9562   003DE4                     __ptext35:
  9563                           	callstack 0
  9564   003DE4                     _init_vars:
  9565                           	callstack 29
  9566   003DE4                     
  9567                           ;main.c: 301:     int i;;main.c: 302:     for (i=0;i<5;i++){
  9568   003DE4  0E00               	movlw	0
  9569   003DE6  6E0A               	movwf	(init_vars@i+1)^0,c
  9570   003DE8  0E00               	movlw	0
  9571   003DEA  6E09               	movwf	init_vars@i^0,c
  9572   003DEC                     l4411:
  9573                           
  9574                           ;main.c: 303:         counter[i] = 0;
  9575   003DEC  C009  F007         	movff	init_vars@i,??_init_vars
  9576   003DF0  C00A  F008         	movff	init_vars@i+1,??_init_vars+1
  9577   003DF4  90D8               	bcf	status,0,c
  9578   003DF6  3607               	rlcf	??_init_vars^0,f,c
  9579   003DF8  3608               	rlcf	(??_init_vars+1)^0,f,c
  9580   003DFA  90D8               	bcf	status,0,c
  9581   003DFC  3607               	rlcf	??_init_vars^0,f,c
  9582   003DFE  3608               	rlcf	(??_init_vars+1)^0,f,c
  9583   003E00  90D8               	bcf	status,0,c
  9584   003E02  3607               	rlcf	??_init_vars^0,f,c
  9585   003E04  3608               	rlcf	(??_init_vars+1)^0,f,c
  9586   003E06  0E50               	movlw	low _counter
  9587   003E08  2407               	addwf	??_init_vars^0,w,c
  9588   003E0A  6ED9               	movwf	fsr2l,c
  9589   003E0C  0E01               	movlw	high _counter
  9590   003E0E  2008               	addwfc	(??_init_vars+1)^0,w,c
  9591   003E10  6EDA               	movwf	fsr2h,c
  9592   003E12  0E07               	movlw	7
  9593   003E14                     u4991:
  9594   003E14  6ADE               	clrf	postinc2,c
  9595   003E16  06E8               	decf	wreg,f,c
  9596   003E18  E2FD               	bc	u4991
  9597   003E1A                     
  9598                           ;main.c: 304:     }
  9599   003E1A  4A09               	infsnz	init_vars@i^0,f,c
  9600   003E1C  2A0A               	incf	(init_vars@i+1)^0,f,c
  9601   003E1E  BE0A               	btfsc	(init_vars@i+1)^0,7,c
  9602   003E20  EF1B  F01F         	goto	u5001
  9603   003E24  500A               	movf	(init_vars@i+1)^0,w,c
  9604   003E26  E109               	bnz	u5000
  9605   003E28  0E05               	movlw	5
  9606   003E2A  5C09               	subwf	init_vars@i^0,w,c
  9607   003E2C  A0D8               	btfss	status,0,c
  9608   003E2E  EF1B  F01F         	goto	u5001
  9609   003E32  EF1D  F01F         	goto	u5000
  9610   003E36                     u5001:
  9611   003E36  EFF6  F01E         	goto	l4411
  9612   003E3A                     u5000:
  9613   003E3A                     
  9614                           ;main.c: 305:     pwm[0] = 0;
  9615   003E3A  0E00               	movlw	0
  9616   003E3C  6E53               	movwf	(_pwm+1)^0,c
  9617   003E3E  0E00               	movlw	0
  9618   003E40  6E52               	movwf	_pwm^0,c
  9619                           
  9620                           ;main.c: 306:     pwm[1] = 0;
  9621   003E42  0E00               	movlw	0
  9622   003E44  6E55               	movwf	(_pwm+3)^0,c
  9623   003E46  0E00               	movlw	0
  9624   003E48  6E54               	movwf	(_pwm+2)^0,c
  9625   003E4A  0012               	return		;funcret
  9626   003E4C                     __end_of_init_vars:
  9627                           	callstack 0
  9628                           
  9629 ;; *************** function _init *****************
  9630 ;; Defined at:
  9631 ;;		line 369 in file "main.c"
  9632 ;; Parameters:    Size  Location     Type
  9633 ;;		None
  9634 ;; Auto vars:     Size  Location     Type
  9635 ;;		None
  9636 ;; Return value:  Size  Location     Type
  9637 ;;                  1    wreg      void 
  9638 ;; Registers used:
  9639 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9640 ;; Tracked objects:
  9641 ;;		On entry : 0/0
  9642 ;;		On exit  : 0/0
  9643 ;;		Unchanged: 0/0
  9644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9645 ;;      Params:         0       0       0       0       0       0       0       0       0
  9646 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9647 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9648 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9649 ;;Total ram usage:        0 bytes
  9650 ;; Hardware stack levels used: 1
  9651 ;; Hardware stack levels required when called: 1
  9652 ;; This function calls:
  9653 ;;		Nothing
  9654 ;; This function is called by:
  9655 ;;		_main
  9656 ;; This function uses a non-reentrant model
  9657 ;;
  9658                           
  9659                           	psect	text36
  9660   003EB2                     __ptext36:
  9661                           	callstack 0
  9662   003EB2                     _init:
  9663                           	callstack 29
  9664   003EB2                     
  9665                           ;main.c: 370:     value = 0;
  9666   003EB2  EE21  F08C         	lfsr	2,_value
  9667   003EB6  0E07               	movlw	7
  9668   003EB8                     u5151:
  9669   003EB8  6ADE               	clrf	postinc2,c
  9670   003EBA  06E8               	decf	wreg,f,c
  9671   003EBC  E2FD               	bc	u5151
  9672   003EBE                     
  9673                           ;main.c: 371:     b_state[0] = 0;
  9674   003EBE  0E00               	movlw	0
  9675   003EC0  0100               	movlb	0	; () banked
  9676   003EC2  6FEA               	movwf	_b_state& (0+255),b
  9677   003EC4                     
  9678                           ; BSR set to: 0
  9679                           ;main.c: 372:     last_b[0] = 0;
  9680   003EC4  0E00               	movlw	0
  9681   003EC6  6FEF               	movwf	_last_b& (0+255),b
  9682                           
  9683                           ;main.c: 374:     b_counter[0] = 0;
  9684   003EC8  EE21  F028         	lfsr	2,_b_counter
  9685   003ECC  0E07               	movlw	7
  9686   003ECE                     u5161:
  9687   003ECE  6ADE               	clrf	postinc2,c
  9688   003ED0  06E8               	decf	wreg,f,c
  9689   003ED2  E2FD               	bc	u5161
  9690                           
  9691                           ;main.c: 375:     state_counter[0] = 0;
  9692   003ED4  EE21  F000         	lfsr	2,_state_counter
  9693   003ED8  0E07               	movlw	7
  9694   003EDA                     u5171:
  9695   003EDA  6ADE               	clrf	postinc2,c
  9696   003EDC  06E8               	decf	wreg,f,c
  9697   003EDE  E2FD               	bc	u5171
  9698   003EE0                     
  9699                           ; BSR set to: 0
  9700                           ;main.c: 376:     combination_state[0] = 0;
  9701   003EE0  0E00               	movlw	0
  9702   003EE2  6FE0               	movwf	_combination_state& (0+255),b
  9703   003EE4                     
  9704                           ; BSR set to: 0
  9705                           ;main.c: 377:     single_click_evt[0] = 0;
  9706   003EE4  0E00               	movlw	0
  9707   003EE6  0101               	movlb	1	; () banked
  9708   003EE8  6F9E               	movwf	_single_click_evt& (0+255),b
  9709   003EEA                     
  9710                           ; BSR set to: 1
  9711                           ;main.c: 378:     double_click_evt[0] = 0;
  9712   003EEA  0E00               	movlw	0
  9713   003EEC  6F99               	movwf	_double_click_evt& (0+255),b
  9714   003EEE                     
  9715                           ; BSR set to: 1
  9716                           ;main.c: 379:     triple_click_evt[0] = 0;
  9717   003EEE  0E00               	movlw	0
  9718   003EF0  6F94               	movwf	_triple_click_evt& (0+255),b
  9719                           
  9720                           ;main.c: 381:     iterations = 0;
  9721   003EF2  EE20  F0D8         	lfsr	2,_iterations
  9722   003EF6  0E07               	movlw	7
  9723   003EF8                     u5181:
  9724   003EF8  6ADE               	clrf	postinc2,c
  9725   003EFA  06E8               	decf	wreg,f,c
  9726   003EFC  E2FD               	bc	u5181
  9727                           
  9728                           ;main.c: 382:     sum_iterations = 0;
  9729   003EFE  EE20  F0D0         	lfsr	2,_sum_iterations
  9730   003F02  0E07               	movlw	7
  9731   003F04                     u5191:
  9732   003F04  6ADE               	clrf	postinc2,c
  9733   003F06  06E8               	decf	wreg,f,c
  9734   003F08  E2FD               	bc	u5191
  9735                           
  9736                           ;main.c: 383:     amount_cycles = 0;
  9737   003F0A  EE20  F0C8         	lfsr	2,_amount_cycles
  9738   003F0E  0E07               	movlw	7
  9739   003F10                     u5201:
  9740   003F10  6ADE               	clrf	postinc2,c
  9741   003F12  06E8               	decf	wreg,f,c
  9742   003F14  E2FD               	bc	u5201
  9743   003F16                     
  9744                           ; BSR set to: 1
  9745   003F16  0012               	return		;funcret
  9746   003F18                     __end_of_init:
  9747                           	callstack 0
  9748                           
  9749 ;; *************** function _config_micro *****************
  9750 ;; Defined at:
  9751 ;;		line 71 in file "main.c"
  9752 ;; Parameters:    Size  Location     Type
  9753 ;;		None
  9754 ;; Auto vars:     Size  Location     Type
  9755 ;;		None
  9756 ;; Return value:  Size  Location     Type
  9757 ;;                  1    wreg      void 
  9758 ;; Registers used:
  9759 ;;		wreg, status,2
  9760 ;; Tracked objects:
  9761 ;;		On entry : 0/0
  9762 ;;		On exit  : 0/0
  9763 ;;		Unchanged: 0/0
  9764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9765 ;;      Params:         0       0       0       0       0       0       0       0       0
  9766 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9767 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9768 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9769 ;;Total ram usage:        0 bytes
  9770 ;; Hardware stack levels used: 1
  9771 ;; Hardware stack levels required when called: 1
  9772 ;; This function calls:
  9773 ;;		Nothing
  9774 ;; This function is called by:
  9775 ;;		_main
  9776 ;; This function uses a non-reentrant model
  9777 ;;
  9778                           
  9779                           	psect	text37
  9780   00396E                     __ptext37:
  9781                           	callstack 0
  9782   00396E                     _config_micro:
  9783                           	callstack 29
  9784   00396E                     
  9785                           ;main.c: 73:     OSCCONbits.IRCF = 7;
  9786   00396E  0E70               	movlw	112
  9787   003970  12D3               	iorwf	211,f,c	;volatile
  9788                           
  9789                           ;main.c: 76:     CMCON=0x07;
  9790   003972  0E07               	movlw	7
  9791   003974  6EB4               	movwf	180,c	;volatile
  9792   003976                     
  9793                           ;main.c: 79:     UCONbits.USBEN = 0;
  9794   003976  966D               	bcf	109,3,c	;volatile
  9795   003978                     
  9796                           ;main.c: 80:     UCFGbits.UTRDIS = 1;
  9797   003978  866F               	bsf	111,3,c	;volatile
  9798   00397A                     
  9799                           ;main.c: 83:     T0CONbits.TMR0ON = 0;
  9800   00397A  9ED5               	bcf	213,7,c	;volatile
  9801   00397C                     
  9802                           ;main.c: 84:     T0CONbits.T08BIT = 0;
  9803   00397C  9CD5               	bcf	213,6,c	;volatile
  9804   00397E                     
  9805                           ;main.c: 85:     T0CONbits.T0CS = 0;
  9806   00397E  9AD5               	bcf	213,5,c	;volatile
  9807   003980                     
  9808                           ;main.c: 86:     T0CONbits.PSA = 0;
  9809   003980  96D5               	bcf	213,3,c	;volatile
  9810                           
  9811                           ;main.c: 87:     T0CONbits.T0PS = 0b101;
  9812   003982  50D5               	movf	213,w,c	;volatile
  9813   003984  0BF8               	andlw	-8
  9814   003986  0905               	iorlw	5
  9815   003988  6ED5               	movwf	213,c	;volatile
  9816   00398A                     
  9817                           ;main.c: 90:     INTCON2bits.TMR0IP = 1;
  9818   00398A  84F1               	bsf	241,2,c	;volatile
  9819   00398C                     
  9820                           ;main.c: 91:     INTCONbits.TMR0IE = 1;
  9821   00398C  8AF2               	bsf	242,5,c	;volatile
  9822   00398E                     
  9823                           ;main.c: 92:     RCONbits.IPEN = 0;
  9824   00398E  9ED0               	bcf	208,7,c	;volatile
  9825                           
  9826                           ;main.c: 95:     TMR0H = 0xF8;
  9827   003990  0EF8               	movlw	248
  9828   003992  6ED7               	movwf	215,c	;volatile
  9829                           
  9830                           ;main.c: 96:     TMR0L = 0xAC;
  9831   003994  0EAC               	movlw	172
  9832   003996  6ED6               	movwf	214,c	;volatile
  9833   003998                     
  9834                           ;main.c: 101:     T1CONbits.TMR1ON = 0;
  9835   003998  90CD               	bcf	205,0,c	;volatile
  9836   00399A                     
  9837                           ;main.c: 102:     T1CONbits.T1RD16 = 0;
  9838   00399A  9ECD               	bcf	205,7,c	;volatile
  9839   00399C                     
  9840                           ;main.c: 103:     T1CONbits.T1RUN = 0;
  9841   00399C  9CCD               	bcf	205,6,c	;volatile
  9842                           
  9843                           ;main.c: 104:     T1CONbits.T1CKPS = 0;
  9844   00399E  0ECF               	movlw	-49
  9845   0039A0  16CD               	andwf	205,f,c	;volatile
  9846   0039A2                     
  9847                           ;main.c: 105:     T1CONbits.T1OSCEN = 0;
  9848   0039A2  96CD               	bcf	205,3,c	;volatile
  9849   0039A4                     
  9850                           ;main.c: 106:     T1CONbits.TMR1CS = 0;
  9851   0039A4  92CD               	bcf	205,1,c	;volatile
  9852   0039A6                     
  9853                           ;main.c: 109:     INTCONbits.GIE = 1;
  9854   0039A6  8EF2               	bsf	242,7,c	;volatile
  9855   0039A8                     
  9856                           ;main.c: 110:     T0CONbits.TMR0ON = 1;
  9857   0039A8  8ED5               	bsf	213,7,c	;volatile
  9858   0039AA                     
  9859                           ;main.c: 111:     T1CONbits.TMR1ON = 1;
  9860   0039AA  80CD               	bsf	205,0,c	;volatile
  9861                           
  9862                           ;main.c: 113:     TMR1H = 0xF8;
  9863   0039AC  0EF8               	movlw	248
  9864   0039AE  6ECF               	movwf	207,c	;volatile
  9865                           
  9866                           ;main.c: 114:     TMR1L = 0x2F;
  9867   0039B0  0E2F               	movlw	47
  9868   0039B2  6ECE               	movwf	206,c	;volatile
  9869   0039B4                     
  9870                           ;main.c: 119:     T2CONbits.TMR2ON=0;
  9871   0039B4  94CA               	bcf	202,2,c	;volatile
  9872                           
  9873                           ;main.c: 120:     T2CONbits.TOUTPS=0b01;
  9874   0039B6  50CA               	movf	202,w,c	;volatile
  9875   0039B8  0B87               	andlw	-121
  9876   0039BA  0908               	iorlw	8
  9877   0039BC  6ECA               	movwf	202,c	;volatile
  9878                           
  9879                           ;main.c: 121:     T2CONbits.T2CKPS=0b01;
  9880   0039BE  50CA               	movf	202,w,c	;volatile
  9881   0039C0  0BFC               	andlw	-4
  9882   0039C2  0901               	iorlw	1
  9883   0039C4  6ECA               	movwf	202,c	;volatile
  9884                           
  9885                           ;main.c: 124:     CCP1CONbits.CCP1M = 0b1100;
  9886   0039C6  50BD               	movf	189,w,c	;volatile
  9887   0039C8  0BF0               	andlw	-16
  9888   0039CA  090C               	iorlw	12
  9889   0039CC  6EBD               	movwf	189,c	;volatile
  9890                           
  9891                           ;main.c: 125:     CCP2CONbits.CCP2M = 0b1100;
  9892   0039CE  50BA               	movf	186,w,c	;volatile
  9893   0039D0  0BF0               	andlw	-16
  9894   0039D2  090C               	iorlw	12
  9895   0039D4  6EBA               	movwf	186,c	;volatile
  9896                           
  9897                           ;main.c: 126:     PR2=149;
  9898   0039D6  0E95               	movlw	149
  9899   0039D8  6ECB               	movwf	203,c	;volatile
  9900                           
  9901                           ;main.c: 130:     CCP1CONbits.DC1B = 0;
  9902   0039DA  0ECF               	movlw	-49
  9903   0039DC  16BD               	andwf	189,f,c	;volatile
  9904                           
  9905                           ;main.c: 131:     CCP2CONbits.DC2B = 0;
  9906   0039DE  0ECF               	movlw	-49
  9907   0039E0  16BA               	andwf	186,f,c	;volatile
  9908                           
  9909                           ;main.c: 132:     CCPR1L = 0;
  9910   0039E2  0E00               	movlw	0
  9911   0039E4  6EBE               	movwf	190,c	;volatile
  9912                           
  9913                           ;main.c: 133:     CCPR2L = 0;
  9914   0039E6  0E00               	movlw	0
  9915   0039E8  6EBB               	movwf	187,c	;volatile
  9916   0039EA                     
  9917                           ;main.c: 135:     T2CONbits.TMR2ON=1;
  9918   0039EA  84CA               	bsf	202,2,c	;volatile
  9919                           
  9920                           ;main.c: 138:     ADCON0bits.CHS=0;
  9921   0039EC  0EC3               	movlw	-61
  9922   0039EE  16C2               	andwf	194,f,c	;volatile
  9923   0039F0                     
  9924                           ;main.c: 139:     ADCON0bits.GODONE=0;
  9925   0039F0  92C2               	bcf	194,1,c	;volatile
  9926   0039F2                     
  9927                           ;main.c: 140:     ADCON0bits.ADON=1;
  9928   0039F2  80C2               	bsf	194,0,c	;volatile
  9929                           
  9930                           ;main.c: 142:     ADCON1bits.VCFG = 0;
  9931   0039F4  0ECF               	movlw	-49
  9932   0039F6  16C1               	andwf	193,f,c	;volatile
  9933                           
  9934                           ;main.c: 143:     ADCON1bits.PCFG = 0b1001;
  9935   0039F8  50C1               	movf	193,w,c	;volatile
  9936   0039FA  0BF0               	andlw	-16
  9937   0039FC  0909               	iorlw	9
  9938   0039FE  6EC1               	movwf	193,c	;volatile
  9939   003A00                     
  9940                           ;main.c: 145:     ADCON2bits.ADFM=0;
  9941   003A00  9EC0               	bcf	192,7,c	;volatile
  9942                           
  9943                           ;main.c: 146:     ADCON2bits.ACQT=7;
  9944   003A02  0E38               	movlw	56
  9945   003A04  12C0               	iorwf	192,f,c	;volatile
  9946                           
  9947                           ;main.c: 147:     ADCON2bits.ADCS=6;
  9948   003A06  50C0               	movf	192,w,c	;volatile
  9949   003A08  0BF8               	andlw	-8
  9950   003A0A  0906               	iorlw	6
  9951   003A0C  6EC0               	movwf	192,c	;volatile
  9952   003A0E                     
  9953                           ;main.c: 152:     TRISCbits.RC6 = 1;
  9954   003A0E  8C94               	bsf	148,6,c	;volatile
  9955   003A10                     
  9956                           ;main.c: 153:     TRISCbits.RC7 = 1;
  9957   003A10  8E94               	bsf	148,7,c	;volatile
  9958   003A12                     
  9959                           ;main.c: 155:     BAUDCONbits.RXDTP=0;
  9960   003A12  9AB8               	bcf	184,5,c	;volatile
  9961   003A14                     
  9962                           ;main.c: 156:     BAUDCONbits.TXCKP=0;
  9963   003A14  98B8               	bcf	184,4,c	;volatile
  9964   003A16                     
  9965                           ;main.c: 157:     BAUDCONbits.BRG16=1;
  9966   003A16  86B8               	bsf	184,3,c	;volatile
  9967   003A18                     
  9968                           ;main.c: 159:     BAUDCONbits.WUE=0;
  9969   003A18  92B8               	bcf	184,1,c	;volatile
  9970   003A1A                     
  9971                           ;main.c: 160:     BAUDCONbits.ABDEN=0;
  9972   003A1A  90B8               	bcf	184,0,c	;volatile
  9973                           
  9974                           ;main.c: 161:     SPBRG=51;
  9975   003A1C  0E33               	movlw	51
  9976   003A1E  6EAF               	movwf	175,c	;volatile
  9977                           
  9978                           ;main.c: 162:     SPBRGH=0;
  9979   003A20  0E00               	movlw	0
  9980   003A22  6EB0               	movwf	176,c	;volatile
  9981   003A24                     
  9982                           ;main.c: 163:     TXSTAbits.CSRC=0;
  9983   003A24  9EAC               	bcf	172,7,c	;volatile
  9984   003A26                     
  9985                           ;main.c: 164:     TXSTAbits.TX9=0;
  9986   003A26  9CAC               	bcf	172,6,c	;volatile
  9987   003A28                     
  9988                           ;main.c: 165:     TXSTAbits.TXEN=1;
  9989   003A28  8AAC               	bsf	172,5,c	;volatile
  9990   003A2A                     
  9991                           ;main.c: 166:     TXSTAbits.SYNC=0;
  9992   003A2A  98AC               	bcf	172,4,c	;volatile
  9993   003A2C                     
  9994                           ;main.c: 168:     TXSTAbits.BRGH=0;
  9995   003A2C  94AC               	bcf	172,2,c	;volatile
  9996   003A2E                     
  9997                           ;main.c: 169:     RCSTAbits.RX9=0;
  9998   003A2E  9CAB               	bcf	171,6,c	;volatile
  9999   003A30                     
 10000                           ;main.c: 170:     RCSTAbits.CREN=1;
 10001   003A30  88AB               	bsf	171,4,c	;volatile
 10002   003A32                     
 10003                           ;main.c: 171:     RCSTAbits.SPEN=1;
 10004   003A32  8EAB               	bsf	171,7,c	;volatile
 10005   003A34                     
 10006                           ;main.c: 177:     TRISBbits.RB0 = 0;
 10007   003A34  9093               	bcf	147,0,c	;volatile
 10008   003A36                     
 10009                           ;main.c: 178:     TRISBbits.RB1 = 0;
 10010   003A36  9293               	bcf	147,1,c	;volatile
 10011   003A38                     
 10012                           ;main.c: 179:     TRISBbits.RB2 = 0;
 10013   003A38  9493               	bcf	147,2,c	;volatile
 10014   003A3A                     
 10015                           ;main.c: 180:     TRISBbits.RB4 = 0;
 10016   003A3A  9893               	bcf	147,4,c	;volatile
 10017   003A3C                     
 10018                           ;main.c: 181:     TRISBbits.RB5 = 0;
 10019   003A3C  9A93               	bcf	147,5,c	;volatile
 10020   003A3E                     
 10021                           ;main.c: 184:     TRISDbits.RD2 = 1;
 10022   003A3E  8495               	bsf	149,2,c	;volatile
 10023   003A40                     
 10024                           ;main.c: 185:     TRISDbits.RD3 = 1;
 10025   003A40  8695               	bsf	149,3,c	;volatile
 10026   003A42                     
 10027                           ;main.c: 188:     TRISAbits.RA0 = 1;
 10028   003A42  8092               	bsf	146,0,c	;volatile
 10029   003A44                     
 10030                           ;main.c: 189:     TRISAbits.RA1 = 1;
 10031   003A44  8292               	bsf	146,1,c	;volatile
 10032   003A46                     
 10033                           ;main.c: 190:     TRISAbits.RA2 = 1;
 10034   003A46  8492               	bsf	146,2,c	;volatile
 10035   003A48                     
 10036                           ;main.c: 191:     TRISAbits.RA3 = 1;
 10037   003A48  8692               	bsf	146,3,c	;volatile
 10038   003A4A                     
 10039                           ;main.c: 192:     TRISAbits.RA4 = 1;
 10040   003A4A  8892               	bsf	146,4,c	;volatile
 10041   003A4C                     
 10042                           ;main.c: 193:     TRISEbits.RE0 = 1;
 10043   003A4C  8096               	bsf	150,0,c	;volatile
 10044   003A4E                     
 10045                           ;main.c: 196:     TRISDbits.RD1 = 0;
 10046   003A4E  9295               	bcf	149,1,c	;volatile
 10047   003A50                     
 10048                           ;main.c: 197:     TRISDbits.RD0 = 0;
 10049   003A50  9095               	bcf	149,0,c	;volatile
 10050   003A52                     
 10051                           ;main.c: 198:     TRISCbits.RC1 = 0;
 10052   003A52  9294               	bcf	148,1,c	;volatile
 10053   003A54                     
 10054                           ;main.c: 199:     TRISCbits.RC0 = 0;
 10055   003A54  9094               	bcf	148,0,c	;volatile
 10056   003A56                     
 10057                           ;main.c: 200:     TRISBbits.RB3 = 0;
 10058   003A56  9693               	bcf	147,3,c	;volatile
 10059   003A58                     
 10060                           ;main.c: 201:     TRISCbits.RC2 = 0;
 10061   003A58  9494               	bcf	148,2,c	;volatile
 10062   003A5A  0012               	return		;funcret
 10063   003A5C                     __end_of_config_micro:
 10064                           	callstack 0
 10065                           
 10066 ;; *************** function _enc *****************
 10067 ;; Defined at:
 10068 ;;		line 286 in file "main.c"
 10069 ;; Parameters:    Size  Location     Type
 10070 ;;		None
 10071 ;; Auto vars:     Size  Location     Type
 10072 ;;  i               2    4[COMRAM] int 
 10073 ;; Return value:  Size  Location     Type
 10074 ;;                  1    wreg      void 
 10075 ;; Registers used:
 10076 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10077 ;; Tracked objects:
 10078 ;;		On entry : 0/0
 10079 ;;		On exit  : 0/0
 10080 ;;		Unchanged: 0/0
 10081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10082 ;;      Params:         0       0       0       0       0       0       0       0       0
 10083 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10084 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10085 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10086 ;;Total ram usage:        6 bytes
 10087 ;; Hardware stack levels used: 1
 10088 ;; This function calls:
 10089 ;;		Nothing
 10090 ;; This function is called by:
 10091 ;;		Interrupt level 2
 10092 ;; This function uses a non-reentrant model
 10093 ;;
 10094                           
 10095                           	psect	intcode
 10096   000008                     __pintcode:
 10097                           	callstack 0
 10098   000008                     _enc:
 10099                           	callstack 21
 10100                           
 10101                           ;incstack = 0
 10102   000008  8258               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10103   00000A  ED30  F01E         	call	int_func,f	;refresh shadow registers
 10104                           
 10105                           	psect	intcode_body
 10106   003C60                     __pintcode_body:
 10107                           	callstack 21
 10108   003C60                     int_func:
 10109                           	callstack 21
 10110   003C60  0006               	pop		; remove dummy address from shadow register refresh
 10111   003C62  CFD9 F003          	movff	fsr2l,??_enc+2
 10112   003C66  CFDA F004          	movff	fsr2h,??_enc+3
 10113   003C6A                     
 10114                           ;main.c: 287:     if (TMR0IF){
 10115   003C6A  A4F2               	btfss	4082,2,c	;volatile
 10116   003C6C  EF3A  F01E         	goto	i2u563_41
 10117   003C70  EF3C  F01E         	goto	i2u563_40
 10118   003C74                     i2u563_41:
 10119   003C74  EF71  F01E         	goto	i2l142
 10120   003C78                     i2u563_40:
 10121   003C78                     
 10122                           ;main.c: 289:         TMR0H = 0xF8;
 10123   003C78  0EF8               	movlw	248
 10124   003C7A  6ED7               	movwf	215,c	;volatile
 10125                           
 10126                           ;main.c: 290:         TMR0L = 0xAC;
 10127   003C7C  0EAC               	movlw	172
 10128   003C7E  6ED6               	movwf	214,c	;volatile
 10129   003C80                     
 10130                           ;main.c: 291:         TMR0IF = 0;
 10131   003C80  94F2               	bcf	4082,2,c	;volatile
 10132                           
 10133                           ;main.c: 293:         int i;;main.c: 294:         for (i=0;i<5;i++){
 10134   003C82  0E00               	movlw	0
 10135   003C84  6E06               	movwf	(enc@i+1)^0,c
 10136   003C86  0E00               	movlw	0
 10137   003C88  6E05               	movwf	enc@i^0,c
 10138   003C8A                     i2l4667:
 10139                           
 10140                           ;main.c: 295:             counter[i] ++;
 10141   003C8A  C005  F001         	movff	enc@i,??_enc
 10142   003C8E  C006  F002         	movff	enc@i+1,??_enc+1
 10143   003C92  90D8               	bcf	status,0,c
 10144   003C94  3601               	rlcf	??_enc^0,f,c
 10145   003C96  3602               	rlcf	(??_enc+1)^0,f,c
 10146   003C98  90D8               	bcf	status,0,c
 10147   003C9A  3601               	rlcf	??_enc^0,f,c
 10148   003C9C  3602               	rlcf	(??_enc+1)^0,f,c
 10149   003C9E  90D8               	bcf	status,0,c
 10150   003CA0  3601               	rlcf	??_enc^0,f,c
 10151   003CA2  3602               	rlcf	(??_enc+1)^0,f,c
 10152   003CA4  0E50               	movlw	low _counter
 10153   003CA6  2401               	addwf	??_enc^0,w,c
 10154   003CA8  6ED9               	movwf	fsr2l,c
 10155   003CAA  0E01               	movlw	high _counter
 10156   003CAC  2002               	addwfc	(??_enc+1)^0,w,c
 10157   003CAE  6EDA               	movwf	fsr2h,c
 10158   003CB0  2ADE               	incf	postinc2,f,c
 10159   003CB2  0E00               	movlw	0
 10160   003CB4  22DE               	addwfc	postinc2,f,c
 10161   003CB6  22DE               	addwfc	postinc2,f,c
 10162   003CB8  22DE               	addwfc	postinc2,f,c
 10163   003CBA  22DE               	addwfc	postinc2,f,c
 10164   003CBC  22DE               	addwfc	postinc2,f,c
 10165   003CBE  22DE               	addwfc	postinc2,f,c
 10166   003CC0  22DE               	addwfc	postinc2,f,c
 10167   003CC2                     
 10168                           ;main.c: 296:         }
 10169   003CC2  4A05               	infsnz	enc@i^0,f,c
 10170   003CC4  2A06               	incf	(enc@i+1)^0,f,c
 10171   003CC6  BE06               	btfsc	(enc@i+1)^0,7,c
 10172   003CC8  EF6F  F01E         	goto	i2u564_41
 10173   003CCC  5006               	movf	(enc@i+1)^0,w,c
 10174   003CCE  E109               	bnz	i2u564_40
 10175   003CD0  0E05               	movlw	5
 10176   003CD2  5C05               	subwf	enc@i^0,w,c
 10177   003CD4  A0D8               	btfss	status,0,c
 10178   003CD6  EF6F  F01E         	goto	i2u564_41
 10179   003CDA  EF71  F01E         	goto	i2u564_40
 10180   003CDE                     i2u564_41:
 10181   003CDE  EF45  F01E         	goto	i2l4667
 10182   003CE2                     i2u564_40:
 10183   003CE2                     i2l142:
 10184   003CE2  C004  FFDA         	movff	??_enc+3,fsr2h
 10185   003CE6  C003  FFD9         	movff	??_enc+2,fsr2l
 10186   003CEA  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10187   003CEC  0011               	retfie		f
 10188   003CEE                     __end_of_enc:
 10189                           	callstack 0
 10190                           
 10191                           	psect	rparam
 10192   000000                     
 10193                           	psect	temp
 10194   000058                     btemp:
 10195                           	callstack 0
 10196   000058                     	ds	1
 10197   000000                     int$flags	set	btemp
 10198   000000                     wtemp8	set	btemp+1
 10199   000000                     ttemp5	set	btemp+1
 10200   000000                     ttemp6	set	btemp+4
 10201   000000                     ttemp7	set	btemp+8
 10202                           
 10203                           	psect	idloc
 10204                           
 10205                           ;Config register IDLOC0 @ 0x200000
 10206                           ;	unspecified, using default values
 10207   200000                     	org	2097152
 10208   200000  FF                 	db	255
 10209                           
 10210                           ;Config register IDLOC1 @ 0x200001
 10211                           ;	unspecified, using default values
 10212   200001                     	org	2097153
 10213   200001  FF                 	db	255
 10214                           
 10215                           ;Config register IDLOC2 @ 0x200002
 10216                           ;	unspecified, using default values
 10217   200002                     	org	2097154
 10218   200002  FF                 	db	255
 10219                           
 10220                           ;Config register IDLOC3 @ 0x200003
 10221                           ;	unspecified, using default values
 10222   200003                     	org	2097155
 10223   200003  FF                 	db	255
 10224                           
 10225                           ;Config register IDLOC4 @ 0x200004
 10226                           ;	unspecified, using default values
 10227   200004                     	org	2097156
 10228   200004  FF                 	db	255
 10229                           
 10230                           ;Config register IDLOC5 @ 0x200005
 10231                           ;	unspecified, using default values
 10232   200005                     	org	2097157
 10233   200005  FF                 	db	255
 10234                           
 10235                           ;Config register IDLOC6 @ 0x200006
 10236                           ;	unspecified, using default values
 10237   200006                     	org	2097158
 10238   200006  FF                 	db	255
 10239                           
 10240                           ;Config register IDLOC7 @ 0x200007
 10241                           ;	unspecified, using default values
 10242   200007                     	org	2097159
 10243   200007  FF                 	db	255
 10244                           
 10245                           	psect	config
 10246                           
 10247                           ;Config register CONFIG1L @ 0x300000
 10248                           ;	PLL Prescaler Selection bits
 10249                           ;	PLLDIV = 5, Divide by 5 (20 MHz oscillator input)
 10250                           ;	System Clock Postscaler Selection bits
 10251                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
 10252                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 10253                           ;	USBDIV = 2, USB clock source comes from the 96 MHz PLL divided by 2
 10254   300000                     	org	3145728
 10255   300000  24                 	db	36
 10256                           
 10257                           ;Config register CONFIG1H @ 0x300001
 10258                           ;	Oscillator Selection bits
 10259                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
 10260                           ;	Fail-Safe Clock Monitor Enable bit
 10261                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 10262                           ;	Internal/External Oscillator Switchover bit
 10263                           ;	IESO = OFF, Oscillator Switchover mode disabled
 10264   300001                     	org	3145729
 10265   300001  0E                 	db	14
 10266                           
 10267                           ;Config register CONFIG2L @ 0x300002
 10268                           ;	Power-up Timer Enable bit
 10269                           ;	PWRT = OFF, PWRT disabled
 10270                           ;	Brown-out Reset Enable bits
 10271                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
 10272                           ;	Brown-out Reset Voltage bits
 10273                           ;	BORV = 3, Minimum setting 2.05V
 10274                           ;	USB Voltage Regulator Enable bit
 10275                           ;	VREGEN = OFF, USB voltage regulator disabled
 10276   300002                     	org	3145730
 10277   300002  19                 	db	25
 10278                           
 10279                           ;Config register CONFIG2H @ 0x300003
 10280                           ;	Watchdog Timer Enable bit
 10281                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10282                           ;	Watchdog Timer Postscale Select bits
 10283                           ;	WDTPS = 32768, 1:32768
 10284   300003                     	org	3145731
 10285   300003  1E                 	db	30
 10286                           
 10287                           ; Padding undefined space
 10288   300004                     	org	3145732
 10289   300004  FF                 	db	255
 10290                           
 10291                           ;Config register CONFIG3H @ 0x300005
 10292                           ;	CCP2 MUX bit
 10293                           ;	CCP2MX = OFF, CCP2 input/output is multiplexed with RB3
 10294                           ;	PORTB A/D Enable bit
 10295                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 10296                           ;	Low-Power Timer 1 Oscillator Enable bit
 10297                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 10298                           ;	MCLR Pin Enable bit
 10299                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
 10300   300005                     	org	3145733
 10301   300005  00                 	db	0
 10302                           
 10303                           ;Config register CONFIG4L @ 0x300006
 10304                           ;	Stack Full/Underflow Reset Enable bit
 10305                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10306                           ;	Single-Supply ICSP Enable bit
 10307                           ;	LVP = OFF, Single-Supply ICSP disabled
 10308                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 10309                           ;	ICPRT = OFF, ICPORT disabled
 10310                           ;	Extended Instruction Set Enable bit
 10311                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 10312                           ;	Background Debugger Enable bit
 10313                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
 10314   300006                     	org	3145734
 10315   300006  81                 	db	129
 10316                           
 10317                           ; Padding undefined space
 10318   300007                     	org	3145735
 10319   300007  FF                 	db	255
 10320                           
 10321                           ;Config register CONFIG5L @ 0x300008
 10322                           ;	Code Protection bit
 10323                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
 10324                           ;	Code Protection bit
 10325                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
 10326                           ;	Code Protection bit
 10327                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
 10328                           ;	Code Protection bit
 10329                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
 10330   300008                     	org	3145736
 10331   300008  0F                 	db	15
 10332                           
 10333                           ;Config register CONFIG5H @ 0x300009
 10334                           ;	Boot Block Code Protection bit
 10335                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
 10336                           ;	Data EEPROM Code Protection bit
 10337                           ;	CPD = OFF, Data EEPROM is not code-protected
 10338   300009                     	org	3145737
 10339   300009  C0                 	db	192
 10340                           
 10341                           ;Config register CONFIG6L @ 0x30000A
 10342                           ;	Write Protection bit
 10343                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
 10344                           ;	Write Protection bit
 10345                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
 10346                           ;	Write Protection bit
 10347                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
 10348                           ;	Write Protection bit
 10349                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
 10350   30000A                     	org	3145738
 10351   30000A  0F                 	db	15
 10352                           
 10353                           ;Config register CONFIG6H @ 0x30000B
 10354                           ;	Configuration Register Write Protection bit
 10355                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 10356                           ;	Boot Block Write Protection bit
 10357                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
 10358                           ;	Data EEPROM Write Protection bit
 10359                           ;	WRTD = OFF, Data EEPROM is not write-protected
 10360   30000B                     	org	3145739
 10361   30000B  E0                 	db	224
 10362                           
 10363                           ;Config register CONFIG7L @ 0x30000C
 10364                           ;	Table Read Protection bit
 10365                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10366                           ;	Table Read Protection bit
 10367                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10368                           ;	Table Read Protection bit
 10369                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10370                           ;	Table Read Protection bit
 10371                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10372   30000C                     	org	3145740
 10373   30000C  0F                 	db	15
 10374                           
 10375                           ;Config register CONFIG7H @ 0x30000D
 10376                           ;	Boot Block Table Read Protection bit
 10377                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
 10378   30000D                     	org	3145741
 10379   30000D  40                 	db	64
 10380                           tosu	equ	0xFFF
 10381                           tosh	equ	0xFFE
 10382                           tosl	equ	0xFFD
 10383                           stkptr	equ	0xFFC
 10384                           pclatu	equ	0xFFB
 10385                           pclath	equ	0xFFA
 10386                           pcl	equ	0xFF9
 10387                           tblptru	equ	0xFF8
 10388                           tblptrh	equ	0xFF7
 10389                           tblptrl	equ	0xFF6
 10390                           tablat	equ	0xFF5
 10391                           prodh	equ	0xFF4
 10392                           prodl	equ	0xFF3
 10393                           indf0	equ	0xFEF
 10394                           postinc0	equ	0xFEE
 10395                           postdec0	equ	0xFED
 10396                           preinc0	equ	0xFEC
 10397                           plusw0	equ	0xFEB
 10398                           fsr0h	equ	0xFEA
 10399                           fsr0l	equ	0xFE9
 10400                           wreg	equ	0xFE8
 10401                           indf1	equ	0xFE7
 10402                           postinc1	equ	0xFE6
 10403                           postdec1	equ	0xFE5
 10404                           preinc1	equ	0xFE4
 10405                           plusw1	equ	0xFE3
 10406                           fsr1h	equ	0xFE2
 10407                           fsr1l	equ	0xFE1
 10408                           bsr	equ	0xFE0
 10409                           indf2	equ	0xFDF
 10410                           postinc2	equ	0xFDE
 10411                           postdec2	equ	0xFDD
 10412                           preinc2	equ	0xFDC
 10413                           plusw2	equ	0xFDB
 10414                           fsr2h	equ	0xFDA
 10415                           fsr2l	equ	0xFD9
 10416                           status	equ	0xFD8

Data Sizes:
    Strings     111
    Constant    0
    Data        0
    BSS         570
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     81      87
    BANK0           160    104     159
    BANK1           256      0     253
    BANK2           256      0     256
    BANK3           256      5       5
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1780$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S1780$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 60
		 -> STR_2(CODE[60]), STR_1(CODE[43]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 60
		 -> STR_2(CODE[60]), STR_1(CODE[43]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 60
		 -> STR_2(CODE[60]), STR_1(CODE[43]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 60
		 -> STR_2(CODE[60]), STR_1(CODE[43]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1851$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 60
		 -> STR_2(CODE[60]), STR_1(CODE[43]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 


Critical Paths under _main in COMRAM

    _update_pwm->___awdiv
    _read_analog->___awdiv
    _printf->_vfprintf
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    ___fldiv->___xotofl
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___aomod
    _atoi->___wmul

Critical Paths under _enc in COMRAM

    None.

Critical Paths under _main in BANK0

    _loop->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _enc in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _enc in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _enc in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_loop

Critical Paths under _enc in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _enc in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _enc in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _enc in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _enc in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   41402
                       _config_micro
                               _init
                          _init_vars
                               _loop
                        _read_analog
                         _update_pwm
 ---------------------------------------------------------------------------------
 (1) _update_pwm                                           5     5      0    1028
                                             14 COMRAM     5     5      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _read_analog                                          4     4      0     892
                                             14 COMRAM     4     4      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     756
                                              6 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _loop                                                 5     5      0   39414
                                              0 BANK3      5     5      0
                            ___fldiv
                           ___xotofl
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              22     4     18   35753
                                             84 BANK0     20     2     18
                           ___xotofl (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   35468
                                             79 COMRAM     2     2      0
                                             78 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           31    25      6   34965
                                             51 BANK0     27    21      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              54    47      7   25408
                                             77 COMRAM     2     2      0
                                              0 BANK0     51    44      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               8     4      4     497
                                              6 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     478
                                              6 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4     363
                                              6 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             57 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              6 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     607
                                              6 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    4007
                                             31 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    3442
                                              6 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     155
                                              6 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3413
                                              6 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     986
                                             31 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              6 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2903
                                             32 COMRAM    25    17      8
                           ___xotofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                35    25     10    5488
                                             34 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3219
                                             23 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1115
                                             16 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     795
                                              7 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      31
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             24 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              6 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              6 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                 9     7      2    1404
                                             12 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              5     3      2     259
                                              6 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              4     2      2     281
                                              6 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     412
                                              6 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___xotofl                                            26    18      8     656
                                              6 COMRAM    26    18      8
 ---------------------------------------------------------------------------------
 (1) _init_vars                                            4     4      0      68
                                              6 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_micro                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _enc                                                 6     6      0      68
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config_micro
   _init
   _init_vars
   _loop
     ___fldiv
       ___xotofl (ARG)
     ___xotofl
     _printf
       ___xotofl (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _efgtoa
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
             _strcpy
           _fputc
           _isdigit
   _read_analog
     ___awdiv
   _update_pwm
     ___awdiv

 _enc (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      41        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      5       5      11        2.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FD       7       98.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     68      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     51      57       1       92.6%
BITBIGSFRhhlh       19      0       0      21        0.0%
BITBIGSFRllhhll     11      0       0      37        0.0%
BITBIGSFRllhhlh      E      0       0      36        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRlll         D      0       0      39        0.0%
BITBIGSFRllhhhl      7      0       0      35        0.0%
BITBIGSFRlhlllh      5      0       0      25        0.0%
BITBIGSFRllhhhl      4      0       0      33        0.0%
BITBIGSFRllhhhh      3      0       0      30        0.0%
BITBIGSFRlhllll      3      0       0      29        0.0%
BITBIGSFRllhhhl      2      0       0      34        0.0%
BITBIGSFRlhh         2      0       0      23        0.0%
BITBIGSFRllhhhl      1      0       0      32        0.0%
BITBIGSFRllhhhl      1      0       0      31        0.0%
BITBIGSFRlhllll      1      0       0      28        0.0%
BITBIGSFRlhllll      1      0       0      27        0.0%
BITBIGSFRlhlllh      1      0       0      26        0.0%
BITBIGSFRlhllh       1      0       0      24        0.0%
BITBIGSFRllhl        1      0       0      38        0.0%
BITBIGSFRhl          1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2F8      40        0.0%
DATA                 0      0     2F8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Jul 08 20:37:20 2025

           ___fldiv@aexp 0039             ___fldiv@bexp 0038                        _b 00E5  
           ___fldiv@sign 0031             ___awdiv@sign 000C      ___wmul@multiplicand 0009  
                    l103 3A5A                      l111 3D68                      l131 4224  
                    l211 1346                      l204 12F2                      l108 3D06  
                    l213 1362                      l134 4236                      l215 137E  
                    l207 130E                      l160 318E                      l152 309E  
                    l209 132A                      l242 1794                      l147 3E4A  
                    l253 4200                      l166 322E                      l512 3BC8  
                    l523 386E                      l380 351A                      l518 3828  
                    l550 376A                      l199 3F16                      l367 33B6  
                    l527 4186                      l484 3B1E                      l903 2B10  
                    l807 206A                      l823 4044                      l904 2B3E  
                    l840 2738                      l808 2058                      l835 2914  
                    l931 41DA                      l837 2774                      l781 1E80  
                    l846 27BA                      l790 2150                      l782 1E6E  
                    l871 257A                      l783 1E34                      l848 2832  
                    l849 2820                      l874 240C                      l971 3DE2  
                    l867 2216                      l892 2BBE                      l884 253C  
                    l876 2484                      l877 2472                      l990 2E3A  
                    l798 1F9A                      l967 3D8C                      l976 2C4A  
                    l889 299C                      l978 2C52                      l979 2C98  
                    _PR2 000FCB                      _abs 4110                      _enc 0008  
                    _pad 3D6A                      _pwm 0052                      prod 000FF3  
                    wreg 000FE8             ___flmul@aexp 0014             ___flmul@bexp 0019  
           ___flmul@sign 0013             ___flmul@temp 001E             ___flmul@prod 001A  
           ___fltol@exp1 0010                     l1001 1292                     l1100 396C  
                   l1004 0C2A                     l1006 0A70                     l1105 4146  
                   l1130 365C                     l1034 1074                     ?_abs 0019  
                   l1108 414E                     l1133 3664                     l1142 2F90  
                   l1090 3F68                     l1139 304C                     l1164 3EA0  
                   l1068 1C90                     l1149 41B2                     l1157 408A  
                   l1173 3FB8                     l1167 3EB0                     l1185 3C5E  
                   l1193 40CE                     l1199 410E                     l2601 3A38  
                   l2521 396E                     l5001 1F68                     l2611 3A42  
                   l2603 3A3A                     l2531 397E                     l2523 3976  
                   l5011 1FC0                     l5003 1F6A                     ?_enc 0001  
                   l2621 3A4C                     l2613 3A44                     l2605 3A3C  
                   l2541 3998                     l2533 3980                     l2525 3978  
                   l5101 3294                     l5021 1FEE                     l5005 1F7A  
                   l4301 3A6E                     l2631 3A56                     l2623 3A4E  
                   l2615 3A46                     l2607 3A3E                     l2551 39A6  
                   l2543 399A                     l2535 398A                     l2527 397A  
                   l5111 32DE                     l5103 3298                     l5023 1FFC  
                   l5015 1FD4                     l5031 201A                     l5007 1F8A  
                   l4311 3A94                     l4303 3A76                     l2633 3A58  
                   l2625 3A50                     l2617 3A48                     l2609 3A40  
                   l2561 39F0                     l2553 39A8                     l2545 399C  
                   l2537 398C                     l2529 397C                     l5121 334E  
                   l5113 32EC                     l5105 32A4                     l5201 262E  
                   l5025 2004                     l5017 1FDE                     l5009 1FB0  
                   l5033 2028                     l6001 1A72                     l4321 3ACC  
                   l4313 3A9C                     l4305 3A7A                     l4401 3D56  
                   l2627 3A52                     l2619 3A4A                     l2571 3A12  
                   l2563 39F2                     l2555 39AA                     l2547 39A2  
                   l2539 398E                     l4411 3DEC                     l5123 3360  
                   l5115 32FE                     l5107 32C2                     l5211 266E  
                   l5203 2630                     l5043 207A                     l5051 20D0  
                   l5035 202C                     l5027 2008                     l5019 1FEC  
                   l6011 1AE0                     l6003 1A8E                     l4331 3AF8  
                   l4323 3AD2                     l4315 3AAE                     l4307 3A88  
                   l4403 3D58                     l2629 3A54                     l2581 3A24  
                   l2573 3A14                     l2565 3A00                     l2557 39B4  
                   l2549 39A4                     l4413 3E1A                     l4405 3DE4  
                   l6101 2936                     l5117 332C                     l5109 32CA  
                   l5125 3366                     l5141 33EE                     l5133 33B8  
                   l5221 269E                     l5213 2676                     l5205 2638  
                   l5061 2122                     l5053 20E0                     l5045 2086  
                   l5037 203A                     l5029 2018                     l6013 1AE8  
                   l6021 1B2A                     l4325 3AE8                     l4317 3AB6  
                   l4333 3AFE                     l4309 3A90                     l4421 306A  
                   l2591 3A2E                     l2583 3A26                     l2575 3A16  
                   l2567 3A0E                     l2559 39EA                     l4415 3E1E  
                   l6111 29F6                     l6103 29BC                     l5127 3376  
                   l5119 334C                     l5151 3456                     l5143 33FC  
                   l5135 33BC                     l5231 26DC                     l5223 269E  
                   l5215 267A                     l5207 2648                     l5311 216C  
                   l5071 2140                     l5063 2128                     l5055 20F0  
                   l5047 2094                     l5039 2050                     l6031 1BDC  
                   l6023 1B4A                     l6015 1AF0                     l6007 1ABE  
                   l4335 3B0E                     l4327 3AF0                     l4319 3ABE  
                   l4431 3112                     l4423 3076                     l2593 3A30  
                   l2585 3A28                     l2577 3A18                     l2569 3A10  
                   l4417 3E3A                     l6121 2A88                     l6113 2A0A  
                   l6105 29DA                     l5129 3396                     l5153 3464  
                   l5161 34CA                     l5145 341C                     l5137 33CA  
                   l5081 40AE                     l5241 2728                     l5233 26EC  
                   l5209 265E                     l5401 243C                     l5321 21A4  
                   l5313 216E                     l5065 212A                     l5057 2110  
                   l5049 20CE                     l6033 1BFC                     l6025 1B7E  
                   l6041 1C56                     l6009 1ACE                     l6201 1470  
                   l4337 3B16                     l4329 3AF2                     l4441 3182  
                   l4433 3126                     l4425 3092                     l2595 3A32  
                   l2587 3A2A                     l2579 3A1A                     l4451 3EB2  
                   l6131 2B8E                     l6123 2ADE                     l6115 2A60  
                   l5083 41DC                     l5091 3234                     l5163 34DA  
                   l5155 3492                     l5147 343A                     l5139 33EA  
                   l5075 408C                     l5251 2772                     l5243 2736  
                   l5235 26FC                     l5227 26B2                     l5219 268E  
                   l5171 2588                     l5411 24AE                     l5403 246A  
                   l5331 21D0                     l5323 21B4                     l5315 217E  
                   l5307 2152                     l5067 2130                     l5059 2114  
                   l6019 1AF8                     l6211 14A8                     l6203 1480  
                   l4443 3196                     l4435 313E                     l4427 30A6  
                   l4419 304E                     l2597 3A34                     l2589 3A2C  
                   l4461 3EEA                     l4453 3EBE                     l6133 2B9E  
                   l6125 2AF2                     l6117 2A62                     l6109 29EE  
                   l5085 41F8                     l5093 3242                     l5165 34FA  
                   l5157 34B2                     l5149 3442                     l5077 4098  
                   l5261 27B8                     l5253 2784                     l5245 2742  
                   l5237 2704                     l5229 26CC                     l5181 25C8  
                   l5173 2596                     l5421 2524                     l5413 24D8  
                   l5341 2226                     l5333 21E0                     l5325 21BA  
                   l5317 218E                     l5309 215E                     l5069 213E  
                   l5501 36CC                     l6029 1BB2                     l6045 1C68  
                   l6213 14E6                     l6221 14F8                     l6141 1294  
                   l4445 31FA                     l4437 315A                     l4429 310A  
                   ?_pad 0018                     l2599 3A36                     l4463 3EEE  
                   l4455 3EC4                     l6135 2BAC                     l6127 2B00  
                   l6119 2A76                     l5095 3262                     l5159 34C4  
                   l5079 40AA                     l5271 2818                     l5255 279A  
                   l5263 27CA                     l5247 2760                     l5239 2714  
                   l5191 25EE                     l5183 25CA                     l5175 2598  
                   l5423 2540                     l5431 2566                     l5407 2494  
                   l5415 24DC                     l5351 2260                     l5343 2236  
                   l5335 21F0                     l5327 21C0                     l5319 219E  
                   l5511 36F6                     l5503 36D0                     l6039 1C2A  
                   l6231 152A                     l6223 14FE                     l6207 1488  
                   l6151 12E0                     l6143 12AA                     l4391 3CF2  
                   l4447 3202                     l4439 3166                     l4457 3EE0  
                   l6137 2BAE                     l6129 2B1E                     l5097 3266  
                   l5089 3230                     l5281 2886                     l5265 27D8  
                   l5257 27A0                     l5249 2762                     l5193 25FC  
                   l5177 25A8                     l5185 25D2                     l5169 257C  
                   l5433 256A                     l5425 2550                     l5417 24F6  
                   l5409 24A0                     l5361 22B2                     l5353 2276  
                   l5337 2200                     l5329 21CE                     l5521 371E  
                   l5513 3700                     l5505 36DE                     l5601 3004  
                   l6081 3F18                     l6241 155E                     l6225 1510  
                   l6233 1534                     l6217 14F0                     l6209 1498  
                   l6161 1320                     l6153 12EE                     l6145 12BA  
                   l4297 3A5C                     l4393 3D04                     l4385 3CEE  
                   l4449 3216                     l4459 3EE4                     l5099 3274  
                   l5291 28F0                     l5275 2842                     l5283 288A  
                   l5267 27DC                     l5259 27AA                     l5195 25FE  
                   l5187 25E2                     l5179 25B8                     l5451 3B9C  
                   l5443 3B20                     l5427 255E                     l5419 250A  
                   l5371 22F8                     l5363 22C0                     l5355 2282  
                   l5347 224A                     l5339 2206                     l5523 372A  
                   l5515 370A                     l5603 302C                     l5611 3F7E  
                   l6083 3F24                     l6091 41B4                     l6251 15A6  
                   l6243 156E                     l6235 1544                     l6227 1520  
                   l6171 1348                     l6163 1322                     l6155 1304  
                   l6147 12C8                     l4299 3A60                     l4395 3D14  
                   l5621 4188                     l5541 3DAC                     l5533 3D6A  
                   l5293 28F4                     l5285 28A4                     l5277 284E  
                   l5269 27EA                     l5197 260E                     l5189 25E8  
                   l5453 3BC0                     l5445 3B4E                     l5461 379A  
                   l5429 2560                     l5381 2366                     l5373 2312  
                   l5365 22CC                     l5357 229A                     l5349 2256  
                   l4901 1D26                     l5437 4000                     l5525 373A  
                   l5605 303C                     l5613 3F8A                     l5701 08C8  
                   l6085 3F42                     l6093 41BE                     l6261 1600  
                   l6253 15B8                     l6245 1580                     l6237 1554  
                   l6229 1524                     l6181 1376                     l6173 1358  
                   l6165 132C                     l6157 1306                     l6149 12D0  
                   l4397 3D20                     l5631 4080                     l5543 3DB0  
                   l5535 3D78                     l5295 2902                     l5287 28BA  
                   l5279 285C                     l5199 261E                     l5455 3BC6  
                   l5447 3B5E                     l5471 3808                     l5463 37AA  
                   l5391 23FC                     l5383 2390                     l5375 2322  
                   l5367 22DC                     l5359 22A6                     l4911 1D5A  
                   l4903 1D28                     l5439 4010                     l5527 374A  
                   l5551 3870                     l5615 3F8E                     l5711 0904  
                   l5703 08D0                     l6087 3F5E                     l6263 1612  
                   l6271 1636                     l6255 15BC                     l6247 158C  
                   l6239 1558                     l6191 13F4                     l6183 1380  
                   l6175 135A                     l6167 133C                     l6159 1310  
                   l4399 3D3E                     l6097 2918                     l5633 4084  
                   l5625 4046                     l5545 3DCE                     l5537 3D84  
                   l5641 2BF4                     l5297 2908                     l5289 28D4  
                   l5449 3B8C                     l5473 3816                     l5465 37D8  
                   l5393 240A                     l5385 23C6                     l5377 233E  
                   l5369 22E8                     l5481 4150                     l4921 1D96  
                   l4905 1D38                     l4913 1D62                     l5529 375A  
                   l5553 3890                     l5617 3F9A                     l5609 3F6A  
                   l5801 0CCE                     l5721 094A                     l5705 08E0  
                   l5713 0908                     l6281 1764                     l6265 161A  
                   l6257 15E6                     l6249 1596                     l6193 140A  
                   l6185 13A6                     l6273 164C                     l6177 1364  
                   l6169 133E                     l6099 2928                     l5627 404A  
                   l5547 4110                     l5539 3D98                     l5651 2C6A  
                   l5643 2C04                     l5299 290A                     l5475 3866  
                   l5467 37E8                     l5459 376C                     l5395 241C  
                   l5387 23D4                     l5379 234A                     l5483 4166  
                   l4931 1DAA                     l4923 1D9A                     l4915 1D72  
                   l4907 1D48                     l5491 367C                     l5555 38CE  
                   l5563 390E                     l5619 3F9E                     l5803 0CE2  
                   l5811 0DD8                     l5723 0952                     l5715 092E  
                   l5731 0994                     l5707 08F0                     l6283 1770  
                   l6275 1678                     l6267 162C                     l6259 15F8  
                   l6195 141C                     l6187 13B2                     l6179 1374  
                   l6291 4206                     l5629 405E                     l5549 412A  
                   l4861 3BDC                     l5661 2CA0                     l5653 2C70  
                   l5645 2C24                     l5637 2BC0                     l5477 386C  
                   l5469 37F6                     l5397 242A                     l5389 23F2  
                   l5485 4176                     l4941 1DBE                     l4933 1DAE  
                   l4925 1D9E                     l4917 1D84                     l4909 1D58  
                   l5565 3920                     l5557 38F6                     l5581 2E3C  
                   l5573 40D0                     l5901 1244                     l5821 0EA4  
                   l5813 0DF6                     l5805 0D46                     l5741 09DE  
                   l5733 09BA                     l5725 096A                     l5717 0940  
                   l5709 08FC                     l6285 177C                     l6277 16C6  
                   l6269 1630                     l6197 142C                     l6189 13D4  
                   l6293 420A                     l5911 351C                     l4855 4224  
                   l4863 3BEE                     l5671 2D3E                     l5663 2CAA  
                   l5655 2C80                     l5647 2C3E                     l5639 2BE0  
                   l5399 242E                     l4943 1DC2                     l4935 1DB2  
                   l4927 1DA2                     l4919 1D92                     l4951 1DD2  
                   l5495 3690                     l5559 3902                     l5583 2E5C  
                   l5575 40E0                     l5903 1254                     l5831 0F54  
                   l5823 0EB4                     l5815 0E2A                     l5807 0D9E  
                   l5751 0A3A                     l5743 09F6                     l5735 09CC  
                   l5727 0974                     l5719 0944                     l6471 194C  
                   l6287 1788                     l6279 1746                     l6199 146A  
                   l6295 420E                     l6481 35B2                     l5921 3584  
                   l5913 3530                     l4857 4232                     l4865 3BF8  
                   l5681 2E04                     l5665 2CB0                     l5673 2DA2  
                   l5657 2C8C                     l5649 2C5A                     l4961 1E42  
                   l4953 1DD6                     l4945 1DC6                     l4937 1DB6  
                   l4929 1DA6                     l4881 1CBE                     l4873 1C92  
                   l5497 36BA                     l5489 3666                     l5569 3964  
                   l5593 2F44                     l5585 2EB2                     l5577 3E4C  
                   l5905 126A                     l5841 0FB8                     l5833 0F88  
                   l5825 0EC4                     l5817 0E5C                     l5809 0DD2  
                   l5761 0AF8                     l5745 0A00                     l5737 09D0  
                   l6473 1A5C                     l6297 4212                     l6289 4202  
                   l5923 358C                     l4867 3C16                     l4859 3BCA  
                   l5683 2E0A                     l5675 2DBC                     l5667 2D32  
                   l5659 2C94                     l4971 1E6C                     l4963 1E4E  
                   l4955 1E00                     l4947 1DCA                     l4939 1DBA  
                   l4891 1CF8                     l4883 1CCE                     l4875 1C9E  
                   l5499 36BC                     l5595 2F80                     l5587 2EC6  
                   l5579 3E6A                     l5907 1272                     l5851 106A  
                   l5843 0FBE                     l5835 0F9C                     l5827 0EF8  
                   l5819 0E72                     l5771 0BB8                     l5763 0B2A  
                   l5755 0A80                     l5739 09D6                     l5691 0878  
                   l6475 1B0C                     l6299 4216                     l5933 35FE  
                   l5925 3594                     l5917 3534                     l4869 3C4C  
                   l5685 2E1A                     l5677 2DDA                     l5669 2D38  
                   l4981 1EC2                     l4973 1E8E                     l4965 1E52  
                   l4957 1E1C                     l4949 1DCE                     l4893 1CFE  
                   l4885 1CDE                     l4877 1CAC                     l5589 2ED4  
                   l5597 2FB4                     l5861 10AE                     l5853 1086  
                   l5845 0FC6                     l5829 0F4E                     l5837 0FA0  
                   l5781 0C4C                     l5765 0B68                     l5757 0A86  
                   l5749 0A20                     l5693 0888                     l6477 1BC6  
                   l5935 362E                     l5927 35C8                     l5919 3550  
                   l5679 2DF4                     l4991 1EFC                     l4983 1ED0  
                   l4975 1E9E                     l4967 1E60                     l4959 1E2C  
                   l4895 1D10                     l4887 1CE0                     l4879 1CAE  
                   l5599 2FF0                     l5863 10B6                     l5855 1094  
                   l5871 10D6                     l5847 0FD2                     l5839 0FB0  
                   l5791 0C84                     l5783 0C56                     l5767 0B7C  
                   l5775 0BF8                     l5759 0ABA                     l5695 0896  
                   l6479 1C48                     l5951 17DA                     l5943 1796  
                   l5937 3640                     l4993 1EFE                     l4985 1EDE  
                   l4969 1E62                     l4897 1D12                     l4889 1CE8  
                   l5881 115C                     l5873 10E8                     l5865 10C6  
                   l5857 10A4                     l5849 104A                     l5793 0C9C  
                   l5785 0C5E                     l5777 0C32                     l5769 0BB0  
                   l5697 089A                     l5689 0872                     l5961 1872  
                   l5953 17FE                     l5945 17BA                     l4995 1F08  
                   l4987 1EEA                     l4979 1EB2                     l4899 1D18  
                   l5891 11D6                     l5883 1190                     l5875 10FA  
                   l5867 10CA                     l5859 10A8                     l5795 0CAE  
                   l5787 0C64                     l5779 0C40                     l5699 08BE  
                   l5971 18EA                     l5963 1892                     l5955 1806  
                   l5947 17C8                     l4989 1EEE                     l4997 1F0E  
                   l5893 11DE                     l5885 1198                     l5877 10FE  
                   l5869 10D0                     l5789 0C76                     l5797 0CB6  
                   l5981 1928                     l5973 18FC                     l5957 1814  
                   l5949 17D6                     l4999 1F34                     l5895 11EE  
                   l5879 1104                     l5887 119C                     l5799 0CBE  
                   l5991 1986                     l5983 1930                     l5975 1900  
                   l5967 18A0                     l5959 1838                     l5897 121E  
                   l5889 11BA                     l5993 19A6                     l5977 191C  
                   l5969 18DA                     l5899 122C                     l5995 19E4  
                   l5979 1920                     l5987 1938                     l5989 196A  
                   l5999 1A48                     _EEIF 007D0C                     STR_1 083D  
                   STR_2 0801                     STR_3 0868                     STR_6 086C  
                   u5000 3E3A                     u5001 3E36                     u5010 306A  
                   u5011 3066                     u5100 31B4                     u5020 3092  
                   u5101 31AC                     u5021 308E                     u5030 30C4  
                   u5031 30BC                     u6000 2066                     u5120 31D4  
                   u5201 3F10                     u6001 2062                     u5121 31CC  
                   u6010 207A                     u5050 30E4                     u6011 2076  
                   u5051 30DC                     u6100 3242                     u6020 2094  
                   u5140 31FA                     u6101 323E                     u6021 2090  
                   u5141 31F6                     u6110 3274                     u6030 20CE  
                   u5118 31B6                     u5070 310A                     u5151 3EB8  
                   u6111 3270                     u6031 20CA                     u5071 3106  
                   u6200 3464                     u6040 20E0                     u7000 2FD4  
                   u5080 315A                     u5048 30C6                     u5161 3ECE  
                   u6121 329E                     u6201 3460                     u6041 20DC  
                   u5081 3156                     u6130 32C2                     u6210 3492  
                   u6050 20F0                     u7010 2FF0                     u5138 31D6  
                   u5090 3182                     u5171 3EDA                     u6131 32BE  
                   u6211 348E                     u6051 20EC                     u7011 2FEC  
                   u5091 317E                     u6140 32EC                     u6220 34DA  
                   u7100 2C04                     u6300 269E                     u6060 2110  
                   u7020 302C                     u5068 30E6                     u5181 3EF8  
                   u6141 32E8                     u6221 34D6                     u7101 2C00  
                   u6301 269A                     u6061 210C                     u7021 3028  
                   u7005 2FCA                     u6150 332C                     u7110 2C3E  
                   u6310 2714                     u6230 2596                     u6070 2122  
                   u7030 3FB8                     u5191 3F04                     u6151 3328  
                   u7111 2C3A                     u6311 2710                     u6231 2592  
                   u6071 211E                     u7031 3FB4                     u7040 41AC  
                   u6160 3376                     u7120 2C6A                     u6400 282E  
                   u6320 2736                     u6240 25A8                     u6080 213E  
                   u7200 08F0                     u8000 15B8                     u7041 41A6  
                   u6161 3372                     u7121 2C66                     u6401 282A  
                   u6321 2732                     u6241 25A4                     u6081 213A  
                   u7201 08EC                     u8001 15B4                     u7050 41AE  
                   u6170 33CA                     u6090 40CE                     u7130 2C80  
                   u6410 2842                     u6330 2760                     u6250 25B8  
                   u7210 092E                     u8010 15E6                     u4810 3A6E  
                   u6171 33C6                     u6091 40CA                     u7131 2C7C  
                   u6411 283E                     u6331 275C                     u6251 25B4  
                   u7211 092A                     u8011 15E2                     u4811 3A6A  
                   u7060 405E                     u6180 33FC                     u7140 2DBC  
                   u6420 285C                     u6340 2784                     u6260 25FC  
                   u6500 21E0                     u5700 1CAC                     u7300 0C2A  
                   u7220 0940                     u8020 15F8                     u4820 3A88  
                   u7061 405A                     u6181 33F8                     u7141 2DB8  
                   u6421 2858                     u6341 2780                     u6261 25F8  
                   u6501 21DC                     u5701 1CA8                     u7301 0C26  
                   u7221 093C                     u8021 15F4                     u4821 3A84  
                   u7070 4080                     u6190 343A                     u7150 2DDA  
                   u6430 28A4                     u6350 279A                     u6270 260E  
                   u6510 21F0                     u5710 1CBE                     u7310 0C40  
                   u7230 09BA                     u8030 1612                     u4830 3AAE  
                   u7071 407C                     u6191 3436                     u7151 2DD6  
                   u6431 28A0                     u6351 2796                     u6271 260A  
                   u6511 21EC                     u5711 1CBA                     u7311 0C3C  
                   u7231 09B6                     u8031 160E                     u4831 3AAA  
                   u7160 2DF4                     u7080 2BF0                     u6440 28D4  
                   u6360 27B8                     u6280 261E                     u6600 2494  
                   u6520 2226                     u5800 1E18                     u5720 1CCE  
                   u7400 0F9C                     u7320 0C76                     u7240 09CC  
                   u8040 162C                     u4840 3ACC                     u7161 2DF0  
                   u7081 2BEA                     u6441 28D0                     u6361 27B4  
                   u6281 261A                     u6601 2490                     u6521 2222  
                   u5801 1E12                     u5721 1CCA                     u7401 0F98  
                   u7321 0C72                     u7241 09C8                     u8041 1628  
                   u4841 3AC8                     u5650 4232                     u7170 2E04  
                   u7090 2BF2                     u6450 2902                     u6370 27D8  
                   u6290 265E                     u6610 24AE                     u6530 2236  
                   u5810 1E1A                     u5730 1D10                     u7410 104A  
                   u7330 0C84                     u7250 0A6C                     u8050 1678  
                   u4850 3AE8                     u5651 422E                     u7171 2E00  
                   u6451 28FE                     u6371 27D4                     u6291 265A  
                   u6611 24AA                     u6531 2232                     u5731 1D0C  
                   u7411 1046                     u7331 0C80                     u7251 0A68  
                   u8051 1674                     u4851 3AE4                     u7500 3550  
                   u5660 3BDC                     u6380 27EA                     u6700 37F6  
                   u6620 24F6                     u6540 23B0                     u6460 216C  
                   u5900 1F34                     u5820 1E42                     u5740 1D26  
                   u7420 1086                     u7340 0CAE                     u7260 0AF8  
                   u7180 0896                     u4860 3B0E                     u7501 354C  
                   u5661 3BD8                     u6381 27E6                     u6701 37F2  
                   u6621 24F2                     u6461 2168                     u5901 1F30  
                   u5821 1E3E                     u5741 1D22                     u7421 1082  
                   u7341 0CAA                     u7261 0AF4                     u7181 0892  
                   u8061 176A                     u4861 3B0A                     u7510 3580  
                   u5670 3BEE                     u6390 2818                     u6710 3816  
                   u6630 2524                     u6550 240A                     u6470 217E  
                   u5910 1F7A                     u5830 1E60                     u5750 1D38  
                   u7430 1094                     u7350 0DF6                     u7270 0B2A  
                   u7190 08E0                     u7511 357C                     u5671 3BEA  
                   u6391 2814                     u6711 3812                     u6631 2520  
                   u6551 2406                     u6471 217A                     u5911 1F76  
                   u5831 1E5C                     u5751 1D34                     u7431 1090  
                   u7351 0DF2                     u7271 0B26                     u7191 08DC  
                   u8071 1776                     u7520 362E                     u5680 3C16  
                   u6720 3866                     u6640 255E                     u6560 242A  
                   u6480 218E                     u5920 1FB0                     u5840 1E80  
                   u5760 1D48                     u6800 374A                     u7440 10E8  
                   u7360 0E5C                     u7280 0B68                     u7600 19A2  
                   u7521 362A                     u5681 3C12                     u6721 3862  
                   u6641 255A                     u6561 2426                     u6545 23A6  
                   u6481 218A                     u5921 1FAC                     u5841 1E7C  
                   u5761 1D44                     u6801 3746                     u7441 10E4  
                   u7361 0E58                     u7281 0B64                     u7601 199E  
                   u8081 1782                     u7530 3640                     u5690 3C4C  
                   u6810 3D78                     u6650 3B4E                     u6570 243C  
                   u6490 21CE                     u6730 4166                     u5930 1FC0  
                   u5850 1E8E                     u5770 1D84                     u7450 11BA  
                   u7370 0EA4                     u7290 0BF4                     u7610 1B46  
                   u4970 3D14                     u7531 363C                     u5691 3C48  
                   u6811 3D74                     u6651 3B4A                     u6571 2438  
                   u6491 21CA                     u6731 4162                     u5931 1FBC  
                   u5851 1E8A                     u5771 1D80                     u7451 11B6  
                   u7371 0EA0                     u7291 0BF0                     u7611 1B42  
                   u8091 178E                     u4971 3D10                     u7700 2B1E  
                   u6820 3DCE                     u6660 3B8C                     u6580 246A  
                   u5940 1FEC                     u5860 1E9E                     u5780 1D92  
                   u6740 367C                     u6900 395C                     u7460 11D6  
                   u7380 0EB4                     u7540 17BA                     u7620 3F5E  
                   u4980 3D68                     u7701 2B1A                     u6821 3DCA  
                   u6661 3B88                     u6581 2466                     u5941 1FE8  
                   u5861 1E9A                     u5781 1D8E                     u6741 3678  
                   u7461 11D2                     u7381 0EB0                     u7541 17B6  
                   u7621 3F5A                     u4981 3D64                     u7710 2B9E  
                   u7630 2928                     u6830 412A                     u6670 3BC0  
                   u6590 2480                     u5950 1FFC                     u5870 1ED0  
                   u5790 1E00                     u6750 36B0                     u6910 410E  
                   u7470 123E                     u7390 0F4E                     u7550 17FE  
                   u4991 3E14                     u7711 2B9A                     u7631 2924  
                   u6831 4126                     u6671 3BBC                     u6591 247C  
                   u5951 1FF8                     u5871 1ECC                     u5791 1DFC  
                   u6911 410A                     u7471 1238                     u7391 0F4A  
                   u7551 17FA                     u7720 2BAC                     u7640 2936  
                   u6680 379A                     u5960 2018                     u5880 1EDE  
                   u6760 36DE                     u6840 38B0                     u6920 3E6A  
                   u7480 1240                     u7560 1838                     u7800 1358  
                   u7721 2BA8                     u7641 2932                     u6681 3796  
                   u5961 2014                     u5881 1EDA                     u6761 36DA  
                   u6921 3E66                     u7561 1834                     u7801 1354  
                   u7650 29DA                     u6690 37D8                     u5970 2028  
                   u5890 1EFC                     u6770 36F2                     u6850 38CE  
                   u6930 2E84                     u7490 1254                     u7570 18DA  
                   u7810 1374                     u7730 12BA                     u7651 29D6  
                   u6691 37D4                     u5971 2024                     u5891 1EF8  
                   u6771 36EE                     u6755 36A6                     u6851 38CA  
                   u7491 1250                     u7571 18D6                     u7811 1370  
                   u7731 12B6                     u7660 2A5C                     u5980 203A  
                   u6780 371A                     u6860 38F6                     u6940 2EB2  
                   u7580 191C                     u7900 14A8                     u7820 13A6  
                   u7740 12C8                     u7661 2A58                     u5981 2036  
                   u6781 3716                     u6861 38F2                     u6845 38A6  
                   u6941 2EAE                     u7581 1918                     u7901 14A4  
                   u7821 13A2                     u7741 12C4                     u7670 2ADA  
                   u5990 2050                     u6790 373A                     u6870 3920  
                   u6950 2ED4                     u7590 1986                     u7910 14E6  
                   u7750 12E0                     u7671 2AD6                     u5991 204C  
                   u6791 3736                     u6871 391C                     u6951 2ED0  
                   u6935 2E7A                     u7591 1982                     u7911 14E2  
                   u7831 13AC                     u7751 12DC                     u7680 2B00  
                   u7920 1510                     u7760 12EE                     u7681 2AFC  
                   u7921 150C                     u7841 13EE                     u7761 12EA  
                   u7690 2B10                     u6890 395A                     u6970 2F40  
                   u7930 1520                     u7850 141C                     u7770 1304  
                   u7691 2B0C                     u6891 3954                     u6971 2F3C  
                   u7931 151C                     u7851 1418                     u7771 1300  
                   u6980 2F64                     u7940 1544                     u7860 142C  
                   u7780 1320                     u6885 3932                     u6965 2EE8  
                   u7941 1540                     u7861 1428                     u7781 131C  
                   u6990 2F80                     u6966 2EF2                     u7950 1554  
                   u7870 146A                     u7790 133C                     u6991 2F7C  
                   u6967 2F02                     u7951 1550                     u7871 1466  
                   u7791 1338                     u7960 156E                     u6985 2F5A  
                   u7961 156A                     u7881 1476                     u7970 1580  
                   u7890 1498                     u7971 157C                     u7891 1494  
                   u7981 1586                     u7990 15A6                     u7991 15A2  
                   _TXIF 007CF4                     abs@a 0019                     _dbuf 01AD  
                   _labs 3E4C                     _atoi 351C                     _main 4202  
                   _dtoa 2BC0                     enc@i 0005                     _init 3EB2  
                   _loop 1294                     _prec 0056            _state_counter 0100  
                   pad@i 001F                     pad@p 001C                     fsr1h 000FE2  
                   fsr2h 000FDA                     indf2 000FDF                     fsr1l 000FE1  
                   pad@w 0021                     fsr2l 000FD9                     btemp 0058  
          ___fpclassifyf 3870           ??_config_micro 0007                     prodh 000FF4  
                   prodl 000FF3                     start 000E          ___fldiv@new_exp 0032  
           ___param_bank 000000                    ??_abs 001B                    ??_enc 0001  
                  ??_pad 001E            ___fltol@sign1 000F          __end_of___aodiv 33B8  
                  ?_labs 0007                    ?_atoi 000D          __end_of___fladd 2152  
                  ?_main 0001                    ?_dtoa 0023          __end_of___aomod 351C  
                  ?_init 0001          __end_of___fldiv 2916          __end_of___awdiv 3B20  
        __end_of___flneg 4188                    _EEADR 000FA9                    ?_loop 0001  
        __end_of___flmul 257C          __end_of___flsub 4046          __end_of___fltol 376C  
                  _CMCON 000FB4          ___awdiv@divisor 0009                    i2l142 3CE2  
        ___awdiv@counter 000B             vfpfcnvrt@fmt 0095                    _TMR0H 000FD7  
                  _TMR1H 000FCF                    _TMR0L 000FD6                    _TMR1L 000FCE  
                  _SPBRG 000FAF                    _TXREG 000FAD             ?_read_analog 0001  
                  _flags 00FE                    _fputc 3BCA                    _fputs 408C  
        __end_of_isdigit 41B4                    _value 018C                    labs@a 0007  
                  atoi@n 0014                    pad@fp 0018                    atoi@s 000D  
                  _width 00FC                    _putch 4222                    dtoa@d 0025  
                  dtoa@i 0044                    dtoa@n 003B                    dtoa@p 0037  
                  dtoa@s 0043                    dtoa@w 0039          __end_of_isspace 408C  
                  tablat 000FF5                    ttemp5 0059                    ttemp6 005C  
                  ttemp7 0060                    status 000FD8                    wtemp8 0059  
         ?___fpclassifyf 0007          __initialization 3FBA             __end_of_labs 3EB2  
           __end_of_atoi 3666             __end_of_main 4222             __end_of_dtoa 2E3C  
           __end_of_init 3F18             __end_of_loop 1796                   ??_labs 000B  
                 ??_atoi 000F                   ??_main 0052                   ??_dtoa 002D  
                 ??_init 0007                   ??_loop 0052            __activetblptr 000002  
                 ?_fputc 0008                   ?_fputs 0011                   _ADRESH 000FC4  
                 _ADRESL 000FC3                   _EEDATA 000FA8                   _CCPR1L 000FBE  
                 _CCPR2L 000FBB                   _EECON2 000FA7         ___awdiv@dividend 0007  
                 ?_putch 0001                   i2l4661 3C80                   i2l4671 3CC6  
                 i2l4657 3C6A                   i2l4667 3C8A                   i2l4659 3C78  
                 i2l4669 3CC2                   _TMR0IF 007F92                   _SPBRGH 000FB0  
       __end_of___xotofl 2BC0             vfprintf@cfmt 0050            loop@click_evt 0304  
                 ___flge 376C                   ___fleq 3B20                ??___aodiv 0017  
              ??___fladd 000F                ??___aomod 0017                   ___wmul 41DC  
              ??___fldiv 0029                ??___awdiv 000B                ??___flneg 000B  
              ??___flmul 000F                ??___flsub 0028                ??___fltol 000B  
                 _efgtoa 0872             ___xotofl@arg 0019             ___xotofl@exp 0018  
           ___xotofl@val 0007                   _floorf 2E3C                   _last_b 00EF  
                 _memcpy 3F6A                   clear_0 3FC2                   clear_1 3FD4  
                 clear_2 3FE0         ___awdiv@quotient 000D                   isa$std 000001  
                 _printf 41B4                   pad@buf 001A                   dtoa@fp 0023  
                 _strcpy 40D0                   fputc@c 0008                   fputs@c 0015  
                 fputs@i 0016                   fputs@s 0011                ??_isdigit 0009  
   __end_of_config_micro 3A5C          ___fpclassifyf@e 000F          ___fpclassifyf@u 0011  
        ___fpclassifyf@x 0007             __mediumconst 0000                ??_isspace 0009  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
       __end_of_vfprintf 3F6A               ___flge@ff1 0020               ___flge@ff2 0024  
        ??___fpclassifyf 000B               ___fleq@ff1 0007               ___fleq@ff2 000B  
             __accesstop 0060  __end_of__initialization 3FF2               ___flneg@f1 0007  
          ___rparam_used 000001               ___fltol@f1 0007           __pcstackCOMRAM 0001  
          __end_of_fputc 3C60            __end_of_fputs 40D0            __end_of_putch 4238  
                ??_fputc 000C                  ??_fputs 0015                  ??_putch 0007  
             __pbssBANK0 00C8               __pbssBANK1 0100               __pbssBANK2 0200  
                ?___flge 0020                  ?___fleq 0007                  ?___wmul 0007  
                ?_efgtoa 0060                  ?_floorf 003A                  ?_memcpy 0007  
         _sum_iterations 00D0                  ?_printf 00B4                  ?_strcpy 0007  
              ?___xotofl 0007           _persisted_data 0200        _combination_state 00E0  
                __Hparam 0000                  __Lparam 0000                  ___aodiv 3230  
                ___fladd 1C92                  ___aomod 33B8                  ___fldiv 257C  
                ___awdiv 3A5C                  ___flneg 4150                  ___flmul 2152  
                ___flsub 4000                  ___fltol 3666                ?_vfprintf 00AE  
           __psmallconst 0800                  _b_state 00EA                  __pcinit 3FBA  
                __ramtop 0800                  __ptext0 4202                  __ptext1 304E  
                __ptext2 3CEE                  __ptext3 3A5C                  __ptext4 1294  
                __ptext5 41B4                  __ptext6 3F18                  __ptext7 1796  
                __ptext8 0872                  __ptext9 40D0            ___xotofl@sign 0017  
              _T0CONbits 000FD5                _T1CONbits 000FCD                  _counter 0150  
             ??___xotofl 000F                _T2CONbits 000FCA                  _isdigit 4188  
      __end_of_init_vars 3E4C                  _isspace 4046               _iterations 00D8  
                efgtoa@c 0066                  efgtoa@d 0072                  efgtoa@e 0076  
                efgtoa@f 0062                  efgtoa@g 0089                  efgtoa@h 0080  
                efgtoa@i 007E                  efgtoa@l 0084                  efgtoa@m 0074  
                efgtoa@n 008D                  efgtoa@p 0069                  efgtoa@t 006B  
                efgtoa@u 008F                  efgtoa@w 0078                  atoi@neg 0012  
         __pintcode_body 3C60     end_of_initialization 3FF2                  floorf@e 0048  
                floorf@m 0044                  floorf@u 004A                  floorf@x 003A  
                memcpy@d 000E                  memcpy@n 000B                  memcpy@s 0010  
                fputc@fp 000A            __Lmediumconst 0000                  int_func 3C60  
                fputs@fp 0013             read_analog@i 0012             _config_micro 396E  
      __end_of_vfpfcnvrt 1C92               efgtoa@mode 0070               efgtoa@sign 0088  
       _triple_click_evt 0194                _RCSTAbits 000FAB                  postdec1 000FE5  
                postdec2 000FDD                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE         vfpfcnvrt@convarg 00A3               ??_vfprintf 0050  
                strcpy@d 000D                  strcpy@s 000B                _PORTBbits 000F81  
              _PORTCbits 000F82                _PORTDbits 000F83              ___fladd@grs 0016  
              _TRISAbits 000F92                _TRISBbits 000F93                _TRISCbits 000F94  
              _TRISDbits 000F95                _TRISEbits 000F96               _update_pwm 304E  
            ___fldiv@grs 0034              ___fldiv@rem 002D              ___flmul@grs 0015  
            _CCP1CONbits 000FBD              _CCP2CONbits 000FBA                _TXSTAbits 000FAC  
         __end_of___flge 3870           __end_of___fleq 3BCA              vfpfcnvrt@ap 0097  
            vfpfcnvrt@cp 00AC              vfpfcnvrt@fp 0093           __end_of___wmul 4202  
            _BAUDCONbits 000FB8           __end_of_efgtoa 1294           __end_of_floorf 304E  
         __end_of_memcpy 3FBA               floorf@F526 00F4         _single_click_evt 019E  
         __end_of_printf 41DC           __end_of_strcpy 4110      start_initialization 3FBA  
            __end_of_abs 4150              __end_of_enc 3CEE              __end_of_pad 3DE4  
  __end_of___fpclassifyf 396E           update_pwm@pwm0 0010           update_pwm@pwm1 0012  
            vfprintf@fmt 00B0                 ??___flge 0028                 ??___fleq 000F  
               ??___wmul 000B                 ??_efgtoa 004E                 ??_floorf 003E  
               ??_memcpy 000D               init_vars@i 0009                 ??_printf 0052  
               ??_strcpy 000B                ___fladd@a 000B                ___fladd@b 0007  
              ___fldiv@a 0025                ___fldiv@b 0021            ??_read_analog 000F  
              ___flmul@a 000B                ___flmul@b 0007              __pbssCOMRAM 0052  
              ___flsub@a 0024                ___flsub@b 0020            __pcstackBANK0 0060  
          __pcstackBANK3 0300         ___aodiv@dividend 0007              ?_update_pwm 0001  
              _b_counter 0128              _efgtoa$1920 006D                _dtoa$1889 0035  
       _double_click_evt 0199                __pintcode 0008                 ?___aodiv 0007  
               ?___fladd 0007                 ?___aomod 0007                 ?___fldiv 0021  
               ?___awdiv 0007         ___aodiv@quotient 0019                 ?___flneg 0007  
               ?___flmul 0007                 ?___flsub 0020                 ?___fltol 0007  
            __smallconst 0800                 ?_isdigit 0007                _loop$2262 0300  
               ?_isspace 0007                _init_vars 3DE4      __end_of_read_analog 3D6A  
         ___wmul@product 000B                 i2u563_40 3C78                 i2u563_41 3C74  
               i2u564_40 3CE2                 i2u564_41 3CDE                 _UCFGbits 000F6F  
               _RCONbits 000FD0                 _UCONbits 000F6D                _press_evt 01A8  
              _vfpfcnvrt 1796               _ADCON0bits 000FC2               _ADCON1bits 000FC1  
             _ADCON2bits 000FC0        ___wmul@multiplier 0007             _isspace$2000 000B  
             vfpfcnvrt@c 00AB               ?_init_vars 0001              _INTCON2bits 000FF1  
             _EECON1bits 000FA6                 __Hrparam 0000                memcpy@tmp 000D  
             vfprintf@ap 00B2                 __Lrparam 0000               vfprintf@fp 00AE  
             ?_vfpfcnvrt 0093          ___aodiv@divisor 000F          ___aodiv@counter 0017  
     ___fpclassifyf@F465 00F8                 ___xotofl 2916           read_analog@aux 0010  
            _read_analog 3CEE                 _an_input 0178                 __ptext10 3F6A  
               __ptext11 3E4C                 __ptext20 3B20                 __ptext12 2E3C  
               __ptext21 257C                 __ptext13 3870                 __ptext30 351C  
               __ptext22 2BC0                 __ptext14 3666                 __ptext31 4046  
               __ptext23 3D6A                 __ptext15 4000                 __ptext32 4188  
               __ptext24 408C                 __ptext16 1C92                 __ptext33 41DC  
               __ptext25 3BCA                 __ptext17 4150                 __ptext34 2916  
               __ptext26 4222                 __ptext18 2152                 __ptext35 3DE4  
               __ptext27 4110                 __ptext19 376C                 __ptext36 3EB2  
               __ptext28 33B8                 __ptext37 396E                 __ptext29 3230  
             strcpy@dest 0007                 efgtoa@fp 0060                 efgtoa@ne 0067  
               efgtoa@pp 006F                 efgtoa@ou 007A                 isa$xinst 000000  
               int$flags 0058                 _vfprintf 3F18                printf@fmt 00B4  
       ___aomod@dividend 0007              _release_evt 01A3                putch@data 0007  
             _INTCONbits 000FF2                 memcpy@d1 0007                 memcpy@s1 0009  
           ??_update_pwm 000F                 isdigit@c 0007              ??_init_vars 0007  
               intlevel2 0000            _amount_cycles 00C8                 isspace@c 0007  
              strcpy@src 0009               _OSCCONbits 000FD3              efgtoa@nmode 0071  
               printf@ap 00C6       __end_of_update_pwm 3230          ___aomod@divisor 000F  
            ??_vfpfcnvrt 0099          ___aomod@counter 0017            ___fladd@signs 0013  
           ___aodiv@sign 0018             ___fladd@aexp 0014             ___fladd@bexp 0015  
           ___aomod@sign 0018            ?_config_micro 0001  
