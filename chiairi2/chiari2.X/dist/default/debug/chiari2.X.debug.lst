

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Jul 11 22:43:22 2025

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    26                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    28   000000                     
    29                           ; Version 2.40
    30                           ; Generated 17/11/2021 GMT
    31                           ; 
    32                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F4550 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64   000000                     _EECON2	set	4007
    65   000000                     _EEDATA	set	4008
    66   000000                     _ADRESL	set	4035
    67   000000                     _ADRESH	set	4036
    68   000000                     _TMR1L	set	4046
    69   000000                     _TMR1H	set	4047
    70   000000                     _TMR0L	set	4054
    71   000000                     _TMR0H	set	4055
    72   000000                     _T0CONbits	set	4053
    73   000000                     _TMR0IF	set	32658
    74   000000                     _UCONbits	set	3949
    75   000000                     _EECON1bits	set	4006
    76   000000                     _EEADR	set	4009
    77   000000                     _RCSTAbits	set	4011
    78   000000                     _TXSTAbits	set	4012
    79   000000                     _SPBRG	set	4015
    80   000000                     _CMCON	set	4020
    81   000000                     _OSCCONbits	set	4051
    82   000000                     _TXIF	set	31988
    83   000000                     _EEIF	set	32012
    84   000000                     _INTCON2bits	set	4081
    85   000000                     _BAUDCONbits	set	4024
    86   000000                     _CCP2CONbits	set	4026
    87   000000                     _CCP1CONbits	set	4029
    88   000000                     _T2CONbits	set	4042
    89   000000                     _T1CONbits	set	4045
    90   000000                     _RCONbits	set	4048
    91   000000                     _UCFGbits	set	3951
    92   000000                     _PORTBbits	set	3969
    93   000000                     _PORTCbits	set	3970
    94   000000                     _PORTDbits	set	3971
    95   000000                     _TRISAbits	set	3986
    96   000000                     _TRISBbits	set	3987
    97   000000                     _TRISCbits	set	3988
    98   000000                     _INTCONbits	set	4082
    99   000000                     _PR2	set	4043
   100   000000                     _ADCON2bits	set	4032
   101   000000                     _ADCON1bits	set	4033
   102   000000                     _ADCON0bits	set	4034
   103   000000                     _CCPR1L	set	4030
   104   000000                     _CCPR2L	set	4027
   105   000000                     _TRISEbits	set	3990
   106   000000                     _TRISDbits	set	3989
   107   000000                     _SPBRGH	set	4016
   108   000000                     _TXREG	set	4013
   109                           
   110                           ; #config settings
   111                           
   112                           	psect	cinit
   113   000A28                     __pcinit:
   114                           	callstack 0
   115   000A28                     start_initialization:
   116                           	callstack 0
   117   000A28                     __initialization:
   118                           	callstack 0
   119                           
   120                           ; Clear objects allocated to BANK1 (256 bytes)
   121   000A28  EE01  F000         	lfsr	0,__pbssBANK1
   122   000A2C  EE11 F000          	lfsr	1,256
   123   000A30                     clear_0:
   124   000A30  6AEE               	clrf	postinc0,c
   125   000A32  50E5               	movf	postdec1,w,c
   126   000A34  50E1               	movf	fsr1l,w,c
   127   000A36  E1FC               	bnz	clear_0
   128   000A38  50E2               	movf	fsr1h,w,c
   129   000A3A  E1FA               	bnz	clear_0
   130                           
   131                           ; Clear objects allocated to BANK0 (141 bytes)
   132   000A3C  EE00  F060         	lfsr	0,__pbssBANK0
   133   000A40  0E8D               	movlw	141
   134   000A42                     clear_1:
   135   000A42  6AEE               	clrf	postinc0,c
   136   000A44  06E8               	decf	wreg,f,c
   137   000A46  E1FD               	bnz	clear_1
   138                           
   139                           ; Clear objects allocated to COMRAM (73 bytes)
   140   000A48  EE00  F001         	lfsr	0,__pbssCOMRAM
   141   000A4C  0E49               	movlw	73
   142   000A4E                     clear_2:
   143   000A4E  6AEE               	clrf	postinc0,c
   144   000A50  06E8               	decf	wreg,f,c
   145   000A52  E1FD               	bnz	clear_2
   146   000A54                     end_of_initialization:
   147                           	callstack 0
   148   000A54                     __end_of__initialization:
   149                           	callstack 0
   150   000A54  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   151   000A56  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   152   000A58  0100               	movlb	0
   153   000A5A  EF2F  F005         	goto	_main	;jump to C main() function
   154                           
   155                           	psect	bssCOMRAM
   156   000001                     __pbssCOMRAM:
   157                           	callstack 0
   158   000001                     _counter:
   159                           	callstack 0
   160   000001                     	ds	40
   161   000029                     _iterations:
   162                           	callstack 0
   163   000029                     	ds	8
   164   000031                     _combination_state:
   165                           	callstack 0
   166   000031                     	ds	5
   167   000036                     _b:
   168                           	callstack 0
   169   000036                     	ds	5
   170   00003B                     _b_state:
   171                           	callstack 0
   172   00003B                     	ds	5
   173   000040                     _last_b:
   174                           	callstack 0
   175   000040                     	ds	5
   176   000045                     _pwm:
   177                           	callstack 0
   178   000045                     	ds	4
   179   000049                     _initial_state:
   180                           	callstack 0
   181   000049                     	ds	1
   182                           
   183                           	psect	bssBANK0
   184   000060                     __pbssBANK0:
   185                           	callstack 0
   186   000060                     _state_counter:
   187                           	callstack 0
   188   000060                     	ds	40
   189   000088                     _b_counter:
   190                           	callstack 0
   191   000088                     	ds	40
   192   0000B0                     _an_input:
   193                           	callstack 0
   194   0000B0                     	ds	20
   195   0000C4                     _amount_cycles:
   196                           	callstack 0
   197   0000C4                     	ds	8
   198   0000CC                     _sum_iterations:
   199                           	callstack 0
   200   0000CC                     	ds	8
   201   0000D4                     _triple_click_evt:
   202                           	callstack 0
   203   0000D4                     	ds	5
   204   0000D9                     _double_click_evt:
   205                           	callstack 0
   206   0000D9                     	ds	5
   207   0000DE                     _single_click_evt:
   208                           	callstack 0
   209   0000DE                     	ds	5
   210   0000E3                     _release_evt:
   211                           	callstack 0
   212   0000E3                     	ds	5
   213   0000E8                     _press_evt:
   214                           	callstack 0
   215   0000E8                     	ds	5
   216                           
   217                           	psect	bssBANK1
   218   000100                     __pbssBANK1:
   219                           	callstack 0
   220   000100                     _persisted_data:
   221                           	callstack 0
   222   000100                     	ds	256
   223                           
   224                           	psect	cstackBANK0
   225   0000ED                     __pcstackBANK0:
   226                           	callstack 0
   227   0000ED                     read_analog@aux:
   228                           	callstack 0
   229   0000ED                     update_pwm@pwm0:
   230                           	callstack 0
   231                           
   232                           ; 2 bytes @ 0x0
   233   0000ED                     	ds	2
   234   0000EF                     read_analog@i:
   235                           	callstack 0
   236   0000EF                     update_pwm@pwm1:
   237                           	callstack 0
   238                           
   239                           ; 2 bytes @ 0x2
   240   0000EF                     	ds	2
   241                           
   242                           	psect	cstackCOMRAM
   243   00004A                     __pcstackCOMRAM:
   244                           	callstack 0
   245   00004A                     ??_enc:
   246   00004A                     
   247                           ; 1 bytes @ 0x0
   248   00004A                     	ds	4
   249   00004E                     enc@i:
   250                           	callstack 0
   251                           
   252                           ; 2 bytes @ 0x4
   253   00004E                     	ds	2
   254   000050                     ??_init_vars:
   255   000050                     ??_loop:
   256   000050                     ?___awdiv:
   257                           	callstack 0
   258   000050                     buttons_loop@click_evt:
   259                           	callstack 0
   260   000050                     ___awdiv@dividend:
   261                           	callstack 0
   262                           
   263                           ; 2 bytes @ 0x6
   264   000050                     	ds	2
   265   000052                     init_vars@i:
   266                           	callstack 0
   267   000052                     ___awdiv@divisor:
   268                           	callstack 0
   269                           
   270                           ; 2 bytes @ 0x8
   271   000052                     	ds	2
   272   000054                     ___awdiv@counter:
   273                           	callstack 0
   274                           
   275                           ; 1 bytes @ 0xA
   276   000054                     	ds	1
   277   000055                     ___awdiv@sign:
   278                           	callstack 0
   279                           
   280                           ; 1 bytes @ 0xB
   281   000055                     	ds	1
   282   000056                     ___awdiv@quotient:
   283                           	callstack 0
   284                           
   285                           ; 2 bytes @ 0xC
   286   000056                     	ds	2
   287   000058                     ??_read_analog:
   288   000058                     ??_update_pwm:
   289                           
   290                           ; 1 bytes @ 0xE
   291   000058                     	ds	1
   292   000059                     
   293                           ; 1 bytes @ 0xF
   294 ;;
   295 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   296 ;;
   297 ;; *************** function _main *****************
   298 ;; Defined at:
   299 ;;		line 557 in file "main.c"
   300 ;; Parameters:    Size  Location     Type
   301 ;;		None
   302 ;; Auto vars:     Size  Location     Type
   303 ;;		None
   304 ;; Return value:  Size  Location     Type
   305 ;;                  1    wreg      void 
   306 ;; Registers used:
   307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   308 ;; Tracked objects:
   309 ;;		On entry : 0/0
   310 ;;		On exit  : 0/0
   311 ;;		Unchanged: 0/0
   312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   313 ;;      Params:         0       0       0       0       0       0       0       0       0
   314 ;;      Locals:         0       0       0       0       0       0       0       0       0
   315 ;;      Temps:          0       0       0       0       0       0       0       0       0
   316 ;;      Totals:         0       0       0       0       0       0       0       0       0
   317 ;;Total ram usage:        0 bytes
   318 ;; Hardware stack levels required when called: 3
   319 ;; This function calls:
   320 ;;		_buttons_init
   321 ;;		_buttons_loop
   322 ;;		_config_micro
   323 ;;		_init
   324 ;;		_init_vars
   325 ;;		_loop
   326 ;;		_read_analog
   327 ;;		_update_pwm
   328 ;; This function is called by:
   329 ;;		Startup code after reset
   330 ;; This function uses a non-reentrant model
   331 ;;
   332                           
   333                           	psect	text0
   334   000A5E                     __ptext0:
   335                           	callstack 0
   336   000A5E                     _main:
   337                           	callstack 28
   338   000A5E                     
   339                           ;main.c: 558:     config_micro();
   340   000A5E  EC4F  F003         	call	_config_micro	;wreg free
   341   000A62                     
   342                           ;main.c: 559:     init_vars();
   343   000A62  ECAF  F004         	call	_init_vars	;wreg free
   344   000A66                     
   345                           ;main.c: 560:     buttons_init();
   346   000A66  ECE3  F004         	call	_buttons_init	;wreg free
   347   000A6A                     
   348                           ;main.c: 561:     init();
   349   000A6A  EC43  F005         	call	_init	;wreg free
   350   000A6E                     l1797:
   351                           
   352                           ;main.c: 564:         update_pwm();
   353   000A6E  ECB8  F001         	call	_update_pwm	;wreg free
   354   000A72                     
   355                           ;main.c: 565:         read_analog();
   356   000A72  EC6F  F004         	call	_read_analog	;wreg free
   357   000A76                     
   358                           ;main.c: 566:         buttons_loop();
   359   000A76  EC09  F000         	call	_buttons_loop	;wreg free
   360   000A7A                     
   361                           ;main.c: 567:         loop();
   362   000A7A  ECB3  F002         	call	_loop	;wreg free
   363   000A7E  EF37  F005         	goto	l1797
   364   000A82  EF07  F000         	goto	start
   365   000A86                     __end_of_main:
   366                           	callstack 0
   367                           
   368 ;; *************** function _update_pwm *****************
   369 ;; Defined at:
   370 ;;		line 309 in file "main.c"
   371 ;; Parameters:    Size  Location     Type
   372 ;;		None
   373 ;; Auto vars:     Size  Location     Type
   374 ;;  pwm1            2    2[BANK0 ] int 
   375 ;;  pwm0            2    0[BANK0 ] int 
   376 ;; Return value:  Size  Location     Type
   377 ;;                  1    wreg      void 
   378 ;; Registers used:
   379 ;;		wreg, status,2, status,0, cstack
   380 ;; Tracked objects:
   381 ;;		On entry : 0/0
   382 ;;		On exit  : 0/0
   383 ;;		Unchanged: 0/0
   384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   385 ;;      Params:         0       0       0       0       0       0       0       0       0
   386 ;;      Locals:         0       4       0       0       0       0       0       0       0
   387 ;;      Temps:          1       0       0       0       0       0       0       0       0
   388 ;;      Totals:         1       4       0       0       0       0       0       0       0
   389 ;;Total ram usage:        5 bytes
   390 ;; Hardware stack levels used: 1
   391 ;; Hardware stack levels required when called: 2
   392 ;; This function calls:
   393 ;;		___awdiv
   394 ;; This function is called by:
   395 ;;		_main
   396 ;; This function uses a non-reentrant model
   397 ;;
   398                           
   399                           	psect	text1
   400   000370                     __ptext1:
   401                           	callstack 0
   402   000370                     _update_pwm:
   403                           	callstack 28
   404   000370                     
   405                           ;main.c: 310:     int pwm0, pwm1;;main.c: 312:     if (pwm[0] > 600){
   406   000370  BE46               	btfsc	(_pwm+1)^0,7,c
   407   000372  EFC4  F001         	goto	u1791
   408   000376  0E59               	movlw	89
   409   000378  5C45               	subwf	_pwm^0,w,c
   410   00037A  0E02               	movlw	2
   411   00037C  5846               	subwfb	(_pwm+1)^0,w,c
   412   00037E  A0D8               	btfss	status,0,c
   413   000380  EFC4  F001         	goto	u1791
   414   000384  EFC6  F001         	goto	u1790
   415   000388                     u1791:
   416   000388  EFCD  F001         	goto	l1761
   417   00038C                     u1790:
   418   00038C                     
   419                           ;main.c: 313:         pwm0 = 600;
   420   00038C  0E02               	movlw	2
   421   00038E  0100               	movlb	0	; () banked
   422   000390  6FEE               	movwf	(update_pwm@pwm0+1)& (0+255),b
   423   000392  0E58               	movlw	88
   424   000394  6FED               	movwf	update_pwm@pwm0& (0+255),b
   425                           
   426                           ;main.c: 314:     }else if (pwm[0] < -600){
   427   000396  EFE6  F001         	goto	l1765
   428   00039A                     l1761:
   429   00039A  AE46               	btfss	(_pwm+1)^0,7,c
   430   00039C  EFD9  F001         	goto	u1801
   431   0003A0  0EA8               	movlw	168
   432   0003A2  5C45               	subwf	_pwm^0,w,c
   433   0003A4  0EFD               	movlw	253
   434   0003A6  5846               	subwfb	(_pwm+1)^0,w,c
   435   0003A8  B0D8               	btfsc	status,0,c
   436   0003AA  EFD9  F001         	goto	u1801
   437   0003AE  EFDB  F001         	goto	u1800
   438   0003B2                     u1801:
   439   0003B2  EFE2  F001         	goto	l150
   440   0003B6                     u1800:
   441   0003B6                     
   442                           ;main.c: 315:         pwm0 = -600;
   443   0003B6  0EFD               	movlw	253
   444   0003B8  0100               	movlb	0	; () banked
   445   0003BA  6FEE               	movwf	(update_pwm@pwm0+1)& (0+255),b
   446   0003BC  0EA8               	movlw	168
   447   0003BE  6FED               	movwf	update_pwm@pwm0& (0+255),b
   448                           
   449                           ;main.c: 316:     }else{
   450   0003C0  EFE6  F001         	goto	l1765
   451   0003C4                     l150:
   452                           
   453                           ;main.c: 317:         pwm0 = pwm[0];
   454   0003C4  C045  F0ED         	movff	_pwm,update_pwm@pwm0
   455   0003C8  C046  F0EE         	movff	_pwm+1,update_pwm@pwm0+1
   456   0003CC                     l1765:
   457                           
   458                           ;main.c: 320:     PORTDbits.RD1 = pwm0 > 0 ? 0 : 1;
   459   0003CC  0100               	movlb	0	; () banked
   460   0003CE  BFEE               	btfsc	(update_pwm@pwm0+1)& (0+255),7,b
   461   0003D0  EFF2  F001         	goto	u1811
   462   0003D4  51EE               	movf	(update_pwm@pwm0+1)& (0+255),w,b
   463   0003D6  E10A               	bnz	u1810
   464   0003D8  05ED               	decf	update_pwm@pwm0& (0+255),w,b
   465   0003DA  A0D8               	btfss	status,0,c
   466   0003DC  EFF2  F001         	goto	u1811
   467   0003E0  EFF6  F001         	goto	u1810
   468   0003E4                     u1811:
   469   0003E4  6A58               	clrf	??_update_pwm^0,c
   470   0003E6  2A58               	incf	??_update_pwm^0,f,c
   471   0003E8  EFF7  F001         	goto	u1828
   472   0003EC                     u1810:
   473   0003EC  6A58               	clrf	??_update_pwm^0,c
   474   0003EE                     u1828:
   475   0003EE  4658               	rlncf	??_update_pwm^0,f,c
   476   0003F0  5083               	movf	131,w,c	;volatile
   477   0003F2  1858               	xorwf	??_update_pwm^0,w,c
   478   0003F4  0BFD               	andlw	-3
   479   0003F6  1858               	xorwf	??_update_pwm^0,w,c
   480   0003F8  6E83               	movwf	131,c	;volatile
   481                           
   482                           ;main.c: 321:     PORTDbits.RD0 = pwm0 < 0 ? 0 : 1;
   483   0003FA  0100               	movlb	0	; () banked
   484   0003FC  BFEE               	btfsc	(update_pwm@pwm0+1)& (0+255),7,b
   485   0003FE  EF07  F002         	goto	u1830
   486   000402  EF03  F002         	goto	u1831
   487   000406                     u1831:
   488   000406  6A58               	clrf	??_update_pwm^0,c
   489   000408  2A58               	incf	??_update_pwm^0,f,c
   490   00040A  EF08  F002         	goto	u1848
   491   00040E                     u1830:
   492   00040E  6A58               	clrf	??_update_pwm^0,c
   493   000410                     u1848:
   494   000410  5083               	movf	131,w,c	;volatile
   495   000412  1858               	xorwf	??_update_pwm^0,w,c
   496   000414  0BFE               	andlw	-2
   497   000416  1858               	xorwf	??_update_pwm^0,w,c
   498   000418  6E83               	movwf	131,c	;volatile
   499                           
   500                           ;main.c: 322:     pwm0 = pwm0 > 0 ? pwm0 : (-pwm0);
   501   00041A  0100               	movlb	0	; () banked
   502   00041C  BFEE               	btfsc	(update_pwm@pwm0+1)& (0+255),7,b
   503   00041E  EF1B  F002         	goto	u1850
   504   000422  51EE               	movf	(update_pwm@pwm0+1)& (0+255),w,b
   505   000424  E106               	bnz	u1851
   506   000426  05ED               	decf	update_pwm@pwm0& (0+255),w,b
   507   000428  B0D8               	btfsc	status,0,c
   508   00042A  EF19  F002         	goto	u1851
   509   00042E  EF1B  F002         	goto	u1850
   510   000432                     u1851:
   511   000432  EF1F  F002         	goto	l1769
   512   000436                     u1850:
   513   000436                     
   514                           ; BSR set to: 0
   515   000436  6DED               	negf	update_pwm@pwm0& (0+255),b
   516   000438  1FEE               	comf	(update_pwm@pwm0+1)& (0+255),f,b
   517   00043A  B0D8               	btfsc	status,0,c
   518   00043C  2BEE               	incf	(update_pwm@pwm0+1)& (0+255),f,b
   519   00043E                     l1769:
   520                           
   521                           ; BSR set to: 0
   522                           ;main.c: 324:     CCP1CONbits.DC1B = pwm0 % 4;
   523   00043E  C0ED  F058         	movff	update_pwm@pwm0,??_update_pwm
   524   000442  0E03               	movlw	3
   525   000444  1658               	andwf	??_update_pwm^0,f,c
   526   000446  3A58               	swapf	??_update_pwm^0,f,c
   527   000448  50BD               	movf	189,w,c	;volatile
   528   00044A  1858               	xorwf	??_update_pwm^0,w,c
   529   00044C  0BCF               	andlw	-49
   530   00044E  1858               	xorwf	??_update_pwm^0,w,c
   531   000450  6EBD               	movwf	189,c	;volatile
   532   000452                     
   533                           ; BSR set to: 0
   534                           ;main.c: 325:     CCPR1L = pwm0 / 4;
   535   000452  C0ED  F050         	movff	update_pwm@pwm0,___awdiv@dividend
   536   000456  C0EE  F051         	movff	update_pwm@pwm0+1,___awdiv@dividend+1
   537   00045A  0E00               	movlw	0
   538   00045C  6E53               	movwf	(___awdiv@divisor+1)^0,c
   539   00045E  0E04               	movlw	4
   540   000460  6E52               	movwf	___awdiv@divisor^0,c
   541   000462  ECC6  F003         	call	___awdiv	;wreg free
   542   000466  5050               	movf	?___awdiv^0,w,c
   543   000468  6EBE               	movwf	190,c	;volatile
   544   00046A                     
   545                           ;main.c: 327:     if (pwm[1] > 600){
   546   00046A  BE48               	btfsc	(_pwm+3)^0,7,c
   547   00046C  EF41  F002         	goto	u1861
   548   000470  0E59               	movlw	89
   549   000472  5C47               	subwf	(_pwm+2)^0,w,c
   550   000474  0E02               	movlw	2
   551   000476  5848               	subwfb	(_pwm+3)^0,w,c
   552   000478  A0D8               	btfss	status,0,c
   553   00047A  EF41  F002         	goto	u1861
   554   00047E  EF43  F002         	goto	u1860
   555   000482                     u1861:
   556   000482  EF4A  F002         	goto	l1777
   557   000486                     u1860:
   558   000486                     
   559                           ;main.c: 328:         pwm1 = 600;
   560   000486  0E02               	movlw	2
   561   000488  0100               	movlb	0	; () banked
   562   00048A  6FF0               	movwf	(update_pwm@pwm1+1)& (0+255),b
   563   00048C  0E58               	movlw	88
   564   00048E  6FEF               	movwf	update_pwm@pwm1& (0+255),b
   565                           
   566                           ;main.c: 329:     }else if (pwm[1] < -600){
   567   000490  EF63  F002         	goto	l1781
   568   000494                     l1777:
   569   000494  AE48               	btfss	(_pwm+3)^0,7,c
   570   000496  EF56  F002         	goto	u1871
   571   00049A  0EA8               	movlw	168
   572   00049C  5C47               	subwf	(_pwm+2)^0,w,c
   573   00049E  0EFD               	movlw	253
   574   0004A0  5848               	subwfb	(_pwm+3)^0,w,c
   575   0004A2  B0D8               	btfsc	status,0,c
   576   0004A4  EF56  F002         	goto	u1871
   577   0004A8  EF58  F002         	goto	u1870
   578   0004AC                     u1871:
   579   0004AC  EF5F  F002         	goto	l158
   580   0004B0                     u1870:
   581   0004B0                     
   582                           ;main.c: 330:         pwm1 = -600;
   583   0004B0  0EFD               	movlw	253
   584   0004B2  0100               	movlb	0	; () banked
   585   0004B4  6FF0               	movwf	(update_pwm@pwm1+1)& (0+255),b
   586   0004B6  0EA8               	movlw	168
   587   0004B8  6FEF               	movwf	update_pwm@pwm1& (0+255),b
   588                           
   589                           ;main.c: 331:     }else{
   590   0004BA  EF63  F002         	goto	l1781
   591   0004BE                     l158:
   592                           
   593                           ;main.c: 332:         pwm1 = pwm[1];
   594   0004BE  C047  F0EF         	movff	_pwm+2,update_pwm@pwm1
   595   0004C2  C048  F0F0         	movff	_pwm+3,update_pwm@pwm1+1
   596   0004C6                     l1781:
   597                           
   598                           ;main.c: 335:     PORTCbits.RC1 = pwm1 > 0 ? 0 : 1;
   599   0004C6  0100               	movlb	0	; () banked
   600   0004C8  BFF0               	btfsc	(update_pwm@pwm1+1)& (0+255),7,b
   601   0004CA  EF6F  F002         	goto	u1881
   602   0004CE  51F0               	movf	(update_pwm@pwm1+1)& (0+255),w,b
   603   0004D0  E10A               	bnz	u1880
   604   0004D2  05EF               	decf	update_pwm@pwm1& (0+255),w,b
   605   0004D4  A0D8               	btfss	status,0,c
   606   0004D6  EF6F  F002         	goto	u1881
   607   0004DA  EF73  F002         	goto	u1880
   608   0004DE                     u1881:
   609   0004DE  6A58               	clrf	??_update_pwm^0,c
   610   0004E0  2A58               	incf	??_update_pwm^0,f,c
   611   0004E2  EF74  F002         	goto	u1898
   612   0004E6                     u1880:
   613   0004E6  6A58               	clrf	??_update_pwm^0,c
   614   0004E8                     u1898:
   615   0004E8  4658               	rlncf	??_update_pwm^0,f,c
   616   0004EA  5082               	movf	130,w,c	;volatile
   617   0004EC  1858               	xorwf	??_update_pwm^0,w,c
   618   0004EE  0BFD               	andlw	-3
   619   0004F0  1858               	xorwf	??_update_pwm^0,w,c
   620   0004F2  6E82               	movwf	130,c	;volatile
   621                           
   622                           ;main.c: 336:     PORTCbits.RC0 = pwm1 < 0 ? 0 : 1;
   623   0004F4  0100               	movlb	0	; () banked
   624   0004F6  BFF0               	btfsc	(update_pwm@pwm1+1)& (0+255),7,b
   625   0004F8  EF84  F002         	goto	u1900
   626   0004FC  EF80  F002         	goto	u1901
   627   000500                     u1901:
   628   000500  6A58               	clrf	??_update_pwm^0,c
   629   000502  2A58               	incf	??_update_pwm^0,f,c
   630   000504  EF85  F002         	goto	u1918
   631   000508                     u1900:
   632   000508  6A58               	clrf	??_update_pwm^0,c
   633   00050A                     u1918:
   634   00050A  5082               	movf	130,w,c	;volatile
   635   00050C  1858               	xorwf	??_update_pwm^0,w,c
   636   00050E  0BFE               	andlw	-2
   637   000510  1858               	xorwf	??_update_pwm^0,w,c
   638   000512  6E82               	movwf	130,c	;volatile
   639                           
   640                           ;main.c: 337:     pwm1 = pwm1 > 0 ? pwm1 : (-pwm1);
   641   000514  0100               	movlb	0	; () banked
   642   000516  BFF0               	btfsc	(update_pwm@pwm1+1)& (0+255),7,b
   643   000518  EF98  F002         	goto	u1920
   644   00051C  51F0               	movf	(update_pwm@pwm1+1)& (0+255),w,b
   645   00051E  E106               	bnz	u1921
   646   000520  05EF               	decf	update_pwm@pwm1& (0+255),w,b
   647   000522  B0D8               	btfsc	status,0,c
   648   000524  EF96  F002         	goto	u1921
   649   000528  EF98  F002         	goto	u1920
   650   00052C                     u1921:
   651   00052C  EF9C  F002         	goto	l1785
   652   000530                     u1920:
   653   000530                     
   654                           ; BSR set to: 0
   655   000530  6DEF               	negf	update_pwm@pwm1& (0+255),b
   656   000532  1FF0               	comf	(update_pwm@pwm1+1)& (0+255),f,b
   657   000534  B0D8               	btfsc	status,0,c
   658   000536  2BF0               	incf	(update_pwm@pwm1+1)& (0+255),f,b
   659   000538                     l1785:
   660                           
   661                           ; BSR set to: 0
   662                           ;main.c: 339:     CCP2CONbits.DC2B = pwm1 % 4;
   663   000538  C0EF  F058         	movff	update_pwm@pwm1,??_update_pwm
   664   00053C  0E03               	movlw	3
   665   00053E  1658               	andwf	??_update_pwm^0,f,c
   666   000540  3A58               	swapf	??_update_pwm^0,f,c
   667   000542  50BA               	movf	186,w,c	;volatile
   668   000544  1858               	xorwf	??_update_pwm^0,w,c
   669   000546  0BCF               	andlw	-49
   670   000548  1858               	xorwf	??_update_pwm^0,w,c
   671   00054A  6EBA               	movwf	186,c	;volatile
   672   00054C                     
   673                           ; BSR set to: 0
   674                           ;main.c: 340:     CCPR2L = pwm1 / 4;
   675   00054C  C0EF  F050         	movff	update_pwm@pwm1,___awdiv@dividend
   676   000550  C0F0  F051         	movff	update_pwm@pwm1+1,___awdiv@dividend+1
   677   000554  0E00               	movlw	0
   678   000556  6E53               	movwf	(___awdiv@divisor+1)^0,c
   679   000558  0E04               	movlw	4
   680   00055A  6E52               	movwf	___awdiv@divisor^0,c
   681   00055C  ECC6  F003         	call	___awdiv	;wreg free
   682   000560  5050               	movf	?___awdiv^0,w,c
   683   000562  6EBB               	movwf	187,c	;volatile
   684   000564  0012               	return		;funcret
   685   000566                     __end_of_update_pwm:
   686                           	callstack 0
   687                           
   688 ;; *************** function _read_analog *****************
   689 ;; Defined at:
   690 ;;		line 206 in file "main.c"
   691 ;; Parameters:    Size  Location     Type
   692 ;;		None
   693 ;; Auto vars:     Size  Location     Type
   694 ;;  aux             2    0[BANK0 ] unsigned int 
   695 ;;  i               1    2[BANK0 ] unsigned char 
   696 ;; Return value:  Size  Location     Type
   697 ;;                  1    wreg      void 
   698 ;; Registers used:
   699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   700 ;; Tracked objects:
   701 ;;		On entry : 0/0
   702 ;;		On exit  : 0/0
   703 ;;		Unchanged: 0/0
   704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   705 ;;      Params:         0       0       0       0       0       0       0       0       0
   706 ;;      Locals:         0       3       0       0       0       0       0       0       0
   707 ;;      Temps:          1       0       0       0       0       0       0       0       0
   708 ;;      Totals:         1       3       0       0       0       0       0       0       0
   709 ;;Total ram usage:        4 bytes
   710 ;; Hardware stack levels used: 1
   711 ;; Hardware stack levels required when called: 2
   712 ;; This function calls:
   713 ;;		___awdiv
   714 ;; This function is called by:
   715 ;;		_main
   716 ;; This function uses a non-reentrant model
   717 ;;
   718                           
   719                           	psect	text2
   720   0008DE                     __ptext2:
   721                           	callstack 0
   722   0008DE                     _read_analog:
   723                           	callstack 28
   724   0008DE                     
   725                           ;main.c: 207:     unsigned int aux;;main.c: 208:     unsigned char i;;main.c: 209:     f
      +                          or (i=0;i<=5;i++){
   726   0008DE  0E00               	movlw	0
   727   0008E0  0100               	movlb	0	; () banked
   728   0008E2  6FEF               	movwf	read_analog@i& (0+255),b
   729   0008E4                     l1743:
   730                           
   731                           ; BSR set to: 0
   732                           ;main.c: 210:         ADCON0bits.CHS=i;
   733   0008E4  C0EF  F058         	movff	read_analog@i,??_read_analog
   734   0008E8  4658               	rlncf	??_read_analog^0,f,c
   735   0008EA  4658               	rlncf	??_read_analog^0,f,c
   736   0008EC  50C2               	movf	194,w,c	;volatile
   737   0008EE  1858               	xorwf	??_read_analog^0,w,c
   738   0008F0  0BC3               	andlw	-61
   739   0008F2  1858               	xorwf	??_read_analog^0,w,c
   740   0008F4  6EC2               	movwf	194,c	;volatile
   741   0008F6                     
   742                           ; BSR set to: 0
   743                           ;main.c: 211:         ADCON0bits.GODONE=1;
   744   0008F6  82C2               	bsf	194,1,c	;volatile
   745   0008F8                     l106:
   746   0008F8  B2C2               	btfsc	194,1,c	;volatile
   747   0008FA  EF81  F004         	goto	u1771
   748   0008FE  EF83  F004         	goto	u1770
   749   000902                     u1771:
   750   000902  EF7C  F004         	goto	l106
   751   000906                     u1770:
   752   000906                     
   753                           ;main.c: 213:         aux=ADRESH*4;
   754   000906  50C4               	movf	196,w,c	;volatile
   755   000908  0D04               	mullw	4
   756   00090A  CFF3 F0ED          	movff	prodl,read_analog@aux
   757   00090E  CFF4 F0EE          	movff	prodh,read_analog@aux+1
   758   000912                     
   759                           ;main.c: 214:         aux=aux+ADRESL/64;
   760   000912  CFC3 F050          	movff	4035,___awdiv@dividend	;volatile
   761   000916  6A51               	clrf	(___awdiv@dividend+1)^0,c
   762   000918  0E00               	movlw	0
   763   00091A  6E53               	movwf	(___awdiv@divisor+1)^0,c
   764   00091C  0E40               	movlw	64
   765   00091E  6E52               	movwf	___awdiv@divisor^0,c
   766   000920  ECC6  F003         	call	___awdiv	;wreg free
   767   000924  0100               	movlb	0	; () banked
   768   000926  51ED               	movf	read_analog@aux& (0+255),w,b
   769   000928  2450               	addwf	?___awdiv^0,w,c
   770   00092A  6FED               	movwf	read_analog@aux& (0+255),b
   771   00092C  51EE               	movf	(read_analog@aux+1)& (0+255),w,b
   772   00092E  2051               	addwfc	(?___awdiv+1)^0,w,c
   773   000930  6FEE               	movwf	(read_analog@aux+1)& (0+255),b
   774   000932                     
   775                           ; BSR set to: 0
   776                           ;main.c: 215:         an_input[i]=aux;
   777   000932  51EF               	movf	read_analog@i& (0+255),w,b
   778   000934  0D02               	mullw	2
   779   000936  0EB0               	movlw	low _an_input
   780   000938  24F3               	addwf	243,w,c
   781   00093A  6ED9               	movwf	fsr2l,c
   782   00093C  0E00               	movlw	high _an_input
   783   00093E  20F4               	addwfc	prodh,w,c
   784   000940  6EDA               	movwf	fsr2h,c
   785   000942  C0ED  FFDE         	movff	read_analog@aux,postinc2
   786   000946  C0EE  FFDD         	movff	read_analog@aux+1,postdec2
   787   00094A                     
   788                           ; BSR set to: 0
   789                           ;main.c: 216:     }
   790   00094A  2BEF               	incf	read_analog@i& (0+255),f,b
   791   00094C                     
   792                           ; BSR set to: 0
   793   00094C  0E05               	movlw	5
   794   00094E  65EF               	cpfsgt	read_analog@i& (0+255),b
   795   000950  EFAC  F004         	goto	u1781
   796   000954  EFAE  F004         	goto	u1780
   797   000958                     u1781:
   798   000958  EF72  F004         	goto	l1743
   799   00095C                     u1780:
   800   00095C                     
   801                           ; BSR set to: 0
   802   00095C  0012               	return		;funcret
   803   00095E                     __end_of_read_analog:
   804                           	callstack 0
   805                           
   806 ;; *************** function ___awdiv *****************
   807 ;; Defined at:
   808 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
   809 ;; Parameters:    Size  Location     Type
   810 ;;  dividend        2    6[COMRAM] int 
   811 ;;  divisor         2    8[COMRAM] int 
   812 ;; Auto vars:     Size  Location     Type
   813 ;;  quotient        2   12[COMRAM] int 
   814 ;;  sign            1   11[COMRAM] unsigned char 
   815 ;;  counter         1   10[COMRAM] unsigned char 
   816 ;; Return value:  Size  Location     Type
   817 ;;                  2    6[COMRAM] int 
   818 ;; Registers used:
   819 ;;		wreg, status,2, status,0
   820 ;; Tracked objects:
   821 ;;		On entry : 0/0
   822 ;;		On exit  : 0/0
   823 ;;		Unchanged: 0/0
   824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   825 ;;      Params:         4       0       0       0       0       0       0       0       0
   826 ;;      Locals:         4       0       0       0       0       0       0       0       0
   827 ;;      Temps:          0       0       0       0       0       0       0       0       0
   828 ;;      Totals:         8       0       0       0       0       0       0       0       0
   829 ;;Total ram usage:        8 bytes
   830 ;; Hardware stack levels used: 1
   831 ;; Hardware stack levels required when called: 1
   832 ;; This function calls:
   833 ;;		Nothing
   834 ;; This function is called by:
   835 ;;		_read_analog
   836 ;;		_update_pwm
   837 ;; This function uses a non-reentrant model
   838 ;;
   839                           
   840                           	psect	text3
   841   00078C                     __ptext3:
   842                           	callstack 0
   843   00078C                     ___awdiv:
   844                           	callstack 28
   845   00078C  0E00               	movlw	0
   846   00078E  6E55               	movwf	___awdiv@sign^0,c
   847   000790  BE53               	btfsc	(___awdiv@divisor+1)^0,7,c
   848   000792  EFCF  F003         	goto	u1710
   849   000796  EFCD  F003         	goto	u1711
   850   00079A                     u1711:
   851   00079A  EFD5  F003         	goto	l1701
   852   00079E                     u1710:
   853   00079E  6C52               	negf	___awdiv@divisor^0,c
   854   0007A0  1E53               	comf	(___awdiv@divisor+1)^0,f,c
   855   0007A2  B0D8               	btfsc	status,0,c
   856   0007A4  2A53               	incf	(___awdiv@divisor+1)^0,f,c
   857   0007A6  0E01               	movlw	1
   858   0007A8  6E55               	movwf	___awdiv@sign^0,c
   859   0007AA                     l1701:
   860   0007AA  BE51               	btfsc	(___awdiv@dividend+1)^0,7,c
   861   0007AC  EFDC  F003         	goto	u1720
   862   0007B0  EFDA  F003         	goto	u1721
   863   0007B4                     u1721:
   864   0007B4  EFE2  F003         	goto	l1707
   865   0007B8                     u1720:
   866   0007B8  6C50               	negf	___awdiv@dividend^0,c
   867   0007BA  1E51               	comf	(___awdiv@dividend+1)^0,f,c
   868   0007BC  B0D8               	btfsc	status,0,c
   869   0007BE  2A51               	incf	(___awdiv@dividend+1)^0,f,c
   870   0007C0  0E01               	movlw	1
   871   0007C2  1A55               	xorwf	___awdiv@sign^0,f,c
   872   0007C4                     l1707:
   873   0007C4  0E00               	movlw	0
   874   0007C6  6E57               	movwf	(___awdiv@quotient+1)^0,c
   875   0007C8  0E00               	movlw	0
   876   0007CA  6E56               	movwf	___awdiv@quotient^0,c
   877   0007CC  5052               	movf	___awdiv@divisor^0,w,c
   878   0007CE  1053               	iorwf	(___awdiv@divisor+1)^0,w,c
   879   0007D0  B4D8               	btfsc	status,2,c
   880   0007D2  EFED  F003         	goto	u1731
   881   0007D6  EFEF  F003         	goto	u1730
   882   0007DA                     u1731:
   883   0007DA  EF17  F004         	goto	l1729
   884   0007DE                     u1730:
   885   0007DE  0E01               	movlw	1
   886   0007E0  6E54               	movwf	___awdiv@counter^0,c
   887   0007E2  EFF7  F003         	goto	l1715
   888   0007E6                     l1713:
   889   0007E6  90D8               	bcf	status,0,c
   890   0007E8  3652               	rlcf	___awdiv@divisor^0,f,c
   891   0007EA  3653               	rlcf	(___awdiv@divisor+1)^0,f,c
   892   0007EC  2A54               	incf	___awdiv@counter^0,f,c
   893   0007EE                     l1715:
   894   0007EE  AE53               	btfss	(___awdiv@divisor+1)^0,7,c
   895   0007F0  EFFC  F003         	goto	u1741
   896   0007F4  EFFE  F003         	goto	u1740
   897   0007F8                     u1741:
   898   0007F8  EFF3  F003         	goto	l1713
   899   0007FC                     u1740:
   900   0007FC                     l1717:
   901   0007FC  90D8               	bcf	status,0,c
   902   0007FE  3656               	rlcf	___awdiv@quotient^0,f,c
   903   000800  3657               	rlcf	(___awdiv@quotient+1)^0,f,c
   904   000802  5052               	movf	___awdiv@divisor^0,w,c
   905   000804  5C50               	subwf	___awdiv@dividend^0,w,c
   906   000806  5053               	movf	(___awdiv@divisor+1)^0,w,c
   907   000808  5851               	subwfb	(___awdiv@dividend+1)^0,w,c
   908   00080A  A0D8               	btfss	status,0,c
   909   00080C  EF0A  F004         	goto	u1751
   910   000810  EF0C  F004         	goto	u1750
   911   000814                     u1751:
   912   000814  EF11  F004         	goto	l1725
   913   000818                     u1750:
   914   000818  5052               	movf	___awdiv@divisor^0,w,c
   915   00081A  5E50               	subwf	___awdiv@dividend^0,f,c
   916   00081C  5053               	movf	(___awdiv@divisor+1)^0,w,c
   917   00081E  5A51               	subwfb	(___awdiv@dividend+1)^0,f,c
   918   000820  8056               	bsf	___awdiv@quotient^0,0,c
   919   000822                     l1725:
   920   000822  90D8               	bcf	status,0,c
   921   000824  3253               	rrcf	(___awdiv@divisor+1)^0,f,c
   922   000826  3252               	rrcf	___awdiv@divisor^0,f,c
   923   000828  2E54               	decfsz	___awdiv@counter^0,f,c
   924   00082A  EFFE  F003         	goto	l1717
   925   00082E                     l1729:
   926   00082E  5055               	movf	___awdiv@sign^0,w,c
   927   000830  B4D8               	btfsc	status,2,c
   928   000832  EF1D  F004         	goto	u1761
   929   000836  EF1F  F004         	goto	u1760
   930   00083A                     u1761:
   931   00083A  EF23  F004         	goto	l1733
   932   00083E                     u1760:
   933   00083E  6C56               	negf	___awdiv@quotient^0,c
   934   000840  1E57               	comf	(___awdiv@quotient+1)^0,f,c
   935   000842  B0D8               	btfsc	status,0,c
   936   000844  2A57               	incf	(___awdiv@quotient+1)^0,f,c
   937   000846                     l1733:
   938   000846  C056  F050         	movff	___awdiv@quotient,?___awdiv
   939   00084A  C057  F051         	movff	___awdiv@quotient+1,?___awdiv+1
   940   00084E  0012               	return		;funcret
   941   000850                     __end_of___awdiv:
   942                           	callstack 0
   943                           
   944 ;; *************** function _loop *****************
   945 ;; Defined at:
   946 ;;		line 512 in file "main.c"
   947 ;; Parameters:    Size  Location     Type
   948 ;;		None
   949 ;; Auto vars:     Size  Location     Type
   950 ;;		None
   951 ;; Return value:  Size  Location     Type
   952 ;;                  1    wreg      void 
   953 ;; Registers used:
   954 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   955 ;; Tracked objects:
   956 ;;		On entry : 0/0
   957 ;;		On exit  : 0/0
   958 ;;		Unchanged: 0/0
   959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   960 ;;      Params:         0       0       0       0       0       0       0       0       0
   961 ;;      Locals:         0       0       0       0       0       0       0       0       0
   962 ;;      Temps:          1       0       0       0       0       0       0       0       0
   963 ;;      Totals:         1       0       0       0       0       0       0       0       0
   964 ;;Total ram usage:        1 bytes
   965 ;; Hardware stack levels used: 1
   966 ;; Hardware stack levels required when called: 1
   967 ;; This function calls:
   968 ;;		Nothing
   969 ;; This function is called by:
   970 ;;		_main
   971 ;; This function uses a non-reentrant model
   972 ;;
   973                           
   974                           	psect	text4
   975   000566                     __ptext4:
   976                           	callstack 0
   977   000566                     _loop:
   978                           	callstack 29
   979   000566                     
   980                           ;main.c: 513:     if (press_evt[0]){
   981   000566  0100               	movlb	0	; () banked
   982   000568  51E8               	movf	_press_evt& (0+255),w,b
   983   00056A  B4D8               	btfsc	status,2,c
   984   00056C  EFBA  F002         	goto	u1541
   985   000570  EFBC  F002         	goto	u1540
   986   000574                     u1541:
   987   000574  EFCE  F002         	goto	l1655
   988   000578                     u1540:
   989   000578                     
   990                           ; BSR set to: 0
   991                           ;main.c: 514:         PORTBbits.RB0 = !PORTBbits.RB0;
   992   000578  A081               	btfss	129,0,c	;volatile
   993   00057A  EFC1  F002         	goto	u1551
   994   00057E  EFC5  F002         	goto	u1550
   995   000582                     u1551:
   996   000582  6A50               	clrf	??_loop^0,c
   997   000584  2A50               	incf	??_loop^0,f,c
   998   000586  EFC6  F002         	goto	u1568
   999   00058A                     u1550:
  1000   00058A  6A50               	clrf	??_loop^0,c
  1001   00058C                     u1568:
  1002   00058C  5081               	movf	129,w,c	;volatile
  1003   00058E  1850               	xorwf	??_loop^0,w,c
  1004   000590  0BFE               	andlw	-2
  1005   000592  1850               	xorwf	??_loop^0,w,c
  1006   000594  6E81               	movwf	129,c	;volatile
  1007   000596                     
  1008                           ;main.c: 515:         press_evt[0] = 0;
  1009   000596  0E00               	movlw	0
  1010   000598  0100               	movlb	0	; () banked
  1011   00059A  6FE8               	movwf	_press_evt& (0+255),b
  1012   00059C                     l1655:
  1013                           
  1014                           ; BSR set to: 0
  1015                           ;main.c: 523:     if (single_click_evt[0]){
  1016   00059C  51DE               	movf	_single_click_evt& (0+255),w,b
  1017   00059E  B4D8               	btfsc	status,2,c
  1018   0005A0  EFD4  F002         	goto	u1571
  1019   0005A4  EFD6  F002         	goto	u1570
  1020   0005A8                     u1571:
  1021   0005A8  EFEA  F002         	goto	l1661
  1022   0005AC                     u1570:
  1023   0005AC                     
  1024                           ; BSR set to: 0
  1025                           ;main.c: 524:         PORTBbits.RB2 = !PORTBbits.RB2;
  1026   0005AC  A481               	btfss	129,2,c	;volatile
  1027   0005AE  EFDB  F002         	goto	u1581
  1028   0005B2  EFDF  F002         	goto	u1580
  1029   0005B6                     u1581:
  1030   0005B6  6A50               	clrf	??_loop^0,c
  1031   0005B8  2A50               	incf	??_loop^0,f,c
  1032   0005BA  EFE0  F002         	goto	u1598
  1033   0005BE                     u1580:
  1034   0005BE  6A50               	clrf	??_loop^0,c
  1035   0005C0                     u1598:
  1036   0005C0  4650               	rlncf	??_loop^0,f,c
  1037   0005C2  4650               	rlncf	??_loop^0,f,c
  1038   0005C4  5081               	movf	129,w,c	;volatile
  1039   0005C6  1850               	xorwf	??_loop^0,w,c
  1040   0005C8  0BFB               	andlw	-5
  1041   0005CA  1850               	xorwf	??_loop^0,w,c
  1042   0005CC  6E81               	movwf	129,c	;volatile
  1043   0005CE                     
  1044                           ;main.c: 525:         single_click_evt[0] = 0;
  1045   0005CE  0E00               	movlw	0
  1046   0005D0  0100               	movlb	0	; () banked
  1047   0005D2  6FDE               	movwf	_single_click_evt& (0+255),b
  1048   0005D4                     l1661:
  1049                           
  1050                           ; BSR set to: 0
  1051                           ;main.c: 528:     if (double_click_evt[0]){
  1052   0005D4  51D9               	movf	_double_click_evt& (0+255),w,b
  1053   0005D6  B4D8               	btfsc	status,2,c
  1054   0005D8  EFF0  F002         	goto	u1601
  1055   0005DC  EFF2  F002         	goto	u1600
  1056   0005E0                     u1601:
  1057   0005E0  EF05  F003         	goto	l1667
  1058   0005E4                     u1600:
  1059   0005E4                     
  1060                           ; BSR set to: 0
  1061                           ;main.c: 529:         PORTBbits.RB4 = !PORTBbits.RB4;
  1062   0005E4  A881               	btfss	129,4,c	;volatile
  1063   0005E6  EFF7  F002         	goto	u1611
  1064   0005EA  EFFB  F002         	goto	u1610
  1065   0005EE                     u1611:
  1066   0005EE  6A50               	clrf	??_loop^0,c
  1067   0005F0  2A50               	incf	??_loop^0,f,c
  1068   0005F2  EFFC  F002         	goto	u1628
  1069   0005F6                     u1610:
  1070   0005F6  6A50               	clrf	??_loop^0,c
  1071   0005F8                     u1628:
  1072   0005F8  3A50               	swapf	??_loop^0,f,c
  1073   0005FA  5081               	movf	129,w,c	;volatile
  1074   0005FC  1850               	xorwf	??_loop^0,w,c
  1075   0005FE  0BEF               	andlw	-17
  1076   000600  1850               	xorwf	??_loop^0,w,c
  1077   000602  6E81               	movwf	129,c	;volatile
  1078   000604                     
  1079                           ;main.c: 530:         double_click_evt[0] = 0;
  1080   000604  0E00               	movlw	0
  1081   000606  0100               	movlb	0	; () banked
  1082   000608  6FD9               	movwf	_double_click_evt& (0+255),b
  1083   00060A                     l1667:
  1084                           
  1085                           ; BSR set to: 0
  1086                           ;main.c: 533:     if (triple_click_evt[0]){
  1087   00060A  51D4               	movf	_triple_click_evt& (0+255),w,b
  1088   00060C  B4D8               	btfsc	status,2,c
  1089   00060E  EF0B  F003         	goto	u1631
  1090   000612  EF0D  F003         	goto	u1630
  1091   000616                     u1631:
  1092   000616  EF21  F003         	goto	l1673
  1093   00061A                     u1630:
  1094   00061A                     
  1095                           ; BSR set to: 0
  1096                           ;main.c: 534:         PORTBbits.RB5 = !PORTBbits.RB5;
  1097   00061A  AA81               	btfss	129,5,c	;volatile
  1098   00061C  EF12  F003         	goto	u1641
  1099   000620  EF16  F003         	goto	u1640
  1100   000624                     u1641:
  1101   000624  6A50               	clrf	??_loop^0,c
  1102   000626  2A50               	incf	??_loop^0,f,c
  1103   000628  EF17  F003         	goto	u1658
  1104   00062C                     u1640:
  1105   00062C  6A50               	clrf	??_loop^0,c
  1106   00062E                     u1658:
  1107   00062E  3A50               	swapf	??_loop^0,f,c
  1108   000630  4650               	rlncf	??_loop^0,f,c
  1109   000632  5081               	movf	129,w,c	;volatile
  1110   000634  1850               	xorwf	??_loop^0,w,c
  1111   000636  0BDF               	andlw	-33
  1112   000638  1850               	xorwf	??_loop^0,w,c
  1113   00063A  6E81               	movwf	129,c	;volatile
  1114   00063C                     
  1115                           ;main.c: 535:         triple_click_evt[0] = 0;
  1116   00063C  0E00               	movlw	0
  1117   00063E  0100               	movlb	0	; () banked
  1118   000640  6FD4               	movwf	_triple_click_evt& (0+255),b
  1119   000642                     l1673:
  1120                           
  1121                           ; BSR set to: 0
  1122                           ;main.c: 538:     if (counter[1] >= 1000){
  1123   000642  BE10               	btfsc	(_counter+15)^0,7,c
  1124   000644  EF34  F003         	goto	u1661
  1125   000648  5010               	movf	(_counter+15)^0,w,c
  1126   00064A  100F               	iorwf	(_counter+14)^0,w,c
  1127   00064C  100E               	iorwf	(_counter+13)^0,w,c
  1128   00064E  100D               	iorwf	(_counter+12)^0,w,c
  1129   000650  100C               	iorwf	(_counter+11)^0,w,c
  1130   000652  100B               	iorwf	(_counter+10)^0,w,c
  1131   000654  E10B               	bnz	u1660
  1132   000656  0EE8               	movlw	232
  1133   000658  5C09               	subwf	(_counter+8)^0,w,c
  1134   00065A  0E03               	movlw	3
  1135   00065C  580A               	subwfb	(_counter+9)^0,w,c
  1136   00065E  A0D8               	btfss	status,0,c
  1137   000660  EF34  F003         	goto	u1661
  1138   000664  EF36  F003         	goto	u1660
  1139   000668                     u1661:
  1140   000668  EF4E  F003         	goto	l253
  1141   00066C                     u1660:
  1142   00066C                     
  1143                           ; BSR set to: 0
  1144                           ;main.c: 543:         amount_cycles = 0;
  1145   00066C  EE20  F0C4         	lfsr	2,_amount_cycles
  1146   000670  0E07               	movlw	7
  1147   000672                     u1671:
  1148   000672  6ADE               	clrf	postinc2,c
  1149   000674  06E8               	decf	wreg,f,c
  1150   000676  E2FD               	bc	u1671
  1151                           
  1152                           ;main.c: 544:         sum_iterations = 0;
  1153   000678  EE20  F0CC         	lfsr	2,_sum_iterations
  1154   00067C  0E07               	movlw	7
  1155   00067E                     u1681:
  1156   00067E  6ADE               	clrf	postinc2,c
  1157   000680  06E8               	decf	wreg,f,c
  1158   000682  E2FD               	bc	u1681
  1159                           
  1160                           ;main.c: 547:         counter[1] = 0;
  1161   000684  EE20  F009         	lfsr	2,_counter+8
  1162   000688  0E07               	movlw	7
  1163   00068A                     u1691:
  1164   00068A  6ADE               	clrf	postinc2,c
  1165   00068C  06E8               	decf	wreg,f,c
  1166   00068E  E2FD               	bc	u1691
  1167                           
  1168                           ;main.c: 548:         counter[0] = 0;
  1169   000690  EE20  F001         	lfsr	2,_counter
  1170   000694  0E07               	movlw	7
  1171   000696                     u1701:
  1172   000696  6ADE               	clrf	postinc2,c
  1173   000698  06E8               	decf	wreg,f,c
  1174   00069A  E2FD               	bc	u1701
  1175   00069C                     l253:
  1176                           
  1177                           ; BSR set to: 0
  1178   00069C  0012               	return		;funcret
  1179   00069E                     __end_of_loop:
  1180                           	callstack 0
  1181                           
  1182 ;; *************** function _init_vars *****************
  1183 ;; Defined at:
  1184 ;;		line 300 in file "main.c"
  1185 ;; Parameters:    Size  Location     Type
  1186 ;;		None
  1187 ;; Auto vars:     Size  Location     Type
  1188 ;;  i               2    8[COMRAM] int 
  1189 ;; Return value:  Size  Location     Type
  1190 ;;                  1    wreg      void 
  1191 ;; Registers used:
  1192 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1193 ;; Tracked objects:
  1194 ;;		On entry : 0/0
  1195 ;;		On exit  : 0/0
  1196 ;;		Unchanged: 0/0
  1197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1198 ;;      Params:         0       0       0       0       0       0       0       0       0
  1199 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1200 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1201 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1202 ;;Total ram usage:        4 bytes
  1203 ;; Hardware stack levels used: 1
  1204 ;; Hardware stack levels required when called: 1
  1205 ;; This function calls:
  1206 ;;		Nothing
  1207 ;; This function is called by:
  1208 ;;		_main
  1209 ;; This function uses a non-reentrant model
  1210 ;;
  1211                           
  1212                           	psect	text5
  1213   00095E                     __ptext5:
  1214                           	callstack 0
  1215   00095E                     _init_vars:
  1216                           	callstack 29
  1217   00095E                     
  1218                           ;main.c: 301:     int i;;main.c: 302:     for (i=0;i<5;i++){
  1219   00095E  0E00               	movlw	0
  1220   000960  6E53               	movwf	(init_vars@i+1)^0,c
  1221   000962  0E00               	movlw	0
  1222   000964  6E52               	movwf	init_vars@i^0,c
  1223   000966                     l1121:
  1224                           
  1225                           ;main.c: 303:         counter[i] = 0;
  1226   000966  C052  F050         	movff	init_vars@i,??_init_vars
  1227   00096A  C053  F051         	movff	init_vars@i+1,??_init_vars+1
  1228   00096E  90D8               	bcf	status,0,c
  1229   000970  3650               	rlcf	??_init_vars^0,f,c
  1230   000972  3651               	rlcf	(??_init_vars+1)^0,f,c
  1231   000974  90D8               	bcf	status,0,c
  1232   000976  3650               	rlcf	??_init_vars^0,f,c
  1233   000978  3651               	rlcf	(??_init_vars+1)^0,f,c
  1234   00097A  90D8               	bcf	status,0,c
  1235   00097C  3650               	rlcf	??_init_vars^0,f,c
  1236   00097E  3651               	rlcf	(??_init_vars+1)^0,f,c
  1237   000980  0E01               	movlw	low _counter
  1238   000982  2450               	addwf	??_init_vars^0,w,c
  1239   000984  6ED9               	movwf	fsr2l,c
  1240   000986  0E00               	movlw	high _counter
  1241   000988  2051               	addwfc	(??_init_vars+1)^0,w,c
  1242   00098A  6EDA               	movwf	fsr2h,c
  1243   00098C  0E07               	movlw	7
  1244   00098E                     u91:
  1245   00098E  6ADE               	clrf	postinc2,c
  1246   000990  06E8               	decf	wreg,f,c
  1247   000992  E2FD               	bc	u91
  1248   000994                     
  1249                           ;main.c: 304:     }
  1250   000994  4A52               	infsnz	init_vars@i^0,f,c
  1251   000996  2A53               	incf	(init_vars@i+1)^0,f,c
  1252   000998  BE53               	btfsc	(init_vars@i+1)^0,7,c
  1253   00099A  EFD8  F004         	goto	u101
  1254   00099E  5053               	movf	(init_vars@i+1)^0,w,c
  1255   0009A0  E109               	bnz	u100
  1256   0009A2  0E05               	movlw	5
  1257   0009A4  5C52               	subwf	init_vars@i^0,w,c
  1258   0009A6  A0D8               	btfss	status,0,c
  1259   0009A8  EFD8  F004         	goto	u101
  1260   0009AC  EFDA  F004         	goto	u100
  1261   0009B0                     u101:
  1262   0009B0  EFB3  F004         	goto	l1121
  1263   0009B4                     u100:
  1264   0009B4                     
  1265                           ;main.c: 305:     pwm[0] = 0;
  1266   0009B4  0E00               	movlw	0
  1267   0009B6  6E46               	movwf	(_pwm+1)^0,c
  1268   0009B8  0E00               	movlw	0
  1269   0009BA  6E45               	movwf	_pwm^0,c
  1270                           
  1271                           ;main.c: 306:     pwm[1] = 0;
  1272   0009BC  0E00               	movlw	0
  1273   0009BE  6E48               	movwf	(_pwm+3)^0,c
  1274   0009C0  0E00               	movlw	0
  1275   0009C2  6E47               	movwf	(_pwm+2)^0,c
  1276   0009C4  0012               	return		;funcret
  1277   0009C6                     __end_of_init_vars:
  1278                           	callstack 0
  1279                           
  1280 ;; *************** function _init *****************
  1281 ;; Defined at:
  1282 ;;		line 507 in file "main.c"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;		None
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;		None
  1287 ;; Return value:  Size  Location     Type
  1288 ;;                  1    wreg      void 
  1289 ;; Registers used:
  1290 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1291 ;; Tracked objects:
  1292 ;;		On entry : 0/0
  1293 ;;		On exit  : 0/0
  1294 ;;		Unchanged: 0/0
  1295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1296 ;;      Params:         0       0       0       0       0       0       0       0       0
  1297 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1298 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1299 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1300 ;;Total ram usage:        0 bytes
  1301 ;; Hardware stack levels used: 1
  1302 ;; Hardware stack levels required when called: 1
  1303 ;; This function calls:
  1304 ;;		Nothing
  1305 ;; This function is called by:
  1306 ;;		_main
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310                           	psect	text6
  1311   000A86                     __ptext6:
  1312                           	callstack 0
  1313   000A86                     _init:
  1314                           	callstack 29
  1315   000A86                     
  1316                           ;main.c: 508:     amount_cycles = 0;
  1317   000A86  EE20  F0C4         	lfsr	2,_amount_cycles
  1318   000A8A  0E07               	movlw	7
  1319   000A8C                     u1521:
  1320   000A8C  6ADE               	clrf	postinc2,c
  1321   000A8E  06E8               	decf	wreg,f,c
  1322   000A90  E2FD               	bc	u1521
  1323                           
  1324                           ;main.c: 509:     sum_iterations = 0;
  1325   000A92  EE20  F0CC         	lfsr	2,_sum_iterations
  1326   000A96  0E07               	movlw	7
  1327   000A98                     u1531:
  1328   000A98  6ADE               	clrf	postinc2,c
  1329   000A9A  06E8               	decf	wreg,f,c
  1330   000A9C  E2FD               	bc	u1531
  1331   000A9E  0012               	return		;funcret
  1332   000AA0                     __end_of_init:
  1333                           	callstack 0
  1334                           
  1335 ;; *************** function _config_micro *****************
  1336 ;; Defined at:
  1337 ;;		line 71 in file "main.c"
  1338 ;; Parameters:    Size  Location     Type
  1339 ;;		None
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;		None
  1342 ;; Return value:  Size  Location     Type
  1343 ;;                  1    wreg      void 
  1344 ;; Registers used:
  1345 ;;		wreg, status,2
  1346 ;; Tracked objects:
  1347 ;;		On entry : 0/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1351 ;;      Params:         0       0       0       0       0       0       0       0       0
  1352 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1353 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1354 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1355 ;;Total ram usage:        0 bytes
  1356 ;; Hardware stack levels used: 1
  1357 ;; Hardware stack levels required when called: 1
  1358 ;; This function calls:
  1359 ;;		Nothing
  1360 ;; This function is called by:
  1361 ;;		_main
  1362 ;; This function uses a non-reentrant model
  1363 ;;
  1364                           
  1365                           	psect	text7
  1366   00069E                     __ptext7:
  1367                           	callstack 0
  1368   00069E                     _config_micro:
  1369                           	callstack 29
  1370   00069E                     
  1371                           ;main.c: 73:     OSCCONbits.IRCF = 7;
  1372   00069E  0E70               	movlw	112
  1373   0006A0  12D3               	iorwf	211,f,c	;volatile
  1374                           
  1375                           ;main.c: 76:     CMCON=0x07;
  1376   0006A2  0E07               	movlw	7
  1377   0006A4  6EB4               	movwf	180,c	;volatile
  1378   0006A6                     
  1379                           ;main.c: 79:     UCONbits.USBEN = 0;
  1380   0006A6  966D               	bcf	109,3,c	;volatile
  1381   0006A8                     
  1382                           ;main.c: 80:     UCFGbits.UTRDIS = 1;
  1383   0006A8  866F               	bsf	111,3,c	;volatile
  1384   0006AA                     
  1385                           ;main.c: 83:     T0CONbits.TMR0ON = 0;
  1386   0006AA  9ED5               	bcf	213,7,c	;volatile
  1387   0006AC                     
  1388                           ;main.c: 84:     T0CONbits.T08BIT = 0;
  1389   0006AC  9CD5               	bcf	213,6,c	;volatile
  1390   0006AE                     
  1391                           ;main.c: 85:     T0CONbits.T0CS = 0;
  1392   0006AE  9AD5               	bcf	213,5,c	;volatile
  1393   0006B0                     
  1394                           ;main.c: 86:     T0CONbits.PSA = 0;
  1395   0006B0  96D5               	bcf	213,3,c	;volatile
  1396                           
  1397                           ;main.c: 87:     T0CONbits.T0PS = 0b101;
  1398   0006B2  50D5               	movf	213,w,c	;volatile
  1399   0006B4  0BF8               	andlw	-8
  1400   0006B6  0905               	iorlw	5
  1401   0006B8  6ED5               	movwf	213,c	;volatile
  1402   0006BA                     
  1403                           ;main.c: 90:     INTCON2bits.TMR0IP = 1;
  1404   0006BA  84F1               	bsf	241,2,c	;volatile
  1405   0006BC                     
  1406                           ;main.c: 91:     INTCONbits.TMR0IE = 1;
  1407   0006BC  8AF2               	bsf	242,5,c	;volatile
  1408   0006BE                     
  1409                           ;main.c: 92:     RCONbits.IPEN = 0;
  1410   0006BE  9ED0               	bcf	208,7,c	;volatile
  1411                           
  1412                           ;main.c: 95:     TMR0H = 0xF8;
  1413   0006C0  0EF8               	movlw	248
  1414   0006C2  6ED7               	movwf	215,c	;volatile
  1415                           
  1416                           ;main.c: 96:     TMR0L = 0xAC;
  1417   0006C4  0EAC               	movlw	172
  1418   0006C6  6ED6               	movwf	214,c	;volatile
  1419   0006C8                     
  1420                           ;main.c: 101:     T1CONbits.TMR1ON = 0;
  1421   0006C8  90CD               	bcf	205,0,c	;volatile
  1422   0006CA                     
  1423                           ;main.c: 102:     T1CONbits.T1RD16 = 0;
  1424   0006CA  9ECD               	bcf	205,7,c	;volatile
  1425   0006CC                     
  1426                           ;main.c: 103:     T1CONbits.T1RUN = 0;
  1427   0006CC  9CCD               	bcf	205,6,c	;volatile
  1428                           
  1429                           ;main.c: 104:     T1CONbits.T1CKPS = 0;
  1430   0006CE  0ECF               	movlw	-49
  1431   0006D0  16CD               	andwf	205,f,c	;volatile
  1432   0006D2                     
  1433                           ;main.c: 105:     T1CONbits.T1OSCEN = 0;
  1434   0006D2  96CD               	bcf	205,3,c	;volatile
  1435   0006D4                     
  1436                           ;main.c: 106:     T1CONbits.TMR1CS = 0;
  1437   0006D4  92CD               	bcf	205,1,c	;volatile
  1438   0006D6                     
  1439                           ;main.c: 109:     INTCONbits.GIE = 1;
  1440   0006D6  8EF2               	bsf	242,7,c	;volatile
  1441   0006D8                     
  1442                           ;main.c: 110:     T0CONbits.TMR0ON = 1;
  1443   0006D8  8ED5               	bsf	213,7,c	;volatile
  1444   0006DA                     
  1445                           ;main.c: 111:     T1CONbits.TMR1ON = 1;
  1446   0006DA  80CD               	bsf	205,0,c	;volatile
  1447                           
  1448                           ;main.c: 113:     TMR1H = 0xF8;
  1449   0006DC  0EF8               	movlw	248
  1450   0006DE  6ECF               	movwf	207,c	;volatile
  1451                           
  1452                           ;main.c: 114:     TMR1L = 0x2F;
  1453   0006E0  0E2F               	movlw	47
  1454   0006E2  6ECE               	movwf	206,c	;volatile
  1455   0006E4                     
  1456                           ;main.c: 119:     T2CONbits.TMR2ON=0;
  1457   0006E4  94CA               	bcf	202,2,c	;volatile
  1458                           
  1459                           ;main.c: 120:     T2CONbits.TOUTPS=0b01;
  1460   0006E6  50CA               	movf	202,w,c	;volatile
  1461   0006E8  0B87               	andlw	-121
  1462   0006EA  0908               	iorlw	8
  1463   0006EC  6ECA               	movwf	202,c	;volatile
  1464                           
  1465                           ;main.c: 121:     T2CONbits.T2CKPS=0b01;
  1466   0006EE  50CA               	movf	202,w,c	;volatile
  1467   0006F0  0BFC               	andlw	-4
  1468   0006F2  0901               	iorlw	1
  1469   0006F4  6ECA               	movwf	202,c	;volatile
  1470                           
  1471                           ;main.c: 124:     CCP1CONbits.CCP1M = 0b1100;
  1472   0006F6  50BD               	movf	189,w,c	;volatile
  1473   0006F8  0BF0               	andlw	-16
  1474   0006FA  090C               	iorlw	12
  1475   0006FC  6EBD               	movwf	189,c	;volatile
  1476                           
  1477                           ;main.c: 125:     CCP2CONbits.CCP2M = 0b1100;
  1478   0006FE  50BA               	movf	186,w,c	;volatile
  1479   000700  0BF0               	andlw	-16
  1480   000702  090C               	iorlw	12
  1481   000704  6EBA               	movwf	186,c	;volatile
  1482                           
  1483                           ;main.c: 126:     PR2=149;
  1484   000706  0E95               	movlw	149
  1485   000708  6ECB               	movwf	203,c	;volatile
  1486                           
  1487                           ;main.c: 130:     CCP1CONbits.DC1B = 0;
  1488   00070A  0ECF               	movlw	-49
  1489   00070C  16BD               	andwf	189,f,c	;volatile
  1490                           
  1491                           ;main.c: 131:     CCP2CONbits.DC2B = 0;
  1492   00070E  0ECF               	movlw	-49
  1493   000710  16BA               	andwf	186,f,c	;volatile
  1494                           
  1495                           ;main.c: 132:     CCPR1L = 0;
  1496   000712  0E00               	movlw	0
  1497   000714  6EBE               	movwf	190,c	;volatile
  1498                           
  1499                           ;main.c: 133:     CCPR2L = 0;
  1500   000716  0E00               	movlw	0
  1501   000718  6EBB               	movwf	187,c	;volatile
  1502   00071A                     
  1503                           ;main.c: 135:     T2CONbits.TMR2ON=1;
  1504   00071A  84CA               	bsf	202,2,c	;volatile
  1505                           
  1506                           ;main.c: 138:     ADCON0bits.CHS=0;
  1507   00071C  0EC3               	movlw	-61
  1508   00071E  16C2               	andwf	194,f,c	;volatile
  1509   000720                     
  1510                           ;main.c: 139:     ADCON0bits.GODONE=0;
  1511   000720  92C2               	bcf	194,1,c	;volatile
  1512   000722                     
  1513                           ;main.c: 140:     ADCON0bits.ADON=1;
  1514   000722  80C2               	bsf	194,0,c	;volatile
  1515                           
  1516                           ;main.c: 142:     ADCON1bits.VCFG = 0;
  1517   000724  0ECF               	movlw	-49
  1518   000726  16C1               	andwf	193,f,c	;volatile
  1519                           
  1520                           ;main.c: 143:     ADCON1bits.PCFG = 0b1001;
  1521   000728  50C1               	movf	193,w,c	;volatile
  1522   00072A  0BF0               	andlw	-16
  1523   00072C  0909               	iorlw	9
  1524   00072E  6EC1               	movwf	193,c	;volatile
  1525   000730                     
  1526                           ;main.c: 145:     ADCON2bits.ADFM=0;
  1527   000730  9EC0               	bcf	192,7,c	;volatile
  1528                           
  1529                           ;main.c: 146:     ADCON2bits.ACQT=7;
  1530   000732  0E38               	movlw	56
  1531   000734  12C0               	iorwf	192,f,c	;volatile
  1532                           
  1533                           ;main.c: 147:     ADCON2bits.ADCS=6;
  1534   000736  50C0               	movf	192,w,c	;volatile
  1535   000738  0BF8               	andlw	-8
  1536   00073A  0906               	iorlw	6
  1537   00073C  6EC0               	movwf	192,c	;volatile
  1538   00073E                     
  1539                           ;main.c: 152:     TRISCbits.RC6 = 1;
  1540   00073E  8C94               	bsf	148,6,c	;volatile
  1541   000740                     
  1542                           ;main.c: 153:     TRISCbits.RC7 = 1;
  1543   000740  8E94               	bsf	148,7,c	;volatile
  1544   000742                     
  1545                           ;main.c: 155:     BAUDCONbits.RXDTP=0;
  1546   000742  9AB8               	bcf	184,5,c	;volatile
  1547   000744                     
  1548                           ;main.c: 156:     BAUDCONbits.TXCKP=0;
  1549   000744  98B8               	bcf	184,4,c	;volatile
  1550   000746                     
  1551                           ;main.c: 157:     BAUDCONbits.BRG16=1;
  1552   000746  86B8               	bsf	184,3,c	;volatile
  1553   000748                     
  1554                           ;main.c: 159:     BAUDCONbits.WUE=0;
  1555   000748  92B8               	bcf	184,1,c	;volatile
  1556   00074A                     
  1557                           ;main.c: 160:     BAUDCONbits.ABDEN=0;
  1558   00074A  90B8               	bcf	184,0,c	;volatile
  1559                           
  1560                           ;main.c: 161:     SPBRG=51;
  1561   00074C  0E33               	movlw	51
  1562   00074E  6EAF               	movwf	175,c	;volatile
  1563                           
  1564                           ;main.c: 162:     SPBRGH=0;
  1565   000750  0E00               	movlw	0
  1566   000752  6EB0               	movwf	176,c	;volatile
  1567   000754                     
  1568                           ;main.c: 163:     TXSTAbits.CSRC=0;
  1569   000754  9EAC               	bcf	172,7,c	;volatile
  1570   000756                     
  1571                           ;main.c: 164:     TXSTAbits.TX9=0;
  1572   000756  9CAC               	bcf	172,6,c	;volatile
  1573   000758                     
  1574                           ;main.c: 165:     TXSTAbits.TXEN=1;
  1575   000758  8AAC               	bsf	172,5,c	;volatile
  1576   00075A                     
  1577                           ;main.c: 166:     TXSTAbits.SYNC=0;
  1578   00075A  98AC               	bcf	172,4,c	;volatile
  1579   00075C                     
  1580                           ;main.c: 168:     TXSTAbits.BRGH=0;
  1581   00075C  94AC               	bcf	172,2,c	;volatile
  1582   00075E                     
  1583                           ;main.c: 169:     RCSTAbits.RX9=0;
  1584   00075E  9CAB               	bcf	171,6,c	;volatile
  1585   000760                     
  1586                           ;main.c: 170:     RCSTAbits.CREN=1;
  1587   000760  88AB               	bsf	171,4,c	;volatile
  1588   000762                     
  1589                           ;main.c: 171:     RCSTAbits.SPEN=1;
  1590   000762  8EAB               	bsf	171,7,c	;volatile
  1591   000764                     
  1592                           ;main.c: 177:     TRISBbits.RB0 = 0;
  1593   000764  9093               	bcf	147,0,c	;volatile
  1594   000766                     
  1595                           ;main.c: 178:     TRISBbits.RB1 = 0;
  1596   000766  9293               	bcf	147,1,c	;volatile
  1597   000768                     
  1598                           ;main.c: 179:     TRISBbits.RB2 = 0;
  1599   000768  9493               	bcf	147,2,c	;volatile
  1600   00076A                     
  1601                           ;main.c: 180:     TRISBbits.RB4 = 0;
  1602   00076A  9893               	bcf	147,4,c	;volatile
  1603   00076C                     
  1604                           ;main.c: 181:     TRISBbits.RB5 = 0;
  1605   00076C  9A93               	bcf	147,5,c	;volatile
  1606   00076E                     
  1607                           ;main.c: 184:     TRISDbits.RD2 = 1;
  1608   00076E  8495               	bsf	149,2,c	;volatile
  1609   000770                     
  1610                           ;main.c: 185:     TRISDbits.RD3 = 1;
  1611   000770  8695               	bsf	149,3,c	;volatile
  1612   000772                     
  1613                           ;main.c: 188:     TRISAbits.RA0 = 1;
  1614   000772  8092               	bsf	146,0,c	;volatile
  1615   000774                     
  1616                           ;main.c: 189:     TRISAbits.RA1 = 1;
  1617   000774  8292               	bsf	146,1,c	;volatile
  1618   000776                     
  1619                           ;main.c: 190:     TRISAbits.RA2 = 1;
  1620   000776  8492               	bsf	146,2,c	;volatile
  1621   000778                     
  1622                           ;main.c: 191:     TRISAbits.RA3 = 1;
  1623   000778  8692               	bsf	146,3,c	;volatile
  1624   00077A                     
  1625                           ;main.c: 192:     TRISAbits.RA4 = 1;
  1626   00077A  8892               	bsf	146,4,c	;volatile
  1627   00077C                     
  1628                           ;main.c: 193:     TRISEbits.RE0 = 1;
  1629   00077C  8096               	bsf	150,0,c	;volatile
  1630   00077E                     
  1631                           ;main.c: 196:     TRISDbits.RD1 = 0;
  1632   00077E  9295               	bcf	149,1,c	;volatile
  1633   000780                     
  1634                           ;main.c: 197:     TRISDbits.RD0 = 0;
  1635   000780  9095               	bcf	149,0,c	;volatile
  1636   000782                     
  1637                           ;main.c: 198:     TRISCbits.RC1 = 0;
  1638   000782  9294               	bcf	148,1,c	;volatile
  1639   000784                     
  1640                           ;main.c: 199:     TRISCbits.RC0 = 0;
  1641   000784  9094               	bcf	148,0,c	;volatile
  1642   000786                     
  1643                           ;main.c: 200:     TRISBbits.RB3 = 0;
  1644   000786  9693               	bcf	147,3,c	;volatile
  1645   000788                     
  1646                           ;main.c: 201:     TRISCbits.RC2 = 0;
  1647   000788  9494               	bcf	148,2,c	;volatile
  1648   00078A  0012               	return		;funcret
  1649   00078C                     __end_of_config_micro:
  1650                           	callstack 0
  1651                           
  1652 ;; *************** function _buttons_loop *****************
  1653 ;; Defined at:
  1654 ;;		line 384 in file "main.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;		None
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;  click_evt       1    6[COMRAM] unsigned char 
  1659 ;; Return value:  Size  Location     Type
  1660 ;;                  1    wreg      void 
  1661 ;; Registers used:
  1662 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1668 ;;      Params:         0       0       0       0       0       0       0       0       0
  1669 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1670 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1671 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1672 ;;Total ram usage:        1 bytes
  1673 ;; Hardware stack levels used: 1
  1674 ;; Hardware stack levels required when called: 1
  1675 ;; This function calls:
  1676 ;;		Nothing
  1677 ;; This function is called by:
  1678 ;;		_main
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682                           	psect	text8
  1683   000012                     __ptext8:
  1684                           	callstack 0
  1685   000012                     _buttons_loop:
  1686                           	callstack 29
  1687   000012                     
  1688                           ;main.c: 385:     if (b_state[0] == 0){
  1689   000012  503B               	movf	_b_state^0,w,c
  1690   000014  A4D8               	btfss	status,2,c
  1691   000016  EF0F  F000         	goto	u1181
  1692   00001A  EF11  F000         	goto	u1180
  1693   00001E                     u1181:
  1694   00001E  EF1C  F000         	goto	l1527
  1695   000022                     u1180:
  1696   000022                     
  1697                           ;main.c: 386:         if (PORTDbits.RD2){
  1698   000022  A483               	btfss	131,2,c	;volatile
  1699   000024  EF16  F000         	goto	u1191
  1700   000028  EF18  F000         	goto	u1190
  1701   00002C                     u1191:
  1702   00002C  EF2D  F000         	goto	l202
  1703   000030                     u1190:
  1704   000030                     
  1705                           ;main.c: 387:             b[0] = 0;
  1706   000030  0E00               	movlw	0
  1707   000032  6E36               	movwf	_b^0,c
  1708   000034  EF2D  F000         	goto	l202
  1709   000038                     l1527:
  1710   000038  043B               	decf	_b_state^0,w,c
  1711   00003A  A4D8               	btfss	status,2,c
  1712   00003C  EF22  F000         	goto	u1201
  1713   000040  EF24  F000         	goto	u1200
  1714   000044                     u1201:
  1715   000044  EF2D  F000         	goto	l202
  1716   000048                     u1200:
  1717   000048                     
  1718                           ;main.c: 390:         if (!PORTDbits.RD2){
  1719   000048  B483               	btfsc	131,2,c	;volatile
  1720   00004A  EF29  F000         	goto	u1211
  1721   00004E  EF2B  F000         	goto	u1210
  1722   000052                     u1211:
  1723   000052  EF2D  F000         	goto	l202
  1724   000056                     u1210:
  1725   000056                     
  1726                           ;main.c: 391:             b[0] = 1;
  1727   000056  0E01               	movlw	1
  1728   000058  6E36               	movwf	_b^0,c
  1729   00005A                     l202:
  1730                           
  1731                           ;main.c: 394:     if (initial_state){
  1732   00005A  5049               	movf	_initial_state^0,w,c
  1733   00005C  B4D8               	btfsc	status,2,c
  1734   00005E  EF33  F000         	goto	u1221
  1735   000062  EF35  F000         	goto	u1220
  1736   000066                     u1221:
  1737   000066  EF6B  F000         	goto	l1547
  1738   00006A                     u1220:
  1739   00006A                     
  1740                           ;main.c: 395:         if (counter[0] >= 20){
  1741   00006A  BE08               	btfsc	(_counter+7)^0,7,c
  1742   00006C  EF47  F000         	goto	u1231
  1743   000070  5008               	movf	(_counter+7)^0,w,c
  1744   000072  1007               	iorwf	(_counter+6)^0,w,c
  1745   000074  1006               	iorwf	(_counter+5)^0,w,c
  1746   000076  1005               	iorwf	(_counter+4)^0,w,c
  1747   000078  1004               	iorwf	(_counter+3)^0,w,c
  1748   00007A  1003               	iorwf	(_counter+2)^0,w,c
  1749   00007C  1002               	iorwf	(_counter+1)^0,w,c
  1750   00007E  E109               	bnz	u1230
  1751   000080  0E14               	movlw	20
  1752   000082  5C01               	subwf	_counter^0,w,c
  1753   000084  A0D8               	btfss	status,0,c
  1754   000086  EF47  F000         	goto	u1231
  1755   00008A  EF49  F000         	goto	u1230
  1756   00008E                     u1231:
  1757   00008E  EFB7  F001         	goto	l238
  1758   000092                     u1230:
  1759   000092                     
  1760                           ;main.c: 396:             counter[0] = 0;
  1761   000092  EE20  F001         	lfsr	2,_counter
  1762   000096  0E07               	movlw	7
  1763   000098                     u1241:
  1764   000098  6ADE               	clrf	postinc2,c
  1765   00009A  06E8               	decf	wreg,f,c
  1766   00009C  E2FD               	bc	u1241
  1767   00009E                     
  1768                           ;main.c: 397:             if (!b[0]){
  1769   00009E  5036               	movf	_b^0,w,c
  1770   0000A0  A4D8               	btfss	status,2,c
  1771   0000A2  EF55  F000         	goto	u1251
  1772   0000A6  EF57  F000         	goto	u1250
  1773   0000AA                     u1251:
  1774   0000AA  EF67  F000         	goto	l1545
  1775   0000AE                     u1250:
  1776   0000AE                     
  1777                           ;main.c: 398:                 initial_state = 0;
  1778   0000AE  0E00               	movlw	0
  1779   0000B0  6E49               	movwf	_initial_state^0,c
  1780   0000B2                     
  1781                           ;main.c: 399:                 counter[0] = 0;
  1782   0000B2  EE20  F001         	lfsr	2,_counter
  1783   0000B6  0E07               	movlw	7
  1784   0000B8                     u1261:
  1785   0000B8  6ADE               	clrf	postinc2,c
  1786   0000BA  06E8               	decf	wreg,f,c
  1787   0000BC  E2FD               	bc	u1261
  1788   0000BE                     
  1789                           ;main.c: 400:                 combination_state[0] = 0;
  1790   0000BE  0E00               	movlw	0
  1791   0000C0  6E31               	movwf	_combination_state^0,c
  1792                           
  1793                           ;main.c: 401:                 state_counter[0] = 0;
  1794   0000C2  EE20  F060         	lfsr	2,_state_counter
  1795   0000C6  0E07               	movlw	7
  1796   0000C8                     u1271:
  1797   0000C8  6ADE               	clrf	postinc2,c
  1798   0000CA  06E8               	decf	wreg,f,c
  1799   0000CC  E2FD               	bc	u1271
  1800   0000CE                     l1545:
  1801                           
  1802                           ;main.c: 403:             b[0] = 0;
  1803   0000CE  0E00               	movlw	0
  1804   0000D0  6E36               	movwf	_b^0,c
  1805   0000D2  EFB7  F001         	goto	l238
  1806   0000D6                     l1547:
  1807   0000D6  BE08               	btfsc	(_counter+7)^0,7,c
  1808   0000D8  EF7C  F000         	goto	u1281
  1809   0000DC  5008               	movf	(_counter+7)^0,w,c
  1810   0000DE  1007               	iorwf	(_counter+6)^0,w,c
  1811   0000E0  1006               	iorwf	(_counter+5)^0,w,c
  1812   0000E2  1005               	iorwf	(_counter+4)^0,w,c
  1813   0000E4  1004               	iorwf	(_counter+3)^0,w,c
  1814   0000E6  1003               	iorwf	(_counter+2)^0,w,c
  1815   0000E8  1002               	iorwf	(_counter+1)^0,w,c
  1816   0000EA  E108               	bnz	u1280
  1817   0000EC  0401               	decf	_counter^0,w,c
  1818   0000EE  A0D8               	btfss	status,0,c
  1819   0000F0  EF7C  F000         	goto	u1281
  1820   0000F4  EF7E  F000         	goto	u1280
  1821   0000F8                     u1281:
  1822   0000F8  EFB7  F001         	goto	l238
  1823   0000FC                     u1280:
  1824   0000FC                     
  1825                           ;main.c: 406:         PORTBbits.RB1 = 0;
  1826   0000FC  9281               	bcf	129,1,c	;volatile
  1827   0000FE                     
  1828                           ;main.c: 407:         counter[0] = 0;
  1829   0000FE  EE20  F001         	lfsr	2,_counter
  1830   000102  0E07               	movlw	7
  1831   000104                     u1291:
  1832   000104  6ADE               	clrf	postinc2,c
  1833   000106  06E8               	decf	wreg,f,c
  1834   000108  E2FD               	bc	u1291
  1835   00010A                     
  1836                           ;main.c: 409:         sum_iterations += iterations;
  1837   00010A  5029               	movf	_iterations^0,w,c
  1838   00010C  0100               	movlb	0	; () banked
  1839   00010E  27CC               	addwf	_sum_iterations& (0+255),f,b
  1840   000110  502A               	movf	(_iterations+1)^0,w,c
  1841   000112  23CD               	addwfc	(_sum_iterations+1)& (0+255),f,b
  1842   000114  502B               	movf	(_iterations+2)^0,w,c
  1843   000116  23CE               	addwfc	(_sum_iterations+2)& (0+255),f,b
  1844   000118  502C               	movf	(_iterations+3)^0,w,c
  1845   00011A  23CF               	addwfc	(_sum_iterations+3)& (0+255),f,b
  1846   00011C  502D               	movf	(_iterations+4)^0,w,c
  1847   00011E  23D0               	addwfc	(_sum_iterations+4)& (0+255),f,b
  1848   000120  502E               	movf	(_iterations+5)^0,w,c
  1849   000122  23D1               	addwfc	(_sum_iterations+5)& (0+255),f,b
  1850   000124  502F               	movf	(_iterations+6)^0,w,c
  1851   000126  23D2               	addwfc	(_sum_iterations+6)& (0+255),f,b
  1852   000128  5030               	movf	(_iterations+7)^0,w,c
  1853   00012A  23D3               	addwfc	(_sum_iterations+7)& (0+255),f,b
  1854   00012C                     
  1855                           ; BSR set to: 0
  1856                           ;main.c: 410:         amount_cycles ++;
  1857   00012C  0E01               	movlw	1
  1858   00012E  27C4               	addwf	_amount_cycles& (0+255),f,b
  1859   000130  0E00               	movlw	0
  1860   000132  23C5               	addwfc	(_amount_cycles+1)& (0+255),f,b
  1861   000134  23C6               	addwfc	(_amount_cycles+2)& (0+255),f,b
  1862   000136  23C7               	addwfc	(_amount_cycles+3)& (0+255),f,b
  1863   000138  23C8               	addwfc	(_amount_cycles+4)& (0+255),f,b
  1864   00013A  23C9               	addwfc	(_amount_cycles+5)& (0+255),f,b
  1865   00013C  23CA               	addwfc	(_amount_cycles+6)& (0+255),f,b
  1866   00013E  23CB               	addwfc	(_amount_cycles+7)& (0+255),f,b
  1867                           
  1868                           ;main.c: 411:         iterations = 0;
  1869   000140  EE20  F029         	lfsr	2,_iterations
  1870   000144  0E07               	movlw	7
  1871   000146                     u1301:
  1872   000146  6ADE               	clrf	postinc2,c
  1873   000148  06E8               	decf	wreg,f,c
  1874   00014A  E2FD               	bc	u1301
  1875   00014C                     
  1876                           ; BSR set to: 0
  1877                           ;main.c: 415:         if (b_state[0] == 0){
  1878   00014C  503B               	movf	_b_state^0,w,c
  1879   00014E  A4D8               	btfss	status,2,c
  1880   000150  EFAC  F000         	goto	u1311
  1881   000154  EFAE  F000         	goto	u1310
  1882   000158                     u1311:
  1883   000158  EFE2  F000         	goto	l1571
  1884   00015C                     u1310:
  1885   00015C                     
  1886                           ; BSR set to: 0
  1887                           ;main.c: 416:             if (b[0]){
  1888   00015C  5036               	movf	_b^0,w,c
  1889   00015E  B4D8               	btfsc	status,2,c
  1890   000160  EFB4  F000         	goto	u1321
  1891   000164  EFB6  F000         	goto	u1320
  1892   000168                     u1321:
  1893   000168  EFDE  F000         	goto	l1567
  1894   00016C                     u1320:
  1895   00016C                     
  1896                           ; BSR set to: 0
  1897                           ;main.c: 417:                 b_counter[0] ++;
  1898   00016C  0E01               	movlw	1
  1899   00016E  2788               	addwf	_b_counter& (0+255),f,b
  1900   000170  0E00               	movlw	0
  1901   000172  2389               	addwfc	(_b_counter+1)& (0+255),f,b
  1902   000174  238A               	addwfc	(_b_counter+2)& (0+255),f,b
  1903   000176  238B               	addwfc	(_b_counter+3)& (0+255),f,b
  1904   000178  238C               	addwfc	(_b_counter+4)& (0+255),f,b
  1905   00017A  238D               	addwfc	(_b_counter+5)& (0+255),f,b
  1906   00017C  238E               	addwfc	(_b_counter+6)& (0+255),f,b
  1907   00017E  238F               	addwfc	(_b_counter+7)& (0+255),f,b
  1908                           
  1909                           ;main.c: 418:                 if (b_counter[0] >= 2){
  1910   000180  BF8F               	btfsc	(_b_counter+7)& (0+255),7,b
  1911   000182  EFD2  F000         	goto	u1331
  1912   000186  518F               	movf	(_b_counter+7)& (0+255),w,b
  1913   000188  118E               	iorwf	(_b_counter+6)& (0+255),w,b
  1914   00018A  118D               	iorwf	(_b_counter+5)& (0+255),w,b
  1915   00018C  118C               	iorwf	(_b_counter+4)& (0+255),w,b
  1916   00018E  118B               	iorwf	(_b_counter+3)& (0+255),w,b
  1917   000190  118A               	iorwf	(_b_counter+2)& (0+255),w,b
  1918   000192  1189               	iorwf	(_b_counter+1)& (0+255),w,b
  1919   000194  E109               	bnz	u1330
  1920   000196  0E02               	movlw	2
  1921   000198  5D88               	subwf	_b_counter& (0+255),w,b
  1922   00019A  A0D8               	btfss	status,0,c
  1923   00019C  EFD2  F000         	goto	u1331
  1924   0001A0  EFD4  F000         	goto	u1330
  1925   0001A4                     u1331:
  1926   0001A4  EF18  F001         	goto	l1585
  1927   0001A8                     u1330:
  1928   0001A8                     
  1929                           ; BSR set to: 0
  1930                           ;main.c: 419:                     b_state[0] = 1;
  1931   0001A8  0E01               	movlw	1
  1932   0001AA  6E3B               	movwf	_b_state^0,c
  1933   0001AC                     l1565:
  1934                           
  1935                           ; BSR set to: 0
  1936                           ;main.c: 420:                     b_counter[0] = 0;
  1937   0001AC  EE20  F088         	lfsr	2,_b_counter
  1938   0001B0  0E07               	movlw	7
  1939   0001B2                     u1341:
  1940   0001B2  6ADE               	clrf	postinc2,c
  1941   0001B4  06E8               	decf	wreg,f,c
  1942   0001B6  E2FD               	bc	u1341
  1943   0001B8  EF18  F001         	goto	l1585
  1944   0001BC                     l1567:
  1945                           
  1946                           ; BSR set to: 0
  1947                           ;main.c: 423:                 b[0] = 1;
  1948   0001BC  0E01               	movlw	1
  1949   0001BE  6E36               	movwf	_b^0,c
  1950   0001C0  EFD6  F000         	goto	l1565
  1951   0001C4                     l1571:
  1952                           
  1953                           ; BSR set to: 0
  1954   0001C4  043B               	decf	_b_state^0,w,c
  1955   0001C6  A4D8               	btfss	status,2,c
  1956   0001C8  EFE8  F000         	goto	u1351
  1957   0001CC  EFEA  F000         	goto	u1350
  1958   0001D0                     u1351:
  1959   0001D0  EF18  F001         	goto	l1585
  1960   0001D4                     u1350:
  1961   0001D4                     
  1962                           ; BSR set to: 0
  1963                           ;main.c: 427:             if (!b[0]){
  1964   0001D4  5036               	movf	_b^0,w,c
  1965   0001D6  A4D8               	btfss	status,2,c
  1966   0001D8  EFF0  F000         	goto	u1361
  1967   0001DC  EFF2  F000         	goto	u1360
  1968   0001E0                     u1361:
  1969   0001E0  EF14  F001         	goto	l1581
  1970   0001E4                     u1360:
  1971   0001E4                     
  1972                           ; BSR set to: 0
  1973                           ;main.c: 428:                 b_counter[0] ++;
  1974   0001E4  0E01               	movlw	1
  1975   0001E6  2788               	addwf	_b_counter& (0+255),f,b
  1976   0001E8  0E00               	movlw	0
  1977   0001EA  2389               	addwfc	(_b_counter+1)& (0+255),f,b
  1978   0001EC  238A               	addwfc	(_b_counter+2)& (0+255),f,b
  1979   0001EE  238B               	addwfc	(_b_counter+3)& (0+255),f,b
  1980   0001F0  238C               	addwfc	(_b_counter+4)& (0+255),f,b
  1981   0001F2  238D               	addwfc	(_b_counter+5)& (0+255),f,b
  1982   0001F4  238E               	addwfc	(_b_counter+6)& (0+255),f,b
  1983   0001F6  238F               	addwfc	(_b_counter+7)& (0+255),f,b
  1984                           
  1985                           ;main.c: 429:                 if (b_counter[0] >= 2){
  1986   0001F8  BF8F               	btfsc	(_b_counter+7)& (0+255),7,b
  1987   0001FA  EF0E  F001         	goto	u1371
  1988   0001FE  518F               	movf	(_b_counter+7)& (0+255),w,b
  1989   000200  118E               	iorwf	(_b_counter+6)& (0+255),w,b
  1990   000202  118D               	iorwf	(_b_counter+5)& (0+255),w,b
  1991   000204  118C               	iorwf	(_b_counter+4)& (0+255),w,b
  1992   000206  118B               	iorwf	(_b_counter+3)& (0+255),w,b
  1993   000208  118A               	iorwf	(_b_counter+2)& (0+255),w,b
  1994   00020A  1189               	iorwf	(_b_counter+1)& (0+255),w,b
  1995   00020C  E109               	bnz	u1370
  1996   00020E  0E02               	movlw	2
  1997   000210  5D88               	subwf	_b_counter& (0+255),w,b
  1998   000212  A0D8               	btfss	status,0,c
  1999   000214  EF0E  F001         	goto	u1371
  2000   000218  EF10  F001         	goto	u1370
  2001   00021C                     u1371:
  2002   00021C  EF18  F001         	goto	l1585
  2003   000220                     u1370:
  2004   000220                     
  2005                           ; BSR set to: 0
  2006                           ;main.c: 430:                     b_state[0] = 0;
  2007   000220  0E00               	movlw	0
  2008   000222  6E3B               	movwf	_b_state^0,c
  2009   000224  EFD6  F000         	goto	l1565
  2010   000228                     l1581:
  2011                           
  2012                           ; BSR set to: 0
  2013                           ;main.c: 434:                 b[0] = 0;
  2014   000228  0E00               	movlw	0
  2015   00022A  6E36               	movwf	_b^0,c
  2016   00022C  EFD6  F000         	goto	l1565
  2017   000230                     l1585:
  2018                           
  2019                           ; BSR set to: 0
  2020                           ;main.c: 440:         char click_evt = 0;
  2021   000230  0E00               	movlw	0
  2022   000232  6E50               	movwf	buttons_loop@click_evt^0,c
  2023   000234                     
  2024                           ; BSR set to: 0
  2025                           ;main.c: 442:         if (last_b[0] == 0 && b_state[0] == 1){
  2026   000234  5040               	movf	_last_b^0,w,c
  2027   000236  A4D8               	btfss	status,2,c
  2028   000238  EF20  F001         	goto	u1381
  2029   00023C  EF22  F001         	goto	u1380
  2030   000240                     u1381:
  2031   000240  EF31  F001         	goto	l1597
  2032   000244                     u1380:
  2033   000244                     
  2034                           ; BSR set to: 0
  2035   000244  043B               	decf	_b_state^0,w,c
  2036   000246  A4D8               	btfss	status,2,c
  2037   000248  EF28  F001         	goto	u1391
  2038   00024C  EF2A  F001         	goto	u1390
  2039   000250                     u1391:
  2040   000250  EF31  F001         	goto	l1597
  2041   000254                     u1390:
  2042   000254                     
  2043                           ; BSR set to: 0
  2044                           ;main.c: 444:             press_evt[0] ++;
  2045   000254  2BE8               	incf	_press_evt& (0+255),f,b
  2046   000256                     
  2047                           ; BSR set to: 0
  2048                           ;main.c: 445:             click_evt = 1;
  2049   000256  0E01               	movlw	1
  2050   000258  6E50               	movwf	buttons_loop@click_evt^0,c
  2051   00025A                     
  2052                           ; BSR set to: 0
  2053                           ;main.c: 447:             last_b[0] = 1;
  2054   00025A  0E01               	movlw	1
  2055   00025C  6E40               	movwf	_last_b^0,c
  2056                           
  2057                           ;main.c: 448:         }else if (last_b[0] == 1 && b_state[0] == 0){
  2058   00025E  EF44  F001         	goto	l1605
  2059   000262                     l1597:
  2060                           
  2061                           ; BSR set to: 0
  2062   000262  0440               	decf	_last_b^0,w,c
  2063   000264  A4D8               	btfss	status,2,c
  2064   000266  EF37  F001         	goto	u1401
  2065   00026A  EF39  F001         	goto	u1400
  2066   00026E                     u1401:
  2067   00026E  EF44  F001         	goto	l1605
  2068   000272                     u1400:
  2069   000272                     
  2070                           ; BSR set to: 0
  2071   000272  503B               	movf	_b_state^0,w,c
  2072   000274  A4D8               	btfss	status,2,c
  2073   000276  EF3F  F001         	goto	u1411
  2074   00027A  EF41  F001         	goto	u1410
  2075   00027E                     u1411:
  2076   00027E  EF44  F001         	goto	l1605
  2077   000282                     u1410:
  2078   000282                     
  2079                           ; BSR set to: 0
  2080                           ;main.c: 450:             release_evt[0] ++;
  2081   000282  2BE3               	incf	_release_evt& (0+255),f,b
  2082   000284                     
  2083                           ; BSR set to: 0
  2084                           ;main.c: 452:             last_b[0] = 0;
  2085   000284  0E00               	movlw	0
  2086   000286  6E40               	movwf	_last_b^0,c
  2087   000288                     l1605:
  2088                           
  2089                           ; BSR set to: 0
  2090                           ;main.c: 458:         if (combination_state[0] == 0){
  2091   000288  5031               	movf	_combination_state^0,w,c
  2092   00028A  A4D8               	btfss	status,2,c
  2093   00028C  EF4A  F001         	goto	u1421
  2094   000290  EF4C  F001         	goto	u1420
  2095   000294                     u1421:
  2096   000294  EF5E  F001         	goto	l1613
  2097   000298                     u1420:
  2098   000298                     
  2099                           ; BSR set to: 0
  2100                           ;main.c: 460:             if (click_evt){
  2101   000298  5050               	movf	buttons_loop@click_evt^0,w,c
  2102   00029A  B4D8               	btfsc	status,2,c
  2103   00029C  EF52  F001         	goto	u1431
  2104   0002A0  EF54  F001         	goto	u1430
  2105   0002A4                     u1431:
  2106   0002A4  EFB7  F001         	goto	l238
  2107   0002A8                     u1430:
  2108   0002A8                     
  2109                           ; BSR set to: 0
  2110                           ;main.c: 461:                 state_counter[0] = 0;
  2111   0002A8  EE20  F060         	lfsr	2,_state_counter
  2112   0002AC  0E07               	movlw	7
  2113   0002AE                     u1441:
  2114   0002AE  6ADE               	clrf	postinc2,c
  2115   0002B0  06E8               	decf	wreg,f,c
  2116   0002B2  E2FD               	bc	u1441
  2117   0002B4                     
  2118                           ; BSR set to: 0
  2119                           ;main.c: 462:                 combination_state[0] = 1;
  2120   0002B4  0E01               	movlw	1
  2121   0002B6  6E31               	movwf	_combination_state^0,c
  2122   0002B8  EFB7  F001         	goto	l238
  2123   0002BC                     l1613:
  2124                           
  2125                           ; BSR set to: 0
  2126   0002BC  5031               	movf	_combination_state^0,w,c
  2127   0002BE  B4D8               	btfsc	status,2,c
  2128   0002C0  EF64  F001         	goto	u1451
  2129   0002C4  EF66  F001         	goto	u1450
  2130   0002C8                     u1451:
  2131   0002C8  EFB7  F001         	goto	l238
  2132   0002CC                     u1450:
  2133   0002CC                     
  2134                           ; BSR set to: 0
  2135                           ;main.c: 466:             if (click_evt){
  2136   0002CC  5050               	movf	buttons_loop@click_evt^0,w,c
  2137   0002CE  B4D8               	btfsc	status,2,c
  2138   0002D0  EF6C  F001         	goto	u1461
  2139   0002D4  EF6E  F001         	goto	u1460
  2140   0002D8                     u1461:
  2141   0002D8  EF6F  F001         	goto	l1619
  2142   0002DC                     u1460:
  2143   0002DC                     
  2144                           ; BSR set to: 0
  2145                           ;main.c: 467:                 combination_state[0] ++;
  2146   0002DC  2A31               	incf	_combination_state^0,f,c
  2147   0002DE                     l1619:
  2148                           
  2149                           ; BSR set to: 0
  2150                           ;main.c: 469:             if (state_counter[0] >= 30){
  2151   0002DE  BF67               	btfsc	(_state_counter+7)& (0+255),7,b
  2152   0002E0  EF81  F001         	goto	u1471
  2153   0002E4  5167               	movf	(_state_counter+7)& (0+255),w,b
  2154   0002E6  1166               	iorwf	(_state_counter+6)& (0+255),w,b
  2155   0002E8  1165               	iorwf	(_state_counter+5)& (0+255),w,b
  2156   0002EA  1164               	iorwf	(_state_counter+4)& (0+255),w,b
  2157   0002EC  1163               	iorwf	(_state_counter+3)& (0+255),w,b
  2158   0002EE  1162               	iorwf	(_state_counter+2)& (0+255),w,b
  2159   0002F0  1161               	iorwf	(_state_counter+1)& (0+255),w,b
  2160   0002F2  E109               	bnz	u1470
  2161   0002F4  0E1E               	movlw	30
  2162   0002F6  5D60               	subwf	_state_counter& (0+255),w,b
  2163   0002F8  A0D8               	btfss	status,0,c
  2164   0002FA  EF81  F001         	goto	u1471
  2165   0002FE  EF83  F001         	goto	u1470
  2166   000302                     u1471:
  2167   000302  EFAD  F001         	goto	l1637
  2168   000306                     u1470:
  2169   000306                     
  2170                           ; BSR set to: 0
  2171                           ;main.c: 472:                 if (combination_state[0] == 1){
  2172   000306  0431               	decf	_combination_state^0,w,c
  2173   000308  A4D8               	btfss	status,2,c
  2174   00030A  EF89  F001         	goto	u1481
  2175   00030E  EF8B  F001         	goto	u1480
  2176   000312                     u1481:
  2177   000312  EF8E  F001         	goto	l1625
  2178   000316                     u1480:
  2179   000316                     
  2180                           ; BSR set to: 0
  2181                           ;main.c: 473:                     single_click_evt[0] ++;
  2182   000316  2BDE               	incf	_single_click_evt& (0+255),f,b
  2183                           
  2184                           ;main.c: 474:                 }else if (combination_state[0] == 2){
  2185   000318  EFA4  F001         	goto	l1633
  2186   00031C                     l1625:
  2187                           
  2188                           ; BSR set to: 0
  2189   00031C  0E02               	movlw	2
  2190   00031E  1831               	xorwf	_combination_state^0,w,c
  2191   000320  A4D8               	btfss	status,2,c
  2192   000322  EF95  F001         	goto	u1491
  2193   000326  EF97  F001         	goto	u1490
  2194   00032A                     u1491:
  2195   00032A  EF9A  F001         	goto	l1629
  2196   00032E                     u1490:
  2197   00032E                     
  2198                           ; BSR set to: 0
  2199                           ;main.c: 475:                     double_click_evt[0] ++;
  2200   00032E  2BD9               	incf	_double_click_evt& (0+255),f,b
  2201                           
  2202                           ;main.c: 476:                 }else if(combination_state[0] == 3){
  2203   000330  EFA4  F001         	goto	l1633
  2204   000334                     l1629:
  2205                           
  2206                           ; BSR set to: 0
  2207   000334  0E03               	movlw	3
  2208   000336  1831               	xorwf	_combination_state^0,w,c
  2209   000338  A4D8               	btfss	status,2,c
  2210   00033A  EFA1  F001         	goto	u1501
  2211   00033E  EFA3  F001         	goto	u1500
  2212   000342                     u1501:
  2213   000342  EFA4  F001         	goto	l1633
  2214   000346                     u1500:
  2215   000346                     
  2216                           ; BSR set to: 0
  2217                           ;main.c: 477:                     triple_click_evt[0] ++;
  2218   000346  2BD4               	incf	_triple_click_evt& (0+255),f,b
  2219   000348                     l1633:
  2220                           
  2221                           ; BSR set to: 0
  2222                           ;main.c: 479:                 state_counter[0] = 0;
  2223   000348  EE20  F060         	lfsr	2,_state_counter
  2224   00034C  0E07               	movlw	7
  2225   00034E                     u1511:
  2226   00034E  6ADE               	clrf	postinc2,c
  2227   000350  06E8               	decf	wreg,f,c
  2228   000352  E2FD               	bc	u1511
  2229   000354                     
  2230                           ; BSR set to: 0
  2231                           ;main.c: 480:                 combination_state[0] = -1;
  2232   000354  6831               	setf	_combination_state^0,c
  2233                           
  2234                           ;main.c: 481:             }else{
  2235   000356  EFB7  F001         	goto	l238
  2236   00035A                     l1637:
  2237                           
  2238                           ; BSR set to: 0
  2239                           ;main.c: 482:                 state_counter[0] ++;
  2240   00035A  0E01               	movlw	1
  2241   00035C  2760               	addwf	_state_counter& (0+255),f,b
  2242   00035E  0E00               	movlw	0
  2243   000360  2361               	addwfc	(_state_counter+1)& (0+255),f,b
  2244   000362  2362               	addwfc	(_state_counter+2)& (0+255),f,b
  2245   000364  2363               	addwfc	(_state_counter+3)& (0+255),f,b
  2246   000366  2364               	addwfc	(_state_counter+4)& (0+255),f,b
  2247   000368  2365               	addwfc	(_state_counter+5)& (0+255),f,b
  2248   00036A  2366               	addwfc	(_state_counter+6)& (0+255),f,b
  2249   00036C  2367               	addwfc	(_state_counter+7)& (0+255),f,b
  2250   00036E                     l238:
  2251   00036E  0012               	return		;funcret
  2252   000370                     __end_of_buttons_loop:
  2253                           	callstack 0
  2254                           
  2255 ;; *************** function _buttons_init *****************
  2256 ;; Defined at:
  2257 ;;		line 364 in file "main.c"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;		None
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;		None
  2262 ;; Return value:  Size  Location     Type
  2263 ;;                  1    wreg      void 
  2264 ;; Registers used:
  2265 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2266 ;; Tracked objects:
  2267 ;;		On entry : 0/0
  2268 ;;		On exit  : 0/0
  2269 ;;		Unchanged: 0/0
  2270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2271 ;;      Params:         0       0       0       0       0       0       0       0       0
  2272 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2273 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2274 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2275 ;;Total ram usage:        0 bytes
  2276 ;; Hardware stack levels used: 1
  2277 ;; Hardware stack levels required when called: 1
  2278 ;; This function calls:
  2279 ;;		Nothing
  2280 ;; This function is called by:
  2281 ;;		_main
  2282 ;; This function uses a non-reentrant model
  2283 ;;
  2284                           
  2285                           	psect	text9
  2286   0009C6                     __ptext9:
  2287                           	callstack 0
  2288   0009C6                     _buttons_init:
  2289                           	callstack 29
  2290   0009C6                     
  2291                           ;main.c: 365:     b_state[0] = 0;
  2292   0009C6  0E00               	movlw	0
  2293   0009C8  6E3B               	movwf	_b_state^0,c
  2294                           
  2295                           ;main.c: 366:     b[0] = 0;
  2296   0009CA  0E00               	movlw	0
  2297   0009CC  6E36               	movwf	_b^0,c
  2298                           
  2299                           ;main.c: 367:     last_b[0] = 0;
  2300   0009CE  0E00               	movlw	0
  2301   0009D0  6E40               	movwf	_last_b^0,c
  2302   0009D2                     
  2303                           ;main.c: 369:     b_counter[0] = 0;
  2304   0009D2  EE20  F088         	lfsr	2,_b_counter
  2305   0009D6  0E07               	movlw	7
  2306   0009D8                     u1131:
  2307   0009D8  6ADE               	clrf	postinc2,c
  2308   0009DA  06E8               	decf	wreg,f,c
  2309   0009DC  E2FD               	bc	u1131
  2310   0009DE                     
  2311                           ;main.c: 370:     state_counter[0] = 0;
  2312   0009DE  EE20  F060         	lfsr	2,_state_counter
  2313   0009E2  0E07               	movlw	7
  2314   0009E4                     u1141:
  2315   0009E4  6ADE               	clrf	postinc2,c
  2316   0009E6  06E8               	decf	wreg,f,c
  2317   0009E8  E2FD               	bc	u1141
  2318                           
  2319                           ;main.c: 371:     combination_state[0] = 0;
  2320   0009EA  0E00               	movlw	0
  2321   0009EC  6E31               	movwf	_combination_state^0,c
  2322                           
  2323                           ;main.c: 372:     single_click_evt[0] = 0;
  2324   0009EE  0E00               	movlw	0
  2325   0009F0  0100               	movlb	0	; () banked
  2326   0009F2  6FDE               	movwf	_single_click_evt& (0+255),b
  2327                           
  2328                           ;main.c: 373:     double_click_evt[0] = 0;
  2329   0009F4  0E00               	movlw	0
  2330   0009F6  6FD9               	movwf	_double_click_evt& (0+255),b
  2331                           
  2332                           ;main.c: 374:     triple_click_evt[0] = 0;
  2333   0009F8  0E00               	movlw	0
  2334   0009FA  6FD4               	movwf	_triple_click_evt& (0+255),b
  2335                           
  2336                           ;main.c: 375:     initial_state = 1;
  2337   0009FC  0E01               	movlw	1
  2338   0009FE  6E49               	movwf	_initial_state^0,c
  2339   000A00                     
  2340                           ; BSR set to: 0
  2341                           ;main.c: 378:     iterations = 0;
  2342   000A00  EE20  F029         	lfsr	2,_iterations
  2343   000A04  0E07               	movlw	7
  2344   000A06                     u1151:
  2345   000A06  6ADE               	clrf	postinc2,c
  2346   000A08  06E8               	decf	wreg,f,c
  2347   000A0A  E2FD               	bc	u1151
  2348   000A0C                     
  2349                           ; BSR set to: 0
  2350                           ;main.c: 379:     sum_iterations = 0;
  2351   000A0C  EE20  F0CC         	lfsr	2,_sum_iterations
  2352   000A10  0E07               	movlw	7
  2353   000A12                     u1161:
  2354   000A12  6ADE               	clrf	postinc2,c
  2355   000A14  06E8               	decf	wreg,f,c
  2356   000A16  E2FD               	bc	u1161
  2357   000A18                     
  2358                           ; BSR set to: 0
  2359                           ;main.c: 380:     amount_cycles = 0;
  2360   000A18  EE20  F0C4         	lfsr	2,_amount_cycles
  2361   000A1C  0E07               	movlw	7
  2362   000A1E                     u1171:
  2363   000A1E  6ADE               	clrf	postinc2,c
  2364   000A20  06E8               	decf	wreg,f,c
  2365   000A22  E2FD               	bc	u1171
  2366   000A24                     
  2367                           ; BSR set to: 0
  2368                           ;main.c: 381:     PORTBbits.RB1 = 1;
  2369   000A24  8281               	bsf	129,1,c	;volatile
  2370   000A26                     
  2371                           ; BSR set to: 0
  2372   000A26  0012               	return		;funcret
  2373   000A28                     __end_of_buttons_init:
  2374                           	callstack 0
  2375                           
  2376 ;; *************** function _enc *****************
  2377 ;; Defined at:
  2378 ;;		line 286 in file "main.c"
  2379 ;; Parameters:    Size  Location     Type
  2380 ;;		None
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;  i               2    4[COMRAM] int 
  2383 ;; Return value:  Size  Location     Type
  2384 ;;                  1    wreg      void 
  2385 ;; Registers used:
  2386 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2387 ;; Tracked objects:
  2388 ;;		On entry : 0/0
  2389 ;;		On exit  : 0/0
  2390 ;;		Unchanged: 0/0
  2391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2392 ;;      Params:         0       0       0       0       0       0       0       0       0
  2393 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2394 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2395 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2396 ;;Total ram usage:        6 bytes
  2397 ;; Hardware stack levels used: 1
  2398 ;; This function calls:
  2399 ;;		Nothing
  2400 ;; This function is called by:
  2401 ;;		Interrupt level 2
  2402 ;; This function uses a non-reentrant model
  2403 ;;
  2404                           
  2405                           	psect	intcode
  2406   000008                     __pintcode:
  2407                           	callstack 0
  2408   000008                     _enc:
  2409                           	callstack 28
  2410                           
  2411                           ; BSR set to: 0
  2412                           ;incstack = 0
  2413   000008  8259               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2414   00000A  ED28  F004         	call	int_func,f	;refresh shadow registers
  2415                           
  2416                           	psect	intcode_body
  2417   000850                     __pintcode_body:
  2418                           	callstack 28
  2419   000850                     int_func:
  2420                           	callstack 28
  2421   000850  0006               	pop		; remove dummy address from shadow register refresh
  2422   000852  CFD9 F04C          	movff	fsr2l,??_enc+2
  2423   000856  CFDA F04D          	movff	fsr2h,??_enc+3
  2424   00085A                     
  2425                           ;main.c: 287:     if (TMR0IF){
  2426   00085A  A4F2               	btfss	4082,2,c	;volatile
  2427   00085C  EF32  F004         	goto	i2u89_41
  2428   000860  EF34  F004         	goto	i2u89_40
  2429   000864                     i2u89_41:
  2430   000864  EF69  F004         	goto	i2l140
  2431   000868                     i2u89_40:
  2432   000868                     
  2433                           ;main.c: 289:         TMR0H = 0xF8;
  2434   000868  0EF8               	movlw	248
  2435   00086A  6ED7               	movwf	215,c	;volatile
  2436                           
  2437                           ;main.c: 290:         TMR0L = 0xAC;
  2438   00086C  0EAC               	movlw	172
  2439   00086E  6ED6               	movwf	214,c	;volatile
  2440   000870                     
  2441                           ;main.c: 291:         TMR0IF = 0;
  2442   000870  94F2               	bcf	4082,2,c	;volatile
  2443                           
  2444                           ;main.c: 293:         int i;;main.c: 294:         for (i=0;i<5;i++){
  2445   000872  0E00               	movlw	0
  2446   000874  6E4F               	movwf	(enc@i+1)^0,c
  2447   000876  0E00               	movlw	0
  2448   000878  6E4E               	movwf	enc@i^0,c
  2449   00087A                     i2l1389:
  2450                           
  2451                           ;main.c: 295:             counter[i] ++;
  2452   00087A  C04E  F04A         	movff	enc@i,??_enc
  2453   00087E  C04F  F04B         	movff	enc@i+1,??_enc+1
  2454   000882  90D8               	bcf	status,0,c
  2455   000884  364A               	rlcf	??_enc^0,f,c
  2456   000886  364B               	rlcf	(??_enc+1)^0,f,c
  2457   000888  90D8               	bcf	status,0,c
  2458   00088A  364A               	rlcf	??_enc^0,f,c
  2459   00088C  364B               	rlcf	(??_enc+1)^0,f,c
  2460   00088E  90D8               	bcf	status,0,c
  2461   000890  364A               	rlcf	??_enc^0,f,c
  2462   000892  364B               	rlcf	(??_enc+1)^0,f,c
  2463   000894  0E01               	movlw	low _counter
  2464   000896  244A               	addwf	??_enc^0,w,c
  2465   000898  6ED9               	movwf	fsr2l,c
  2466   00089A  0E00               	movlw	high _counter
  2467   00089C  204B               	addwfc	(??_enc+1)^0,w,c
  2468   00089E  6EDA               	movwf	fsr2h,c
  2469   0008A0  2ADE               	incf	postinc2,f,c
  2470   0008A2  0E00               	movlw	0
  2471   0008A4  22DE               	addwfc	postinc2,f,c
  2472   0008A6  22DE               	addwfc	postinc2,f,c
  2473   0008A8  22DE               	addwfc	postinc2,f,c
  2474   0008AA  22DE               	addwfc	postinc2,f,c
  2475   0008AC  22DE               	addwfc	postinc2,f,c
  2476   0008AE  22DE               	addwfc	postinc2,f,c
  2477   0008B0  22DE               	addwfc	postinc2,f,c
  2478   0008B2                     
  2479                           ;main.c: 296:         }
  2480   0008B2  4A4E               	infsnz	enc@i^0,f,c
  2481   0008B4  2A4F               	incf	(enc@i+1)^0,f,c
  2482   0008B6  BE4F               	btfsc	(enc@i+1)^0,7,c
  2483   0008B8  EF67  F004         	goto	i2u90_41
  2484   0008BC  504F               	movf	(enc@i+1)^0,w,c
  2485   0008BE  E109               	bnz	i2u90_40
  2486   0008C0  0E05               	movlw	5
  2487   0008C2  5C4E               	subwf	enc@i^0,w,c
  2488   0008C4  A0D8               	btfss	status,0,c
  2489   0008C6  EF67  F004         	goto	i2u90_41
  2490   0008CA  EF69  F004         	goto	i2u90_40
  2491   0008CE                     i2u90_41:
  2492   0008CE  EF3D  F004         	goto	i2l1389
  2493   0008D2                     i2u90_40:
  2494   0008D2                     i2l140:
  2495   0008D2  C04D  FFDA         	movff	??_enc+3,fsr2h
  2496   0008D6  C04C  FFD9         	movff	??_enc+2,fsr2l
  2497   0008DA  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2498   0008DC  0011               	retfie		f
  2499   0008DE                     __end_of_enc:
  2500                           	callstack 0
  2501   000000                     
  2502                           	psect	rparam
  2503   000000                     
  2504                           	psect	temp
  2505   000059                     btemp:
  2506                           	callstack 0
  2507   000059                     	ds	1
  2508   000000                     int$flags	set	btemp
  2509   000000                     wtemp8	set	btemp+1
  2510   000000                     ttemp5	set	btemp+1
  2511   000000                     ttemp6	set	btemp+4
  2512   000000                     ttemp7	set	btemp+8
  2513                           
  2514                           	psect	idloc
  2515                           
  2516                           ;Config register IDLOC0 @ 0x200000
  2517                           ;	unspecified, using default values
  2518   200000                     	org	2097152
  2519   200000  FF                 	db	255
  2520                           
  2521                           ;Config register IDLOC1 @ 0x200001
  2522                           ;	unspecified, using default values
  2523   200001                     	org	2097153
  2524   200001  FF                 	db	255
  2525                           
  2526                           ;Config register IDLOC2 @ 0x200002
  2527                           ;	unspecified, using default values
  2528   200002                     	org	2097154
  2529   200002  FF                 	db	255
  2530                           
  2531                           ;Config register IDLOC3 @ 0x200003
  2532                           ;	unspecified, using default values
  2533   200003                     	org	2097155
  2534   200003  FF                 	db	255
  2535                           
  2536                           ;Config register IDLOC4 @ 0x200004
  2537                           ;	unspecified, using default values
  2538   200004                     	org	2097156
  2539   200004  FF                 	db	255
  2540                           
  2541                           ;Config register IDLOC5 @ 0x200005
  2542                           ;	unspecified, using default values
  2543   200005                     	org	2097157
  2544   200005  FF                 	db	255
  2545                           
  2546                           ;Config register IDLOC6 @ 0x200006
  2547                           ;	unspecified, using default values
  2548   200006                     	org	2097158
  2549   200006  FF                 	db	255
  2550                           
  2551                           ;Config register IDLOC7 @ 0x200007
  2552                           ;	unspecified, using default values
  2553   200007                     	org	2097159
  2554   200007  FF                 	db	255
  2555                           
  2556                           	psect	config
  2557                           
  2558                           ;Config register CONFIG1L @ 0x300000
  2559                           ;	PLL Prescaler Selection bits
  2560                           ;	PLLDIV = 5, Divide by 5 (20 MHz oscillator input)
  2561                           ;	System Clock Postscaler Selection bits
  2562                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  2563                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2564                           ;	USBDIV = 2, USB clock source comes from the 96 MHz PLL divided by 2
  2565   300000                     	org	3145728
  2566   300000  24                 	db	36
  2567                           
  2568                           ;Config register CONFIG1H @ 0x300001
  2569                           ;	Oscillator Selection bits
  2570                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
  2571                           ;	Fail-Safe Clock Monitor Enable bit
  2572                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2573                           ;	Internal/External Oscillator Switchover bit
  2574                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2575   300001                     	org	3145729
  2576   300001  0E                 	db	14
  2577                           
  2578                           ;Config register CONFIG2L @ 0x300002
  2579                           ;	Power-up Timer Enable bit
  2580                           ;	PWRT = OFF, PWRT disabled
  2581                           ;	Brown-out Reset Enable bits
  2582                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  2583                           ;	Brown-out Reset Voltage bits
  2584                           ;	BORV = 3, Minimum setting 2.05V
  2585                           ;	USB Voltage Regulator Enable bit
  2586                           ;	VREGEN = OFF, USB voltage regulator disabled
  2587   300002                     	org	3145730
  2588   300002  19                 	db	25
  2589                           
  2590                           ;Config register CONFIG2H @ 0x300003
  2591                           ;	Watchdog Timer Enable bit
  2592                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2593                           ;	Watchdog Timer Postscale Select bits
  2594                           ;	WDTPS = 32768, 1:32768
  2595   300003                     	org	3145731
  2596   300003  1E                 	db	30
  2597                           
  2598                           ; Padding undefined space
  2599   300004                     	org	3145732
  2600   300004  FF                 	db	255
  2601                           
  2602                           ;Config register CONFIG3H @ 0x300005
  2603                           ;	CCP2 MUX bit
  2604                           ;	CCP2MX = OFF, CCP2 input/output is multiplexed with RB3
  2605                           ;	PORTB A/D Enable bit
  2606                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2607                           ;	Low-Power Timer 1 Oscillator Enable bit
  2608                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2609                           ;	MCLR Pin Enable bit
  2610                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  2611   300005                     	org	3145733
  2612   300005  00                 	db	0
  2613                           
  2614                           ;Config register CONFIG4L @ 0x300006
  2615                           ;	Stack Full/Underflow Reset Enable bit
  2616                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2617                           ;	Single-Supply ICSP Enable bit
  2618                           ;	LVP = OFF, Single-Supply ICSP disabled
  2619                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2620                           ;	ICPRT = OFF, ICPORT disabled
  2621                           ;	Extended Instruction Set Enable bit
  2622                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2623                           ;	Background Debugger Enable bit
  2624                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  2625   300006                     	org	3145734
  2626   300006  81                 	db	129
  2627                           
  2628                           ; Padding undefined space
  2629   300007                     	org	3145735
  2630   300007  FF                 	db	255
  2631                           
  2632                           ;Config register CONFIG5L @ 0x300008
  2633                           ;	Code Protection bit
  2634                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  2635                           ;	Code Protection bit
  2636                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  2637                           ;	Code Protection bit
  2638                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  2639                           ;	Code Protection bit
  2640                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  2641   300008                     	org	3145736
  2642   300008  0F                 	db	15
  2643                           
  2644                           ;Config register CONFIG5H @ 0x300009
  2645                           ;	Boot Block Code Protection bit
  2646                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  2647                           ;	Data EEPROM Code Protection bit
  2648                           ;	CPD = OFF, Data EEPROM is not code-protected
  2649   300009                     	org	3145737
  2650   300009  C0                 	db	192
  2651                           
  2652                           ;Config register CONFIG6L @ 0x30000A
  2653                           ;	Write Protection bit
  2654                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  2655                           ;	Write Protection bit
  2656                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  2657                           ;	Write Protection bit
  2658                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  2659                           ;	Write Protection bit
  2660                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  2661   30000A                     	org	3145738
  2662   30000A  0F                 	db	15
  2663                           
  2664                           ;Config register CONFIG6H @ 0x30000B
  2665                           ;	Configuration Register Write Protection bit
  2666                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  2667                           ;	Boot Block Write Protection bit
  2668                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  2669                           ;	Data EEPROM Write Protection bit
  2670                           ;	WRTD = OFF, Data EEPROM is not write-protected
  2671   30000B                     	org	3145739
  2672   30000B  E0                 	db	224
  2673                           
  2674                           ;Config register CONFIG7L @ 0x30000C
  2675                           ;	Table Read Protection bit
  2676                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2677                           ;	Table Read Protection bit
  2678                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2679                           ;	Table Read Protection bit
  2680                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2681                           ;	Table Read Protection bit
  2682                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2683   30000C                     	org	3145740
  2684   30000C  0F                 	db	15
  2685                           
  2686                           ;Config register CONFIG7H @ 0x30000D
  2687                           ;	Boot Block Table Read Protection bit
  2688                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  2689   30000D                     	org	3145741
  2690   30000D  40                 	db	64
  2691                           tosu	equ	0xFFF
  2692                           tosh	equ	0xFFE
  2693                           tosl	equ	0xFFD
  2694                           stkptr	equ	0xFFC
  2695                           pclatu	equ	0xFFB
  2696                           pclath	equ	0xFFA
  2697                           pcl	equ	0xFF9
  2698                           tblptru	equ	0xFF8
  2699                           tblptrh	equ	0xFF7
  2700                           tblptrl	equ	0xFF6
  2701                           tablat	equ	0xFF5
  2702                           prodh	equ	0xFF4
  2703                           prodl	equ	0xFF3
  2704                           indf0	equ	0xFEF
  2705                           postinc0	equ	0xFEE
  2706                           postdec0	equ	0xFED
  2707                           preinc0	equ	0xFEC
  2708                           plusw0	equ	0xFEB
  2709                           fsr0h	equ	0xFEA
  2710                           fsr0l	equ	0xFE9
  2711                           wreg	equ	0xFE8
  2712                           indf1	equ	0xFE7
  2713                           postinc1	equ	0xFE6
  2714                           postdec1	equ	0xFE5
  2715                           preinc1	equ	0xFE4
  2716                           plusw1	equ	0xFE3
  2717                           fsr1h	equ	0xFE2
  2718                           fsr1l	equ	0xFE1
  2719                           bsr	equ	0xFE0
  2720                           indf2	equ	0xFDF
  2721                           postinc2	equ	0xFDE
  2722                           postdec2	equ	0xFDD
  2723                           preinc2	equ	0xFDC
  2724                           plusw2	equ	0xFDB
  2725                           fsr2h	equ	0xFDA
  2726                           fsr2l	equ	0xFD9
  2727                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         470
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     15      88
    BANK0           160      4     145
    BANK1           256      0     256
    BANK2           256      0       0
    BANK3           239      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_read_analog
    _main->_update_pwm
    _update_pwm->___awdiv
    _read_analog->___awdiv

Critical Paths under _enc in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_update_pwm

Critical Paths under _enc in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _enc in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _enc in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _enc in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _enc in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _enc in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _enc in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _enc in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2655
                       _buttons_init
                       _buttons_loop
                       _config_micro
                               _init
                          _init_vars
                               _loop
                        _read_analog
                         _update_pwm
 ---------------------------------------------------------------------------------
 (1) _update_pwm                                           5     5      0    1381
                                             14 COMRAM     1     1      0
                                              0 BANK0      4     4      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _read_analog                                          4     4      0    1183
                                             14 COMRAM     1     1      0
                                              0 BANK0      3     3      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     985
                                              6 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _loop                                                 1     1      0       0
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_vars                                            4     4      0      45
                                              6 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_micro                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buttons_loop                                         1     1      0      46
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _buttons_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _enc                                                  6     6      0      45
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _buttons_init
   _buttons_loop
   _config_micro
   _init
   _init_vars
   _loop
   _read_analog
     ___awdiv
   _update_pwm
     ___awdiv

 _enc (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           400      0       0      43        0.0%
BIGRAM             3EE      0       0      44        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      17        0.0%
BANK7              100      0       0      18        0.0%
BITBANK6           100      0       0      15        0.0%
BANK6              100      0       0      16        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0     100       6      100.0%
BITBANK3            EF      0       0       9        0.0%
BANK3               EF      0       0      10        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      4      91       4       90.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      F      58       1       93.6%
BITBIGSFRhhll       11      0       0      39        0.0%
BITBIGSFRhhlh        E      0       0      38        0.0%
BITBIGSFRl           D      0       0      41        0.0%
BITBIGSFR_5h         9      0       0      19        0.0%
BITBIGSFR_1hlll      5      0       0      26        0.0%
BITBIGSFRhhh         5      0       0      37        0.0%
BITBIGSFR_1llll      4      0       0      34        0.0%
BITBIGSFR_1lh        3      0       0      31        0.0%
BITBIGSFR_2h         3      0       0      23        0.0%
BITBIGSFR_1hlll      3      0       0      30        0.0%
BITBIGSFR_4          3      0       0      21        0.0%
BITBIGSFR_3          3      0       0      22        0.0%
BITBIGSFR_1llll      2      0       0      35        0.0%
BITBIGSFR_1hh        2      0       0      24        0.0%
BITBIGSFR_1lllh      1      0       0      33        0.0%
BITBIGSFR_1llh       1      0       0      32        0.0%
BITBIGSFR_1hlll      1      0       0      29        0.0%
BITBIGSFR_1hlll      1      0       0      28        0.0%
BITBIGSFR_1hlll      1      0       0      27        0.0%
BITBIGSFR_1hllh      1      0       0      25        0.0%
BITBIGSFRhl          1      0       0      40        0.0%
BITBIGSFR_5l         1      0       0      20        0.0%
BITBIGSFR_1llll      1      0       0      36        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1E9      42        0.0%
DATA                 0      0     1E9      45        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Jul 11 22:43:22 2025

                      _b 0036                       u91 098E             ___awdiv@sign 0055  
                    l101 078A                      l202 005A                      l106 08F8  
                    l109 095C                      l150 03C4                      l145 09C4  
                    l164 0564                      l245 0A9E                      l253 069C  
                    l238 036E                      l158 04BE                      l197 0A26  
                    l495 084E                      l981 069E                      l991 06AE  
                    l983 06A6                      l993 06B0                      l985 06A8  
                    l995 06BA                      l987 06AA                      l997 06BC  
                    l989 06AC                      l999 06BE                      u100 09B4  
                    u101 09B0                      _PR2 000FCB                      _enc 0008  
                    _pwm 0045                      prod 000FF3                      wreg 000FE8  
                   l1001 06C8                     l1011 06D6                     l1003 06CA  
                   l1021 0720                     l1013 06D8                     l1005 06CC  
                   l1031 0742                     l1023 0722                     l1015 06DA  
                   l1007 06D2                     l1041 0754                     l1033 0744  
                   l1025 0730                     l1017 06E4                     l1009 06D4  
                   l1121 0966                     l1051 075E                     l1043 0756  
                   l1035 0746                     l1027 073E                     l1019 071A  
                   l1123 0994                     l1115 095E                     l1061 0768  
                   l1053 0760                     l1045 0758                     l1037 0748  
                   l1029 0740                     l1125 0998                     l1071 0772  
                   l1063 076A                     l1055 0762                     l1047 075A  
                   l1039 074A                     l1127 09B4                     l1081 077C  
                   l1073 0774                     l1065 076C                     l1057 0764  
                   l1049 075C                     l1091 0786                     l1083 077E  
                   l1075 0776                     l1067 076E                     l1059 0766  
                   l1093 0788                     l1085 0780                     l1077 0778  
                   l1069 0770                     l1511 09DE                     l1087 0782  
                   l1079 077A                     l1513 0A00                     l1601 0282  
                   l1521 0012                     l1089 0784                     l1515 0A0C  
                   l1507 09C6                     l1611 02B4                     l1603 0284  
                   l1531 0056                     l1523 0022                     l1517 0A18  
                   l1509 09D2                     l1621 0306                     l1613 02BC  
                   l1605 0288                     l1541 00B2                     l1533 006A  
                   l1525 0030                     l1701 07AA                     l1519 0A24  
                   l1631 0346                     l1623 0316                     l1615 02CC  
                   l1607 0298                     l1551 00FE                     l1543 00BE  
                   l1535 0092                     l1527 0038                     l1711 07DE  
                   l1703 07B8                     l1633 0348                     l1625 031C  
                   l1617 02DC                     l1609 02A8                     l1561 016C  
                   l1553 010A                     l1545 00CE                     l1537 009E  
                   l1529 0048                     l1721 0818                     l1713 07E6  
                   l1705 07C0                     l1801 0A76                     l1635 0354  
                   l1627 032E                     l1619 02DE                     l1563 01A8  
                   l1571 01C4                     l1555 012C                     l1539 00AE  
                   l1547 00D6                     l1651 0578                     l1731 083E  
                   l1723 0820                     l1715 07EE                     l1707 07C4  
                   l1803 0A7A                     ?_enc 004A                     l1629 0334  
                   l1637 035A                     l1581 0228                     l1573 01D4  
                   l1565 01AC                     l1557 014C                     l1549 00FC  
                   l1661 05D4                     l1653 0596                     l1733 0846  
                   l1725 0822                     l1717 07FC                     l1709 07CC  
                   l1591 0254                     l1575 01E4                     l1567 01BC  
                   l1559 015C                     l1647 0A86                     l1671 063C  
                   l1663 05E4                     l1655 059C                     l1727 0828  
                   l1719 0802                     l1751 0932                     l1743 08E4  
                   l1593 0256                     l1577 0220                     l1585 0230  
                   l1673 0642                     l1665 0604                     l1657 05AC  
                   l1649 0566                     l1729 082E                     l1753 094A  
                   l1745 08F6                     l1737 08DE                     l1761 039A  
                   l1595 025A                     l1587 0234                     l1675 066C  
                   l1667 060A                     l1659 05CE                     l1755 094C  
                   l1747 0906                     l1771 0452                     l1763 03B6  
                   l1589 0244                     l1597 0262                     l1669 061A  
                   l1693 078C                     l1749 0912                     l1781 04C6  
                   l1773 046A                     l1765 03CC                     l1757 0370  
                   l1599 0272                     l1695 0790                     l1783 0530  
                   l1775 0486                     l1767 0436                     l1759 038C  
                   l1791 0A62                     l1697 079E                     l1785 0538  
                   l1777 0494                     l1769 043E                     l1793 0A66  
                   l1699 07A6                     l1787 054C                     l1779 04B0  
                   l1795 0A6A                     l1797 0A6E                     l1789 0A5E  
                   l1799 0A72                     _EEIF 007D0C                     u1200 0048  
                   u1201 0044                     u1210 0056                     u1131 09D8  
                   u1211 0052                     u1220 006A                     u1141 09E4  
                   u1301 0146                     u1221 0066                     u1310 015C  
                   u1230 0092                     u1151 0A06                     u1311 0158  
                   u1231 008E                     u1400 0272                     u1320 016C  
                   u1161 0A12                     u1401 026E                     u1321 0168  
                   u1241 0098                     u1410 0282                     u1330 01A8  
                   u1250 00AE                     u1171 0A1E                     u1411 027E  
                   u1331 01A4                     u1251 00AA                     u1500 0346  
                   u1420 0298                     u1180 0022                     u1501 0342  
                   u1421 0294                     u1341 01B2                     u1261 00B8  
                   u1181 001E                     u1430 02A8                     u1350 01D4  
                   u1190 0030                     u1511 034E                     u1431 02A4  
                   u1351 01D0                     u1271 00C8                     u1191 002C  
                   u1360 01E4                     u1280 00FC                     u1600 05E4  
                   u1441 02AE                     u1361 01E0                     u1281 00F8  
                   u1521 0A8C                     u1601 05E0                     u1450 02CC  
                   u1370 0220                     u1610 05F6                     u1451 02C8  
                   u1371 021C                     u1291 0104                     u1531 0A98  
                   u1611 05EE                     u1460 02DC                     u1380 0244  
                   u1540 0578                     u1461 02D8                     u1381 0240  
                   u1701 0696                     u1541 0574                     u1470 0306  
                   u1390 0254                     u1630 061A                     u1550 058A  
                   u1710 079E                     u1471 0302                     u1391 0250  
                   u1631 0616                     u1551 0582                     u1711 079A  
                   u1480 0316                     u1640 062C                     u1720 07B8  
                   u1800 03B6                     u1481 0312                     u1641 0624  
                   u1721 07B4                     u1801 03B2                     u1490 032E  
                   u1570 05AC                     u1730 07DE                     u1810 03EC  
                   u1491 032A                     u1571 05A8                     u1731 07DA  
                   u1811 03E4                     u1660 066C                     u1628 05F8  
                   u1580 05BE                     u1740 07FC                     u1900 0508  
                   u1661 0668                     u1581 05B6                     u1741 07F8  
                   u1901 0500                     u1750 0818                     u1830 040E  
                   u1671 0672                     u1751 0814                     u1831 0406  
                   u1568 058C                     u1760 083E                     u1920 0530  
                   u1681 067E                     u1761 083A                     u1921 052C  
                   u1658 062E                     u1770 0906                     u1850 0436  
                   u1691 068A                     u1771 0902                     u1851 0432  
                   u1780 095C                     u1860 0486                     u1828 03EE  
                   u1781 0958                     u1861 0482                     u1598 05C0  
                   u1918 050A                     u1870 04B0                     u1790 038C  
                   u1871 04AC                     u1791 0388                     u1880 04E6  
                   u1848 0410                     u1881 04DE                     u1898 04E8  
                   _TXIF 007CF4                     _main 0A5E                     enc@i 004E  
                   _init 0A86                     _loop 0566            _state_counter 0060  
                   fsr1h 000FE2                     fsr2h 000FDA                     fsr1l 000FE1  
                   fsr2l 000FD9                     btemp 0059           ??_config_micro 0050  
                   prodh 000FF4                     prodl 000FF3                     start 000E  
           ___param_bank 000000                    ??_enc 004A                    ?_main 004A  
                  ?_init 004A          __end_of___awdiv 0850                    _EEADR 000FA9  
                  ?_loop 004A                    _CMCON 000FB4          ___awdiv@divisor 0052  
                  i2l140 08D2          ___awdiv@counter 0054                    _TMR0H 000FD7  
                  _TMR1H 000FCF                    _TMR0L 000FD6                    _TMR1L 000FCE  
                  _SPBRG 000FAF                    _TXREG 000FAD             ?_read_analog 004A  
                  ttemp5 005A                    ttemp6 005D                    ttemp7 0061  
                  status 000FD8                    wtemp8 005A          __initialization 0A28  
           __end_of_main 0A86             __end_of_init 0AA0             __end_of_loop 069E  
                 ??_main 0059                   ??_init 0050                   ??_loop 0050  
          __activetblptr 000000                   _ADRESH 000FC4                   _ADRESL 000FC3  
                 _EEDATA 000FA8                   _CCPR1L 000FBE                   _CCPR2L 000FBB  
                 _EECON2 000FA7         ___awdiv@dividend 0050                   i2l1381 0868  
                 i2l1391 08B2                   i2l1383 0870                   i2l1393 08B6  
                 i2l1379 085A                   i2l1389 087A                   _TMR0IF 007F92  
                 _SPBRGH 000FB0            ?_buttons_init 004A            ?_buttons_loop 004A  
              ??___awdiv 0054                   _last_b 0040                   clear_0 0A30  
                 clear_1 0A42                   clear_2 0A4E         ___awdiv@quotient 0056  
                 isa$std 000001     __end_of_config_micro 078C               __accesstop 0060  
__end_of__initialization 0A54            ___rparam_used 000001           ??_buttons_init 0050  
         ??_buttons_loop 0050           __pcstackCOMRAM 004A               __pbssBANK0 0060  
             __pbssBANK1 0100            _initial_state 0049           _sum_iterations 00CC  
                i2u90_40 08D2                  i2u90_41 08CE                  i2u89_40 0868  
                i2u89_41 0864           _persisted_data 0100        _combination_state 0031  
                __Hparam 0000                  __Lparam 0000                  ___awdiv 078C  
                _b_state 003B                  __pcinit 0A28                  __ramtop 0800  
                __ptext0 0A5E                  __ptext1 0370                  __ptext2 08DE  
                __ptext3 078C                  __ptext4 0566                  __ptext5 095E  
                __ptext6 0A86                  __ptext7 069E                  __ptext8 0012  
                __ptext9 09C6                _T0CONbits 000FD5                _T1CONbits 000FCD  
                _counter 0001                _T2CONbits 000FCA        __end_of_init_vars 09C6  
             _iterations 0029     __end_of_buttons_init 0A28     __end_of_buttons_loop 0370  
  buttons_loop@click_evt 0050           __pintcode_body 0850     end_of_initialization 0A54  
                int_func 0850             read_analog@i 00EF             _config_micro 069E  
       _triple_click_evt 00D4                _RCSTAbits 000FAB                  postdec1 000FE5  
                postdec2 000FDD                  postinc0 000FEE                  postinc2 000FDE  
              _PORTBbits 000F81                _PORTCbits 000F82                _PORTDbits 000F83  
              _TRISAbits 000F92                _TRISBbits 000F93                _TRISCbits 000F94  
              _TRISDbits 000F95                _TRISEbits 000F96               _update_pwm 0370  
            _CCP1CONbits 000FBD              _CCP2CONbits 000FBA                _TXSTAbits 000FAC  
            _BAUDCONbits 000FB8         _single_click_evt 00DE      start_initialization 0A28  
            __end_of_enc 08DE           update_pwm@pwm0 00ED           update_pwm@pwm1 00EF  
             init_vars@i 0052            ??_read_analog 0058              __pbssCOMRAM 0001  
          __pcstackBANK0 00ED              ?_update_pwm 004A                _b_counter 0088  
       _double_click_evt 00D9             _buttons_init 09C6             _buttons_loop 0012  
              __pintcode 0008                 ?___awdiv 0050                _init_vars 095E  
    __end_of_read_analog 095E                 _UCFGbits 000F6F                 _RCONbits 000FD0  
               _UCONbits 000F6D                _press_evt 00E8               _ADCON0bits 000FC2  
             _ADCON1bits 000FC1               _ADCON2bits 000FC0               ?_init_vars 004A  
            _INTCON2bits 000FF1               _EECON1bits 000FA6                 __Hrparam 0000  
               __Lrparam 0000           read_analog@aux 00ED              _read_analog 08DE  
               _an_input 00B0                 isa$xinst 000000                 int$flags 0059  
            _release_evt 00E3               _INTCONbits 000FF2             ??_update_pwm 0058  
            ??_init_vars 0050                 intlevel2 0000            _amount_cycles 00C4  
             _OSCCONbits 000FD3       __end_of_update_pwm 0566            ?_config_micro 004A  
