

Microchip Technology PIC18 LITE Macro Assembler V1.43 build -156212558 
                                                                                               Sat Aug 19 03:24:56 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    49  0000                     
    50                           ; Version 1.43
    51                           ; Generated 25/07/2017 GMT
    52                           ; 
    53                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC18F4550 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     
    85                           	psect	idataCOMRAM
    86  002493                     __pidataCOMRAM:
    87                           	opt stack 0
    88                           
    89                           ;initializer for _es
    90  002493  0003               	dw	3
    91  002495  0005               	dw	5
    92                           
    93                           ;initializer for _ckd
    94                           ;twiddle.c: 7: double kp = 4, kd = 100;
    95  002497  CD                 	db	205
    96  002498  CC                 	db	204
    97  002499  3D                 	db	61
    98                           
    99                           ;initializer for _kd
   100  00249A  00                 	db	0
   101  00249B  C8                 	db	200
   102  00249C  42                 	db	66
   103                           
   104                           ;initializer for _kp
   105  00249D  00                 	db	0
   106  00249E  80                 	db	128
   107  00249F  40                 	db	64
   108                           
   109                           	psect	idataBANK0
   110  002480                     __pidataBANK0:
   111                           	opt stack 0
   112                           
   113                           ;initializer for _ls
   114  002480  0008               	dw	8
   115  002482  0007               	dw	7
   116  002484  0006               	dw	6
   117  002486  0004               	dw	4
   118  002488  0002               	dw	2
   119                           
   120                           ;initializer for _cs
   121  00248A  0000               	dw	0
   122  00248C  0001               	dw	1
   123                           
   124                           ;initializer for _ckp
   125                           ;twiddle.c: 7: double kp = 4, kd = 100;
   126  00248E  CD                 	db	205
   127  00248F  CC                 	db	204
   128  002490  3D                 	db	61
   129                           
   130                           ;initializer for _status
   131  002491  0001               	dw	1
   132                           
   133                           	psect	smallconst
   134  000800                     __psmallconst:
   135                           	opt stack 0
   136  000800  00                 	db	0
   137  000801                     _kd_val:
   138                           	opt stack 0
   139  000801  0046               	dw	70
   140  000803  0064               	dw	100
   141  000805                     __end_of_kd_val:
   142                           	opt stack 0
   143  000805                     _kp_val:
   144                           	opt stack 0
   145  000805  0003               	dw	3
   146  000807  0003               	dw	3
   147  000809                     __end_of_kp_val:
   148                           	opt stack 0
   149  000809                     _speed_vals:
   150                           	opt stack 0
   151  000809  01F4               	dw	500
   152  00080B  0258               	dw	600
   153  00080D                     __end_of_speed_vals:
   154                           	opt stack 0
   155  0000                     _TXREG	set	4013
   156  0000                     _RCSTAbits	set	4011
   157  0000                     _TXSTAbits	set	4012
   158  0000                     _SPBRGH	set	4016
   159  0000                     _SPBRG	set	4015
   160  0000                     _BAUDCONbits	set	4024
   161  0000                     _PORTEbits	set	3972
   162  0000                     _TRISEbits	set	3990
   163  0000                     _TRISAbits	set	3986
   164  0000                     _TRISDbits	set	3989
   165  0000                     _TRISCbits	set	3988
   166  0000                     _TRISBbits	set	3987
   167  0000                     _CCPR2L	set	4027
   168  0000                     _CCPR1L	set	4030
   169  0000                     _CCP2CONbits	set	4026
   170  0000                     _CCP1CONbits	set	4029
   171  0000                     _PR2	set	4043
   172  0000                     _T2CONbits	set	4042
   173  0000                     _TMR1L	set	4046
   174  0000                     _TMR1H	set	4047
   175  0000                     _T1CONbits	set	4045
   176  0000                     _INTCONbits	set	4082
   177  0000                     _RCONbits	set	4048
   178  0000                     _INTCON2bits	set	4081
   179  0000                     _TMR0L	set	4054
   180  0000                     _TMR0H	set	4055
   181  0000                     _T0CONbits	set	4053
   182  0000                     _UCFGbits	set	3951
   183  0000                     _UCONbits	set	3949
   184  0000                     _CMCON	set	4020
   185  0000                     _OSCCONbits	set	4051
   186  0000                     _ADRESL	set	4035
   187  0000                     _ADRESH	set	4036
   188  0000                     _ADCON0bits	set	4034
   189  0000                     _ADCON2bits	set	4032
   190  0000                     _ADCON1bits	set	4033
   191  0000                     _PORTAbits	set	3968
   192  0000                     _PORTCbits	set	3970
   193  0000                     _PORTBbits	set	3969
   194  0000                     _PORTDbits	set	3971
   195  0000                     _TXIF	set	31988
   196  0000                     _TMR0IF	set	32658
   197  0000                     _T2CKPS1	set	32337
   198  0000                     _T2CKPS0	set	32336
   199  0000                     _TMR2ON	set	32338
   200  0000                     _T2OUTPS3	set	32342
   201  0000                     _T2OUTPS2	set	32341
   202  0000                     _T2OUTPS1	set	32340
   203  0000                     _T2OUTPS0	set	32339
   204                           
   205                           ; #config settings
   206  00080D  00                 	db	0	; dummy byte at the end
   207  0000                     
   208                           	psect	cinit
   209  002182                     __pcinit:
   210                           	opt stack 0
   211  002182                     start_initialization:
   212                           	opt stack 0
   213  002182                     __initialization:
   214                           	opt stack 0
   215                           
   216                           ; Initialize objects allocated to BANK0 (19 bytes)
   217                           ; load TBLPTR registers with __pidataBANK0
   218  002182  0E80               	movlw	low __pidataBANK0
   219  002184  6EF6               	movwf	tblptrl,c
   220  002186  0E24               	movlw	high __pidataBANK0
   221  002188  6EF7               	movwf	tblptrh,c
   222  00218A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   223  00218C  6EF8               	movwf	tblptru,c
   224  00218E  EE00  F0DD         	lfsr	0,__pdataBANK0
   225  002192  EE10 F013          	lfsr	1,19
   226  002196                     copy_data0:
   227  002196  0009               	tblrd		*+
   228  002198  CFF5 FFEE          	movff	tablat,postinc0
   229  00219C  50E5               	movf	postdec1,w,c
   230  00219E  50E1               	movf	fsr1l,w,c
   231  0021A0  E1FA               	bnz	copy_data0
   232                           
   233                           ; Initialize objects allocated to COMRAM (13 bytes)
   234                           ; load TBLPTR registers with __pidataCOMRAM
   235  0021A2  0E93               	movlw	low __pidataCOMRAM
   236  0021A4  6EF6               	movwf	tblptrl,c
   237  0021A6  0E24               	movlw	high __pidataCOMRAM
   238  0021A8  6EF7               	movwf	tblptrh,c
   239  0021AA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   240  0021AC  6EF8               	movwf	tblptru,c
   241  0021AE  EE00  F038         	lfsr	0,__pdataCOMRAM
   242  0021B2  EE10 F00D          	lfsr	1,13
   243  0021B6                     copy_data1:
   244  0021B6  0009               	tblrd		*+
   245  0021B8  CFF5 FFEE          	movff	tablat,postinc0
   246  0021BC  50E5               	movf	postdec1,w,c
   247  0021BE  50E1               	movf	fsr1l,w,c
   248  0021C0  E1FA               	bnz	copy_data1
   249                           
   250                           ; Clear objects allocated to BANK1 (18 bytes)
   251  0021C2  EE01  F013         	lfsr	0,__pbssBANK1
   252  0021C6  0E12               	movlw	18
   253  0021C8                     clear_0:
   254  0021C8  6AEE               	clrf	postinc0,c
   255  0021CA  06E8               	decf	wreg,f,c
   256  0021CC  E1FD               	bnz	clear_0
   257                           
   258                           ; Clear objects allocated to BANK0 (100 bytes)
   259  0021CE  EE00  F060         	lfsr	0,__pbssBANK0
   260  0021D2  0E64               	movlw	100
   261  0021D4                     clear_1:
   262  0021D4  6AEE               	clrf	postinc0,c
   263  0021D6  06E8               	decf	wreg,f,c
   264  0021D8  E1FD               	bnz	clear_1
   265                           
   266                           ; Clear objects allocated to COMRAM (6 bytes)
   267  0021DA  6A4A               	clrf	(__pbssCOMRAM+5)& (0+255),c
   268  0021DC  6A49               	clrf	(__pbssCOMRAM+4)& (0+255),c
   269  0021DE  6A48               	clrf	(__pbssCOMRAM+3)& (0+255),c
   270  0021E0  6A47               	clrf	(__pbssCOMRAM+2)& (0+255),c
   271  0021E2  6A46               	clrf	(__pbssCOMRAM+1)& (0+255),c
   272  0021E4  6A45               	clrf	__pbssCOMRAM& (0+255),c
   273  0021E6                     end_of_initialization:
   274                           	opt stack 0
   275  0021E6                     __end_of__initialization:
   276                           	opt stack 0
   277  0021E6  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   278  0021E8  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   279  0021EA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   280  0021EC  6EF8               	movwf	tblptru,c
   281  0021EE  0100               	movlb	0
   282  0021F0  EF07  F004         	goto	_main	;jump to C main() function
   283                           tblptru	equ	0xFF8
   284                           tblptrh	equ	0xFF7
   285                           tblptrl	equ	0xFF6
   286                           tablat	equ	0xFF5
   287                           postinc0	equ	0xFEE
   288                           wreg	equ	0xFE8
   289                           postdec1	equ	0xFE5
   290                           fsr1l	equ	0xFE1
   291                           
   292                           	psect	bssCOMRAM
   293  000045                     __pbssCOMRAM:
   294                           	opt stack 0
   295  000045                     _intern:
   296                           	opt stack 0
   297  000045                     	ds	2
   298  000047                     _best_err:
   299                           	opt stack 0
   300  000047                     	ds	2
   301  000049                     _i:
   302                           	opt stack 0
   303  000049                     	ds	2
   304                           tblptru	equ	0xFF8
   305                           tblptrh	equ	0xFF7
   306                           tblptrl	equ	0xFF6
   307                           tablat	equ	0xFF5
   308                           postinc0	equ	0xFEE
   309                           wreg	equ	0xFE8
   310                           postdec1	equ	0xFE5
   311                           fsr1l	equ	0xFE1
   312                           
   313                           	psect	dataCOMRAM
   314  000038                     __pdataCOMRAM:
   315                           	opt stack 0
   316  000038                     _es:
   317                           	opt stack 0
   318  000038                     	ds	4
   319  00003C                     _ckd:
   320                           	opt stack 0
   321  00003C                     	ds	3
   322  00003F                     _kd:
   323                           	opt stack 0
   324  00003F                     	ds	3
   325  000042                     _kp:
   326                           	opt stack 0
   327  000042                     	ds	3
   328                           tblptru	equ	0xFF8
   329                           tblptrh	equ	0xFF7
   330                           tblptrl	equ	0xFF6
   331                           tablat	equ	0xFF5
   332                           postinc0	equ	0xFEE
   333                           wreg	equ	0xFE8
   334                           postdec1	equ	0xFE5
   335                           fsr1l	equ	0xFE1
   336                           
   337                           	psect	bssBANK0
   338  000060                     __pbssBANK0:
   339                           	opt stack 0
   340  000060                     _time:
   341                           	opt stack 0
   342  000060                     	ds	40
   343  000088                     _mode:
   344                           	opt stack 0
   345  000088                     	ds	2
   346  00008A                     _old_lp:
   347                           	opt stack 0
   348  00008A                     	ds	2
   349  00008C                     _lp:
   350                           	opt stack 0
   351  00008C                     	ds	2
   352  00008E                     _mins:
   353                           	opt stack 0
   354  00008E                     	ds	18
   355  0000A0                     _maxs:
   356                           	opt stack 0
   357  0000A0                     	ds	18
   358  0000B2                     _an:
   359                           	opt stack 0
   360  0000B2                     	ds	18
   361                           tblptru	equ	0xFF8
   362                           tblptrh	equ	0xFF7
   363                           tblptrl	equ	0xFF6
   364                           tablat	equ	0xFF5
   365                           postinc0	equ	0xFEE
   366                           wreg	equ	0xFE8
   367                           postdec1	equ	0xFE5
   368                           fsr1l	equ	0xFE1
   369                           
   370                           	psect	dataBANK0
   371  0000DD                     __pdataBANK0:
   372                           	opt stack 0
   373  0000DD                     _ls:
   374                           	opt stack 0
   375  0000DD                     	ds	10
   376  0000E7                     _cs:
   377                           	opt stack 0
   378  0000E7                     	ds	4
   379  0000EB                     _ckp:
   380                           	opt stack 0
   381  0000EB                     	ds	3
   382  0000EE                     _status:
   383                           	opt stack 0
   384  0000EE                     	ds	2
   385                           tblptru	equ	0xFF8
   386                           tblptrh	equ	0xFF7
   387                           tblptrl	equ	0xFF6
   388                           tablat	equ	0xFF5
   389                           postinc0	equ	0xFEE
   390                           wreg	equ	0xFE8
   391                           postdec1	equ	0xFE5
   392                           fsr1l	equ	0xFE1
   393                           
   394                           	psect	bssBANK1
   395  000113                     __pbssBANK1:
   396                           	opt stack 0
   397  000113                     _calval:
   398                           	opt stack 0
   399  000113                     	ds	18
   400                           tblptru	equ	0xFF8
   401                           tblptrh	equ	0xFF7
   402                           tblptrl	equ	0xFF6
   403                           tablat	equ	0xFF5
   404                           postinc0	equ	0xFEE
   405                           wreg	equ	0xFE8
   406                           postdec1	equ	0xFE5
   407                           fsr1l	equ	0xFE1
   408                           
   409                           	psect	cstackBANK1
   410  000100                     __pcstackBANK1:
   411                           	opt stack 0
   412  000100                     main@der:
   413                           	opt stack 0
   414                           
   415                           ; 2 bytes @ 0x0
   416  000100                     	ds	2
   417  000102                     main@a:
   418                           	opt stack 0
   419                           
   420                           ; 2 bytes @ 0x2
   421  000102                     	ds	2
   422  000104                     main@b:
   423                           	opt stack 0
   424                           
   425                           ; 2 bytes @ 0x4
   426  000104                     	ds	2
   427  000106                     main@i:
   428                           	opt stack 0
   429                           
   430                           ; 2 bytes @ 0x6
   431  000106                     	ds	2
   432  000108                     main@i_343:
   433                           	opt stack 0
   434                           
   435                           ; 2 bytes @ 0x8
   436  000108                     	ds	2
   437  00010A                     main@fs:
   438                           	opt stack 0
   439                           
   440                           ; 2 bytes @ 0xA
   441  00010A                     	ds	2
   442  00010C                     main@faux:
   443                           	opt stack 0
   444                           
   445                           ; 2 bytes @ 0xC
   446  00010C                     	ds	2
   447  00010E                     main@dif:
   448                           	opt stack 0
   449                           
   450                           ; 3 bytes @ 0xE
   451  00010E                     	ds	3
   452  000111                     main@speed:
   453                           	opt stack 0
   454                           
   455                           ; 2 bytes @ 0x11
   456  000111                     	ds	2
   457                           tblptru	equ	0xFF8
   458                           tblptrh	equ	0xFF7
   459                           tblptrl	equ	0xFF6
   460                           tablat	equ	0xFF5
   461                           postinc0	equ	0xFEE
   462                           wreg	equ	0xFE8
   463                           postdec1	equ	0xFE5
   464                           fsr1l	equ	0xFE1
   465                           
   466                           	psect	cstackBANK0
   467  0000C4                     __pcstackBANK0:
   468                           	opt stack 0
   469  0000C4                     ??___ftadd:
   470  0000C4                     _line_cal$2254:
   471                           	opt stack 0
   472                           
   473                           ; 4 bytes @ 0x0
   474  0000C4                     	ds	3
   475  0000C7                     ___ftadd@sign:
   476                           	opt stack 0
   477                           
   478                           ; 1 bytes @ 0x3
   479  0000C7                     	ds	1
   480  0000C8                     ___ftadd@exp2:
   481                           	opt stack 0
   482  0000C8                     line_cal@a:
   483                           	opt stack 0
   484                           
   485                           ; 4 bytes @ 0x4
   486  0000C8                     	ds	1
   487  0000C9                     ___ftadd@exp1:
   488                           	opt stack 0
   489                           
   490                           ; 1 bytes @ 0x5
   491  0000C9                     	ds	1
   492  0000CA                     ?___fttol:
   493                           	opt stack 0
   494  0000CA                     ___fttol@f1:
   495                           	opt stack 0
   496                           
   497                           ; 3 bytes @ 0x6
   498  0000CA                     	ds	2
   499  0000CC                     line_cal@b:
   500                           	opt stack 0
   501                           
   502                           ; 4 bytes @ 0x8
   503  0000CC                     	ds	2
   504  0000CE                     ??___fttol:
   505                           
   506                           ; 1 bytes @ 0xA
   507  0000CE                     	ds	2
   508  0000D0                     line_cal@ok:
   509                           	opt stack 0
   510                           
   511                           ; 2 bytes @ 0xC
   512  0000D0                     	ds	2
   513  0000D2                     line_cal@value:
   514                           	opt stack 0
   515                           
   516                           ; 4 bytes @ 0xE
   517  0000D2                     	ds	1
   518  0000D3                     ___fttol@sign1:
   519                           	opt stack 0
   520                           
   521                           ; 1 bytes @ 0xF
   522  0000D3                     	ds	1
   523  0000D4                     ___fttol@lval:
   524                           	opt stack 0
   525                           
   526                           ; 4 bytes @ 0x10
   527  0000D4                     	ds	2
   528  0000D6                     line_cal@aux:
   529                           	opt stack 0
   530                           
   531                           ; 2 bytes @ 0x12
   532  0000D6                     	ds	2
   533  0000D8                     ___fttol@exp1:
   534                           	opt stack 0
   535  0000D8                     line_cal@i:
   536                           	opt stack 0
   537                           
   538                           ; 2 bytes @ 0x14
   539  0000D8                     	ds	1
   540  0000D9                     mspeed@a:
   541                           	opt stack 0
   542                           
   543                           ; 2 bytes @ 0x15
   544  0000D9                     	ds	1
   545  0000DA                     line_cal@j:
   546                           	opt stack 0
   547                           
   548                           ; 2 bytes @ 0x16
   549  0000DA                     	ds	1
   550  0000DB                     mspeed@b:
   551                           	opt stack 0
   552                           
   553                           ; 2 bytes @ 0x17
   554  0000DB                     	ds	2
   555                           tblptru	equ	0xFF8
   556                           tblptrh	equ	0xFF7
   557                           tblptrl	equ	0xFF6
   558                           tablat	equ	0xFF5
   559                           postinc0	equ	0xFEE
   560                           wreg	equ	0xFE8
   561                           postdec1	equ	0xFE5
   562                           fsr1l	equ	0xFE1
   563                           
   564                           	psect	cstackCOMRAM
   565  000001                     __pcstackCOMRAM:
   566                           	opt stack 0
   567  000001                     ??_enc:
   568                           
   569                           ; 1 bytes @ 0x0
   570  000001                     	ds	20
   571  000015                     ??_read_cal:
   572  000015                     ?___awdiv:
   573                           	opt stack 0
   574  000015                     ?___ftpack:
   575                           	opt stack 0
   576  000015                     ?___ftneg:
   577                           	opt stack 0
   578  000015                     ?___lmul:
   579                           	opt stack 0
   580  000015                     ?___almod:
   581                           	opt stack 0
   582  000015                     init_cal@i:
   583                           	opt stack 0
   584  000015                     ___awdiv@dividend:
   585                           	opt stack 0
   586  000015                     ___ftpack@arg:
   587                           	opt stack 0
   588  000015                     ___ftge@ff1:
   589                           	opt stack 0
   590  000015                     ___ftneg@f1:
   591                           	opt stack 0
   592  000015                     ___lmul@multiplier:
   593                           	opt stack 0
   594  000015                     ___almod@dividend:
   595                           	opt stack 0
   596                           
   597                           ; 4 bytes @ 0x14
   598  000015                     	ds	2
   599  000017                     ___awdiv@divisor:
   600                           	opt stack 0
   601                           
   602                           ; 2 bytes @ 0x16
   603  000017                     	ds	1
   604  000018                     ___ftpack@exp:
   605                           	opt stack 0
   606  000018                     ___ftge@ff2:
   607                           	opt stack 0
   608                           
   609                           ; 3 bytes @ 0x17
   610  000018                     	ds	1
   611  000019                     ___awdiv@counter:
   612                           	opt stack 0
   613  000019                     ___ftpack@sign:
   614                           	opt stack 0
   615  000019                     ___lmul@multiplicand:
   616                           	opt stack 0
   617  000019                     ___almod@divisor:
   618                           	opt stack 0
   619                           
   620                           ; 4 bytes @ 0x18
   621  000019                     	ds	1
   622  00001A                     ??___ftpack:
   623  00001A                     ___awdiv@sign:
   624                           	opt stack 0
   625                           
   626                           ; 1 bytes @ 0x19
   627  00001A                     	ds	1
   628  00001B                     ??___ftge:
   629  00001B                     ___awdiv@quotient:
   630                           	opt stack 0
   631                           
   632                           ; 2 bytes @ 0x1A
   633  00001B                     	ds	2
   634  00001D                     ??_EnhancedRead:
   635  00001D                     ?___awtoft:
   636                           	opt stack 0
   637  00001D                     ___almod@counter:
   638                           	opt stack 0
   639  00001D                     MotorASpeed@S:
   640                           	opt stack 0
   641  00001D                     MotorBSpeed@S:
   642                           	opt stack 0
   643  00001D                     ___awtoft@c:
   644                           	opt stack 0
   645  00001D                     ___lmul@product:
   646                           	opt stack 0
   647                           
   648                           ; 4 bytes @ 0x1C
   649  00001D                     	ds	1
   650  00001E                     ___almod@sign:
   651                           	opt stack 0
   652  00001E                     EnhancedRead@aux:
   653                           	opt stack 0
   654  00001E                     _read_cal$508:
   655                           	opt stack 0
   656                           
   657                           ; 2 bytes @ 0x1D
   658  00001E                     	ds	1
   659  00001F                     ??_MotorASpeed:
   660  00001F                     ??_MotorBSpeed:
   661                           
   662                           ; 1 bytes @ 0x1E
   663  00001F                     	ds	1
   664  000020                     EnhancedRead@i:
   665                           	opt stack 0
   666  000020                     ___awtoft@sign:
   667                           	opt stack 0
   668  000020                     _read_cal$510:
   669                           	opt stack 0
   670                           
   671                           ; 2 bytes @ 0x1F
   672  000020                     	ds	1
   673  000021                     ?___ftmul:
   674                           	opt stack 0
   675  000021                     ?___aldiv:
   676                           	opt stack 0
   677  000021                     ___ftmul@f1:
   678                           	opt stack 0
   679  000021                     ___aldiv@dividend:
   680                           	opt stack 0
   681                           
   682                           ; 4 bytes @ 0x20
   683  000021                     	ds	1
   684  000022                     _read_cal$512:
   685                           	opt stack 0
   686                           
   687                           ; 2 bytes @ 0x21
   688  000022                     	ds	2
   689  000024                     _read_cal$514:
   690                           	opt stack 0
   691  000024                     ___ftmul@f2:
   692                           	opt stack 0
   693                           
   694                           ; 3 bytes @ 0x23
   695  000024                     	ds	1
   696  000025                     ___aldiv@divisor:
   697                           	opt stack 0
   698                           
   699                           ; 4 bytes @ 0x24
   700  000025                     	ds	1
   701  000026                     read_cal@i:
   702                           	opt stack 0
   703                           
   704                           ; 2 bytes @ 0x25
   705  000026                     	ds	1
   706  000027                     ??___ftmul:
   707                           
   708                           ; 1 bytes @ 0x26
   709  000027                     	ds	2
   710  000029                     ___aldiv@counter:
   711                           	opt stack 0
   712                           
   713                           ; 1 bytes @ 0x28
   714  000029                     	ds	1
   715  00002A                     ___aldiv@sign:
   716                           	opt stack 0
   717  00002A                     ___ftmul@exp:
   718                           	opt stack 0
   719                           
   720                           ; 1 bytes @ 0x29
   721  00002A                     	ds	1
   722  00002B                     ___ftmul@f3_as_product:
   723                           	opt stack 0
   724  00002B                     ___aldiv@quotient:
   725                           	opt stack 0
   726                           
   727                           ; 4 bytes @ 0x2A
   728  00002B                     	ds	3
   729  00002E                     ___ftmul@cntr:
   730                           	opt stack 0
   731                           
   732                           ; 1 bytes @ 0x2D
   733  00002E                     	ds	1
   734  00002F                     ??_line_cal:
   735  00002F                     ___ftmul@sign:
   736                           	opt stack 0
   737                           
   738                           ; 1 bytes @ 0x2E
   739  00002F                     	ds	1
   740  000030                     ?___ftadd:
   741                           	opt stack 0
   742  000030                     ___ftadd@f1:
   743                           	opt stack 0
   744                           
   745                           ; 3 bytes @ 0x2F
   746  000030                     	ds	3
   747  000033                     ___ftadd@f2:
   748                           	opt stack 0
   749                           
   750                           ; 3 bytes @ 0x32
   751  000033                     	ds	3
   752  000036                     ??_main:
   753                           
   754                           ; 1 bytes @ 0x35
   755  000036                     	ds	2
   756                           tblptru	equ	0xFF8
   757                           tblptrh	equ	0xFF7
   758                           tblptrl	equ	0xFF6
   759                           tablat	equ	0xFF5
   760                           postinc0	equ	0xFEE
   761                           wreg	equ	0xFE8
   762                           postdec1	equ	0xFE5
   763                           fsr1l	equ	0xFE1
   764                           
   765 ;;
   766 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   767 ;;
   768 ;; *************** function _main *****************
   769 ;; Defined at:
   770 ;;		line 30 in file "main.c"
   771 ;; Parameters:    Size  Location     Type
   772 ;;		None
   773 ;; Auto vars:     Size  Location     Type
   774 ;;  i               2    8[BANK1 ] int 
   775 ;;  i               2    6[BANK1 ] int 
   776 ;;  dif             3   14[BANK1 ] int 
   777 ;;  speed           2   17[BANK1 ] int 
   778 ;;  der             2    0[BANK1 ] int 
   779 ;;  faux            2   12[BANK1 ] int 
   780 ;;  fs              2   10[BANK1 ] int 
   781 ;;  b               2    4[BANK1 ] int 
   782 ;;  a               2    2[BANK1 ] int 
   783 ;; Return value:  Size  Location     Type
   784 ;;                  1    wreg      void 
   785 ;; Registers used:
   786 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   787 ;; Tracked objects:
   788 ;;		On entry : 0/0
   789 ;;		On exit  : 0/0
   790 ;;		Unchanged: 0/0
   791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   792 ;;      Params:         0       0       0       0       0       0       0       0       0
   793 ;;      Locals:         0       0      19       0       0       0       0       0       0
   794 ;;      Temps:          2       0       0       0       0       0       0       0       0
   795 ;;      Totals:         2       0      19       0       0       0       0       0       0
   796 ;;Total ram usage:       21 bytes
   797 ;; Hardware stack levels required when called:    4
   798 ;; This function calls:
   799 ;;		_EnhancedRead
   800 ;;		___almod
   801 ;;		___awtoft
   802 ;;		___ftadd
   803 ;;		___ftge
   804 ;;		___ftmul
   805 ;;		___ftneg
   806 ;;		___fttol
   807 ;;		_init_cal
   808 ;;		_init_tms
   809 ;;		_line_cal
   810 ;;		_mspeed
   811 ;;		_read_cal
   812 ;;		_setA
   813 ;;		_setB
   814 ;;		_setC
   815 ;;		_setD
   816 ;; This function is called by:
   817 ;;		Startup code after reset
   818 ;; This function uses a non-reentrant model
   819 ;;
   820                           
   821                           	psect	text0
   822  00080E                     __ptext0:
   823                           	opt stack 0
   824  00080E                     _main:
   825                           	opt stack 27
   826                           
   827                           ;main.c: 31: init_tms();
   828                           
   829                           ;incstack = 0
   830  00080E  EC93  F011         	call	_init_tms	;wreg free
   831                           
   832                           ;main.c: 35: status = INIT;
   833  000812  0E00               	movlw	0
   834  000814  0100               	movlb	0	; () banked
   835  000816  6FEF               	movwf	(_status+1)& (0+255),b
   836  000818  0E01               	movlw	1
   837  00081A  6FEE               	movwf	_status& (0+255),b
   838                           
   839                           ; BSR set to: 0
   840                           ;main.c: 36: int fs = 0;
   841  00081C  0E00               	movlw	0
   842  00081E  0101               	movlb	1	; () banked
   843  000820  6F0B               	movwf	(main@fs+1)& (0+255),b
   844  000822  0E00               	movlw	0
   845  000824  6F0A               	movwf	main@fs& (0+255),b
   846                           
   847                           ; BSR set to: 1
   848                           ;main.c: 37: time[1] = 0;
   849  000826  0E00               	movlw	0
   850  000828  0100               	movlb	0	; () banked
   851  00082A  6F64               	movwf	(_time+4)& (0+255),b
   852  00082C  0E00               	movlw	0
   853  00082E  6F65               	movwf	(_time+5)& (0+255),b
   854  000830  0E00               	movlw	0
   855  000832  6F66               	movwf	(_time+6)& (0+255),b
   856  000834  0E00               	movlw	0
   857  000836  6F67               	movwf	(_time+7)& (0+255),b
   858                           
   859                           ; BSR set to: 0
   860                           ;main.c: 38: mspeed(0,0);
   861  000838  0E00               	movlw	0
   862  00083A  0100               	movlb	0	; () banked
   863  00083C  6FDA               	movwf	(mspeed@a+1)& (0+255),b
   864  00083E  0E00               	movlw	0
   865  000840  6FD9               	movwf	mspeed@a& (0+255),b
   866  000842  0E00               	movlw	0
   867  000844  0100               	movlb	0	; () banked
   868  000846  6FDC               	movwf	(mspeed@b+1)& (0+255),b
   869  000848  0E00               	movlw	0
   870  00084A  6FDB               	movwf	mspeed@b& (0+255),b
   871  00084C  EC33  F012         	call	_mspeed	;wreg free
   872  000850                     
   873                           ;main.c: 39: int faux = 0;
   874  000850  0E00               	movlw	0
   875  000852  0101               	movlb	1	; () banked
   876  000854  6F0D               	movwf	(main@faux+1)& (0+255),b
   877  000856  0E00               	movlw	0
   878  000858  6F0C               	movwf	main@faux& (0+255),b
   879  00085A                     
   880                           ;main.c: 43: EnhancedRead();
   881                           
   882                           ; BSR set to: 1
   883  00085A  EC33  F011         	call	_EnhancedRead	;wreg free
   884                           
   885                           ;main.c: 45: switch (status){
   886  00085E  D392               	goto	l50
   887  000860                     
   888                           ;main.c: 47: mspeed(0,0);
   889  000860  0E00               	movlw	0
   890  000862  0100               	movlb	0	; () banked
   891  000864  6FDA               	movwf	(mspeed@a+1)& (0+255),b
   892  000866  0E00               	movlw	0
   893  000868  6FD9               	movwf	mspeed@a& (0+255),b
   894  00086A  0E00               	movlw	0
   895  00086C  0100               	movlb	0	; () banked
   896  00086E  6FDC               	movwf	(mspeed@b+1)& (0+255),b
   897  000870  0E00               	movlw	0
   898  000872  6FDB               	movwf	mspeed@b& (0+255),b
   899  000874  EC33  F012         	call	_mspeed	;wreg free
   900                           
   901                           ;main.c: 48: if (PORTDbits.RD0 == 0){
   902  000878  B083               	btfsc	3971,0,c	;volatile
   903  00087A  D007               	goto	l52
   904                           
   905                           ;main.c: 49: PORTBbits.RB4 = 1;
   906  00087C  8881               	bsf	3969,4,c	;volatile
   907                           
   908                           ;main.c: 50: PORTDbits.RD2 = 1;
   909  00087E  8483               	bsf	3971,2,c	;volatile
   910                           
   911                           ;main.c: 51: a = 1000;
   912  000880  0E03               	movlw	3
   913  000882  0101               	movlb	1	; () banked
   914  000884  6F03               	movwf	(main@a+1)& (0+255),b
   915  000886  0EE8               	movlw	232
   916  000888  D006               	goto	L1
   917  00088A                     l52:
   918                           
   919                           ;main.c: 53: PORTBbits.RB4 = 0;
   920  00088A  9881               	bcf	3969,4,c	;volatile
   921                           
   922                           ;main.c: 54: PORTDbits.RD2 = 0;
   923  00088C  9483               	bcf	3971,2,c	;volatile
   924                           
   925                           ;main.c: 55: a = 0;
   926  00088E  0E00               	movlw	0
   927  000890  0101               	movlb	1	; () banked
   928  000892  6F03               	movwf	(main@a+1)& (0+255),b
   929  000894  0E00               	movlw	0
   930  000896                     L1:
   931  000896  6F02               	movwf	main@a& (0+255),b
   932                           
   933                           ; BSR set to: 1
   934                           ;main.c: 56: }
   935                           ;main.c: 57: if (PORTDbits.RD1 == 0){
   936                           
   937                           ; BSR set to: 1
   938  000898  B283               	btfsc	3971,1,c	;volatile
   939  00089A  D008               	goto	l54
   940                           
   941                           ; BSR set to: 1
   942                           ;main.c: 58: b = 1000;
   943  00089C  0E03               	movlw	3
   944  00089E  0101               	movlb	1	; () banked
   945  0008A0  6F05               	movwf	(main@b+1)& (0+255),b
   946  0008A2  0EE8               	movlw	232
   947  0008A4  6F04               	movwf	main@b& (0+255),b
   948                           
   949                           ; BSR set to: 1
   950                           ;main.c: 59: PORTCbits.RC1 = 1;
   951  0008A6  8282               	bsf	3970,1,c	;volatile
   952                           
   953                           ; BSR set to: 1
   954                           ;main.c: 60: PORTAbits.RA4 = 1;
   955  0008A8  8880               	bsf	3968,4,c	;volatile
   956                           
   957                           ;main.c: 61: }else{
   958  0008AA  D007               	goto	l55
   959  0008AC                     l54:
   960                           
   961                           ; BSR set to: 1
   962                           ;main.c: 62: PORTCbits.RC1 = 0;
   963  0008AC  9282               	bcf	3970,1,c	;volatile
   964                           
   965                           ;main.c: 63: PORTAbits.RA4 = 0;
   966  0008AE  9880               	bcf	3968,4,c	;volatile
   967                           
   968                           ; BSR set to: 1
   969                           ;main.c: 64: b = 0;
   970  0008B0  0E00               	movlw	0
   971  0008B2  0101               	movlb	1	; () banked
   972  0008B4  6F05               	movwf	(main@b+1)& (0+255),b
   973  0008B6  0E00               	movlw	0
   974  0008B8  6F04               	movwf	main@b& (0+255),b
   975  0008BA                     l55:
   976                           
   977                           ; BSR set to: 1
   978                           ;main.c: 65: }
   979                           ;main.c: 66: mspeed(a,b);
   980                           
   981                           ; BSR set to: 1
   982  0008BA  C102  F0D9         	movff	main@a,mspeed@a
   983  0008BE  C103  F0DA         	movff	main@a+1,mspeed@a+1
   984  0008C2  C104  F0DB         	movff	main@b,mspeed@b
   985  0008C6  C105  F0DC         	movff	main@b+1,mspeed@b+1
   986  0008CA  EC33  F012         	call	_mspeed	;wreg free
   987                           
   988                           ;main.c: 68: if (time[0] > 200 && faux == 0){
   989  0008CE  0100               	movlb	0	; () banked
   990  0008D0  BF63               	btfsc	(_time+3)& (0+255),7,b
   991  0008D2  D017               	goto	l56
   992  0008D4  0100               	movlb	0	; () banked
   993  0008D6  5163               	movf	(_time+3)& (0+255),w,b
   994  0008D8  0100               	movlb	0	; () banked
   995  0008DA  1162               	iorwf	(_time+2)& (0+255),w,b
   996  0008DC  0100               	movlb	0	; () banked
   997  0008DE  1161               	iorwf	(_time+1)& (0+255),w,b
   998  0008E0  E105               	bnz	u4310
   999  0008E2  0EC9               	movlw	201
  1000  0008E4  0100               	movlb	0	; () banked
  1001  0008E6  5D60               	subwf	_time& (0+255),w,b
  1002  0008E8  A0D8               	btfss	status,0,c
  1003  0008EA  D00B               	goto	l56
  1004  0008EC                     u4310:
  1005                           
  1006                           ; BSR set to: 0
  1007  0008EC  0101               	movlb	1	; () banked
  1008  0008EE  510C               	movf	main@faux& (0+255),w,b
  1009  0008F0  0101               	movlb	1	; () banked
  1010  0008F2  110D               	iorwf	(main@faux+1)& (0+255),w,b
  1011  0008F4  A4D8               	btfss	status,2,c
  1012  0008F6  D005               	goto	l56
  1013                           
  1014                           ; BSR set to: 1
  1015                           ;main.c: 70: faux = 1;
  1016  0008F8  0E00               	movlw	0
  1017  0008FA  0101               	movlb	1	; () banked
  1018  0008FC  6F0D               	movwf	(main@faux+1)& (0+255),b
  1019  0008FE  0E01               	movlw	1
  1020  000900  6F0C               	movwf	main@faux& (0+255),b
  1021  000902                     l56:
  1022                           
  1023                           ;main.c: 71: }
  1024                           ;main.c: 72: if (faux == 1 && time[0] > 400){
  1025                           
  1026                           ; BSR set to: 1
  1027  000902  0101               	movlb	1	; () banked
  1028  000904  050C               	decf	main@faux& (0+255),w,b
  1029  000906  0101               	movlb	1	; () banked
  1030  000908  110D               	iorwf	(main@faux+1)& (0+255),w,b
  1031  00090A  A4D8               	btfss	status,2,c
  1032  00090C  D7A6               	goto	l49
  1033                           
  1034                           ; BSR set to: 1
  1035  00090E  0100               	movlb	0	; () banked
  1036  000910  BF63               	btfsc	(_time+3)& (0+255),7,b
  1037  000912  D7A3               	goto	l49
  1038  000914  0100               	movlb	0	; () banked
  1039  000916  5163               	movf	(_time+3)& (0+255),w,b
  1040  000918  0100               	movlb	0	; () banked
  1041  00091A  1162               	iorwf	(_time+2)& (0+255),w,b
  1042  00091C  E108               	bnz	u4340
  1043  00091E  0E91               	movlw	145
  1044  000920  0100               	movlb	0	; () banked
  1045  000922  5D60               	subwf	_time& (0+255),w,b
  1046  000924  0E01               	movlw	1
  1047  000926  0100               	movlb	0	; () banked
  1048  000928  5961               	subwfb	(_time+1)& (0+255),w,b
  1049  00092A  A0D8               	btfss	status,0,c
  1050  00092C  D796               	goto	l49
  1051  00092E                     u4340:
  1052                           
  1053                           ; BSR set to: 0
  1054                           ;main.c: 74: time[0] = 0;
  1055  00092E  0E00               	movlw	0
  1056  000930  0100               	movlb	0	; () banked
  1057  000932  6F60               	movwf	_time& (0+255),b
  1058  000934  0E00               	movlw	0
  1059  000936  6F61               	movwf	(_time+1)& (0+255),b
  1060  000938  0E00               	movlw	0
  1061  00093A  6F62               	movwf	(_time+2)& (0+255),b
  1062  00093C  0E00               	movlw	0
  1063  00093E  6F63               	movwf	(_time+3)& (0+255),b
  1064  000940  D787               	goto	L12
  1065  000942                     
  1066                           ;main.c: 81: mspeed(0,0);
  1067                           
  1068                           ; BSR set to: 1
  1069  000942  0E00               	movlw	0
  1070  000944  0100               	movlb	0	; () banked
  1071  000946  6FDA               	movwf	(mspeed@a+1)& (0+255),b
  1072  000948  0E00               	movlw	0
  1073  00094A  6FD9               	movwf	mspeed@a& (0+255),b
  1074  00094C  0E00               	movlw	0
  1075  00094E  0100               	movlb	0	; () banked
  1076  000950  6FDC               	movwf	(mspeed@b+1)& (0+255),b
  1077  000952  0E00               	movlw	0
  1078  000954  6FDB               	movwf	mspeed@b& (0+255),b
  1079  000956  EC33  F012         	call	_mspeed	;wreg free
  1080                           
  1081                           ;main.c: 82: if (fs == 0 && time[1] > 2000){
  1082  00095A  0101               	movlb	1	; () banked
  1083  00095C  510A               	movf	main@fs& (0+255),w,b
  1084  00095E  0101               	movlb	1	; () banked
  1085  000960  110B               	iorwf	(main@fs+1)& (0+255),w,b
  1086  000962  A4D8               	btfss	status,2,c
  1087  000964  D015               	goto	l60
  1088                           
  1089                           ; BSR set to: 1
  1090  000966  0100               	movlb	0	; () banked
  1091  000968  BF67               	btfsc	(_time+7)& (0+255),7,b
  1092  00096A  D012               	goto	l60
  1093  00096C  0100               	movlb	0	; () banked
  1094  00096E  5167               	movf	(_time+7)& (0+255),w,b
  1095  000970  0100               	movlb	0	; () banked
  1096  000972  1166               	iorwf	(_time+6)& (0+255),w,b
  1097  000974  E108               	bnz	u4360
  1098  000976  0ED1               	movlw	209
  1099  000978  0100               	movlb	0	; () banked
  1100  00097A  5D64               	subwf	(_time+4)& (0+255),w,b
  1101  00097C  0E07               	movlw	7
  1102  00097E  0100               	movlb	0	; () banked
  1103  000980  5965               	subwfb	(_time+5)& (0+255),w,b
  1104  000982  A0D8               	btfss	status,0,c
  1105  000984  D005               	goto	l60
  1106  000986                     u4360:
  1107                           
  1108                           ; BSR set to: 0
  1109                           ;main.c: 84: fs = 1;
  1110  000986  0E00               	movlw	0
  1111  000988  0101               	movlb	1	; () banked
  1112  00098A  6F0B               	movwf	(main@fs+1)& (0+255),b
  1113  00098C  0E01               	movlw	1
  1114  00098E  6F0A               	movwf	main@fs& (0+255),b
  1115  000990                     l60:
  1116                           
  1117                           ;main.c: 85: }
  1118                           ;main.c: 86: if (fs == 1 && time[1] > 4000){
  1119                           
  1120                           ; BSR set to: 1
  1121  000990  0101               	movlb	1	; () banked
  1122  000992  050A               	decf	main@fs& (0+255),w,b
  1123  000994  0101               	movlb	1	; () banked
  1124  000996  110B               	iorwf	(main@fs+1)& (0+255),w,b
  1125  000998  A4D8               	btfss	status,2,c
  1126  00099A  D015               	goto	l61
  1127                           
  1128                           ; BSR set to: 1
  1129  00099C  0100               	movlb	0	; () banked
  1130  00099E  BF67               	btfsc	(_time+7)& (0+255),7,b
  1131  0009A0  D012               	goto	l61
  1132  0009A2  0100               	movlb	0	; () banked
  1133  0009A4  5167               	movf	(_time+7)& (0+255),w,b
  1134  0009A6  0100               	movlb	0	; () banked
  1135  0009A8  1166               	iorwf	(_time+6)& (0+255),w,b
  1136  0009AA  E108               	bnz	u4380
  1137  0009AC  0EA1               	movlw	161
  1138  0009AE  0100               	movlb	0	; () banked
  1139  0009B0  5D64               	subwf	(_time+4)& (0+255),w,b
  1140  0009B2  0E0F               	movlw	15
  1141  0009B4  0100               	movlb	0	; () banked
  1142  0009B6  5965               	subwfb	(_time+5)& (0+255),w,b
  1143  0009B8  A0D8               	btfss	status,0,c
  1144  0009BA  D005               	goto	l61
  1145  0009BC                     u4380:
  1146                           
  1147                           ; BSR set to: 0
  1148                           ;main.c: 88: fs = 2;
  1149  0009BC  0E00               	movlw	0
  1150  0009BE  0101               	movlb	1	; () banked
  1151  0009C0  6F0B               	movwf	(main@fs+1)& (0+255),b
  1152  0009C2  0E02               	movlw	2
  1153  0009C4  6F0A               	movwf	main@fs& (0+255),b
  1154  0009C6                     l61:
  1155                           
  1156                           ;main.c: 89: }
  1157                           ;main.c: 90: if (time[0] < 1000) setA();
  1158                           
  1159                           ; BSR set to: 1
  1160  0009C6  0100               	movlb	0	; () banked
  1161  0009C8  BF63               	btfsc	(_time+3)& (0+255),7,b
  1162  0009CA  D00C               	goto	u4390
  1163  0009CC  0100               	movlb	0	; () banked
  1164  0009CE  5163               	movf	(_time+3)& (0+255),w,b
  1165  0009D0  0100               	movlb	0	; () banked
  1166  0009D2  1162               	iorwf	(_time+2)& (0+255),w,b
  1167  0009D4  E109               	bnz	l3635
  1168  0009D6  0EE8               	movlw	232
  1169  0009D8  0100               	movlb	0	; () banked
  1170  0009DA  5D60               	subwf	_time& (0+255),w,b
  1171  0009DC  0E03               	movlw	3
  1172  0009DE  0100               	movlb	0	; () banked
  1173  0009E0  5961               	subwfb	(_time+1)& (0+255),w,b
  1174  0009E2  A0D8               	btfss	status,0,c
  1175  0009E4                     u4390:
  1176                           
  1177                           ; BSR set to: 0
  1178  0009E4  EC5F  F012         	call	_setA	;wreg free
  1179  0009E8                     l3635:
  1180                           
  1181                           ;main.c: 91: if (time[0] > 1000 && time[0] < 2000) setB();
  1182  0009E8  0100               	movlb	0	; () banked
  1183  0009EA  BF63               	btfsc	(_time+3)& (0+255),7,b
  1184  0009EC  D01E               	goto	l63
  1185  0009EE  0100               	movlb	0	; () banked
  1186  0009F0  5163               	movf	(_time+3)& (0+255),w,b
  1187  0009F2  0100               	movlb	0	; () banked
  1188  0009F4  1162               	iorwf	(_time+2)& (0+255),w,b
  1189  0009F6  E108               	bnz	u4400
  1190  0009F8  0EE9               	movlw	233
  1191  0009FA  0100               	movlb	0	; () banked
  1192  0009FC  5D60               	subwf	_time& (0+255),w,b
  1193  0009FE  0E03               	movlw	3
  1194  000A00  0100               	movlb	0	; () banked
  1195  000A02  5961               	subwfb	(_time+1)& (0+255),w,b
  1196  000A04  A0D8               	btfss	status,0,c
  1197  000A06  D011               	goto	l63
  1198  000A08                     u4400:
  1199                           
  1200                           ; BSR set to: 0
  1201  000A08  0100               	movlb	0	; () banked
  1202  000A0A  BF63               	btfsc	(_time+3)& (0+255),7,b
  1203  000A0C  D00C               	goto	u4410
  1204  000A0E  0100               	movlb	0	; () banked
  1205  000A10  5163               	movf	(_time+3)& (0+255),w,b
  1206  000A12  0100               	movlb	0	; () banked
  1207  000A14  1162               	iorwf	(_time+2)& (0+255),w,b
  1208  000A16  E109               	bnz	l3641
  1209  000A18  0ED0               	movlw	208
  1210  000A1A  0100               	movlb	0	; () banked
  1211  000A1C  5D60               	subwf	_time& (0+255),w,b
  1212  000A1E  0E07               	movlw	7
  1213  000A20  0100               	movlb	0	; () banked
  1214  000A22  5961               	subwfb	(_time+1)& (0+255),w,b
  1215  000A24  A0D8               	btfss	status,0,c
  1216  000A26                     u4410:
  1217                           
  1218                           ; BSR set to: 0
  1219  000A26  EC5A  F012         	call	_setB	;wreg free
  1220  000A2A                     l63:
  1221  000A2A                     l3641:
  1222                           
  1223                           ;main.c: 92: if (time[0] > 2000 && time[0] < 3000) setC();
  1224  000A2A  0100               	movlb	0	; () banked
  1225  000A2C  BF63               	btfsc	(_time+3)& (0+255),7,b
  1226  000A2E  D01E               	goto	l64
  1227  000A30  0100               	movlb	0	; () banked
  1228  000A32  5163               	movf	(_time+3)& (0+255),w,b
  1229  000A34  0100               	movlb	0	; () banked
  1230  000A36  1162               	iorwf	(_time+2)& (0+255),w,b
  1231  000A38  E108               	bnz	u4420
  1232  000A3A  0ED1               	movlw	209
  1233  000A3C  0100               	movlb	0	; () banked
  1234  000A3E  5D60               	subwf	_time& (0+255),w,b
  1235  000A40  0E07               	movlw	7
  1236  000A42  0100               	movlb	0	; () banked
  1237  000A44  5961               	subwfb	(_time+1)& (0+255),w,b
  1238  000A46  A0D8               	btfss	status,0,c
  1239  000A48  D011               	goto	l64
  1240  000A4A                     u4420:
  1241                           
  1242                           ; BSR set to: 0
  1243  000A4A  0100               	movlb	0	; () banked
  1244  000A4C  BF63               	btfsc	(_time+3)& (0+255),7,b
  1245  000A4E  D00C               	goto	u4430
  1246  000A50  0100               	movlb	0	; () banked
  1247  000A52  5163               	movf	(_time+3)& (0+255),w,b
  1248  000A54  0100               	movlb	0	; () banked
  1249  000A56  1162               	iorwf	(_time+2)& (0+255),w,b
  1250  000A58  E109               	bnz	l3647
  1251  000A5A  0EB8               	movlw	184
  1252  000A5C  0100               	movlb	0	; () banked
  1253  000A5E  5D60               	subwf	_time& (0+255),w,b
  1254  000A60  0E0B               	movlw	11
  1255  000A62  0100               	movlb	0	; () banked
  1256  000A64  5961               	subwfb	(_time+1)& (0+255),w,b
  1257  000A66  A0D8               	btfss	status,0,c
  1258  000A68                     u4430:
  1259                           
  1260                           ; BSR set to: 0
  1261  000A68  EC55  F012         	call	_setC	;wreg free
  1262  000A6C                     l64:
  1263  000A6C                     l3647:
  1264                           
  1265                           ;main.c: 93: if (time[0] > 3000 && time[0] < 4000) setD();
  1266  000A6C  0100               	movlb	0	; () banked
  1267  000A6E  BF63               	btfsc	(_time+3)& (0+255),7,b
  1268  000A70  D01E               	goto	l65
  1269  000A72  0100               	movlb	0	; () banked
  1270  000A74  5163               	movf	(_time+3)& (0+255),w,b
  1271  000A76  0100               	movlb	0	; () banked
  1272  000A78  1162               	iorwf	(_time+2)& (0+255),w,b
  1273  000A7A  E108               	bnz	u4440
  1274  000A7C  0EB9               	movlw	185
  1275  000A7E  0100               	movlb	0	; () banked
  1276  000A80  5D60               	subwf	_time& (0+255),w,b
  1277  000A82  0E0B               	movlw	11
  1278  000A84  0100               	movlb	0	; () banked
  1279  000A86  5961               	subwfb	(_time+1)& (0+255),w,b
  1280  000A88  A0D8               	btfss	status,0,c
  1281  000A8A  D011               	goto	l65
  1282  000A8C                     u4440:
  1283                           
  1284                           ; BSR set to: 0
  1285  000A8C  0100               	movlb	0	; () banked
  1286  000A8E  BF63               	btfsc	(_time+3)& (0+255),7,b
  1287  000A90  D00C               	goto	u4450
  1288  000A92  0100               	movlb	0	; () banked
  1289  000A94  5163               	movf	(_time+3)& (0+255),w,b
  1290  000A96  0100               	movlb	0	; () banked
  1291  000A98  1162               	iorwf	(_time+2)& (0+255),w,b
  1292  000A9A  E109               	bnz	l3653
  1293  000A9C  0EA0               	movlw	160
  1294  000A9E  0100               	movlb	0	; () banked
  1295  000AA0  5D60               	subwf	_time& (0+255),w,b
  1296  000AA2  0E0F               	movlw	15
  1297  000AA4  0100               	movlb	0	; () banked
  1298  000AA6  5961               	subwfb	(_time+1)& (0+255),w,b
  1299  000AA8  A0D8               	btfss	status,0,c
  1300  000AAA                     u4450:
  1301                           
  1302                           ; BSR set to: 0
  1303  000AAA  EC50  F012         	call	_setD	;wreg free
  1304  000AAE                     l65:
  1305  000AAE                     l3653:
  1306                           
  1307                           ;main.c: 94: if (time[0] > 4000) time[0] = 0;
  1308  000AAE  0100               	movlb	0	; () banked
  1309  000AB0  BF63               	btfsc	(_time+3)& (0+255),7,b
  1310  000AB2  D016               	goto	l66
  1311  000AB4  0100               	movlb	0	; () banked
  1312  000AB6  5163               	movf	(_time+3)& (0+255),w,b
  1313  000AB8  0100               	movlb	0	; () banked
  1314  000ABA  1162               	iorwf	(_time+2)& (0+255),w,b
  1315  000ABC  E108               	bnz	u4460
  1316  000ABE  0EA1               	movlw	161
  1317  000AC0  0100               	movlb	0	; () banked
  1318  000AC2  5D60               	subwf	_time& (0+255),w,b
  1319  000AC4  0E0F               	movlw	15
  1320  000AC6  0100               	movlb	0	; () banked
  1321  000AC8  5961               	subwfb	(_time+1)& (0+255),w,b
  1322  000ACA  A0D8               	btfss	status,0,c
  1323  000ACC  D009               	goto	l66
  1324  000ACE                     u4460:
  1325                           
  1326                           ; BSR set to: 0
  1327  000ACE  0E00               	movlw	0
  1328  000AD0  0100               	movlb	0	; () banked
  1329  000AD2  6F60               	movwf	_time& (0+255),b
  1330  000AD4  0E00               	movlw	0
  1331  000AD6  6F61               	movwf	(_time+1)& (0+255),b
  1332  000AD8  0E00               	movlw	0
  1333  000ADA  6F62               	movwf	(_time+2)& (0+255),b
  1334  000ADC  0E00               	movlw	0
  1335  000ADE  6F63               	movwf	(_time+3)& (0+255),b
  1336  000AE0                     l66:
  1337                           
  1338                           ; BSR set to: 0
  1339                           ;main.c: 96: if (PORTDbits.RD0 == 0){
  1340                           
  1341                           ; BSR set to: 0
  1342  000AE0  B083               	btfsc	3971,0,c	;volatile
  1343  000AE2  D6BB               	goto	l49
  1344                           
  1345                           ; BSR set to: 0
  1346                           ;main.c: 98: status = CAL;
  1347  000AE4  0E00               	movlw	0
  1348  000AE6  0100               	movlb	0	; () banked
  1349  000AE8  6FEF               	movwf	(_status+1)& (0+255),b
  1350  000AEA  0E02               	movlw	2
  1351  000AEC  6FEE               	movwf	_status& (0+255),b
  1352                           
  1353                           ;main.c: 99: time[0] = 0;
  1354  000AEE  0E00               	movlw	0
  1355  000AF0  0100               	movlb	0	; () banked
  1356  000AF2  6F60               	movwf	_time& (0+255),b
  1357  000AF4  0E00               	movlw	0
  1358  000AF6  6F61               	movwf	(_time+1)& (0+255),b
  1359  000AF8  0E00               	movlw	0
  1360  000AFA  6F62               	movwf	(_time+2)& (0+255),b
  1361  000AFC  0E00               	movlw	0
  1362  000AFE  6F63               	movwf	(_time+3)& (0+255),b
  1363                           
  1364                           ; BSR set to: 0
  1365                           ;main.c: 100: init_cal();
  1366  000B00  ECFA  F010         	call	_init_cal	;wreg free
  1367                           
  1368                           ;main.c: 101: }
  1369                           ;main.c: 102: break;
  1370  000B04  D6AA               	goto	l49
  1371  000B06                     
  1372                           ;main.c: 104: mspeed(0,0);
  1373  000B06  0E00               	movlw	0
  1374  000B08  0100               	movlb	0	; () banked
  1375  000B0A  6FDA               	movwf	(mspeed@a+1)& (0+255),b
  1376  000B0C  0E00               	movlw	0
  1377  000B0E  6FD9               	movwf	mspeed@a& (0+255),b
  1378  000B10  0E00               	movlw	0
  1379  000B12  0100               	movlb	0	; () banked
  1380  000B14  6FDC               	movwf	(mspeed@b+1)& (0+255),b
  1381  000B16  0E00               	movlw	0
  1382  000B18  6FDB               	movwf	mspeed@b& (0+255),b
  1383  000B1A  EC33  F012         	call	_mspeed	;wreg free
  1384                           
  1385                           ;main.c: 105: PORTBbits.RB4 = time[0] % 1000 > 500;
  1386  000B1E  C060  F015         	movff	_time,___almod@dividend
  1387  000B22  C061  F016         	movff	_time+1,___almod@dividend+1
  1388  000B26  C062  F017         	movff	_time+2,___almod@dividend+2
  1389  000B2A  C063  F018         	movff	_time+3,___almod@dividend+3
  1390  000B2E  0EE8               	movlw	232
  1391  000B30  6E19               	movwf	___almod@divisor,c
  1392  000B32  0E03               	movlw	3
  1393  000B34  6E1A               	movwf	___almod@divisor+1,c
  1394  000B36  0E00               	movlw	0
  1395  000B38  6E1B               	movwf	___almod@divisor+2,c
  1396  000B3A  0E00               	movlw	0
  1397  000B3C  6E1C               	movwf	___almod@divisor+3,c
  1398  000B3E  EC43  F00F         	call	___almod	;wreg free
  1399  000B42  BE18               	btfsc	?___almod+3,7,c
  1400  000B44  D00C               	goto	u4480
  1401  000B46  5018               	movf	?___almod+3,w,c
  1402  000B48  1017               	iorwf	?___almod+2,w,c
  1403  000B4A  E106               	bnz	u4481
  1404  000B4C  0EF5               	movlw	245
  1405  000B4E  5C15               	subwf	?___almod,w,c
  1406  000B50  0E01               	movlw	1
  1407  000B52  5816               	subwfb	?___almod+1,w,c
  1408  000B54  A0D8               	btfss	status,0,c
  1409  000B56  D003               	goto	u4480
  1410  000B58                     u4481:
  1411  000B58  6A36               	clrf	??_main& (0+255),c
  1412  000B5A  2A36               	incf	??_main& (0+255),f,c
  1413  000B5C  D001               	goto	u4498
  1414  000B5E                     u4480:
  1415  000B5E  6A36               	clrf	??_main& (0+255),c
  1416  000B60                     u4498:
  1417  000B60  3A36               	swapf	??_main,f,c
  1418  000B62  5081               	movf	3969,w,c	;volatile
  1419  000B64  1836               	xorwf	??_main,w,c
  1420  000B66  0BEF               	andlw	-17
  1421  000B68  1836               	xorwf	??_main,w,c
  1422  000B6A  6E81               	movwf	3969,c	;volatile
  1423                           
  1424                           ;main.c: 106: PORTCbits.RC1 = 0;
  1425  000B6C  9282               	bcf	3970,1,c	;volatile
  1426                           
  1427                           ;main.c: 107: PORTDbits.RD2 = 0;
  1428  000B6E  9483               	bcf	3971,2,c	;volatile
  1429                           
  1430                           ;main.c: 108: PORTAbits.RA4 = 0;
  1431  000B70  9880               	bcf	3968,4,c	;volatile
  1432                           
  1433                           ;main.c: 109: read_cal();
  1434  000B72  ECE1  F007         	call	_read_cal	;wreg free
  1435                           
  1436                           ;main.c: 111: if (PORTDbits.RD1 == 0){
  1437  000B76  B283               	btfsc	3971,1,c	;volatile
  1438  000B78  D670               	goto	l49
  1439                           
  1440                           ;main.c: 114: int i;
  1441                           ;main.c: 115: time[2] = 0;
  1442  000B7A  0E00               	movlw	0
  1443  000B7C  0100               	movlb	0	; () banked
  1444  000B7E  6F68               	movwf	(_time+8)& (0+255),b
  1445  000B80  0E00               	movlw	0
  1446  000B82  6F69               	movwf	(_time+9)& (0+255),b
  1447  000B84  0E00               	movlw	0
  1448  000B86  6F6A               	movwf	(_time+10)& (0+255),b
  1449  000B88  0E00               	movlw	0
  1450  000B8A  6F6B               	movwf	(_time+11)& (0+255),b
  1451                           
  1452                           ;main.c: 116: for (i = 0;i < 5;i++){
  1453  000B8C  0E00               	movlw	0
  1454  000B8E  0101               	movlb	1	; () banked
  1455  000B90  6F07               	movwf	(main@i+1)& (0+255),b
  1456  000B92  0E00               	movlw	0
  1457  000B94  6F06               	movwf	main@i& (0+255),b
  1458                           
  1459                           ; BSR set to: 1
  1460  000B96  0101               	movlb	1	; () banked
  1461  000B98  BF07               	btfsc	(main@i+1)& (0+255),7,b
  1462  000B9A  D008               	goto	l70
  1463  000B9C  0101               	movlb	1	; () banked
  1464  000B9E  5107               	movf	(main@i+1)& (0+255),w,b
  1465  000BA0  E12B               	bnz	l3689
  1466  000BA2  0E05               	movlw	5
  1467  000BA4  0101               	movlb	1	; () banked
  1468  000BA6  5D06               	subwf	main@i& (0+255),w,b
  1469  000BA8  B0D8               	btfsc	status,0,c
  1470  000BAA  D026               	goto	u4530
  1471  000BAC                     l70:
  1472                           
  1473                           ; BSR set to: 1
  1474                           
  1475                           ; BSR set to: 1
  1476                           
  1477                           ; BSR set to: 1
  1478                           ;main.c: 118: while (time[2] < 100);
  1479  000BAC  0100               	movlb	0	; () banked
  1480  000BAE  BF6B               	btfsc	(_time+11)& (0+255),7,b
  1481  000BB0  D7FD               	goto	l70
  1482  000BB2  0100               	movlb	0	; () banked
  1483  000BB4  516B               	movf	(_time+11)& (0+255),w,b
  1484  000BB6  0100               	movlb	0	; () banked
  1485  000BB8  116A               	iorwf	(_time+10)& (0+255),w,b
  1486  000BBA  0100               	movlb	0	; () banked
  1487  000BBC  1169               	iorwf	(_time+9)& (0+255),w,b
  1488  000BBE  E105               	bnz	l3683
  1489  000BC0  0E64               	movlw	100
  1490  000BC2  0100               	movlb	0	; () banked
  1491  000BC4  5D68               	subwf	(_time+8)& (0+255),w,b
  1492  000BC6  A0D8               	btfss	status,0,c
  1493  000BC8  D7F1               	goto	l70
  1494  000BCA                     l3683:
  1495                           
  1496                           ; BSR set to: 0
  1497                           ;main.c: 119: time[2] = 0;
  1498  000BCA  0E00               	movlw	0
  1499  000BCC  0100               	movlb	0	; () banked
  1500  000BCE  6F68               	movwf	(_time+8)& (0+255),b
  1501  000BD0  0E00               	movlw	0
  1502  000BD2  6F69               	movwf	(_time+9)& (0+255),b
  1503  000BD4  0E00               	movlw	0
  1504  000BD6  6F6A               	movwf	(_time+10)& (0+255),b
  1505  000BD8  0E00               	movlw	0
  1506  000BDA  6F6B               	movwf	(_time+11)& (0+255),b
  1507                           
  1508                           ; BSR set to: 0
  1509  000BDC  0101               	movlb	1	; () banked
  1510  000BDE  4B06               	infsnz	main@i& (0+255),f,b
  1511  000BE0  2B07               	incf	(main@i+1)& (0+255),f,b
  1512                           
  1513                           ; BSR set to: 1
  1514  000BE2  0101               	movlb	1	; () banked
  1515  000BE4  BF07               	btfsc	(main@i+1)& (0+255),7,b
  1516  000BE6  D7E2               	goto	l70
  1517  000BE8  0101               	movlb	1	; () banked
  1518  000BEA  5107               	movf	(main@i+1)& (0+255),w,b
  1519  000BEC  E105               	bnz	l3689
  1520  000BEE  0E05               	movlw	5
  1521  000BF0  0101               	movlb	1	; () banked
  1522  000BF2  5D06               	subwf	main@i& (0+255),w,b
  1523  000BF4  A0D8               	btfss	status,0,c
  1524  000BF6  D7DA               	goto	l70
  1525  000BF8                     u4530:
  1526  000BF8                     l3689:
  1527                           
  1528                           ; BSR set to: 1
  1529                           ;main.c: 120: }
  1530                           ;main.c: 121: status = WAIT_RELEASE_FOR_READY;
  1531  000BF8  0E00               	movlw	0
  1532  000BFA  0100               	movlb	0	; () banked
  1533  000BFC  6FEF               	movwf	(_status+1)& (0+255),b
  1534  000BFE  0E06               	movlw	6
  1535  000C00  6FEE               	movwf	_status& (0+255),b
  1536                           
  1537                           ;main.c: 122: time[0] = 0;
  1538  000C02  0E00               	movlw	0
  1539  000C04  0100               	movlb	0	; () banked
  1540  000C06  6F60               	movwf	_time& (0+255),b
  1541  000C08  0E00               	movlw	0
  1542  000C0A  6F61               	movwf	(_time+1)& (0+255),b
  1543  000C0C  0E00               	movlw	0
  1544  000C0E  6F62               	movwf	(_time+2)& (0+255),b
  1545  000C10  0E00               	movlw	0
  1546  000C12  6F63               	movwf	(_time+3)& (0+255),b
  1547                           
  1548                           ; BSR set to: 0
  1549                           ;main.c: 123: }
  1550                           ;main.c: 124: break;
  1551  000C14  D622               	goto	l49
  1552  000C16                     l75:
  1553                           
  1554                           ;main.c: 126: if (PORTDbits.RD1 == 1){
  1555  000C16  A283               	btfss	3971,1,c	;volatile
  1556  000C18  D620               	goto	l49
  1557                           
  1558                           ;main.c: 127: status = READY;
  1559  000C1A  0E00               	movlw	0
  1560  000C1C  0100               	movlb	0	; () banked
  1561  000C1E  6FEF               	movwf	(_status+1)& (0+255),b
  1562  000C20  0E03               	movlw	3
  1563  000C22  6FEE               	movwf	_status& (0+255),b
  1564                           
  1565                           ; BSR set to: 0
  1566                           ;main.c: 128: }
  1567                           ;main.c: 129: break;
  1568  000C24  D61A               	goto	l49
  1569  000C26                     
  1570                           ;main.c: 131: mspeed(0,0);
  1571                           
  1572                           ; BSR set to: 0
  1573  000C26  0E00               	movlw	0
  1574  000C28  0100               	movlb	0	; () banked
  1575  000C2A  6FDA               	movwf	(mspeed@a+1)& (0+255),b
  1576  000C2C  0E00               	movlw	0
  1577  000C2E  6FD9               	movwf	mspeed@a& (0+255),b
  1578  000C30  0E00               	movlw	0
  1579  000C32  0100               	movlb	0	; () banked
  1580  000C34  6FDC               	movwf	(mspeed@b+1)& (0+255),b
  1581  000C36  0E00               	movlw	0
  1582  000C38  6FDB               	movwf	mspeed@b& (0+255),b
  1583  000C3A  EC33  F012         	call	_mspeed	;wreg free
  1584                           
  1585                           ;main.c: 132: PORTBbits.RB4 = 0;
  1586  000C3E  9881               	bcf	3969,4,c	;volatile
  1587                           
  1588                           ;main.c: 133: PORTCbits.RC1 = 1;
  1589  000C40  8282               	bsf	3970,1,c	;volatile
  1590                           
  1591                           ;main.c: 134: PORTDbits.RD2 = 0;
  1592  000C42  9483               	bcf	3971,2,c	;volatile
  1593                           
  1594                           ;main.c: 135: PORTAbits.RA4 = 0;
  1595  000C44  9880               	bcf	3968,4,c	;volatile
  1596                           
  1597                           ;main.c: 136: line_cal();
  1598  000C46  EC32  F00A         	call	_line_cal	;wreg free
  1599                           
  1600                           ;main.c: 137: if (time[0] > 1000){
  1601  000C4A  0100               	movlb	0	; () banked
  1602  000C4C  BF63               	btfsc	(_time+3)& (0+255),7,b
  1603  000C4E  D02A               	goto	l78
  1604  000C50  0100               	movlb	0	; () banked
  1605  000C52  5163               	movf	(_time+3)& (0+255),w,b
  1606  000C54  0100               	movlb	0	; () banked
  1607  000C56  1162               	iorwf	(_time+2)& (0+255),w,b
  1608  000C58  E108               	bnz	u4550
  1609  000C5A  0EE9               	movlw	233
  1610  000C5C  0100               	movlb	0	; () banked
  1611  000C5E  5D60               	subwf	_time& (0+255),w,b
  1612  000C60  0E03               	movlw	3
  1613  000C62  0100               	movlb	0	; () banked
  1614  000C64  5961               	subwfb	(_time+1)& (0+255),w,b
  1615  000C66  A0D8               	btfss	status,0,c
  1616  000C68  D01D               	goto	l78
  1617  000C6A                     u4550:
  1618                           
  1619                           ; BSR set to: 0
  1620                           ;main.c: 139: int i;
  1621                           ;main.c: 140: for (i = 0;i < 5;i++){
  1622  000C6A  0E00               	movlw	0
  1623  000C6C  0101               	movlb	1	; () banked
  1624  000C6E  6F09               	movwf	(main@i_343+1)& (0+255),b
  1625  000C70  0E00               	movlw	0
  1626  000C72  6F08               	movwf	main@i_343& (0+255),b
  1627  000C74                     l3709:
  1628                           
  1629                           ; BSR set to: 1
  1630  000C74  0101               	movlb	1	; () banked
  1631  000C76  BF09               	btfsc	(main@i_343+1)& (0+255),7,b
  1632  000C78  D008               	goto	l79
  1633  000C7A  0101               	movlb	1	; () banked
  1634  000C7C  5109               	movf	(main@i_343+1)& (0+255),w,b
  1635  000C7E  E109               	bnz	l3717
  1636  000C80  0E05               	movlw	5
  1637  000C82  0101               	movlb	1	; () banked
  1638  000C84  5D08               	subwf	main@i_343& (0+255),w,b
  1639  000C86  B0D8               	btfsc	status,0,c
  1640  000C88  D004               	goto	u4570
  1641  000C8A                     l79:
  1642                           
  1643                           ; BSR set to: 1
  1644                           
  1645                           ; BSR set to: 1
  1646  000C8A  0101               	movlb	1	; () banked
  1647  000C8C  4B08               	infsnz	main@i_343& (0+255),f,b
  1648  000C8E  2B09               	incf	(main@i_343+1)& (0+255),f,b
  1649  000C90  D7F1               	goto	l3709
  1650  000C92                     u4570:
  1651  000C92                     l3717:
  1652                           
  1653                           ; BSR set to: 1
  1654                           ;main.c: 142: }
  1655                           ;main.c: 143: time[0] = 0;
  1656  000C92  0E00               	movlw	0
  1657  000C94  0100               	movlb	0	; () banked
  1658  000C96  6F60               	movwf	_time& (0+255),b
  1659  000C98  0E00               	movlw	0
  1660  000C9A  6F61               	movwf	(_time+1)& (0+255),b
  1661  000C9C  0E00               	movlw	0
  1662  000C9E  6F62               	movwf	(_time+2)& (0+255),b
  1663  000CA0  0E00               	movlw	0
  1664  000CA2  6F63               	movwf	(_time+3)& (0+255),b
  1665  000CA4                     l78:
  1666                           
  1667                           ; BSR set to: 0
  1668                           ;main.c: 144: }
  1669                           ;main.c: 145: if (PORTDbits.RD0 == 0){
  1670                           
  1671                           ; BSR set to: 0
  1672  000CA4  B083               	btfsc	3971,0,c	;volatile
  1673  000CA6  D013               	goto	l81
  1674                           
  1675                           ; BSR set to: 0
  1676                           ;main.c: 147: status = WAIT_RELEASE;
  1677  000CA8  0E00               	movlw	0
  1678  000CAA  0100               	movlb	0	; () banked
  1679  000CAC  6FEF               	movwf	(_status+1)& (0+255),b
  1680  000CAE  0E05               	movlw	5
  1681  000CB0  6FEE               	movwf	_status& (0+255),b
  1682                           
  1683                           ;main.c: 148: time[3] = 0;
  1684  000CB2  0E00               	movlw	0
  1685  000CB4  0100               	movlb	0	; () banked
  1686  000CB6  6F6C               	movwf	(_time+12)& (0+255),b
  1687  000CB8  0E00               	movlw	0
  1688  000CBA  6F6D               	movwf	(_time+13)& (0+255),b
  1689  000CBC  0E00               	movlw	0
  1690  000CBE  6F6E               	movwf	(_time+14)& (0+255),b
  1691  000CC0  0E00               	movlw	0
  1692  000CC2  6F6F               	movwf	(_time+15)& (0+255),b
  1693                           
  1694                           ;main.c: 149: mode = FAST;
  1695  000CC4  0E00               	movlw	0
  1696  000CC6  0100               	movlb	0	; () banked
  1697  000CC8  6F89               	movwf	(_mode+1)& (0+255),b
  1698  000CCA  0E01               	movlw	1
  1699  000CCC  D014               	goto	L2
  1700  000CCE                     l81:
  1701                           
  1702                           ; BSR set to: 0
  1703  000CCE  B283               	btfsc	3971,1,c	;volatile
  1704  000CD0  D5C4               	goto	l49
  1705                           
  1706                           ; BSR set to: 0
  1707                           ;main.c: 151: status = WAIT_RELEASE;
  1708  000CD2  0E00               	movlw	0
  1709  000CD4  0100               	movlb	0	; () banked
  1710  000CD6  6FEF               	movwf	(_status+1)& (0+255),b
  1711  000CD8  0E05               	movlw	5
  1712  000CDA  6FEE               	movwf	_status& (0+255),b
  1713                           
  1714                           ;main.c: 152: time[3] = 0;
  1715  000CDC  0E00               	movlw	0
  1716  000CDE  0100               	movlb	0	; () banked
  1717  000CE0  6F6C               	movwf	(_time+12)& (0+255),b
  1718  000CE2  0E00               	movlw	0
  1719  000CE4  6F6D               	movwf	(_time+13)& (0+255),b
  1720  000CE6  0E00               	movlw	0
  1721  000CE8  6F6E               	movwf	(_time+14)& (0+255),b
  1722  000CEA  0E00               	movlw	0
  1723  000CEC  6F6F               	movwf	(_time+15)& (0+255),b
  1724                           
  1725                           ;main.c: 153: mode = SLOW;
  1726  000CEE  0E00               	movlw	0
  1727  000CF0  0100               	movlb	0	; () banked
  1728  000CF2  6F89               	movwf	(_mode+1)& (0+255),b
  1729  000CF4  0E00               	movlw	0
  1730  000CF6                     L2:
  1731  000CF6  6F88               	movwf	_mode& (0+255),b
  1732                           
  1733                           ; BSR set to: 0
  1734                           ;main.c: 154: }
  1735                           ;main.c: 156: break;
  1736                           
  1737                           ; BSR set to: 0
  1738  000CF8  D5B0               	goto	l49
  1739  000CFA                     l84:
  1740                           
  1741                           ;main.c: 158: PORTBbits.RB4 = 1;
  1742  000CFA  8881               	bsf	3969,4,c	;volatile
  1743                           
  1744                           ;main.c: 159: PORTCbits.RC1 = 1;
  1745  000CFC  8282               	bsf	3970,1,c	;volatile
  1746                           
  1747                           ;main.c: 160: PORTDbits.RD2 = 1;
  1748  000CFE  8483               	bsf	3971,2,c	;volatile
  1749                           
  1750                           ;main.c: 161: PORTAbits.RA4 = 1;
  1751  000D00  8880               	bsf	3968,4,c	;volatile
  1752                           
  1753                           ;main.c: 162: if (PORTDbits.RD0 == 1 && PORTDbits.RD1 == 1){
  1754  000D02  B083               	btfsc	3971,0,c	;volatile
  1755  000D04  A283               	btfss	3971,1,c	;volatile
  1756  000D06  D5A9               	goto	l49
  1757                           
  1758                           ;main.c: 163: status = BASIC_PID;
  1759  000D08  0E00               	movlw	0
  1760  000D0A  0100               	movlb	0	; () banked
  1761  000D0C  6FEF               	movwf	(_status+1)& (0+255),b
  1762  000D0E  0E04               	movlw	4
  1763  000D10  6FEE               	movwf	_status& (0+255),b
  1764  000D12  D12E               	goto	u4670
  1765  000D14                     
  1766                           ;main.c: 170: line_cal();
  1767                           
  1768                           ; BSR set to: 0
  1769  000D14  EC32  F00A         	call	_line_cal	;wreg free
  1770                           
  1771                           ;main.c: 171: int speed = speed_vals[mode];
  1772  000D18  90D8               	bcf	status,0,c
  1773  000D1A  0100               	movlb	0	; () banked
  1774  000D1C  3588               	rlcf	_mode& (0+255),w,b
  1775  000D1E  6EF6               	movwf	tblptrl,c
  1776  000D20  0100               	movlb	0	; () banked
  1777  000D22  3589               	rlcf	(_mode+1)& (0+255),w,b
  1778  000D24  6EF7               	movwf	tblptrh,c
  1779  000D26  0E09               	movlw	low _speed_vals
  1780  000D28  26F6               	addwf	tblptrl,f,c
  1781  000D2A  0E08               	movlw	high _speed_vals
  1782  000D2C  22F7               	addwfc	tblptrh,f,c
  1783  000D2E                     	if	0	;There are less than 3 active tblptr bytes
  1784  000D2E                     	endif
  1785  000D2E  0009               	tblrd		*+
  1786  000D30  CFF5 F111          	movff	tablat,main@speed
  1787  000D34  000A               	tblrd		*-
  1788  000D36  CFF5 F112          	movff	tablat,main@speed+1
  1789                           
  1790                           ; BSR set to: 0
  1791                           ;main.c: 173: int der = lp - old_lp;
  1792  000D3A  C08A  F036         	movff	_old_lp,??_main
  1793  000D3E  C08B  F037         	movff	_old_lp+1,??_main+1
  1794  000D42  1E36               	comf	??_main,f,c
  1795  000D44  1E37               	comf	??_main+1,f,c
  1796  000D46  4A36               	infsnz	??_main,f,c
  1797  000D48  2A37               	incf	??_main+1,f,c
  1798  000D4A  0100               	movlb	0	; () banked
  1799  000D4C  518C               	movf	_lp& (0+255),w,b
  1800  000D4E  2436               	addwf	??_main,w,c
  1801  000D50  0101               	movlb	1	; () banked
  1802  000D52  6F00               	movwf	main@der& (0+255),b
  1803  000D54  0100               	movlb	0	; () banked
  1804  000D56  518D               	movf	(_lp+1)& (0+255),w,b
  1805  000D58  2037               	addwfc	??_main+1,w,c
  1806  000D5A  0101               	movlb	1	; () banked
  1807  000D5C  6F01               	movwf	(main@der+1)& (0+255),b
  1808                           
  1809                           ; BSR set to: 1
  1810                           ;main.c: 174: double dif = (double)lp * kp_val[mode] + (double)der * kd_val[mode];
  1811  000D5E  90D8               	bcf	status,0,c
  1812  000D60  0100               	movlb	0	; () banked
  1813  000D62  3588               	rlcf	_mode& (0+255),w,b
  1814  000D64  6EF6               	movwf	tblptrl,c
  1815  000D66  0100               	movlb	0	; () banked
  1816  000D68  3589               	rlcf	(_mode+1)& (0+255),w,b
  1817  000D6A  6EF7               	movwf	tblptrh,c
  1818  000D6C  0E05               	movlw	low _kp_val
  1819  000D6E  26F6               	addwf	tblptrl,f,c
  1820  000D70  0E08               	movlw	high _kp_val
  1821  000D72  22F7               	addwfc	tblptrh,f,c
  1822  000D74                     	if	0	;There are less than 3 active tblptr bytes
  1823  000D74                     	endif
  1824  000D74  0009               	tblrd		*+
  1825  000D76  CFF5 F01D          	movff	tablat,___awtoft@c
  1826  000D7A  000A               	tblrd		*-
  1827  000D7C  CFF5 F01E          	movff	tablat,___awtoft@c+1
  1828  000D80  ECD9  F011         	call	___awtoft	;wreg free
  1829  000D84  C01D  F024         	movff	?___awtoft,___ftmul@f2
  1830  000D88  C01E  F025         	movff	?___awtoft+1,___ftmul@f2+1
  1831  000D8C  C01F  F026         	movff	?___awtoft+2,___ftmul@f2+2
  1832  000D90  C08C  F01D         	movff	_lp,___awtoft@c
  1833  000D94  C08D  F01E         	movff	_lp+1,___awtoft@c+1
  1834  000D98  ECD9  F011         	call	___awtoft	;wreg free
  1835  000D9C  C01D  F021         	movff	?___awtoft,___ftmul@f1
  1836  000DA0  C01E  F022         	movff	?___awtoft+1,___ftmul@f1+1
  1837  000DA4  C01F  F023         	movff	?___awtoft+2,___ftmul@f1+2
  1838  000DA8  EC96  F00D         	call	___ftmul	;wreg free
  1839  000DAC  C021  F030         	movff	?___ftmul,___ftadd@f1
  1840  000DB0  C022  F031         	movff	?___ftmul+1,___ftadd@f1+1
  1841  000DB4  C023  F032         	movff	?___ftmul+2,___ftadd@f1+2
  1842  000DB8  90D8               	bcf	status,0,c
  1843  000DBA  0100               	movlb	0	; () banked
  1844  000DBC  3588               	rlcf	_mode& (0+255),w,b
  1845  000DBE  6EF6               	movwf	tblptrl,c
  1846  000DC0  0100               	movlb	0	; () banked
  1847  000DC2  3589               	rlcf	(_mode+1)& (0+255),w,b
  1848  000DC4  6EF7               	movwf	tblptrh,c
  1849  000DC6  0E01               	movlw	low _kd_val
  1850  000DC8  26F6               	addwf	tblptrl,f,c
  1851  000DCA  0E08               	movlw	high _kd_val
  1852  000DCC  22F7               	addwfc	tblptrh,f,c
  1853  000DCE                     	if	0	;There are less than 3 active tblptr bytes
  1854  000DCE                     	endif
  1855  000DCE  0009               	tblrd		*+
  1856  000DD0  CFF5 F01D          	movff	tablat,___awtoft@c
  1857  000DD4  000A               	tblrd		*-
  1858  000DD6  CFF5 F01E          	movff	tablat,___awtoft@c+1
  1859  000DDA  ECD9  F011         	call	___awtoft	;wreg free
  1860  000DDE  C01D  F024         	movff	?___awtoft,___ftmul@f2
  1861  000DE2  C01E  F025         	movff	?___awtoft+1,___ftmul@f2+1
  1862  000DE6  C01F  F026         	movff	?___awtoft+2,___ftmul@f2+2
  1863  000DEA  C100  F01D         	movff	main@der,___awtoft@c
  1864  000DEE  C101  F01E         	movff	main@der+1,___awtoft@c+1
  1865  000DF2  ECD9  F011         	call	___awtoft	;wreg free
  1866  000DF6  C01D  F021         	movff	?___awtoft,___ftmul@f1
  1867  000DFA  C01E  F022         	movff	?___awtoft+1,___ftmul@f1+1
  1868  000DFE  C01F  F023         	movff	?___awtoft+2,___ftmul@f1+2
  1869  000E02  EC96  F00D         	call	___ftmul	;wreg free
  1870  000E06  C021  F033         	movff	?___ftmul,___ftadd@f2
  1871  000E0A  C022  F034         	movff	?___ftmul+1,___ftadd@f2+1
  1872  000E0E  C023  F035         	movff	?___ftmul+2,___ftadd@f2+2
  1873  000E12  ECE9  F00B         	call	___ftadd	;wreg free
  1874  000E16  C030  F10E         	movff	?___ftadd,main@dif
  1875  000E1A  C031  F10F         	movff	?___ftadd+1,main@dif+1
  1876  000E1E  C032  F110         	movff	?___ftadd+2,main@dif+2
  1877                           
  1878                           ;main.c: 175: if (lp > -60 && lp < 60){
  1879  000E22  0100               	movlb	0	; () banked
  1880  000E24  AF8D               	btfss	(_lp+1)& (0+255),7,b
  1881  000E26  D008               	goto	u4620
  1882  000E28  0EC5               	movlw	197
  1883  000E2A  0100               	movlb	0	; () banked
  1884  000E2C  5D8C               	subwf	_lp& (0+255),w,b
  1885  000E2E  0EFF               	movlw	255
  1886  000E30  0100               	movlb	0	; () banked
  1887  000E32  598D               	subwfb	(_lp+1)& (0+255),w,b
  1888  000E34  A0D8               	btfss	status,0,c
  1889  000E36  D010               	goto	l87
  1890  000E38                     u4620:
  1891                           
  1892                           ; BSR set to: 0
  1893  000E38  0100               	movlb	0	; () banked
  1894  000E3A  BF8D               	btfsc	(_lp+1)& (0+255),7,b
  1895  000E3C  D008               	goto	u4630
  1896  000E3E  0100               	movlb	0	; () banked
  1897  000E40  518D               	movf	(_lp+1)& (0+255),w,b
  1898  000E42  E10A               	bnz	l87
  1899  000E44  0E3C               	movlw	60
  1900  000E46  0100               	movlb	0	; () banked
  1901  000E48  5D8C               	subwf	_lp& (0+255),w,b
  1902  000E4A  B0D8               	btfsc	status,0,c
  1903  000E4C  D005               	goto	l87
  1904  000E4E                     u4630:
  1905                           
  1906                           ; BSR set to: 0
  1907                           ;main.c: 176: PORTBbits.RB4 = 0;
  1908  000E4E  9881               	bcf	3969,4,c	;volatile
  1909                           
  1910                           ;main.c: 177: PORTCbits.RC1 = 0;
  1911  000E50  9282               	bcf	3970,1,c	;volatile
  1912                           
  1913                           ;main.c: 178: PORTDbits.RD2 = 1;
  1914  000E52  8483               	bsf	3971,2,c	;volatile
  1915                           
  1916                           ;main.c: 179: PORTAbits.RA4 = 1;
  1917  000E54  8880               	bsf	3968,4,c	;volatile
  1918                           
  1919                           ;main.c: 180: }else{
  1920  000E56  D011               	goto	l90
  1921  000E58                     l87:
  1922                           
  1923                           ; BSR set to: 0
  1924                           ;main.c: 181: PORTDbits.RD2 = 0;
  1925  000E58  9483               	bcf	3971,2,c	;volatile
  1926                           
  1927                           ;main.c: 182: PORTAbits.RA4 = 0;
  1928  000E5A  9880               	bcf	3968,4,c	;volatile
  1929                           
  1930                           ; BSR set to: 0
  1931                           ;main.c: 183: if (lp > 0){
  1932  000E5C  0100               	movlb	0	; () banked
  1933  000E5E  BF8D               	btfsc	(_lp+1)& (0+255),7,b
  1934  000E60  D00A               	goto	l89
  1935  000E62  0100               	movlb	0	; () banked
  1936  000E64  518D               	movf	(_lp+1)& (0+255),w,b
  1937  000E66  E104               	bnz	u4640
  1938  000E68  0100               	movlb	0	; () banked
  1939  000E6A  058C               	decf	_lp& (0+255),w,b
  1940  000E6C  A0D8               	btfss	status,0,c
  1941  000E6E  D003               	goto	l89
  1942  000E70                     u4640:
  1943                           
  1944                           ; BSR set to: 0
  1945                           ;main.c: 184: PORTBbits.RB4 = 1;
  1946  000E70  8881               	bsf	3969,4,c	;volatile
  1947                           
  1948                           ;main.c: 185: PORTCbits.RC1 = 0;
  1949  000E72  9282               	bcf	3970,1,c	;volatile
  1950                           
  1951                           ;main.c: 186: }else{
  1952  000E74  D002               	goto	l90
  1953  000E76                     l89:
  1954                           
  1955                           ; BSR set to: 0
  1956                           ;main.c: 187: PORTBbits.RB4 = 0;
  1957  000E76  9881               	bcf	3969,4,c	;volatile
  1958                           
  1959                           ;main.c: 188: PORTCbits.RC1 = 1;
  1960  000E78  8282               	bsf	3970,1,c	;volatile
  1961  000E7A                     l90:
  1962                           
  1963                           ; BSR set to: 0
  1964                           ;main.c: 189: }
  1965                           ;main.c: 190: }
  1966                           ;main.c: 191: if (dif > 0) mspeed(speed - dif, speed );
  1967                           
  1968                           ; BSR set to: 0
  1969                           
  1970                           ; BSR set to: 0
  1971  000E7A  0E00               	movlw	0
  1972  000E7C  6E15               	movwf	___ftge@ff1,c
  1973  000E7E  0E00               	movlw	0
  1974  000E80  6E16               	movwf	___ftge@ff1+1,c
  1975  000E82  0E00               	movlw	0
  1976  000E84  6E17               	movwf	___ftge@ff1+2,c
  1977  000E86  C10E  F018         	movff	main@dif,___ftge@ff2
  1978  000E8A  C10F  F019         	movff	main@dif+1,___ftge@ff2+1
  1979  000E8E  C110  F01A         	movff	main@dif+2,___ftge@ff2+2
  1980  000E92  EC37  F010         	call	___ftge	;wreg free
  1981  000E96  B0D8               	btfsc	status,0,c
  1982  000E98  D02E               	goto	l91
  1983  000E9A  C10E  F015         	movff	main@dif,___ftneg@f1
  1984  000E9E  C10F  F016         	movff	main@dif+1,___ftneg@f1+1
  1985  000EA2  C110  F017         	movff	main@dif+2,___ftneg@f1+2
  1986  000EA6  EC21  F012         	call	___ftneg	;wreg free
  1987  000EAA  C015  F033         	movff	?___ftneg,___ftadd@f2
  1988  000EAE  C016  F034         	movff	?___ftneg+1,___ftadd@f2+1
  1989  000EB2  C017  F035         	movff	?___ftneg+2,___ftadd@f2+2
  1990  000EB6  C111  F01D         	movff	main@speed,___awtoft@c
  1991  000EBA  C112  F01E         	movff	main@speed+1,___awtoft@c+1
  1992  000EBE  ECD9  F011         	call	___awtoft	;wreg free
  1993  000EC2  C01D  F030         	movff	?___awtoft,___ftadd@f1
  1994  000EC6  C01E  F031         	movff	?___awtoft+1,___ftadd@f1+1
  1995  000ECA  C01F  F032         	movff	?___awtoft+2,___ftadd@f1+2
  1996  000ECE  ECE9  F00B         	call	___ftadd	;wreg free
  1997  000ED2  C030  F0CA         	movff	?___ftadd,___fttol@f1
  1998  000ED6  C031  F0CB         	movff	?___ftadd+1,___fttol@f1+1
  1999  000EDA  C032  F0CC         	movff	?___ftadd+2,___fttol@f1+2
  2000  000EDE  ECF4  F00C         	call	___fttol	;wreg free
  2001  000EE2  C0CA  F0D9         	movff	?___fttol,mspeed@a
  2002  000EE6  C0CB  F0DA         	movff	?___fttol+1,mspeed@a+1
  2003  000EEA  C111  F0DB         	movff	main@speed,mspeed@b
  2004  000EEE  C112  F0DC         	movff	main@speed+1,mspeed@b+1
  2005  000EF2  EC33  F012         	call	_mspeed	;wreg free
  2006  000EF6                     l91:
  2007                           
  2008                           ;main.c: 192: if (dif < 0) mspeed(speed , speed + dif);
  2009  000EF6  0101               	movlb	1	; () banked
  2010  000EF8  AF10               	btfss	(main@dif+2)& (0+255),7,b
  2011  000EFA  D026               	goto	l92
  2012                           
  2013                           ; BSR set to: 1
  2014  000EFC  C111  F0D9         	movff	main@speed,mspeed@a
  2015  000F00  C112  F0DA         	movff	main@speed+1,mspeed@a+1
  2016  000F04  C10E  F033         	movff	main@dif,___ftadd@f2
  2017  000F08  C10F  F034         	movff	main@dif+1,___ftadd@f2+1
  2018  000F0C  C110  F035         	movff	main@dif+2,___ftadd@f2+2
  2019  000F10  C111  F01D         	movff	main@speed,___awtoft@c
  2020  000F14  C112  F01E         	movff	main@speed+1,___awtoft@c+1
  2021  000F18  ECD9  F011         	call	___awtoft	;wreg free
  2022  000F1C  C01D  F030         	movff	?___awtoft,___ftadd@f1
  2023  000F20  C01E  F031         	movff	?___awtoft+1,___ftadd@f1+1
  2024  000F24  C01F  F032         	movff	?___awtoft+2,___ftadd@f1+2
  2025  000F28  ECE9  F00B         	call	___ftadd	;wreg free
  2026  000F2C  C030  F0CA         	movff	?___ftadd,___fttol@f1
  2027  000F30  C031  F0CB         	movff	?___ftadd+1,___fttol@f1+1
  2028  000F34  C032  F0CC         	movff	?___ftadd+2,___fttol@f1+2
  2029  000F38  ECF4  F00C         	call	___fttol	;wreg free
  2030  000F3C  C0CA  F0DB         	movff	?___fttol,mspeed@b
  2031  000F40  C0CB  F0DC         	movff	?___fttol+1,mspeed@b+1
  2032  000F44  EC33  F012         	call	_mspeed	;wreg free
  2033  000F48                     l92:
  2034                           
  2035                           ;main.c: 194: old_lp = lp;
  2036  000F48  C08C  F08A         	movff	_lp,_old_lp
  2037  000F4C  C08D  F08B         	movff	_lp+1,_old_lp+1
  2038                           
  2039                           ;main.c: 196: if (time[3] > 1000){
  2040  000F50  0100               	movlb	0	; () banked
  2041  000F52  BF6F               	btfsc	(_time+15)& (0+255),7,b
  2042  000F54  D482               	goto	l49
  2043  000F56  0100               	movlb	0	; () banked
  2044  000F58  516F               	movf	(_time+15)& (0+255),w,b
  2045  000F5A  0100               	movlb	0	; () banked
  2046  000F5C  116E               	iorwf	(_time+14)& (0+255),w,b
  2047  000F5E  E108               	bnz	u4670
  2048  000F60  0EE9               	movlw	233
  2049  000F62  0100               	movlb	0	; () banked
  2050  000F64  5D6C               	subwf	(_time+12)& (0+255),w,b
  2051  000F66  0E03               	movlw	3
  2052  000F68  0100               	movlb	0	; () banked
  2053  000F6A  596D               	subwfb	(_time+13)& (0+255),w,b
  2054  000F6C  A0D8               	btfss	status,0,c
  2055  000F6E  D475               	goto	l49
  2056  000F70                     u4670:
  2057                           
  2058                           ; BSR set to: 0
  2059                           ;main.c: 197: time[3] = 0;
  2060  000F70  0E00               	movlw	0
  2061  000F72  0100               	movlb	0	; () banked
  2062  000F74  6F6C               	movwf	(_time+12)& (0+255),b
  2063  000F76  0E00               	movlw	0
  2064  000F78  6F6D               	movwf	(_time+13)& (0+255),b
  2065  000F7A  0E00               	movlw	0
  2066  000F7C  6F6E               	movwf	(_time+14)& (0+255),b
  2067  000F7E  0E00               	movlw	0
  2068  000F80  6F6F               	movwf	(_time+15)& (0+255),b
  2069                           
  2070                           ; BSR set to: 0
  2071                           ;main.c: 202: }
  2072                           
  2073                           ; BSR set to: 0
  2074                           ;main.c: 200: }
  2075                           ;main.c: 201: break;
  2076  000F82  D46B               	goto	l49
  2077  000F84                     l50:
  2078                           
  2079                           ; BSR set to: 0
  2080  000F84  C0EE  F036         	movff	_status,??_main
  2081  000F88  C0EF  F037         	movff	_status+1,??_main+1
  2082                           
  2083                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2084                           ; Switch size 1, requested type "space"
  2085                           ; Number of cases is 1, Range of values is 0 to 0
  2086                           ; switch strategies available:
  2087                           ; Name         Instructions Cycles
  2088                           ; simple_byte            4     3 (average)
  2089                           ;	Chosen strategy is simple_byte
  2090  000F8C  5037               	movf	??_main+1,w,c
  2091  000F8E  0A00               	xorlw	0	; case 0
  2092  000F90  A4D8               	btfss	status,2,c
  2093  000F92  D463               	goto	l49
  2094                           
  2095                           ; Switch size 1, requested type "space"
  2096                           ; Number of cases is 7, Range of values is 0 to 6
  2097                           ; switch strategies available:
  2098                           ; Name         Instructions Cycles
  2099                           ; simple_byte           22    12 (average)
  2100                           ;	Chosen strategy is simple_byte
  2101  000F94  5036               	movf	??_main,w,c
  2102  000F96  0A00               	xorlw	0	; case 0
  2103  000F98  B4D8               	btfsc	status,2,c
  2104  000F9A  D462               	goto	l51
  2105  000F9C  0A01               	xorlw	1	; case 1
  2106  000F9E  B4D8               	btfsc	status,2,c
  2107  000FA0  D4D0               	goto	l59
  2108  000FA2  0A03               	xorlw	3	; case 2
  2109  000FA4  B4D8               	btfsc	status,2,c
  2110  000FA6  D5AF               	goto	l68
  2111  000FA8  0A01               	xorlw	1	; case 3
  2112  000FAA  B4D8               	btfsc	status,2,c
  2113  000FAC  D63C               	goto	l77
  2114  000FAE  0A07               	xorlw	7	; case 4
  2115  000FB0  B4D8               	btfsc	status,2,c
  2116  000FB2  D6B0               	goto	l86
  2117  000FB4  0A01               	xorlw	1	; case 5
  2118  000FB6  B4D8               	btfsc	status,2,c
  2119  000FB8  D6A0               	goto	l84
  2120  000FBA  0A03               	xorlw	3	; case 6
  2121  000FBC  B4D8               	btfsc	status,2,c
  2122  000FBE  D62B               	goto	l75
  2123  000FC0  D44C               	goto	l49
  2124  000FC2                     __end_of_main:
  2125                           	opt stack 0
  2126                           tblptru	equ	0xFF8
  2127                           tblptrh	equ	0xFF7
  2128                           tblptrl	equ	0xFF6
  2129                           tablat	equ	0xFF5
  2130                           postinc0	equ	0xFEE
  2131                           wreg	equ	0xFE8
  2132                           postdec1	equ	0xFE5
  2133                           fsr1l	equ	0xFE1
  2134                           status	equ	0xFD8
  2135                           
  2136 ;; *************** function _setD *****************
  2137 ;; Defined at:
  2138 ;;		line 24 in file "utils.c"
  2139 ;; Parameters:    Size  Location     Type
  2140 ;;		None
  2141 ;; Auto vars:     Size  Location     Type
  2142 ;;		None
  2143 ;; Return value:  Size  Location     Type
  2144 ;;                  1    wreg      void 
  2145 ;; Registers used:
  2146 ;;		None
  2147 ;; Tracked objects:
  2148 ;;		On entry : 0/0
  2149 ;;		On exit  : 0/0
  2150 ;;		Unchanged: 0/0
  2151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2152 ;;      Params:         0       0       0       0       0       0       0       0       0
  2153 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2154 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2155 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2156 ;;Total ram usage:        0 bytes
  2157 ;; Hardware stack levels used:    1
  2158 ;; Hardware stack levels required when called:    1
  2159 ;; This function calls:
  2160 ;;		Nothing
  2161 ;; This function is called by:
  2162 ;;		_main
  2163 ;; This function uses a non-reentrant model
  2164 ;;
  2165                           
  2166                           	psect	text1
  2167  0024A0                     __ptext1:
  2168                           	opt stack 0
  2169  0024A0                     _setD:
  2170                           	opt stack 29
  2171                           
  2172                           ;utils.c: 25: PORTBbits.RB4 = 0;
  2173                           
  2174                           ;incstack = 0
  2175  0024A0  9881               	bcf	3969,4,c	;volatile
  2176                           
  2177                           ;utils.c: 26: PORTCbits.RC1 = 0;
  2178  0024A2  9282               	bcf	3970,1,c	;volatile
  2179                           
  2180                           ;utils.c: 27: PORTDbits.RD2 = 0;
  2181  0024A4  9483               	bcf	3971,2,c	;volatile
  2182                           
  2183                           ;utils.c: 28: PORTAbits.RA4 = 1;
  2184  0024A6  8880               	bsf	3968,4,c	;volatile
  2185  0024A8  0012               	return		;funcret
  2186  0024AA                     __end_of_setD:
  2187                           	opt stack 0
  2188                           tblptru	equ	0xFF8
  2189                           tblptrh	equ	0xFF7
  2190                           tblptrl	equ	0xFF6
  2191                           tablat	equ	0xFF5
  2192                           postinc0	equ	0xFEE
  2193                           wreg	equ	0xFE8
  2194                           postdec1	equ	0xFE5
  2195                           fsr1l	equ	0xFE1
  2196                           status	equ	0xFD8
  2197                           
  2198 ;; *************** function _setC *****************
  2199 ;; Defined at:
  2200 ;;		line 18 in file "utils.c"
  2201 ;; Parameters:    Size  Location     Type
  2202 ;;		None
  2203 ;; Auto vars:     Size  Location     Type
  2204 ;;		None
  2205 ;; Return value:  Size  Location     Type
  2206 ;;                  1    wreg      void 
  2207 ;; Registers used:
  2208 ;;		None
  2209 ;; Tracked objects:
  2210 ;;		On entry : 0/0
  2211 ;;		On exit  : 0/0
  2212 ;;		Unchanged: 0/0
  2213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2214 ;;      Params:         0       0       0       0       0       0       0       0       0
  2215 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2216 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2217 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2218 ;;Total ram usage:        0 bytes
  2219 ;; Hardware stack levels used:    1
  2220 ;; Hardware stack levels required when called:    1
  2221 ;; This function calls:
  2222 ;;		Nothing
  2223 ;; This function is called by:
  2224 ;;		_main
  2225 ;; This function uses a non-reentrant model
  2226 ;;
  2227                           
  2228                           	psect	text2
  2229  0024AA                     __ptext2:
  2230                           	opt stack 0
  2231  0024AA                     _setC:
  2232                           	opt stack 29
  2233                           
  2234                           ;utils.c: 19: PORTBbits.RB4 = 0;
  2235                           
  2236                           ;incstack = 0
  2237  0024AA  9881               	bcf	3969,4,c	;volatile
  2238                           
  2239                           ;utils.c: 20: PORTCbits.RC1 = 0;
  2240  0024AC  9282               	bcf	3970,1,c	;volatile
  2241                           
  2242                           ;utils.c: 21: PORTDbits.RD2 = 1;
  2243  0024AE  8483               	bsf	3971,2,c	;volatile
  2244                           
  2245                           ;utils.c: 22: PORTAbits.RA4 = 0;
  2246  0024B0  9880               	bcf	3968,4,c	;volatile
  2247  0024B2  0012               	return		;funcret
  2248  0024B4                     __end_of_setC:
  2249                           	opt stack 0
  2250                           tblptru	equ	0xFF8
  2251                           tblptrh	equ	0xFF7
  2252                           tblptrl	equ	0xFF6
  2253                           tablat	equ	0xFF5
  2254                           postinc0	equ	0xFEE
  2255                           wreg	equ	0xFE8
  2256                           postdec1	equ	0xFE5
  2257                           fsr1l	equ	0xFE1
  2258                           status	equ	0xFD8
  2259                           
  2260 ;; *************** function _setB *****************
  2261 ;; Defined at:
  2262 ;;		line 12 in file "utils.c"
  2263 ;; Parameters:    Size  Location     Type
  2264 ;;		None
  2265 ;; Auto vars:     Size  Location     Type
  2266 ;;		None
  2267 ;; Return value:  Size  Location     Type
  2268 ;;                  1    wreg      void 
  2269 ;; Registers used:
  2270 ;;		None
  2271 ;; Tracked objects:
  2272 ;;		On entry : 0/0
  2273 ;;		On exit  : 0/0
  2274 ;;		Unchanged: 0/0
  2275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2276 ;;      Params:         0       0       0       0       0       0       0       0       0
  2277 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2278 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2279 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2280 ;;Total ram usage:        0 bytes
  2281 ;; Hardware stack levels used:    1
  2282 ;; Hardware stack levels required when called:    1
  2283 ;; This function calls:
  2284 ;;		Nothing
  2285 ;; This function is called by:
  2286 ;;		_main
  2287 ;; This function uses a non-reentrant model
  2288 ;;
  2289                           
  2290                           	psect	text3
  2291  0024B4                     __ptext3:
  2292                           	opt stack 0
  2293  0024B4                     _setB:
  2294                           	opt stack 29
  2295                           
  2296                           ;utils.c: 13: PORTBbits.RB4 = 0;
  2297                           
  2298                           ;incstack = 0
  2299  0024B4  9881               	bcf	3969,4,c	;volatile
  2300                           
  2301                           ;utils.c: 14: PORTCbits.RC1 = 1;
  2302  0024B6  8282               	bsf	3970,1,c	;volatile
  2303                           
  2304                           ;utils.c: 15: PORTDbits.RD2 = 0;
  2305  0024B8  9483               	bcf	3971,2,c	;volatile
  2306                           
  2307                           ;utils.c: 16: PORTAbits.RA4 = 0;
  2308  0024BA  9880               	bcf	3968,4,c	;volatile
  2309  0024BC  0012               	return		;funcret
  2310  0024BE                     __end_of_setB:
  2311                           	opt stack 0
  2312                           tblptru	equ	0xFF8
  2313                           tblptrh	equ	0xFF7
  2314                           tblptrl	equ	0xFF6
  2315                           tablat	equ	0xFF5
  2316                           postinc0	equ	0xFEE
  2317                           wreg	equ	0xFE8
  2318                           postdec1	equ	0xFE5
  2319                           fsr1l	equ	0xFE1
  2320                           status	equ	0xFD8
  2321                           
  2322 ;; *************** function _setA *****************
  2323 ;; Defined at:
  2324 ;;		line 5 in file "utils.c"
  2325 ;; Parameters:    Size  Location     Type
  2326 ;;		None
  2327 ;; Auto vars:     Size  Location     Type
  2328 ;;		None
  2329 ;; Return value:  Size  Location     Type
  2330 ;;                  1    wreg      void 
  2331 ;; Registers used:
  2332 ;;		None
  2333 ;; Tracked objects:
  2334 ;;		On entry : 0/0
  2335 ;;		On exit  : 0/0
  2336 ;;		Unchanged: 0/0
  2337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2338 ;;      Params:         0       0       0       0       0       0       0       0       0
  2339 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2340 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2341 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2342 ;;Total ram usage:        0 bytes
  2343 ;; Hardware stack levels used:    1
  2344 ;; Hardware stack levels required when called:    1
  2345 ;; This function calls:
  2346 ;;		Nothing
  2347 ;; This function is called by:
  2348 ;;		_main
  2349 ;; This function uses a non-reentrant model
  2350 ;;
  2351                           
  2352                           	psect	text4
  2353  0024BE                     __ptext4:
  2354                           	opt stack 0
  2355  0024BE                     _setA:
  2356                           	opt stack 29
  2357                           
  2358                           ;utils.c: 6: PORTBbits.RB4 = 1;
  2359                           
  2360                           ;incstack = 0
  2361  0024BE  8881               	bsf	3969,4,c	;volatile
  2362                           
  2363                           ;utils.c: 7: PORTCbits.RC1 = 0;
  2364  0024C0  9282               	bcf	3970,1,c	;volatile
  2365                           
  2366                           ;utils.c: 8: PORTDbits.RD2 = 0;
  2367  0024C2  9483               	bcf	3971,2,c	;volatile
  2368                           
  2369                           ;utils.c: 9: PORTAbits.RA4 = 0;
  2370  0024C4  9880               	bcf	3968,4,c	;volatile
  2371  0024C6  0012               	return		;funcret
  2372  0024C8                     __end_of_setA:
  2373                           	opt stack 0
  2374                           tblptru	equ	0xFF8
  2375                           tblptrh	equ	0xFF7
  2376                           tblptrl	equ	0xFF6
  2377                           tablat	equ	0xFF5
  2378                           postinc0	equ	0xFEE
  2379                           wreg	equ	0xFE8
  2380                           postdec1	equ	0xFE5
  2381                           fsr1l	equ	0xFE1
  2382                           status	equ	0xFD8
  2383                           
  2384 ;; *************** function _read_cal *****************
  2385 ;; Defined at:
  2386 ;;		line 47 in file "analog.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;		None
  2389 ;; Auto vars:     Size  Location     Type
  2390 ;;  i               2   37[COMRAM] int 
  2391 ;; Return value:  Size  Location     Type
  2392 ;;                  1    wreg      void 
  2393 ;; Registers used:
  2394 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2395 ;; Tracked objects:
  2396 ;;		On entry : 0/0
  2397 ;;		On exit  : 0/0
  2398 ;;		Unchanged: 0/0
  2399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2400 ;;      Params:         0       0       0       0       0       0       0       0       0
  2401 ;;      Locals:        10       0       0       0       0       0       0       0       0
  2402 ;;      Temps:          9       0       0       0       0       0       0       0       0
  2403 ;;      Totals:        19       0       0       0       0       0       0       0       0
  2404 ;;Total ram usage:       19 bytes
  2405 ;; Hardware stack levels used:    1
  2406 ;; Hardware stack levels required when called:    1
  2407 ;; This function calls:
  2408 ;;		Nothing
  2409 ;; This function is called by:
  2410 ;;		_main
  2411 ;; This function uses a non-reentrant model
  2412 ;;
  2413                           
  2414                           	psect	text5
  2415  000FC2                     __ptext5:
  2416                           	opt stack 0
  2417  000FC2                     _read_cal:
  2418                           	opt stack 29
  2419                           
  2420                           ;analog.c: 48: int i;
  2421                           ;analog.c: 50: for (i = 0;i < 5;i++) maxs[ls[i]] = maxs[ls[i]]>an[ls[i]]?maxs[ls[i]]:an[
      +                          ls[i]];
  2422                           
  2423                           ;incstack = 0
  2424  000FC2  0E00               	movlw	0
  2425  000FC4  6E27               	movwf	read_cal@i+1,c
  2426  000FC6  0E00               	movlw	0
  2427  000FC8  6E26               	movwf	read_cal@i,c
  2428  000FCA  BE27               	btfsc	read_cal@i+1,7,c
  2429  000FCC  D008               	goto	l143
  2430  000FCE  5027               	movf	read_cal@i+1,w,c
  2431  000FD0  E105               	bnz	u3640
  2432  000FD2  0E05               	movlw	5
  2433  000FD4  5C26               	subwf	read_cal@i,w,c
  2434  000FD6  B0D8               	btfsc	status,0,c
  2435  000FD8  D088               	goto	u3660
  2436  000FDA  D001               	goto	l143
  2437  000FDC                     u3640:
  2438  000FDC  D086               	goto	u3660
  2439  000FDE                     l143:
  2440  000FDE  90D8               	bcf	status,0,c
  2441  000FE0  3426               	rlcf	read_cal@i,w,c
  2442  000FE2  6ED9               	movwf	fsr2l,c
  2443  000FE4  3427               	rlcf	read_cal@i+1,w,c
  2444  000FE6  6EDA               	movwf	fsr2h,c
  2445  000FE8  0EDD               	movlw	low _ls
  2446  000FEA  26D9               	addwf	fsr2l,f,c
  2447  000FEC  0E00               	movlw	high _ls
  2448  000FEE  22DA               	addwfc	fsr2h,f,c
  2449  000FF0  CFDE F015          	movff	postinc2,??_read_cal
  2450  000FF4  CFDD F016          	movff	postdec2,??_read_cal+1
  2451  000FF8  90D8               	bcf	status,0,c
  2452  000FFA  3615               	rlcf	??_read_cal,f,c
  2453  000FFC  3616               	rlcf	??_read_cal+1,f,c
  2454  000FFE  0EA0               	movlw	low _maxs
  2455  001000  2415               	addwf	??_read_cal,w,c
  2456  001002  6ED9               	movwf	fsr2l,c
  2457  001004  0E00               	movlw	high _maxs
  2458  001006  2016               	addwfc	??_read_cal+1,w,c
  2459  001008  6EDA               	movwf	fsr2h,c
  2460  00100A  90D8               	bcf	status,0,c
  2461  00100C  3426               	rlcf	read_cal@i,w,c
  2462  00100E  6EE1               	movwf	fsr1l,c
  2463  001010  3427               	rlcf	read_cal@i+1,w,c
  2464  001012  6EE2               	movwf	fsr1h,c
  2465  001014  0EDD               	movlw	low _ls
  2466  001016  26E1               	addwf	fsr1l,f,c
  2467  001018  0E00               	movlw	high _ls
  2468  00101A  22E2               	addwfc	fsr1h,f,c
  2469  00101C  CFE6 F019          	movff	postinc1,??_read_cal+4
  2470  001020  CFE5 F01A          	movff	postdec1,??_read_cal+5
  2471  001024  90D8               	bcf	status,0,c
  2472  001026  3619               	rlcf	??_read_cal+4,f,c
  2473  001028  361A               	rlcf	??_read_cal+5,f,c
  2474  00102A  0EB2               	movlw	low _an
  2475  00102C  2419               	addwf	??_read_cal+4,w,c
  2476  00102E  6EE1               	movwf	fsr1l,c
  2477  001030  0E00               	movlw	high _an
  2478  001032  201A               	addwfc	??_read_cal+5,w,c
  2479  001034  6EE2               	movwf	fsr1h,c
  2480  001036  50DE               	movf	postinc2,w,c
  2481  001038  5CE6               	subwf	postinc1,w,c
  2482  00103A  50E6               	movf	postinc1,w,c
  2483  00103C  0A80               	xorlw	128
  2484  00103E  6E1D               	movwf	(??_read_cal+8)& (0+255),c
  2485  001040  50DE               	movf	postinc2,w,c
  2486  001042  0A80               	xorlw	128
  2487  001044  581D               	subwfb	(??_read_cal+8)& (0+255),w,c
  2488  001046  A0D8               	btfss	status,0,c
  2489  001048  D015               	goto	l146
  2490  00104A  90D8               	bcf	status,0,c
  2491  00104C  3426               	rlcf	read_cal@i,w,c
  2492  00104E  6ED9               	movwf	fsr2l,c
  2493  001050  3427               	rlcf	read_cal@i+1,w,c
  2494  001052  6EDA               	movwf	fsr2h,c
  2495  001054  0EDD               	movlw	low _ls
  2496  001056  26D9               	addwf	fsr2l,f,c
  2497  001058  0E00               	movlw	high _ls
  2498  00105A  22DA               	addwfc	fsr2h,f,c
  2499  00105C  CFDE F015          	movff	postinc2,??_read_cal
  2500  001060  CFDD F016          	movff	postdec2,??_read_cal+1
  2501  001064  90D8               	bcf	status,0,c
  2502  001066  3615               	rlcf	??_read_cal,f,c
  2503  001068  3616               	rlcf	??_read_cal+1,f,c
  2504  00106A  0EB2               	movlw	low _an
  2505  00106C  2415               	addwf	??_read_cal,w,c
  2506  00106E  6E1E               	movwf	_read_cal$508,c
  2507  001070  0E00               	movlw	high _an
  2508  001072  D014               	goto	L3
  2509  001074                     l146:
  2510  001074  90D8               	bcf	status,0,c
  2511  001076  3426               	rlcf	read_cal@i,w,c
  2512  001078  6ED9               	movwf	fsr2l,c
  2513  00107A  3427               	rlcf	read_cal@i+1,w,c
  2514  00107C  6EDA               	movwf	fsr2h,c
  2515  00107E  0EDD               	movlw	low _ls
  2516  001080  26D9               	addwf	fsr2l,f,c
  2517  001082  0E00               	movlw	high _ls
  2518  001084  22DA               	addwfc	fsr2h,f,c
  2519  001086  CFDE F015          	movff	postinc2,??_read_cal
  2520  00108A  CFDD F016          	movff	postdec2,??_read_cal+1
  2521  00108E  90D8               	bcf	status,0,c
  2522  001090  3615               	rlcf	??_read_cal,f,c
  2523  001092  3616               	rlcf	??_read_cal+1,f,c
  2524  001094  0EA0               	movlw	low _maxs
  2525  001096  2415               	addwf	??_read_cal,w,c
  2526  001098  6E1E               	movwf	_read_cal$508,c
  2527  00109A  0E00               	movlw	high _maxs
  2528  00109C                     L3:
  2529  00109C  2016               	addwfc	??_read_cal+1,w,c
  2530  00109E  6E1F               	movwf	_read_cal$508+1,c
  2531  0010A0  C01E  FFD9         	movff	_read_cal$508,fsr2l
  2532  0010A4  C01F  FFDA         	movff	_read_cal$508+1,fsr2h
  2533  0010A8  90D8               	bcf	status,0,c
  2534  0010AA  3426               	rlcf	read_cal@i,w,c
  2535  0010AC  6EE1               	movwf	fsr1l,c
  2536  0010AE  3427               	rlcf	read_cal@i+1,w,c
  2537  0010B0  6EE2               	movwf	fsr1h,c
  2538  0010B2  0EDD               	movlw	low _ls
  2539  0010B4  26E1               	addwf	fsr1l,f,c
  2540  0010B6  0E00               	movlw	high _ls
  2541  0010B8  22E2               	addwfc	fsr1h,f,c
  2542  0010BA  CFE6 F015          	movff	postinc1,??_read_cal
  2543  0010BE  CFE5 F016          	movff	postdec1,??_read_cal+1
  2544  0010C2  90D8               	bcf	status,0,c
  2545  0010C4  3615               	rlcf	??_read_cal,f,c
  2546  0010C6  3616               	rlcf	??_read_cal+1,f,c
  2547  0010C8  0EA0               	movlw	low _maxs
  2548  0010CA  2415               	addwf	??_read_cal,w,c
  2549  0010CC  6EE1               	movwf	fsr1l,c
  2550  0010CE  0E00               	movlw	high _maxs
  2551  0010D0  2016               	addwfc	??_read_cal+1,w,c
  2552  0010D2  6EE2               	movwf	fsr1h,c
  2553  0010D4  CFDE FFE6          	movff	postinc2,postinc1
  2554  0010D8  CFDD FFE5          	movff	postdec2,postdec1
  2555  0010DC  4A26               	infsnz	read_cal@i,f,c
  2556  0010DE  2A27               	incf	read_cal@i+1,f,c
  2557  0010E0  BE27               	btfsc	read_cal@i+1,7,c
  2558  0010E2  D77D               	goto	l143
  2559  0010E4  5027               	movf	read_cal@i+1,w,c
  2560  0010E6  E101               	bnz	l3237
  2561  0010E8  D774               	goto	L4
  2562  0010EA                     u3660:
  2563  0010EA                     l3237:
  2564                           
  2565                           ;analog.c: 51: for (i = 0;i < 5;i++) mins[ls[i]] = mins[ls[i]]<an[ls[i]]?mins[ls[i]]:an[
      +                          ls[i]];
  2566  0010EA  0E00               	movlw	0
  2567  0010EC  6E27               	movwf	read_cal@i+1,c
  2568  0010EE  0E00               	movlw	0
  2569  0010F0  6E26               	movwf	read_cal@i,c
  2570  0010F2  BE27               	btfsc	read_cal@i+1,7,c
  2571  0010F4  D008               	goto	l149
  2572  0010F6  5027               	movf	read_cal@i+1,w,c
  2573  0010F8  E105               	bnz	u3670
  2574  0010FA  0E05               	movlw	5
  2575  0010FC  5C26               	subwf	read_cal@i,w,c
  2576  0010FE  B0D8               	btfsc	status,0,c
  2577  001100  D088               	goto	u3690
  2578  001102  D001               	goto	l149
  2579  001104                     u3670:
  2580  001104  D086               	goto	u3690
  2581  001106                     l149:
  2582  001106  90D8               	bcf	status,0,c
  2583  001108  3426               	rlcf	read_cal@i,w,c
  2584  00110A  6ED9               	movwf	fsr2l,c
  2585  00110C  3427               	rlcf	read_cal@i+1,w,c
  2586  00110E  6EDA               	movwf	fsr2h,c
  2587  001110  0EDD               	movlw	low _ls
  2588  001112  26D9               	addwf	fsr2l,f,c
  2589  001114  0E00               	movlw	high _ls
  2590  001116  22DA               	addwfc	fsr2h,f,c
  2591  001118  CFDE F015          	movff	postinc2,??_read_cal
  2592  00111C  CFDD F016          	movff	postdec2,??_read_cal+1
  2593  001120  90D8               	bcf	status,0,c
  2594  001122  3615               	rlcf	??_read_cal,f,c
  2595  001124  3616               	rlcf	??_read_cal+1,f,c
  2596  001126  0EB2               	movlw	low _an
  2597  001128  2415               	addwf	??_read_cal,w,c
  2598  00112A  6ED9               	movwf	fsr2l,c
  2599  00112C  0E00               	movlw	high _an
  2600  00112E  2016               	addwfc	??_read_cal+1,w,c
  2601  001130  6EDA               	movwf	fsr2h,c
  2602  001132  90D8               	bcf	status,0,c
  2603  001134  3426               	rlcf	read_cal@i,w,c
  2604  001136  6EE1               	movwf	fsr1l,c
  2605  001138  3427               	rlcf	read_cal@i+1,w,c
  2606  00113A  6EE2               	movwf	fsr1h,c
  2607  00113C  0EDD               	movlw	low _ls
  2608  00113E  26E1               	addwf	fsr1l,f,c
  2609  001140  0E00               	movlw	high _ls
  2610  001142  22E2               	addwfc	fsr1h,f,c
  2611  001144  CFE6 F019          	movff	postinc1,??_read_cal+4
  2612  001148  CFE5 F01A          	movff	postdec1,??_read_cal+5
  2613  00114C  90D8               	bcf	status,0,c
  2614  00114E  3619               	rlcf	??_read_cal+4,f,c
  2615  001150  361A               	rlcf	??_read_cal+5,f,c
  2616  001152  0E8E               	movlw	low _mins
  2617  001154  2419               	addwf	??_read_cal+4,w,c
  2618  001156  6EE1               	movwf	fsr1l,c
  2619  001158  0E00               	movlw	high _mins
  2620  00115A  201A               	addwfc	??_read_cal+5,w,c
  2621  00115C  6EE2               	movwf	fsr1h,c
  2622  00115E  50DE               	movf	postinc2,w,c
  2623  001160  5CE6               	subwf	postinc1,w,c
  2624  001162  50E6               	movf	postinc1,w,c
  2625  001164  0A80               	xorlw	128
  2626  001166  6E1D               	movwf	(??_read_cal+8)& (0+255),c
  2627  001168  50DE               	movf	postinc2,w,c
  2628  00116A  0A80               	xorlw	128
  2629  00116C  581D               	subwfb	(??_read_cal+8)& (0+255),w,c
  2630  00116E  A0D8               	btfss	status,0,c
  2631  001170  D015               	goto	l152
  2632  001172  90D8               	bcf	status,0,c
  2633  001174  3426               	rlcf	read_cal@i,w,c
  2634  001176  6ED9               	movwf	fsr2l,c
  2635  001178  3427               	rlcf	read_cal@i+1,w,c
  2636  00117A  6EDA               	movwf	fsr2h,c
  2637  00117C  0EDD               	movlw	low _ls
  2638  00117E  26D9               	addwf	fsr2l,f,c
  2639  001180  0E00               	movlw	high _ls
  2640  001182  22DA               	addwfc	fsr2h,f,c
  2641  001184  CFDE F015          	movff	postinc2,??_read_cal
  2642  001188  CFDD F016          	movff	postdec2,??_read_cal+1
  2643  00118C  90D8               	bcf	status,0,c
  2644  00118E  3615               	rlcf	??_read_cal,f,c
  2645  001190  3616               	rlcf	??_read_cal+1,f,c
  2646  001192  0EB2               	movlw	low _an
  2647  001194  2415               	addwf	??_read_cal,w,c
  2648  001196  6E20               	movwf	_read_cal$510,c
  2649  001198  0E00               	movlw	high _an
  2650  00119A  D014               	goto	L5
  2651  00119C                     l152:
  2652  00119C  90D8               	bcf	status,0,c
  2653  00119E  3426               	rlcf	read_cal@i,w,c
  2654  0011A0  6ED9               	movwf	fsr2l,c
  2655  0011A2  3427               	rlcf	read_cal@i+1,w,c
  2656  0011A4  6EDA               	movwf	fsr2h,c
  2657  0011A6  0EDD               	movlw	low _ls
  2658  0011A8  26D9               	addwf	fsr2l,f,c
  2659  0011AA  0E00               	movlw	high _ls
  2660  0011AC  22DA               	addwfc	fsr2h,f,c
  2661  0011AE  CFDE F015          	movff	postinc2,??_read_cal
  2662  0011B2  CFDD F016          	movff	postdec2,??_read_cal+1
  2663  0011B6  90D8               	bcf	status,0,c
  2664  0011B8  3615               	rlcf	??_read_cal,f,c
  2665  0011BA  3616               	rlcf	??_read_cal+1,f,c
  2666  0011BC  0E8E               	movlw	low _mins
  2667  0011BE  2415               	addwf	??_read_cal,w,c
  2668  0011C0  6E20               	movwf	_read_cal$510,c
  2669  0011C2  0E00               	movlw	high _mins
  2670  0011C4                     L5:
  2671  0011C4  2016               	addwfc	??_read_cal+1,w,c
  2672  0011C6  6E21               	movwf	_read_cal$510+1,c
  2673  0011C8  C020  FFD9         	movff	_read_cal$510,fsr2l
  2674  0011CC  C021  FFDA         	movff	_read_cal$510+1,fsr2h
  2675  0011D0  90D8               	bcf	status,0,c
  2676  0011D2  3426               	rlcf	read_cal@i,w,c
  2677  0011D4  6EE1               	movwf	fsr1l,c
  2678  0011D6  3427               	rlcf	read_cal@i+1,w,c
  2679  0011D8  6EE2               	movwf	fsr1h,c
  2680  0011DA  0EDD               	movlw	low _ls
  2681  0011DC  26E1               	addwf	fsr1l,f,c
  2682  0011DE  0E00               	movlw	high _ls
  2683  0011E0  22E2               	addwfc	fsr1h,f,c
  2684  0011E2  CFE6 F015          	movff	postinc1,??_read_cal
  2685  0011E6  CFE5 F016          	movff	postdec1,??_read_cal+1
  2686  0011EA  90D8               	bcf	status,0,c
  2687  0011EC  3615               	rlcf	??_read_cal,f,c
  2688  0011EE  3616               	rlcf	??_read_cal+1,f,c
  2689  0011F0  0E8E               	movlw	low _mins
  2690  0011F2  2415               	addwf	??_read_cal,w,c
  2691  0011F4  6EE1               	movwf	fsr1l,c
  2692  0011F6  0E00               	movlw	high _mins
  2693  0011F8  2016               	addwfc	??_read_cal+1,w,c
  2694  0011FA  6EE2               	movwf	fsr1h,c
  2695  0011FC  CFDE FFE6          	movff	postinc2,postinc1
  2696  001200  CFDD FFE5          	movff	postdec2,postdec1
  2697  001204  4A26               	infsnz	read_cal@i,f,c
  2698  001206  2A27               	incf	read_cal@i+1,f,c
  2699  001208  BE27               	btfsc	read_cal@i+1,7,c
  2700  00120A  D77D               	goto	l149
  2701  00120C  5027               	movf	read_cal@i+1,w,c
  2702  00120E  E101               	bnz	l3255
  2703  001210  D774               	goto	L6
  2704  001212                     u3690:
  2705  001212                     l3255:
  2706                           
  2707                           ;analog.c: 53: for (i = 0;i < 2;i++) maxs[es[i]] = maxs[es[i]]>an[es[i]]?maxs[es[i]]:an[
      +                          es[i]];
  2708  001212  0E00               	movlw	0
  2709  001214  6E27               	movwf	read_cal@i+1,c
  2710  001216  0E00               	movlw	0
  2711  001218  6E26               	movwf	read_cal@i,c
  2712  00121A  BE27               	btfsc	read_cal@i+1,7,c
  2713  00121C  D008               	goto	l155
  2714  00121E  5027               	movf	read_cal@i+1,w,c
  2715  001220  E105               	bnz	u3700
  2716  001222  0E02               	movlw	2
  2717  001224  5C26               	subwf	read_cal@i,w,c
  2718  001226  B0D8               	btfsc	status,0,c
  2719  001228  D088               	goto	u3720
  2720  00122A  D001               	goto	l155
  2721  00122C                     u3700:
  2722  00122C  D086               	goto	u3720
  2723  00122E                     l155:
  2724  00122E  90D8               	bcf	status,0,c
  2725  001230  3426               	rlcf	read_cal@i,w,c
  2726  001232  6ED9               	movwf	fsr2l,c
  2727  001234  3427               	rlcf	read_cal@i+1,w,c
  2728  001236  6EDA               	movwf	fsr2h,c
  2729  001238  0E38               	movlw	low _es
  2730  00123A  26D9               	addwf	fsr2l,f,c
  2731  00123C  0E00               	movlw	high _es
  2732  00123E  22DA               	addwfc	fsr2h,f,c
  2733  001240  CFDE F015          	movff	postinc2,??_read_cal
  2734  001244  CFDD F016          	movff	postdec2,??_read_cal+1
  2735  001248  90D8               	bcf	status,0,c
  2736  00124A  3615               	rlcf	??_read_cal,f,c
  2737  00124C  3616               	rlcf	??_read_cal+1,f,c
  2738  00124E  0EA0               	movlw	low _maxs
  2739  001250  2415               	addwf	??_read_cal,w,c
  2740  001252  6ED9               	movwf	fsr2l,c
  2741  001254  0E00               	movlw	high _maxs
  2742  001256  2016               	addwfc	??_read_cal+1,w,c
  2743  001258  6EDA               	movwf	fsr2h,c
  2744  00125A  90D8               	bcf	status,0,c
  2745  00125C  3426               	rlcf	read_cal@i,w,c
  2746  00125E  6EE1               	movwf	fsr1l,c
  2747  001260  3427               	rlcf	read_cal@i+1,w,c
  2748  001262  6EE2               	movwf	fsr1h,c
  2749  001264  0E38               	movlw	low _es
  2750  001266  26E1               	addwf	fsr1l,f,c
  2751  001268  0E00               	movlw	high _es
  2752  00126A  22E2               	addwfc	fsr1h,f,c
  2753  00126C  CFE6 F019          	movff	postinc1,??_read_cal+4
  2754  001270  CFE5 F01A          	movff	postdec1,??_read_cal+5
  2755  001274  90D8               	bcf	status,0,c
  2756  001276  3619               	rlcf	??_read_cal+4,f,c
  2757  001278  361A               	rlcf	??_read_cal+5,f,c
  2758  00127A  0EB2               	movlw	low _an
  2759  00127C  2419               	addwf	??_read_cal+4,w,c
  2760  00127E  6EE1               	movwf	fsr1l,c
  2761  001280  0E00               	movlw	high _an
  2762  001282  201A               	addwfc	??_read_cal+5,w,c
  2763  001284  6EE2               	movwf	fsr1h,c
  2764  001286  50DE               	movf	postinc2,w,c
  2765  001288  5CE6               	subwf	postinc1,w,c
  2766  00128A  50E6               	movf	postinc1,w,c
  2767  00128C  0A80               	xorlw	128
  2768  00128E  6E1D               	movwf	(??_read_cal+8)& (0+255),c
  2769  001290  50DE               	movf	postinc2,w,c
  2770  001292  0A80               	xorlw	128
  2771  001294  581D               	subwfb	(??_read_cal+8)& (0+255),w,c
  2772  001296  A0D8               	btfss	status,0,c
  2773  001298  D015               	goto	l158
  2774  00129A  90D8               	bcf	status,0,c
  2775  00129C  3426               	rlcf	read_cal@i,w,c
  2776  00129E  6ED9               	movwf	fsr2l,c
  2777  0012A0  3427               	rlcf	read_cal@i+1,w,c
  2778  0012A2  6EDA               	movwf	fsr2h,c
  2779  0012A4  0E38               	movlw	low _es
  2780  0012A6  26D9               	addwf	fsr2l,f,c
  2781  0012A8  0E00               	movlw	high _es
  2782  0012AA  22DA               	addwfc	fsr2h,f,c
  2783  0012AC  CFDE F015          	movff	postinc2,??_read_cal
  2784  0012B0  CFDD F016          	movff	postdec2,??_read_cal+1
  2785  0012B4  90D8               	bcf	status,0,c
  2786  0012B6  3615               	rlcf	??_read_cal,f,c
  2787  0012B8  3616               	rlcf	??_read_cal+1,f,c
  2788  0012BA  0EB2               	movlw	low _an
  2789  0012BC  2415               	addwf	??_read_cal,w,c
  2790  0012BE  6E22               	movwf	_read_cal$512,c
  2791  0012C0  0E00               	movlw	high _an
  2792  0012C2  D014               	goto	L7
  2793  0012C4                     l158:
  2794  0012C4  90D8               	bcf	status,0,c
  2795  0012C6  3426               	rlcf	read_cal@i,w,c
  2796  0012C8  6ED9               	movwf	fsr2l,c
  2797  0012CA  3427               	rlcf	read_cal@i+1,w,c
  2798  0012CC  6EDA               	movwf	fsr2h,c
  2799  0012CE  0E38               	movlw	low _es
  2800  0012D0  26D9               	addwf	fsr2l,f,c
  2801  0012D2  0E00               	movlw	high _es
  2802  0012D4  22DA               	addwfc	fsr2h,f,c
  2803  0012D6  CFDE F015          	movff	postinc2,??_read_cal
  2804  0012DA  CFDD F016          	movff	postdec2,??_read_cal+1
  2805  0012DE  90D8               	bcf	status,0,c
  2806  0012E0  3615               	rlcf	??_read_cal,f,c
  2807  0012E2  3616               	rlcf	??_read_cal+1,f,c
  2808  0012E4  0EA0               	movlw	low _maxs
  2809  0012E6  2415               	addwf	??_read_cal,w,c
  2810  0012E8  6E22               	movwf	_read_cal$512,c
  2811  0012EA  0E00               	movlw	high _maxs
  2812  0012EC                     L7:
  2813  0012EC  2016               	addwfc	??_read_cal+1,w,c
  2814  0012EE  6E23               	movwf	_read_cal$512+1,c
  2815  0012F0  C022  FFD9         	movff	_read_cal$512,fsr2l
  2816  0012F4  C023  FFDA         	movff	_read_cal$512+1,fsr2h
  2817  0012F8  90D8               	bcf	status,0,c
  2818  0012FA  3426               	rlcf	read_cal@i,w,c
  2819  0012FC  6EE1               	movwf	fsr1l,c
  2820  0012FE  3427               	rlcf	read_cal@i+1,w,c
  2821  001300  6EE2               	movwf	fsr1h,c
  2822  001302  0E38               	movlw	low _es
  2823  001304  26E1               	addwf	fsr1l,f,c
  2824  001306  0E00               	movlw	high _es
  2825  001308  22E2               	addwfc	fsr1h,f,c
  2826  00130A  CFE6 F015          	movff	postinc1,??_read_cal
  2827  00130E  CFE5 F016          	movff	postdec1,??_read_cal+1
  2828  001312  90D8               	bcf	status,0,c
  2829  001314  3615               	rlcf	??_read_cal,f,c
  2830  001316  3616               	rlcf	??_read_cal+1,f,c
  2831  001318  0EA0               	movlw	low _maxs
  2832  00131A  2415               	addwf	??_read_cal,w,c
  2833  00131C  6EE1               	movwf	fsr1l,c
  2834  00131E  0E00               	movlw	high _maxs
  2835  001320  2016               	addwfc	??_read_cal+1,w,c
  2836  001322  6EE2               	movwf	fsr1h,c
  2837  001324  CFDE FFE6          	movff	postinc2,postinc1
  2838  001328  CFDD FFE5          	movff	postdec2,postdec1
  2839  00132C  4A26               	infsnz	read_cal@i,f,c
  2840  00132E  2A27               	incf	read_cal@i+1,f,c
  2841  001330  BE27               	btfsc	read_cal@i+1,7,c
  2842  001332  D77D               	goto	l155
  2843  001334  5027               	movf	read_cal@i+1,w,c
  2844  001336  E101               	bnz	l3273
  2845  001338  D774               	goto	L8
  2846  00133A                     u3720:
  2847  00133A                     l3273:
  2848                           
  2849                           ;analog.c: 54: for (i = 0;i < 2;i++) mins[es[i]] = mins[es[i]]<an[es[i]]?mins[es[i]]:an[
      +                          es[i]];
  2850  00133A  0E00               	movlw	0
  2851  00133C  6E27               	movwf	read_cal@i+1,c
  2852  00133E  0E00               	movlw	0
  2853  001340  6E26               	movwf	read_cal@i,c
  2854  001342  BE27               	btfsc	read_cal@i+1,7,c
  2855  001344  D008               	goto	l161
  2856  001346  5027               	movf	read_cal@i+1,w,c
  2857  001348  E105               	bnz	u3730
  2858  00134A  0E02               	movlw	2
  2859  00134C  5C26               	subwf	read_cal@i,w,c
  2860  00134E  B0D8               	btfsc	status,0,c
  2861  001350  0012               	return	
  2862  001352  D001               	goto	l161
  2863  001354                     u3730:
  2864  001354  0012               	return	
  2865  001356                     l161:
  2866  001356  90D8               	bcf	status,0,c
  2867  001358  3426               	rlcf	read_cal@i,w,c
  2868  00135A  6ED9               	movwf	fsr2l,c
  2869  00135C  3427               	rlcf	read_cal@i+1,w,c
  2870  00135E  6EDA               	movwf	fsr2h,c
  2871  001360  0E38               	movlw	low _es
  2872  001362  26D9               	addwf	fsr2l,f,c
  2873  001364  0E00               	movlw	high _es
  2874  001366  22DA               	addwfc	fsr2h,f,c
  2875  001368  CFDE F015          	movff	postinc2,??_read_cal
  2876  00136C  CFDD F016          	movff	postdec2,??_read_cal+1
  2877  001370  90D8               	bcf	status,0,c
  2878  001372  3615               	rlcf	??_read_cal,f,c
  2879  001374  3616               	rlcf	??_read_cal+1,f,c
  2880  001376  0EB2               	movlw	low _an
  2881  001378  2415               	addwf	??_read_cal,w,c
  2882  00137A  6ED9               	movwf	fsr2l,c
  2883  00137C  0E00               	movlw	high _an
  2884  00137E  2016               	addwfc	??_read_cal+1,w,c
  2885  001380  6EDA               	movwf	fsr2h,c
  2886  001382  90D8               	bcf	status,0,c
  2887  001384  3426               	rlcf	read_cal@i,w,c
  2888  001386  6EE1               	movwf	fsr1l,c
  2889  001388  3427               	rlcf	read_cal@i+1,w,c
  2890  00138A  6EE2               	movwf	fsr1h,c
  2891  00138C  0E38               	movlw	low _es
  2892  00138E  26E1               	addwf	fsr1l,f,c
  2893  001390  0E00               	movlw	high _es
  2894  001392  22E2               	addwfc	fsr1h,f,c
  2895  001394  CFE6 F019          	movff	postinc1,??_read_cal+4
  2896  001398  CFE5 F01A          	movff	postdec1,??_read_cal+5
  2897  00139C  90D8               	bcf	status,0,c
  2898  00139E  3619               	rlcf	??_read_cal+4,f,c
  2899  0013A0  361A               	rlcf	??_read_cal+5,f,c
  2900  0013A2  0E8E               	movlw	low _mins
  2901  0013A4  2419               	addwf	??_read_cal+4,w,c
  2902  0013A6  6EE1               	movwf	fsr1l,c
  2903  0013A8  0E00               	movlw	high _mins
  2904  0013AA  201A               	addwfc	??_read_cal+5,w,c
  2905  0013AC  6EE2               	movwf	fsr1h,c
  2906  0013AE  50DE               	movf	postinc2,w,c
  2907  0013B0  5CE6               	subwf	postinc1,w,c
  2908  0013B2  50E6               	movf	postinc1,w,c
  2909  0013B4  0A80               	xorlw	128
  2910  0013B6  6E1D               	movwf	(??_read_cal+8)& (0+255),c
  2911  0013B8  50DE               	movf	postinc2,w,c
  2912  0013BA  0A80               	xorlw	128
  2913  0013BC  581D               	subwfb	(??_read_cal+8)& (0+255),w,c
  2914  0013BE  A0D8               	btfss	status,0,c
  2915  0013C0  D015               	goto	l164
  2916  0013C2  90D8               	bcf	status,0,c
  2917  0013C4  3426               	rlcf	read_cal@i,w,c
  2918  0013C6  6ED9               	movwf	fsr2l,c
  2919  0013C8  3427               	rlcf	read_cal@i+1,w,c
  2920  0013CA  6EDA               	movwf	fsr2h,c
  2921  0013CC  0E38               	movlw	low _es
  2922  0013CE  26D9               	addwf	fsr2l,f,c
  2923  0013D0  0E00               	movlw	high _es
  2924  0013D2  22DA               	addwfc	fsr2h,f,c
  2925  0013D4  CFDE F015          	movff	postinc2,??_read_cal
  2926  0013D8  CFDD F016          	movff	postdec2,??_read_cal+1
  2927  0013DC  90D8               	bcf	status,0,c
  2928  0013DE  3615               	rlcf	??_read_cal,f,c
  2929  0013E0  3616               	rlcf	??_read_cal+1,f,c
  2930  0013E2  0EB2               	movlw	low _an
  2931  0013E4  2415               	addwf	??_read_cal,w,c
  2932  0013E6  6E24               	movwf	_read_cal$514,c
  2933  0013E8  0E00               	movlw	high _an
  2934  0013EA  D014               	goto	L9
  2935  0013EC                     l164:
  2936  0013EC  90D8               	bcf	status,0,c
  2937  0013EE  3426               	rlcf	read_cal@i,w,c
  2938  0013F0  6ED9               	movwf	fsr2l,c
  2939  0013F2  3427               	rlcf	read_cal@i+1,w,c
  2940  0013F4  6EDA               	movwf	fsr2h,c
  2941  0013F6  0E38               	movlw	low _es
  2942  0013F8  26D9               	addwf	fsr2l,f,c
  2943  0013FA  0E00               	movlw	high _es
  2944  0013FC  22DA               	addwfc	fsr2h,f,c
  2945  0013FE  CFDE F015          	movff	postinc2,??_read_cal
  2946  001402  CFDD F016          	movff	postdec2,??_read_cal+1
  2947  001406  90D8               	bcf	status,0,c
  2948  001408  3615               	rlcf	??_read_cal,f,c
  2949  00140A  3616               	rlcf	??_read_cal+1,f,c
  2950  00140C  0E8E               	movlw	low _mins
  2951  00140E  2415               	addwf	??_read_cal,w,c
  2952  001410  6E24               	movwf	_read_cal$514,c
  2953  001412  0E00               	movlw	high _mins
  2954  001414                     L9:
  2955  001414  2016               	addwfc	??_read_cal+1,w,c
  2956  001416  6E25               	movwf	_read_cal$514+1,c
  2957  001418  C024  FFD9         	movff	_read_cal$514,fsr2l
  2958  00141C  C025  FFDA         	movff	_read_cal$514+1,fsr2h
  2959  001420  90D8               	bcf	status,0,c
  2960  001422  3426               	rlcf	read_cal@i,w,c
  2961  001424  6EE1               	movwf	fsr1l,c
  2962  001426  3427               	rlcf	read_cal@i+1,w,c
  2963  001428  6EE2               	movwf	fsr1h,c
  2964  00142A  0E38               	movlw	low _es
  2965  00142C  26E1               	addwf	fsr1l,f,c
  2966  00142E  0E00               	movlw	high _es
  2967  001430  22E2               	addwfc	fsr1h,f,c
  2968  001432  CFE6 F015          	movff	postinc1,??_read_cal
  2969  001436  CFE5 F016          	movff	postdec1,??_read_cal+1
  2970  00143A  90D8               	bcf	status,0,c
  2971  00143C  3615               	rlcf	??_read_cal,f,c
  2972  00143E  3616               	rlcf	??_read_cal+1,f,c
  2973  001440  0E8E               	movlw	low _mins
  2974  001442  2415               	addwf	??_read_cal,w,c
  2975  001444  6EE1               	movwf	fsr1l,c
  2976  001446  0E00               	movlw	high _mins
  2977  001448  2016               	addwfc	??_read_cal+1,w,c
  2978  00144A  6EE2               	movwf	fsr1h,c
  2979  00144C  CFDE FFE6          	movff	postinc2,postinc1
  2980  001450  CFDD FFE5          	movff	postdec2,postdec1
  2981  001454  4A26               	infsnz	read_cal@i,f,c
  2982  001456  2A27               	incf	read_cal@i+1,f,c
  2983  001458  BE27               	btfsc	read_cal@i+1,7,c
  2984  00145A  D77D               	goto	l161
  2985  00145C  5027               	movf	read_cal@i+1,w,c
  2986  00145E  E101               	bnz	l167
  2987  001460  D774               	goto	L10
  2988  001462                     l167:
  2989  001462  0012               	return		;funcret
  2990  001464                     __end_of_read_cal:
  2991                           	opt stack 0
  2992                           tblptru	equ	0xFF8
  2993                           tblptrh	equ	0xFF7
  2994                           tblptrl	equ	0xFF6
  2995                           tablat	equ	0xFF5
  2996                           postinc0	equ	0xFEE
  2997                           wreg	equ	0xFE8
  2998                           postinc1	equ	0xFE6
  2999                           postdec1	equ	0xFE5
  3000                           fsr1h	equ	0xFE2
  3001                           fsr1l	equ	0xFE1
  3002                           postinc2	equ	0xFDE
  3003                           postdec2	equ	0xFDD
  3004                           fsr2h	equ	0xFDA
  3005                           fsr2l	equ	0xFD9
  3006                           status	equ	0xFD8
  3007                           
  3008 ;; *************** function _mspeed *****************
  3009 ;; Defined at:
  3010 ;;		line 107 in file "config.c"
  3011 ;; Parameters:    Size  Location     Type
  3012 ;;  a               2   21[BANK0 ] int 
  3013 ;;  b               2   23[BANK0 ] int 
  3014 ;; Auto vars:     Size  Location     Type
  3015 ;;		None
  3016 ;; Return value:  Size  Location     Type
  3017 ;;                  1    wreg      void 
  3018 ;; Registers used:
  3019 ;;		wreg, status,2, status,0, cstack
  3020 ;; Tracked objects:
  3021 ;;		On entry : 0/0
  3022 ;;		On exit  : 0/0
  3023 ;;		Unchanged: 0/0
  3024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3025 ;;      Params:         0       4       0       0       0       0       0       0       0
  3026 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3027 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3028 ;;      Totals:         0       4       0       0       0       0       0       0       0
  3029 ;;Total ram usage:        4 bytes
  3030 ;; Hardware stack levels used:    1
  3031 ;; Hardware stack levels required when called:    3
  3032 ;; This function calls:
  3033 ;;		_MotorASpeed
  3034 ;;		_MotorBSpeed
  3035 ;; This function is called by:
  3036 ;;		_main
  3037 ;; This function uses a non-reentrant model
  3038 ;;
  3039                           
  3040                           	psect	text6
  3041  002466                     __ptext6:
  3042                           	opt stack 0
  3043  002466                     _mspeed:
  3044                           	opt stack 27
  3045                           
  3046                           ;config.c: 108: MotorASpeed(a);
  3047                           
  3048                           ;incstack = 0
  3049  002466  C0D9  F01D         	movff	mspeed@a,MotorASpeed@S
  3050  00246A  C0DA  F01E         	movff	mspeed@a+1,MotorASpeed@S+1
  3051  00246E  EC99  F00F         	call	_MotorASpeed	;wreg free
  3052                           
  3053                           ;config.c: 109: MotorBSpeed(b);
  3054  002472  C0DB  F01D         	movff	mspeed@b,MotorBSpeed@S
  3055  002476  C0DC  F01E         	movff	mspeed@b+1,MotorBSpeed@S+1
  3056  00247A  ECEA  F00F         	call	_MotorBSpeed	;wreg free
  3057  00247E  0012               	return		;funcret
  3058  002480                     __end_of_mspeed:
  3059                           	opt stack 0
  3060                           tblptru	equ	0xFF8
  3061                           tblptrh	equ	0xFF7
  3062                           tblptrl	equ	0xFF6
  3063                           tablat	equ	0xFF5
  3064                           postinc0	equ	0xFEE
  3065                           wreg	equ	0xFE8
  3066                           postinc1	equ	0xFE6
  3067                           postdec1	equ	0xFE5
  3068                           fsr1h	equ	0xFE2
  3069                           fsr1l	equ	0xFE1
  3070                           postinc2	equ	0xFDE
  3071                           postdec2	equ	0xFDD
  3072                           fsr2h	equ	0xFDA
  3073                           fsr2l	equ	0xFD9
  3074                           status	equ	0xFD8
  3075                           
  3076 ;; *************** function _MotorBSpeed *****************
  3077 ;; Defined at:
  3078 ;;		line 95 in file "config.c"
  3079 ;; Parameters:    Size  Location     Type
  3080 ;;  S               2   28[COMRAM] int 
  3081 ;; Auto vars:     Size  Location     Type
  3082 ;;		None
  3083 ;; Return value:  Size  Location     Type
  3084 ;;                  1    wreg      void 
  3085 ;; Registers used:
  3086 ;;		wreg, status,2, status,0, cstack
  3087 ;; Tracked objects:
  3088 ;;		On entry : 0/0
  3089 ;;		On exit  : 0/0
  3090 ;;		Unchanged: 0/0
  3091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3092 ;;      Params:         2       0       0       0       0       0       0       0       0
  3093 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3094 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3095 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3096 ;;Total ram usage:        3 bytes
  3097 ;; Hardware stack levels used:    1
  3098 ;; Hardware stack levels required when called:    2
  3099 ;; This function calls:
  3100 ;;		___awdiv
  3101 ;; This function is called by:
  3102 ;;		_mspeed
  3103 ;; This function uses a non-reentrant model
  3104 ;;
  3105                           
  3106                           	psect	text7
  3107  001FD4                     __ptext7:
  3108                           	opt stack 0
  3109  001FD4                     _MotorBSpeed:
  3110                           	opt stack 27
  3111                           
  3112                           ;config.c: 97: S = S<1000?S:1000;
  3113                           
  3114                           ;incstack = 0
  3115  001FD4  BE1E               	btfsc	MotorBSpeed@S+1,7,c
  3116  001FD6  D00A               	goto	l272
  3117  001FD8  0EE8               	movlw	232
  3118  001FDA  5C1D               	subwf	MotorBSpeed@S,w,c
  3119  001FDC  0E03               	movlw	3
  3120  001FDE  581E               	subwfb	MotorBSpeed@S+1,w,c
  3121  001FE0  A0D8               	btfss	status,0,c
  3122  001FE2  D004               	goto	l272
  3123  001FE4  0E03               	movlw	3
  3124  001FE6  6E1E               	movwf	MotorBSpeed@S+1,c
  3125  001FE8  0EE8               	movlw	232
  3126  001FEA  6E1D               	movwf	MotorBSpeed@S,c
  3127  001FEC                     l272:
  3128                           
  3129                           ;config.c: 98: S = S>-1000?S:-1000;
  3130  001FEC  AE1E               	btfss	MotorBSpeed@S+1,7,c
  3131  001FEE  D00A               	goto	l276
  3132  001FF0  0E19               	movlw	25
  3133  001FF2  5C1D               	subwf	MotorBSpeed@S,w,c
  3134  001FF4  0EFC               	movlw	252
  3135  001FF6  581E               	subwfb	MotorBSpeed@S+1,w,c
  3136  001FF8  B0D8               	btfsc	status,0,c
  3137  001FFA  D004               	goto	l276
  3138  001FFC  0EFC               	movlw	252
  3139  001FFE  6E1E               	movwf	MotorBSpeed@S+1,c
  3140  002000  0E18               	movlw	24
  3141  002002  6E1D               	movwf	MotorBSpeed@S,c
  3142  002004                     l276:
  3143                           
  3144                           ;config.c: 100: PORTBbits.RB1 = S > 0 ? 0 : 1;
  3145  002004  BE1E               	btfsc	MotorBSpeed@S+1,7,c
  3146  002006  D005               	goto	u3381
  3147  002008  501E               	movf	MotorBSpeed@S+1,w,c
  3148  00200A  E106               	bnz	u3380
  3149  00200C  041D               	decf	MotorBSpeed@S,w,c
  3150  00200E  B0D8               	btfsc	status,0,c
  3151  002010  D003               	goto	u3380
  3152  002012                     u3381:
  3153  002012  6A1F               	clrf	??_MotorBSpeed& (0+255),c
  3154  002014  2A1F               	incf	??_MotorBSpeed& (0+255),f,c
  3155  002016  D001               	goto	u3398
  3156  002018                     u3380:
  3157  002018  6A1F               	clrf	??_MotorBSpeed& (0+255),c
  3158  00201A                     u3398:
  3159  00201A  461F               	rlncf	??_MotorBSpeed,f,c
  3160  00201C  5081               	movf	3969,w,c	;volatile
  3161  00201E  181F               	xorwf	??_MotorBSpeed,w,c
  3162  002020  0BFD               	andlw	-3
  3163  002022  181F               	xorwf	??_MotorBSpeed,w,c
  3164  002024  6E81               	movwf	3969,c	;volatile
  3165                           
  3166                           ;config.c: 101: S = S > 0 ? S : 1000 + S;
  3167  002026  BE1E               	btfsc	MotorBSpeed@S+1,7,c
  3168  002028  D005               	goto	u3400
  3169  00202A  501E               	movf	MotorBSpeed@S+1,w,c
  3170  00202C  E109               	bnz	l3031
  3171  00202E  041D               	decf	MotorBSpeed@S,w,c
  3172  002030  B0D8               	btfsc	status,0,c
  3173  002032  D006               	goto	l280
  3174  002034                     u3400:
  3175  002034  0EE8               	movlw	232
  3176  002036  241D               	addwf	MotorBSpeed@S,w,c
  3177  002038  6E1D               	movwf	MotorBSpeed@S,c
  3178  00203A  0E03               	movlw	3
  3179  00203C  201E               	addwfc	MotorBSpeed@S+1,w,c
  3180  00203E  6E1E               	movwf	MotorBSpeed@S+1,c
  3181  002040                     l280:
  3182  002040                     l3031:
  3183                           
  3184                           ;config.c: 103: CCP2CONbits.DC2B = S % 4;
  3185  002040  C01D  F01F         	movff	MotorBSpeed@S,??_MotorBSpeed
  3186  002044  0E03               	movlw	3
  3187  002046  161F               	andwf	??_MotorBSpeed,f,c
  3188  002048  3A1F               	swapf	??_MotorBSpeed,f,c
  3189  00204A  50BA               	movf	4026,w,c	;volatile
  3190  00204C  181F               	xorwf	??_MotorBSpeed,w,c
  3191  00204E  0BCF               	andlw	-49
  3192  002050  181F               	xorwf	??_MotorBSpeed,w,c
  3193  002052  6EBA               	movwf	4026,c	;volatile
  3194                           
  3195                           ;config.c: 104: CCPR2L = S / 4;
  3196  002054  C01D  F015         	movff	MotorBSpeed@S,___awdiv@dividend
  3197  002058  C01E  F016         	movff	MotorBSpeed@S+1,___awdiv@dividend+1
  3198  00205C  0E00               	movlw	0
  3199  00205E  6E18               	movwf	___awdiv@divisor+1,c
  3200  002060  0E04               	movlw	4
  3201  002062  6E17               	movwf	___awdiv@divisor,c
  3202  002064  EC7F  F010         	call	___awdiv	;wreg free
  3203  002068  5015               	movf	?___awdiv,w,c
  3204  00206A  6EBB               	movwf	4027,c	;volatile
  3205  00206C  0012               	return		;funcret
  3206  00206E                     __end_of_MotorBSpeed:
  3207                           	opt stack 0
  3208                           tblptru	equ	0xFF8
  3209                           tblptrh	equ	0xFF7
  3210                           tblptrl	equ	0xFF6
  3211                           tablat	equ	0xFF5
  3212                           postinc0	equ	0xFEE
  3213                           wreg	equ	0xFE8
  3214                           postinc1	equ	0xFE6
  3215                           postdec1	equ	0xFE5
  3216                           fsr1h	equ	0xFE2
  3217                           fsr1l	equ	0xFE1
  3218                           postinc2	equ	0xFDE
  3219                           postdec2	equ	0xFDD
  3220                           fsr2h	equ	0xFDA
  3221                           fsr2l	equ	0xFD9
  3222                           status	equ	0xFD8
  3223                           
  3224 ;; *************** function _MotorASpeed *****************
  3225 ;; Defined at:
  3226 ;;		line 84 in file "config.c"
  3227 ;; Parameters:    Size  Location     Type
  3228 ;;  S               2   28[COMRAM] int 
  3229 ;; Auto vars:     Size  Location     Type
  3230 ;;		None
  3231 ;; Return value:  Size  Location     Type
  3232 ;;                  1    wreg      void 
  3233 ;; Registers used:
  3234 ;;		wreg, status,2, status,0, cstack
  3235 ;; Tracked objects:
  3236 ;;		On entry : 0/0
  3237 ;;		On exit  : 0/0
  3238 ;;		Unchanged: 0/0
  3239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3240 ;;      Params:         2       0       0       0       0       0       0       0       0
  3241 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3242 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3243 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3244 ;;Total ram usage:        3 bytes
  3245 ;; Hardware stack levels used:    1
  3246 ;; Hardware stack levels required when called:    2
  3247 ;; This function calls:
  3248 ;;		___awdiv
  3249 ;; This function is called by:
  3250 ;;		_mspeed
  3251 ;; This function uses a non-reentrant model
  3252 ;;
  3253                           
  3254                           	psect	text8
  3255  001F32                     __ptext8:
  3256                           	opt stack 0
  3257  001F32                     _MotorASpeed:
  3258                           	opt stack 27
  3259                           
  3260                           ;config.c: 85: S = -S;
  3261                           
  3262                           ;incstack = 0
  3263  001F32  6C1D               	negf	MotorASpeed@S,c
  3264  001F34  1E1E               	comf	MotorASpeed@S+1,f,c
  3265  001F36  B0D8               	btfsc	status,0,c
  3266  001F38  2A1E               	incf	MotorASpeed@S+1,f,c
  3267                           
  3268                           ;config.c: 86: S = S<1000?S:1000;
  3269  001F3A  BE1E               	btfsc	MotorASpeed@S+1,7,c
  3270  001F3C  D00A               	goto	l257
  3271  001F3E  0EE8               	movlw	232
  3272  001F40  5C1D               	subwf	MotorASpeed@S,w,c
  3273  001F42  0E03               	movlw	3
  3274  001F44  581E               	subwfb	MotorASpeed@S+1,w,c
  3275  001F46  A0D8               	btfss	status,0,c
  3276  001F48  D004               	goto	l257
  3277  001F4A  0E03               	movlw	3
  3278  001F4C  6E1E               	movwf	MotorASpeed@S+1,c
  3279  001F4E  0EE8               	movlw	232
  3280  001F50  6E1D               	movwf	MotorASpeed@S,c
  3281  001F52                     l257:
  3282                           
  3283                           ;config.c: 87: S = S>-1000?S:-1000;
  3284  001F52  AE1E               	btfss	MotorASpeed@S+1,7,c
  3285  001F54  D00A               	goto	l261
  3286  001F56  0E19               	movlw	25
  3287  001F58  5C1D               	subwf	MotorASpeed@S,w,c
  3288  001F5A  0EFC               	movlw	252
  3289  001F5C  581E               	subwfb	MotorASpeed@S+1,w,c
  3290  001F5E  B0D8               	btfsc	status,0,c
  3291  001F60  D004               	goto	l261
  3292  001F62  0EFC               	movlw	252
  3293  001F64  6E1E               	movwf	MotorASpeed@S+1,c
  3294  001F66  0E18               	movlw	24
  3295  001F68  6E1D               	movwf	MotorASpeed@S,c
  3296  001F6A                     l261:
  3297                           
  3298                           ;config.c: 89: PORTBbits.RB0 = S > 0 ? 0 : 1;
  3299  001F6A  BE1E               	btfsc	MotorASpeed@S+1,7,c
  3300  001F6C  D005               	goto	u3331
  3301  001F6E  501E               	movf	MotorASpeed@S+1,w,c
  3302  001F70  E106               	bnz	u3330
  3303  001F72  041D               	decf	MotorASpeed@S,w,c
  3304  001F74  B0D8               	btfsc	status,0,c
  3305  001F76  D003               	goto	u3330
  3306  001F78                     u3331:
  3307  001F78  6A1F               	clrf	??_MotorASpeed& (0+255),c
  3308  001F7A  2A1F               	incf	??_MotorASpeed& (0+255),f,c
  3309  001F7C  D001               	goto	u3348
  3310  001F7E                     u3330:
  3311  001F7E  6A1F               	clrf	??_MotorASpeed& (0+255),c
  3312  001F80                     u3348:
  3313  001F80  5081               	movf	3969,w,c	;volatile
  3314  001F82  181F               	xorwf	??_MotorASpeed,w,c
  3315  001F84  0BFE               	andlw	-2
  3316  001F86  181F               	xorwf	??_MotorASpeed,w,c
  3317  001F88  6E81               	movwf	3969,c	;volatile
  3318                           
  3319                           ;config.c: 90: S = S > 0 ? S : 1000 + S;
  3320  001F8A  BE1E               	btfsc	MotorASpeed@S+1,7,c
  3321  001F8C  D005               	goto	u3350
  3322  001F8E  501E               	movf	MotorASpeed@S+1,w,c
  3323  001F90  E109               	bnz	l3015
  3324  001F92  041D               	decf	MotorASpeed@S,w,c
  3325  001F94  B0D8               	btfsc	status,0,c
  3326  001F96  D006               	goto	l265
  3327  001F98                     u3350:
  3328  001F98  0EE8               	movlw	232
  3329  001F9A  241D               	addwf	MotorASpeed@S,w,c
  3330  001F9C  6E1D               	movwf	MotorASpeed@S,c
  3331  001F9E  0E03               	movlw	3
  3332  001FA0  201E               	addwfc	MotorASpeed@S+1,w,c
  3333  001FA2  6E1E               	movwf	MotorASpeed@S+1,c
  3334  001FA4                     l265:
  3335  001FA4                     l3015:
  3336                           
  3337                           ;config.c: 92: CCP1CONbits.DC1B1 = S % 4;
  3338  001FA4  C01D  F01F         	movff	MotorASpeed@S,??_MotorASpeed
  3339  001FA8  0E03               	movlw	3
  3340  001FAA  161F               	andwf	??_MotorASpeed,f,c
  3341  001FAC  3A1F               	swapf	??_MotorASpeed,f,c
  3342  001FAE  461F               	rlncf	??_MotorASpeed,f,c
  3343  001FB0  50BD               	movf	4029,w,c	;volatile
  3344  001FB2  181F               	xorwf	??_MotorASpeed,w,c
  3345  001FB4  0BDF               	andlw	-33
  3346  001FB6  181F               	xorwf	??_MotorASpeed,w,c
  3347  001FB8  6EBD               	movwf	4029,c	;volatile
  3348                           
  3349                           ;config.c: 93: CCPR1L = S / 4;
  3350  001FBA  C01D  F015         	movff	MotorASpeed@S,___awdiv@dividend
  3351  001FBE  C01E  F016         	movff	MotorASpeed@S+1,___awdiv@dividend+1
  3352  001FC2  0E00               	movlw	0
  3353  001FC4  6E18               	movwf	___awdiv@divisor+1,c
  3354  001FC6  0E04               	movlw	4
  3355  001FC8  6E17               	movwf	___awdiv@divisor,c
  3356  001FCA  EC7F  F010         	call	___awdiv	;wreg free
  3357  001FCE  5015               	movf	?___awdiv,w,c
  3358  001FD0  6EBE               	movwf	4030,c	;volatile
  3359  001FD2  0012               	return		;funcret
  3360  001FD4                     __end_of_MotorASpeed:
  3361                           	opt stack 0
  3362                           tblptru	equ	0xFF8
  3363                           tblptrh	equ	0xFF7
  3364                           tblptrl	equ	0xFF6
  3365                           tablat	equ	0xFF5
  3366                           postinc0	equ	0xFEE
  3367                           wreg	equ	0xFE8
  3368                           postinc1	equ	0xFE6
  3369                           postdec1	equ	0xFE5
  3370                           fsr1h	equ	0xFE2
  3371                           fsr1l	equ	0xFE1
  3372                           postinc2	equ	0xFDE
  3373                           postdec2	equ	0xFDD
  3374                           fsr2h	equ	0xFDA
  3375                           fsr2l	equ	0xFD9
  3376                           status	equ	0xFD8
  3377                           
  3378 ;; *************** function _line_cal *****************
  3379 ;; Defined at:
  3380 ;;		line 57 in file "analog.c"
  3381 ;; Parameters:    Size  Location     Type
  3382 ;;		None
  3383 ;; Auto vars:     Size  Location     Type
  3384 ;;  value           4   14[BANK0 ] long 
  3385 ;;  b               4    8[BANK0 ] long 
  3386 ;;  a               4    4[BANK0 ] long 
  3387 ;;  j               2   22[BANK0 ] int 
  3388 ;;  i               2   20[BANK0 ] int 
  3389 ;;  aux             2   18[BANK0 ] int 
  3390 ;;  ok              2   12[BANK0 ] int 
  3391 ;; Return value:  Size  Location     Type
  3392 ;;                  1    wreg      void 
  3393 ;; Registers used:
  3394 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3395 ;; Tracked objects:
  3396 ;;		On entry : 0/0
  3397 ;;		On exit  : 0/0
  3398 ;;		Unchanged: 0/0
  3399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3400 ;;      Params:         0       0       0       0       0       0       0       0       0
  3401 ;;      Locals:         0      24       0       0       0       0       0       0       0
  3402 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3403 ;;      Totals:         4      24       0       0       0       0       0       0       0
  3404 ;;Total ram usage:       28 bytes
  3405 ;; Hardware stack levels used:    1
  3406 ;; Hardware stack levels required when called:    2
  3407 ;; This function calls:
  3408 ;;		___aldiv
  3409 ;;		___lmul
  3410 ;; This function is called by:
  3411 ;;		_main
  3412 ;; This function uses a non-reentrant model
  3413 ;;
  3414                           
  3415                           	psect	text9
  3416  001464                     __ptext9:
  3417                           	opt stack 0
  3418  001464                     _line_cal:
  3419                           	opt stack 28
  3420                           
  3421                           ;analog.c: 58: ll a = 0;
  3422                           
  3423                           ;incstack = 0
  3424  001464  0E00               	movlw	0
  3425  001466  0100               	movlb	0	; () banked
  3426  001468  6FC8               	movwf	line_cal@a& (0+255),b
  3427  00146A  0E00               	movlw	0
  3428  00146C  6FC9               	movwf	(line_cal@a+1)& (0+255),b
  3429  00146E  0E00               	movlw	0
  3430  001470  6FCA               	movwf	(line_cal@a+2)& (0+255),b
  3431  001472  0E00               	movlw	0
  3432  001474  6FCB               	movwf	(line_cal@a+3)& (0+255),b
  3433                           
  3434                           ;analog.c: 59: ll b = 0;
  3435  001476  0E00               	movlw	0
  3436  001478  0100               	movlb	0	; () banked
  3437  00147A  6FCC               	movwf	line_cal@b& (0+255),b
  3438  00147C  0E00               	movlw	0
  3439  00147E  6FCD               	movwf	(line_cal@b+1)& (0+255),b
  3440  001480  0E00               	movlw	0
  3441  001482  6FCE               	movwf	(line_cal@b+2)& (0+255),b
  3442  001484  0E00               	movlw	0
  3443  001486  6FCF               	movwf	(line_cal@b+3)& (0+255),b
  3444                           
  3445                           ;analog.c: 61: int i , j , aux;
  3446                           ;analog.c: 62: ll value;
  3447                           ;analog.c: 63: int ok = 0;
  3448  001488  0E00               	movlw	0
  3449  00148A  0100               	movlb	0	; () banked
  3450  00148C  6FD1               	movwf	(line_cal@ok+1)& (0+255),b
  3451  00148E  0E00               	movlw	0
  3452  001490  6FD0               	movwf	line_cal@ok& (0+255),b
  3453                           
  3454                           ;analog.c: 65: for (i = 0;i < 5;i++){
  3455  001492  0E00               	movlw	0
  3456  001494  0100               	movlb	0	; () banked
  3457  001496  6FD9               	movwf	(line_cal@i+1)& (0+255),b
  3458  001498  0E00               	movlw	0
  3459  00149A  6FD8               	movwf	line_cal@i& (0+255),b
  3460                           
  3461                           ; BSR set to: 0
  3462  00149C  0100               	movlb	0	; () banked
  3463  00149E  BFD9               	btfsc	(line_cal@i+1)& (0+255),7,b
  3464  0014A0  D00A               	goto	l170
  3465  0014A2  0100               	movlb	0	; () banked
  3466  0014A4  51D9               	movf	(line_cal@i+1)& (0+255),w,b
  3467  0014A6  E106               	bnz	u3760
  3468  0014A8  0E05               	movlw	5
  3469  0014AA  0100               	movlb	0	; () banked
  3470  0014AC  5DD8               	subwf	line_cal@i& (0+255),w,b
  3471  0014AE  B0D8               	btfsc	status,0,c
  3472  0014B0  D159               	goto	u3800
  3473  0014B2  D001               	goto	l170
  3474  0014B4                     u3760:
  3475                           
  3476                           ; BSR set to: 0
  3477  0014B4  D157               	goto	u3800
  3478  0014B6                     l170:
  3479                           
  3480                           ; BSR set to: 0
  3481                           ;analog.c: 67: j = ls[i];
  3482                           
  3483                           ; BSR set to: 0
  3484  0014B6  90D8               	bcf	status,0,c
  3485  0014B8  0100               	movlb	0	; () banked
  3486  0014BA  35D8               	rlcf	line_cal@i& (0+255),w,b
  3487  0014BC  6ED9               	movwf	fsr2l,c
  3488  0014BE  0100               	movlb	0	; () banked
  3489  0014C0  35D9               	rlcf	(line_cal@i+1)& (0+255),w,b
  3490  0014C2  6EDA               	movwf	fsr2h,c
  3491  0014C4  0EDD               	movlw	low _ls
  3492  0014C6  26D9               	addwf	fsr2l,f,c
  3493  0014C8  0E00               	movlw	high _ls
  3494  0014CA  22DA               	addwfc	fsr2h,f,c
  3495  0014CC  CFDE F0DA          	movff	postinc2,line_cal@j
  3496  0014D0  CFDD F0DB          	movff	postdec2,line_cal@j+1
  3497                           
  3498                           ;analog.c: 68: aux = an[j];
  3499  0014D4  90D8               	bcf	status,0,c
  3500  0014D6  0100               	movlb	0	; () banked
  3501  0014D8  35DA               	rlcf	line_cal@j& (0+255),w,b
  3502  0014DA  6ED9               	movwf	fsr2l,c
  3503  0014DC  0100               	movlb	0	; () banked
  3504  0014DE  35DB               	rlcf	(line_cal@j+1)& (0+255),w,b
  3505  0014E0  6EDA               	movwf	fsr2h,c
  3506  0014E2  0EB2               	movlw	low _an
  3507  0014E4  26D9               	addwf	fsr2l,f,c
  3508  0014E6  0E00               	movlw	high _an
  3509  0014E8  22DA               	addwfc	fsr2h,f,c
  3510  0014EA  CFDE F0D6          	movff	postinc2,line_cal@aux
  3511  0014EE  CFDD F0D7          	movff	postdec2,line_cal@aux+1
  3512                           
  3513                           ;analog.c: 69: aux = aux>mins[j]?aux:mins[j];
  3514  0014F2  90D8               	bcf	status,0,c
  3515  0014F4  0100               	movlb	0	; () banked
  3516  0014F6  35DA               	rlcf	line_cal@j& (0+255),w,b
  3517  0014F8  6ED9               	movwf	fsr2l,c
  3518  0014FA  0100               	movlb	0	; () banked
  3519  0014FC  35DB               	rlcf	(line_cal@j+1)& (0+255),w,b
  3520  0014FE  6EDA               	movwf	fsr2h,c
  3521  001500  0E8E               	movlw	low _mins
  3522  001502  26D9               	addwf	fsr2l,f,c
  3523  001504  0E00               	movlw	high _mins
  3524  001506  22DA               	addwfc	fsr2h,f,c
  3525  001508  0100               	movlb	0	; () banked
  3526  00150A  51D6               	movf	line_cal@aux& (0+255),w,b
  3527  00150C  5CDE               	subwf	postinc2,w,c
  3528  00150E  50DE               	movf	postinc2,w,c
  3529  001510  0A80               	xorlw	128
  3530  001512  6E31               	movwf	(??_line_cal+2)& (0+255),c
  3531  001514  0100               	movlb	0	; () banked
  3532  001516  51D7               	movf	(line_cal@aux+1)& (0+255),w,b
  3533  001518  0A80               	xorlw	128
  3534  00151A  5831               	subwfb	(??_line_cal+2)& (0+255),w,c
  3535  00151C  A0D8               	btfss	status,0,c
  3536  00151E  D00F               	goto	l173
  3537                           
  3538                           ; BSR set to: 0
  3539  001520  90D8               	bcf	status,0,c
  3540  001522  0100               	movlb	0	; () banked
  3541  001524  35DA               	rlcf	line_cal@j& (0+255),w,b
  3542  001526  6ED9               	movwf	fsr2l,c
  3543  001528  0100               	movlb	0	; () banked
  3544  00152A  35DB               	rlcf	(line_cal@j+1)& (0+255),w,b
  3545  00152C  6EDA               	movwf	fsr2h,c
  3546  00152E  0E8E               	movlw	low _mins
  3547  001530  26D9               	addwf	fsr2l,f,c
  3548  001532  0E00               	movlw	high _mins
  3549  001534  22DA               	addwfc	fsr2h,f,c
  3550  001536  CFDE F0D6          	movff	postinc2,line_cal@aux
  3551  00153A  CFDD F0D7          	movff	postdec2,line_cal@aux+1
  3552  00153E                     l173:
  3553                           
  3554                           ; BSR set to: 0
  3555                           ;analog.c: 70: aux = aux<maxs[j]?aux:maxs[j];
  3556                           
  3557                           ; BSR set to: 0
  3558                           
  3559                           ; BSR set to: 0
  3560  00153E  90D8               	bcf	status,0,c
  3561  001540  0100               	movlb	0	; () banked
  3562  001542  35DA               	rlcf	line_cal@j& (0+255),w,b
  3563  001544  6ED9               	movwf	fsr2l,c
  3564  001546  0100               	movlb	0	; () banked
  3565  001548  35DB               	rlcf	(line_cal@j+1)& (0+255),w,b
  3566  00154A  6EDA               	movwf	fsr2h,c
  3567  00154C  0EA0               	movlw	low _maxs
  3568  00154E  26D9               	addwf	fsr2l,f,c
  3569  001550  0E00               	movlw	high _maxs
  3570  001552  22DA               	addwfc	fsr2h,f,c
  3571  001554  50DE               	movf	postinc2,w,c
  3572  001556  0100               	movlb	0	; () banked
  3573  001558  5DD6               	subwf	line_cal@aux& (0+255),w,b
  3574  00155A  0100               	movlb	0	; () banked
  3575  00155C  51D7               	movf	(line_cal@aux+1)& (0+255),w,b
  3576  00155E  0A80               	xorlw	128
  3577  001560  6E31               	movwf	(??_line_cal+2)& (0+255),c
  3578  001562  50DE               	movf	postinc2,w,c
  3579  001564  0A80               	xorlw	128
  3580  001566  5831               	subwfb	(??_line_cal+2)& (0+255),w,c
  3581  001568  A0D8               	btfss	status,0,c
  3582  00156A  D00F               	goto	l177
  3583                           
  3584                           ; BSR set to: 0
  3585  00156C  90D8               	bcf	status,0,c
  3586  00156E  0100               	movlb	0	; () banked
  3587  001570  35DA               	rlcf	line_cal@j& (0+255),w,b
  3588  001572  6ED9               	movwf	fsr2l,c
  3589  001574  0100               	movlb	0	; () banked
  3590  001576  35DB               	rlcf	(line_cal@j+1)& (0+255),w,b
  3591  001578  6EDA               	movwf	fsr2h,c
  3592  00157A  0EA0               	movlw	low _maxs
  3593  00157C  26D9               	addwf	fsr2l,f,c
  3594  00157E  0E00               	movlw	high _maxs
  3595  001580  22DA               	addwfc	fsr2h,f,c
  3596  001582  CFDE F0D6          	movff	postinc2,line_cal@aux
  3597  001586  CFDD F0D7          	movff	postdec2,line_cal@aux+1
  3598  00158A                     l177:
  3599                           
  3600                           ; BSR set to: 0
  3601                           ;analog.c: 72: aux -= mins[j];
  3602                           
  3603                           ; BSR set to: 0
  3604                           
  3605                           ; BSR set to: 0
  3606  00158A  90D8               	bcf	status,0,c
  3607  00158C  0100               	movlb	0	; () banked
  3608  00158E  35DA               	rlcf	line_cal@j& (0+255),w,b
  3609  001590  6ED9               	movwf	fsr2l,c
  3610  001592  0100               	movlb	0	; () banked
  3611  001594  35DB               	rlcf	(line_cal@j+1)& (0+255),w,b
  3612  001596  6EDA               	movwf	fsr2h,c
  3613  001598  0E8E               	movlw	low _mins
  3614  00159A  26D9               	addwf	fsr2l,f,c
  3615  00159C  0E00               	movlw	high _mins
  3616  00159E  22DA               	addwfc	fsr2h,f,c
  3617  0015A0  50DE               	movf	postinc2,w,c
  3618  0015A2  0100               	movlb	0	; () banked
  3619  0015A4  5FD6               	subwf	line_cal@aux& (0+255),f,b
  3620  0015A6  50DD               	movf	postdec2,w,c
  3621  0015A8  0100               	movlb	0	; () banked
  3622  0015AA  5BD7               	subwfb	(line_cal@aux+1)& (0+255),f,b
  3623                           
  3624                           ; BSR set to: 0
  3625                           ;analog.c: 74: value = 1000 - (ll)(aux) * (ll)1000 / (ll)(maxs[j] - mins[j]);
  3626  0015AC  C0D6  F015         	movff	line_cal@aux,___lmul@multiplier
  3627  0015B0  C0D7  F016         	movff	line_cal@aux+1,___lmul@multiplier+1
  3628  0015B4  0E00               	movlw	0
  3629  0015B6  BE16               	btfsc	___lmul@multiplier+1,7,c
  3630  0015B8  0EFF               	movlw	-1
  3631  0015BA  6E17               	movwf	___lmul@multiplier+2,c
  3632  0015BC  6E18               	movwf	___lmul@multiplier+3,c
  3633  0015BE  0EE8               	movlw	232
  3634  0015C0  6E19               	movwf	___lmul@multiplicand,c
  3635  0015C2  0E03               	movlw	3
  3636  0015C4  6E1A               	movwf	___lmul@multiplicand+1,c
  3637  0015C6  0E00               	movlw	0
  3638  0015C8  6E1B               	movwf	___lmul@multiplicand+2,c
  3639  0015CA  0E00               	movlw	0
  3640  0015CC  6E1C               	movwf	___lmul@multiplicand+3,c
  3641  0015CE  EC68  F011         	call	___lmul	;wreg free
  3642  0015D2  C015  F021         	movff	?___lmul,___aldiv@dividend
  3643  0015D6  C016  F022         	movff	?___lmul+1,___aldiv@dividend+1
  3644  0015DA  C017  F023         	movff	?___lmul+2,___aldiv@dividend+2
  3645  0015DE  C018  F024         	movff	?___lmul+3,___aldiv@dividend+3
  3646  0015E2  90D8               	bcf	status,0,c
  3647  0015E4  0100               	movlb	0	; () banked
  3648  0015E6  35DA               	rlcf	line_cal@j& (0+255),w,b
  3649  0015E8  6ED9               	movwf	fsr2l,c
  3650  0015EA  0100               	movlb	0	; () banked
  3651  0015EC  35DB               	rlcf	(line_cal@j+1)& (0+255),w,b
  3652  0015EE  6EDA               	movwf	fsr2h,c
  3653  0015F0  0EA0               	movlw	low _maxs
  3654  0015F2  26D9               	addwf	fsr2l,f,c
  3655  0015F4  0E00               	movlw	high _maxs
  3656  0015F6  22DA               	addwfc	fsr2h,f,c
  3657  0015F8  CFDE F02F          	movff	postinc2,??_line_cal
  3658  0015FC  CFDD F030          	movff	postdec2,??_line_cal+1
  3659  001600  90D8               	bcf	status,0,c
  3660  001602  0100               	movlb	0	; () banked
  3661  001604  35DA               	rlcf	line_cal@j& (0+255),w,b
  3662  001606  6ED9               	movwf	fsr2l,c
  3663  001608  0100               	movlb	0	; () banked
  3664  00160A  35DB               	rlcf	(line_cal@j+1)& (0+255),w,b
  3665  00160C  6EDA               	movwf	fsr2h,c
  3666  00160E  0E8E               	movlw	low _mins
  3667  001610  26D9               	addwf	fsr2l,f,c
  3668  001612  0E00               	movlw	high _mins
  3669  001614  22DA               	addwfc	fsr2h,f,c
  3670  001616  CFDE F031          	movff	postinc2,??_line_cal+2
  3671  00161A  CFDD F032          	movff	postdec2,??_line_cal+3
  3672  00161E  1E31               	comf	??_line_cal+2,f,c
  3673  001620  1E32               	comf	??_line_cal+3,f,c
  3674  001622  4A31               	infsnz	??_line_cal+2,f,c
  3675  001624  2A32               	incf	??_line_cal+3,f,c
  3676  001626  502F               	movf	??_line_cal,w,c
  3677  001628  2631               	addwf	??_line_cal+2,f,c
  3678  00162A  5030               	movf	??_line_cal+1,w,c
  3679  00162C  2232               	addwfc	??_line_cal+3,f,c
  3680  00162E  C031  F025         	movff	??_line_cal+2,___aldiv@divisor
  3681  001632  C032  F026         	movff	??_line_cal+3,___aldiv@divisor+1
  3682  001636  0E00               	movlw	0
  3683  001638  BE26               	btfsc	___aldiv@divisor+1,7,c
  3684  00163A  0EFF               	movlw	-1
  3685  00163C  6E27               	movwf	___aldiv@divisor+2,c
  3686  00163E  6E28               	movwf	___aldiv@divisor+3,c
  3687  001640  EC86  F00E         	call	___aldiv	;wreg free
  3688  001644  1E21               	comf	?___aldiv,f,c
  3689  001646  1E22               	comf	?___aldiv+1,f,c
  3690  001648  1E23               	comf	?___aldiv+2,f,c
  3691  00164A  1E24               	comf	?___aldiv+3,f,c
  3692  00164C  2A21               	incf	?___aldiv,f,c
  3693  00164E  0E00               	movlw	0
  3694  001650  2222               	addwfc	?___aldiv+1,f,c
  3695  001652  2223               	addwfc	?___aldiv+2,f,c
  3696  001654  2224               	addwfc	?___aldiv+3,f,c
  3697  001656  0EE8               	movlw	232
  3698  001658  2421               	addwf	?___aldiv,w,c
  3699  00165A  0100               	movlb	0	; () banked
  3700  00165C  6FD2               	movwf	line_cal@value& (0+255),b
  3701  00165E  0E03               	movlw	3
  3702  001660  2022               	addwfc	?___aldiv+1,w,c
  3703  001662  0100               	movlb	0	; () banked
  3704  001664  6FD3               	movwf	(line_cal@value+1)& (0+255),b
  3705  001666  0E00               	movlw	0
  3706  001668  2023               	addwfc	?___aldiv+2,w,c
  3707  00166A  0100               	movlb	0	; () banked
  3708  00166C  6FD4               	movwf	(line_cal@value+2)& (0+255),b
  3709  00166E  0E00               	movlw	0
  3710  001670  2024               	addwfc	?___aldiv+3,w,c
  3711  001672  0100               	movlb	0	; () banked
  3712  001674  6FD5               	movwf	(line_cal@value+3)& (0+255),b
  3713                           
  3714                           ; BSR set to: 0
  3715                           ;analog.c: 76: calval[j] = value;
  3716  001676  90D8               	bcf	status,0,c
  3717  001678  0100               	movlb	0	; () banked
  3718  00167A  35DA               	rlcf	line_cal@j& (0+255),w,b
  3719  00167C  6ED9               	movwf	fsr2l,c
  3720  00167E  0100               	movlb	0	; () banked
  3721  001680  35DB               	rlcf	(line_cal@j+1)& (0+255),w,b
  3722  001682  6EDA               	movwf	fsr2h,c
  3723  001684  0E13               	movlw	low _calval
  3724  001686  26D9               	addwf	fsr2l,f,c
  3725  001688  0E01               	movlw	high _calval
  3726  00168A  22DA               	addwfc	fsr2h,f,c
  3727  00168C  C0D2  FFDE         	movff	line_cal@value,postinc2
  3728  001690  C0D3  FFDD         	movff	line_cal@value+1,postdec2
  3729                           
  3730                           ; BSR set to: 0
  3731                           ;analog.c: 78: if (value >= 300) ok = 1;
  3732  001694  0100               	movlb	0	; () banked
  3733  001696  BFD5               	btfsc	(line_cal@value+3)& (0+255),7,b
  3734  001698  D012               	goto	l180
  3735  00169A  0100               	movlb	0	; () banked
  3736  00169C  51D5               	movf	(line_cal@value+3)& (0+255),w,b
  3737  00169E  0100               	movlb	0	; () banked
  3738  0016A0  11D4               	iorwf	(line_cal@value+2)& (0+255),w,b
  3739  0016A2  E108               	bnz	u3790
  3740  0016A4  0E2C               	movlw	44
  3741  0016A6  0100               	movlb	0	; () banked
  3742  0016A8  5DD2               	subwf	line_cal@value& (0+255),w,b
  3743  0016AA  0E01               	movlw	1
  3744  0016AC  0100               	movlb	0	; () banked
  3745  0016AE  59D3               	subwfb	(line_cal@value+1)& (0+255),w,b
  3746  0016B0  A0D8               	btfss	status,0,c
  3747  0016B2  D005               	goto	l180
  3748  0016B4                     u3790:
  3749                           
  3750                           ; BSR set to: 0
  3751  0016B4  0E00               	movlw	0
  3752  0016B6  0100               	movlb	0	; () banked
  3753  0016B8  6FD1               	movwf	(line_cal@ok+1)& (0+255),b
  3754  0016BA  0E01               	movlw	1
  3755  0016BC  6FD0               	movwf	line_cal@ok& (0+255),b
  3756  0016BE                     l180:
  3757                           
  3758                           ; BSR set to: 0
  3759                           ;analog.c: 80: a += value * (ll)i * 100;
  3760                           
  3761                           ; BSR set to: 0
  3762  0016BE  C0D8  F015         	movff	line_cal@i,___lmul@multiplier
  3763  0016C2  C0D9  F016         	movff	line_cal@i+1,___lmul@multiplier+1
  3764  0016C6  0E00               	movlw	0
  3765  0016C8  BE16               	btfsc	___lmul@multiplier+1,7,c
  3766  0016CA  0EFF               	movlw	-1
  3767  0016CC  6E17               	movwf	___lmul@multiplier+2,c
  3768  0016CE  6E18               	movwf	___lmul@multiplier+3,c
  3769  0016D0  C0D2  F019         	movff	line_cal@value,___lmul@multiplicand
  3770  0016D4  C0D3  F01A         	movff	line_cal@value+1,___lmul@multiplicand+1
  3771  0016D8  C0D4  F01B         	movff	line_cal@value+2,___lmul@multiplicand+2
  3772  0016DC  C0D5  F01C         	movff	line_cal@value+3,___lmul@multiplicand+3
  3773  0016E0  EC68  F011         	call	___lmul	;wreg free
  3774  0016E4  C015  F0C4         	movff	?___lmul,_line_cal$2254
  3775  0016E8  C016  F0C5         	movff	?___lmul+1,_line_cal$2254+1
  3776  0016EC  C017  F0C6         	movff	?___lmul+2,_line_cal$2254+2
  3777  0016F0  C018  F0C7         	movff	?___lmul+3,_line_cal$2254+3
  3778                           
  3779                           ;analog.c: 80: a += value * (ll)i * 100;
  3780  0016F4  C0C4  F015         	movff	_line_cal$2254,___lmul@multiplier
  3781  0016F8  C0C5  F016         	movff	_line_cal$2254+1,___lmul@multiplier+1
  3782  0016FC  C0C6  F017         	movff	_line_cal$2254+2,___lmul@multiplier+2
  3783  001700  C0C7  F018         	movff	_line_cal$2254+3,___lmul@multiplier+3
  3784  001704  0E64               	movlw	100
  3785  001706  6E19               	movwf	___lmul@multiplicand,c
  3786  001708  0E00               	movlw	0
  3787  00170A  6E1A               	movwf	___lmul@multiplicand+1,c
  3788  00170C  0E00               	movlw	0
  3789  00170E  6E1B               	movwf	___lmul@multiplicand+2,c
  3790  001710  0E00               	movlw	0
  3791  001712  6E1C               	movwf	___lmul@multiplicand+3,c
  3792  001714  EC68  F011         	call	___lmul	;wreg free
  3793  001718  5015               	movf	?___lmul,w,c
  3794  00171A  0100               	movlb	0	; () banked
  3795  00171C  27C8               	addwf	line_cal@a& (0+255),f,b
  3796  00171E  5016               	movf	?___lmul+1,w,c
  3797  001720  0100               	movlb	0	; () banked
  3798  001722  23C9               	addwfc	(line_cal@a+1)& (0+255),f,b
  3799  001724  5017               	movf	?___lmul+2,w,c
  3800  001726  0100               	movlb	0	; () banked
  3801  001728  23CA               	addwfc	(line_cal@a+2)& (0+255),f,b
  3802  00172A  5018               	movf	?___lmul+3,w,c
  3803  00172C  0100               	movlb	0	; () banked
  3804  00172E  23CB               	addwfc	(line_cal@a+3)& (0+255),f,b
  3805                           
  3806                           ; BSR set to: 0
  3807                           ;analog.c: 81: b += value;
  3808  001730  0100               	movlb	0	; () banked
  3809  001732  51D2               	movf	line_cal@value& (0+255),w,b
  3810  001734  0100               	movlb	0	; () banked
  3811  001736  27CC               	addwf	line_cal@b& (0+255),f,b
  3812  001738  0100               	movlb	0	; () banked
  3813  00173A  51D3               	movf	(line_cal@value+1)& (0+255),w,b
  3814  00173C  0100               	movlb	0	; () banked
  3815  00173E  23CD               	addwfc	(line_cal@b+1)& (0+255),f,b
  3816  001740  0100               	movlb	0	; () banked
  3817  001742  51D4               	movf	(line_cal@value+2)& (0+255),w,b
  3818  001744  0100               	movlb	0	; () banked
  3819  001746  23CE               	addwfc	(line_cal@b+2)& (0+255),f,b
  3820  001748  0100               	movlb	0	; () banked
  3821  00174A  51D5               	movf	(line_cal@value+3)& (0+255),w,b
  3822  00174C  0100               	movlb	0	; () banked
  3823  00174E  23CF               	addwfc	(line_cal@b+3)& (0+255),f,b
  3824                           
  3825                           ; BSR set to: 0
  3826  001750  0100               	movlb	0	; () banked
  3827  001752  4BD8               	infsnz	line_cal@i& (0+255),f,b
  3828  001754  2BD9               	incf	(line_cal@i+1)& (0+255),f,b
  3829                           
  3830                           ; BSR set to: 0
  3831  001756  0100               	movlb	0	; () banked
  3832  001758  BFD9               	btfsc	(line_cal@i+1)& (0+255),7,b
  3833  00175A  D6AD               	goto	l170
  3834  00175C  0100               	movlb	0	; () banked
  3835  00175E  51D9               	movf	(line_cal@i+1)& (0+255),w,b
  3836  001760  E101               	bnz	l3325
  3837  001762  D6A2               	goto	L11
  3838  001764                     u3800:
  3839  001764                     l3325:
  3840                           
  3841                           ; BSR set to: 0
  3842                           ;analog.c: 83: }
  3843                           ;analog.c: 84: if (ok == 1){
  3844  001764  0100               	movlb	0	; () banked
  3845  001766  05D0               	decf	line_cal@ok& (0+255),w,b
  3846  001768  0100               	movlb	0	; () banked
  3847  00176A  11D1               	iorwf	(line_cal@ok+1)& (0+255),w,b
  3848  00176C  A4D8               	btfss	status,2,c
  3849  00176E  D01B               	goto	l181
  3850                           
  3851                           ; BSR set to: 0
  3852                           ;analog.c: 85: lp = a / b - 200;
  3853  001770  C0C8  F021         	movff	line_cal@a,___aldiv@dividend
  3854  001774  C0C9  F022         	movff	line_cal@a+1,___aldiv@dividend+1
  3855  001778  C0CA  F023         	movff	line_cal@a+2,___aldiv@dividend+2
  3856  00177C  C0CB  F024         	movff	line_cal@a+3,___aldiv@dividend+3
  3857  001780  C0CC  F025         	movff	line_cal@b,___aldiv@divisor
  3858  001784  C0CD  F026         	movff	line_cal@b+1,___aldiv@divisor+1
  3859  001788  C0CE  F027         	movff	line_cal@b+2,___aldiv@divisor+2
  3860  00178C  C0CF  F028         	movff	line_cal@b+3,___aldiv@divisor+3
  3861  001790  EC86  F00E         	call	___aldiv	;wreg free
  3862  001794  0E38               	movlw	56
  3863  001796  2421               	addwf	?___aldiv,w,c
  3864  001798  0100               	movlb	0	; () banked
  3865  00179A  6F8C               	movwf	_lp& (0+255),b
  3866  00179C  0EFF               	movlw	255
  3867  00179E  2022               	addwfc	?___aldiv+1,w,c
  3868  0017A0  0100               	movlb	0	; () banked
  3869  0017A2  6F8D               	movwf	(_lp+1)& (0+255),b
  3870                           
  3871                           ;analog.c: 86: }else{
  3872  0017A4  0012               	return	
  3873  0017A6                     l181:
  3874                           
  3875                           ; BSR set to: 0
  3876                           ;analog.c: 87: lp = lp > 0 ? 190 : -190;
  3877                           
  3878                           ; BSR set to: 0
  3879  0017A6  0100               	movlb	0	; () banked
  3880  0017A8  BF8D               	btfsc	(_lp+1)& (0+255),7,b
  3881  0017AA  D007               	goto	u3820
  3882  0017AC  0100               	movlb	0	; () banked
  3883  0017AE  518D               	movf	(_lp+1)& (0+255),w,b
  3884  0017B0  E10A               	bnz	l3333
  3885  0017B2  0100               	movlb	0	; () banked
  3886  0017B4  058C               	decf	_lp& (0+255),w,b
  3887  0017B6  B0D8               	btfsc	status,0,c
  3888  0017B8  D006               	goto	l184
  3889  0017BA                     u3820:
  3890                           
  3891                           ; BSR set to: 0
  3892  0017BA  0EFF               	movlw	255
  3893  0017BC  0100               	movlb	0	; () banked
  3894  0017BE  6F8D               	movwf	(_lp+1)& (0+255),b
  3895  0017C0  0E42               	movlw	66
  3896  0017C2  6F8C               	movwf	_lp& (0+255),b
  3897  0017C4  0012               	return	
  3898  0017C6                     l184:
  3899  0017C6                     l3333:
  3900                           
  3901                           ; BSR set to: 0
  3902  0017C6  0E00               	movlw	0
  3903  0017C8  0100               	movlb	0	; () banked
  3904  0017CA  6F8D               	movwf	(_lp+1)& (0+255),b
  3905  0017CC  0EBE               	movlw	190
  3906  0017CE  6F8C               	movwf	_lp& (0+255),b
  3907                           
  3908                           ; BSR set to: 0
  3909  0017D0  0012               	return	
  3910  0017D2                     __end_of_line_cal:
  3911                           	opt stack 0
  3912                           tblptru	equ	0xFF8
  3913                           tblptrh	equ	0xFF7
  3914                           tblptrl	equ	0xFF6
  3915                           tablat	equ	0xFF5
  3916                           postinc0	equ	0xFEE
  3917                           wreg	equ	0xFE8
  3918                           postinc1	equ	0xFE6
  3919                           postdec1	equ	0xFE5
  3920                           fsr1h	equ	0xFE2
  3921                           fsr1l	equ	0xFE1
  3922                           postinc2	equ	0xFDE
  3923                           postdec2	equ	0xFDD
  3924                           fsr2h	equ	0xFDA
  3925                           fsr2l	equ	0xFD9
  3926                           status	equ	0xFD8
  3927                           
  3928 ;; *************** function ___lmul *****************
  3929 ;; Defined at:
  3930 ;;		line 15 in file "/opt/microchip/xc8/v1.43/sources/common/Umul32.c"
  3931 ;; Parameters:    Size  Location     Type
  3932 ;;  multiplier      4   20[COMRAM] unsigned long 
  3933 ;;  multiplicand    4   24[COMRAM] unsigned long 
  3934 ;; Auto vars:     Size  Location     Type
  3935 ;;  product         4   28[COMRAM] unsigned long 
  3936 ;; Return value:  Size  Location     Type
  3937 ;;                  4   20[COMRAM] unsigned long 
  3938 ;; Registers used:
  3939 ;;		wreg, status,2, status,0
  3940 ;; Tracked objects:
  3941 ;;		On entry : 0/0
  3942 ;;		On exit  : 0/0
  3943 ;;		Unchanged: 0/0
  3944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3945 ;;      Params:         8       0       0       0       0       0       0       0       0
  3946 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3947 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3948 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3949 ;;Total ram usage:       12 bytes
  3950 ;; Hardware stack levels used:    1
  3951 ;; Hardware stack levels required when called:    1
  3952 ;; This function calls:
  3953 ;;		Nothing
  3954 ;; This function is called by:
  3955 ;;		_line_cal
  3956 ;; This function uses a non-reentrant model
  3957 ;;
  3958                           
  3959                           	psect	text10
  3960  0022D0                     __ptext10:
  3961                           	opt stack 0
  3962  0022D0                     ___lmul:
  3963                           	opt stack 28
  3964                           
  3965                           ; BSR set to: 0
  3966                           ;incstack = 0
  3967  0022D0  0E00               	movlw	0
  3968  0022D2  6E1D               	movwf	___lmul@product,c
  3969  0022D4  0E00               	movlw	0
  3970  0022D6  6E1E               	movwf	___lmul@product+1,c
  3971  0022D8  0E00               	movlw	0
  3972  0022DA  6E1F               	movwf	___lmul@product+2,c
  3973  0022DC  0E00               	movlw	0
  3974  0022DE  6E20               	movwf	___lmul@product+3,c
  3975  0022E0  A015               	btfss	___lmul@multiplier,0,c
  3976  0022E2  D008               	goto	l426
  3977  0022E4  5019               	movf	___lmul@multiplicand,w,c
  3978  0022E6  261D               	addwf	___lmul@product,f,c
  3979  0022E8  501A               	movf	___lmul@multiplicand+1,w,c
  3980  0022EA  221E               	addwfc	___lmul@product+1,f,c
  3981  0022EC  501B               	movf	___lmul@multiplicand+2,w,c
  3982  0022EE  221F               	addwfc	___lmul@product+2,f,c
  3983  0022F0  501C               	movf	___lmul@multiplicand+3,w,c
  3984  0022F2  2220               	addwfc	___lmul@product+3,f,c
  3985  0022F4                     l426:
  3986  0022F4  90D8               	bcf	status,0,c
  3987  0022F6  3619               	rlcf	___lmul@multiplicand,f,c
  3988  0022F8  361A               	rlcf	___lmul@multiplicand+1,f,c
  3989  0022FA  361B               	rlcf	___lmul@multiplicand+2,f,c
  3990  0022FC  361C               	rlcf	___lmul@multiplicand+3,f,c
  3991  0022FE  90D8               	bcf	status,0,c
  3992  002300  3218               	rrcf	___lmul@multiplier+3,f,c
  3993  002302  3217               	rrcf	___lmul@multiplier+2,f,c
  3994  002304  3216               	rrcf	___lmul@multiplier+1,f,c
  3995  002306  3215               	rrcf	___lmul@multiplier,f,c
  3996  002308  5015               	movf	___lmul@multiplier,w,c
  3997  00230A  1016               	iorwf	___lmul@multiplier+1,w,c
  3998  00230C  1017               	iorwf	___lmul@multiplier+2,w,c
  3999  00230E  1018               	iorwf	___lmul@multiplier+3,w,c
  4000  002310  A4D8               	btfss	status,2,c
  4001  002312  D7E6               	goto	l425
  4002  002314  C01D  F015         	movff	___lmul@product,?___lmul
  4003  002318  C01E  F016         	movff	___lmul@product+1,?___lmul+1
  4004  00231C  C01F  F017         	movff	___lmul@product+2,?___lmul+2
  4005  002320  C020  F018         	movff	___lmul@product+3,?___lmul+3
  4006  002324  0012               	return		;funcret
  4007  002326                     __end_of___lmul:
  4008                           	opt stack 0
  4009                           tblptru	equ	0xFF8
  4010                           tblptrh	equ	0xFF7
  4011                           tblptrl	equ	0xFF6
  4012                           tablat	equ	0xFF5
  4013                           postinc0	equ	0xFEE
  4014                           wreg	equ	0xFE8
  4015                           postinc1	equ	0xFE6
  4016                           postdec1	equ	0xFE5
  4017                           fsr1h	equ	0xFE2
  4018                           fsr1l	equ	0xFE1
  4019                           postinc2	equ	0xFDE
  4020                           postdec2	equ	0xFDD
  4021                           fsr2h	equ	0xFDA
  4022                           fsr2l	equ	0xFD9
  4023                           status	equ	0xFD8
  4024                           
  4025 ;; *************** function ___aldiv *****************
  4026 ;; Defined at:
  4027 ;;		line 8 in file "/opt/microchip/xc8/v1.43/sources/common/aldiv.c"
  4028 ;; Parameters:    Size  Location     Type
  4029 ;;  dividend        4   32[COMRAM] long 
  4030 ;;  divisor         4   36[COMRAM] long 
  4031 ;; Auto vars:     Size  Location     Type
  4032 ;;  quotient        4   42[COMRAM] long 
  4033 ;;  sign            1   41[COMRAM] unsigned char 
  4034 ;;  counter         1   40[COMRAM] unsigned char 
  4035 ;; Return value:  Size  Location     Type
  4036 ;;                  4   32[COMRAM] long 
  4037 ;; Registers used:
  4038 ;;		wreg, status,2, status,0
  4039 ;; Tracked objects:
  4040 ;;		On entry : 0/0
  4041 ;;		On exit  : 0/0
  4042 ;;		Unchanged: 0/0
  4043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4044 ;;      Params:         8       0       0       0       0       0       0       0       0
  4045 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4046 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4047 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4048 ;;Total ram usage:       14 bytes
  4049 ;; Hardware stack levels used:    1
  4050 ;; Hardware stack levels required when called:    1
  4051 ;; This function calls:
  4052 ;;		Nothing
  4053 ;; This function is called by:
  4054 ;;		_line_cal
  4055 ;; This function uses a non-reentrant model
  4056 ;;
  4057                           
  4058                           	psect	text11
  4059  001D0C                     __ptext11:
  4060                           	opt stack 0
  4061  001D0C                     ___aldiv:
  4062                           	opt stack 28
  4063                           
  4064                           ;incstack = 0
  4065  001D0C  0E00               	movlw	0
  4066  001D0E  6E2A               	movwf	___aldiv@sign,c
  4067  001D10  AE28               	btfss	___aldiv@divisor+3,7,c
  4068  001D12  D00A               	goto	l469
  4069  001D14  1E28               	comf	___aldiv@divisor+3,f,c
  4070  001D16  1E27               	comf	___aldiv@divisor+2,f,c
  4071  001D18  1E26               	comf	___aldiv@divisor+1,f,c
  4072  001D1A  6C25               	negf	___aldiv@divisor,c
  4073  001D1C  0E00               	movlw	0
  4074  001D1E  2226               	addwfc	___aldiv@divisor+1,f,c
  4075  001D20  2227               	addwfc	___aldiv@divisor+2,f,c
  4076  001D22  2228               	addwfc	___aldiv@divisor+3,f,c
  4077  001D24  0E01               	movlw	1
  4078  001D26  6E2A               	movwf	___aldiv@sign,c
  4079  001D28                     l469:
  4080  001D28  AE24               	btfss	___aldiv@dividend+3,7,c
  4081  001D2A  D00A               	goto	l470
  4082  001D2C  1E24               	comf	___aldiv@dividend+3,f,c
  4083  001D2E  1E23               	comf	___aldiv@dividend+2,f,c
  4084  001D30  1E22               	comf	___aldiv@dividend+1,f,c
  4085  001D32  6C21               	negf	___aldiv@dividend,c
  4086  001D34  0E00               	movlw	0
  4087  001D36  2222               	addwfc	___aldiv@dividend+1,f,c
  4088  001D38  2223               	addwfc	___aldiv@dividend+2,f,c
  4089  001D3A  2224               	addwfc	___aldiv@dividend+3,f,c
  4090  001D3C  0E01               	movlw	1
  4091  001D3E  1A2A               	xorwf	___aldiv@sign,f,c
  4092  001D40                     l470:
  4093  001D40  0E00               	movlw	0
  4094  001D42  6E2B               	movwf	___aldiv@quotient,c
  4095  001D44  0E00               	movlw	0
  4096  001D46  6E2C               	movwf	___aldiv@quotient+1,c
  4097  001D48  0E00               	movlw	0
  4098  001D4A  6E2D               	movwf	___aldiv@quotient+2,c
  4099  001D4C  0E00               	movlw	0
  4100  001D4E  6E2E               	movwf	___aldiv@quotient+3,c
  4101  001D50  5025               	movf	___aldiv@divisor,w,c
  4102  001D52  1026               	iorwf	___aldiv@divisor+1,w,c
  4103  001D54  1027               	iorwf	___aldiv@divisor+2,w,c
  4104  001D56  1028               	iorwf	___aldiv@divisor+3,w,c
  4105  001D58  B4D8               	btfsc	status,2,c
  4106  001D5A  D02A               	goto	l477
  4107  001D5C  0E01               	movlw	1
  4108  001D5E  6E29               	movwf	___aldiv@counter,c
  4109  001D60  D006               	goto	l472
  4110  001D62  90D8               	bcf	status,0,c
  4111  001D64  3625               	rlcf	___aldiv@divisor,f,c
  4112  001D66  3626               	rlcf	___aldiv@divisor+1,f,c
  4113  001D68  3627               	rlcf	___aldiv@divisor+2,f,c
  4114  001D6A  3628               	rlcf	___aldiv@divisor+3,f,c
  4115  001D6C  2A29               	incf	___aldiv@counter,f,c
  4116  001D6E                     l472:
  4117  001D6E  AE28               	btfss	___aldiv@divisor+3,7,c
  4118  001D70  D7F8               	goto	l473
  4119  001D72                     u3540:
  4120  001D72  90D8               	bcf	status,0,c
  4121  001D74  362B               	rlcf	___aldiv@quotient,f,c
  4122  001D76  362C               	rlcf	___aldiv@quotient+1,f,c
  4123  001D78  362D               	rlcf	___aldiv@quotient+2,f,c
  4124  001D7A  362E               	rlcf	___aldiv@quotient+3,f,c
  4125  001D7C  5025               	movf	___aldiv@divisor,w,c
  4126  001D7E  5C21               	subwf	___aldiv@dividend,w,c
  4127  001D80  5026               	movf	___aldiv@divisor+1,w,c
  4128  001D82  5822               	subwfb	___aldiv@dividend+1,w,c
  4129  001D84  5027               	movf	___aldiv@divisor+2,w,c
  4130  001D86  5823               	subwfb	___aldiv@dividend+2,w,c
  4131  001D88  5028               	movf	___aldiv@divisor+3,w,c
  4132  001D8A  5824               	subwfb	___aldiv@dividend+3,w,c
  4133  001D8C  A0D8               	btfss	status,0,c
  4134  001D8E  D009               	goto	l476
  4135  001D90  5025               	movf	___aldiv@divisor,w,c
  4136  001D92  5E21               	subwf	___aldiv@dividend,f,c
  4137  001D94  5026               	movf	___aldiv@divisor+1,w,c
  4138  001D96  5A22               	subwfb	___aldiv@dividend+1,f,c
  4139  001D98  5027               	movf	___aldiv@divisor+2,w,c
  4140  001D9A  5A23               	subwfb	___aldiv@dividend+2,f,c
  4141  001D9C  5028               	movf	___aldiv@divisor+3,w,c
  4142  001D9E  5A24               	subwfb	___aldiv@dividend+3,f,c
  4143  001DA0  802B               	bsf	___aldiv@quotient,0,c
  4144  001DA2                     l476:
  4145  001DA2  90D8               	bcf	status,0,c
  4146  001DA4  3228               	rrcf	___aldiv@divisor+3,f,c
  4147  001DA6  3227               	rrcf	___aldiv@divisor+2,f,c
  4148  001DA8  3226               	rrcf	___aldiv@divisor+1,f,c
  4149  001DAA  3225               	rrcf	___aldiv@divisor,f,c
  4150  001DAC  2E29               	decfsz	___aldiv@counter,f,c
  4151  001DAE  D7E1               	goto	u3540
  4152  001DB0                     l477:
  4153  001DB0  502A               	movf	___aldiv@sign,w,c
  4154  001DB2  B4D8               	btfsc	status,2,c
  4155  001DB4  D008               	goto	l478
  4156  001DB6  1E2E               	comf	___aldiv@quotient+3,f,c
  4157  001DB8  1E2D               	comf	___aldiv@quotient+2,f,c
  4158  001DBA  1E2C               	comf	___aldiv@quotient+1,f,c
  4159  001DBC  6C2B               	negf	___aldiv@quotient,c
  4160  001DBE  0E00               	movlw	0
  4161  001DC0  222C               	addwfc	___aldiv@quotient+1,f,c
  4162  001DC2  222D               	addwfc	___aldiv@quotient+2,f,c
  4163  001DC4  222E               	addwfc	___aldiv@quotient+3,f,c
  4164  001DC6                     l478:
  4165  001DC6  C02B  F021         	movff	___aldiv@quotient,?___aldiv
  4166  001DCA  C02C  F022         	movff	___aldiv@quotient+1,?___aldiv+1
  4167  001DCE  C02D  F023         	movff	___aldiv@quotient+2,?___aldiv+2
  4168  001DD2  C02E  F024         	movff	___aldiv@quotient+3,?___aldiv+3
  4169  001DD6  0012               	return	
  4170  001DD8                     __end_of___aldiv:
  4171                           	opt stack 0
  4172                           tblptru	equ	0xFF8
  4173                           tblptrh	equ	0xFF7
  4174                           tblptrl	equ	0xFF6
  4175                           tablat	equ	0xFF5
  4176                           postinc0	equ	0xFEE
  4177                           wreg	equ	0xFE8
  4178                           postinc1	equ	0xFE6
  4179                           postdec1	equ	0xFE5
  4180                           fsr1h	equ	0xFE2
  4181                           fsr1l	equ	0xFE1
  4182                           postinc2	equ	0xFDE
  4183                           postdec2	equ	0xFDD
  4184                           fsr2h	equ	0xFDA
  4185                           fsr2l	equ	0xFD9
  4186                           status	equ	0xFD8
  4187                           
  4188 ;; *************** function _init_tms *****************
  4189 ;; Defined at:
  4190 ;;		line 7 in file "config.c"
  4191 ;; Parameters:    Size  Location     Type
  4192 ;;		None
  4193 ;; Auto vars:     Size  Location     Type
  4194 ;;		None
  4195 ;; Return value:  Size  Location     Type
  4196 ;;                  1    wreg      void 
  4197 ;; Registers used:
  4198 ;;		wreg, status,2, cstack
  4199 ;; Tracked objects:
  4200 ;;		On entry : 0/0
  4201 ;;		On exit  : 0/0
  4202 ;;		Unchanged: 0/0
  4203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4204 ;;      Params:         0       0       0       0       0       0       0       0       0
  4205 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4206 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4207 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4208 ;;Total ram usage:        0 bytes
  4209 ;; Hardware stack levels used:    1
  4210 ;; Hardware stack levels required when called:    2
  4211 ;; This function calls:
  4212 ;;		_MotorsPWM
  4213 ;;		_an_init
  4214 ;;		_init_io
  4215 ;; This function is called by:
  4216 ;;		_main
  4217 ;; This function uses a non-reentrant model
  4218 ;;
  4219                           
  4220                           	psect	text12
  4221  002326                     __ptext12:
  4222                           	opt stack 0
  4223  002326                     _init_tms:
  4224                           	opt stack 28
  4225                           
  4226                           ;config.c: 8: OSCCONbits.IRCF = 7;
  4227                           
  4228                           ;incstack = 0
  4229  002326  88D3               	bsf	4051,4,c	;volatile
  4230  002328  8AD3               	bsf	4051,5,c	;volatile
  4231  00232A  8CD3               	bsf	4051,6,c	;volatile
  4232                           
  4233                           ;config.c: 11: CMCON=0x07;
  4234  00232C  0E07               	movlw	7
  4235  00232E  6EB4               	movwf	4020,c	;volatile
  4236                           
  4237                           ;config.c: 14: UCONbits.USBEN = 0;
  4238  002330  966D               	bcf	3949,3,c	;volatile
  4239                           
  4240                           ;config.c: 15: UCFGbits.UTRDIS = 1;
  4241  002332  866F               	bsf	3951,3,c	;volatile
  4242                           
  4243                           ;config.c: 18: T0CONbits.TMR0ON = 0;
  4244  002334  9ED5               	bcf	4053,7,c	;volatile
  4245                           
  4246                           ;config.c: 19: T0CONbits.T08BIT = 0;
  4247  002336  9CD5               	bcf	4053,6,c	;volatile
  4248                           
  4249                           ;config.c: 20: T0CONbits.T0CS = 0;
  4250  002338  9AD5               	bcf	4053,5,c	;volatile
  4251                           
  4252                           ;config.c: 22: T0CONbits.PSA = 1;
  4253  00233A  86D5               	bsf	4053,3,c	;volatile
  4254                           
  4255                           ;config.c: 23: TMR0H = 0xF8;
  4256  00233C  0EF8               	movlw	248
  4257  00233E  6ED7               	movwf	4055,c	;volatile
  4258                           
  4259                           ;config.c: 24: TMR0L = 0x2F;
  4260  002340  0E2F               	movlw	47
  4261  002342  6ED6               	movwf	4054,c	;volatile
  4262                           
  4263                           ;config.c: 27: INTCON2bits.TMR0IP = 1;
  4264  002344  84F1               	bsf	intcon2,2,c	;volatile
  4265                           
  4266                           ;config.c: 28: RCONbits.IPEN = 0;
  4267  002346  9ED0               	bcf	4048,7,c	;volatile
  4268                           
  4269                           ;config.c: 29: INTCONbits.TMR0IE = 1;
  4270  002348  8AF2               	bsf	intcon,5,c	;volatile
  4271                           
  4272                           ;config.c: 33: INTCONbits.GIE = 1;
  4273  00234A  8EF2               	bsf	intcon,7,c	;volatile
  4274                           
  4275                           ;config.c: 35: T0CONbits.TMR0ON = 1;
  4276  00234C  8ED5               	bsf	4053,7,c	;volatile
  4277                           
  4278                           ;config.c: 37: T1CONbits.TMR1ON = 0;
  4279  00234E  90CD               	bcf	4045,0,c	;volatile
  4280                           
  4281                           ;config.c: 38: T1CONbits.T1RD16 = 0;
  4282  002350  9ECD               	bcf	4045,7,c	;volatile
  4283                           
  4284                           ;config.c: 39: T1CONbits.T1RUN = 0;
  4285  002352  9CCD               	bcf	4045,6,c	;volatile
  4286                           
  4287                           ;config.c: 40: T1CONbits.T1CKPS = 0;
  4288  002354  0ECF               	movlw	-49
  4289  002356  16CD               	andwf	4045,f,c	;volatile
  4290                           
  4291                           ;config.c: 41: T1CONbits.T1OSCEN = 0;
  4292  002358  96CD               	bcf	4045,3,c	;volatile
  4293                           
  4294                           ;config.c: 42: T1CONbits.TMR1CS = 0;
  4295  00235A  92CD               	bcf	4045,1,c	;volatile
  4296                           
  4297                           ;config.c: 43: T1CONbits.TMR1ON = 1;
  4298  00235C  80CD               	bsf	4045,0,c	;volatile
  4299                           
  4300                           ;config.c: 45: TMR1H = 0xF8;
  4301  00235E  0EF8               	movlw	248
  4302  002360  6ECF               	movwf	4047,c	;volatile
  4303                           
  4304                           ;config.c: 46: TMR1L = 0x2F;
  4305  002362  0E2F               	movlw	47
  4306  002364  6ECE               	movwf	4046,c	;volatile
  4307                           
  4308                           ;config.c: 48: init_io();
  4309  002366  ECF5  F011         	call	_init_io	;wreg free
  4310                           
  4311                           ;config.c: 49: an_init();
  4312  00236A  EC0C  F012         	call	_an_init	;wreg free
  4313                           
  4314                           ;config.c: 50: MotorsPWM();
  4315  00236E  ECBA  F011         	call	_MotorsPWM	;wreg free
  4316  002372  0012               	return		;funcret
  4317  002374                     __end_of_init_tms:
  4318                           	opt stack 0
  4319                           tblptru	equ	0xFF8
  4320                           tblptrh	equ	0xFF7
  4321                           tblptrl	equ	0xFF6
  4322                           tablat	equ	0xFF5
  4323                           intcon	equ	0xFF2
  4324                           intcon2	equ	0xFF1
  4325                           postinc0	equ	0xFEE
  4326                           wreg	equ	0xFE8
  4327                           postinc1	equ	0xFE6
  4328                           postdec1	equ	0xFE5
  4329                           fsr1h	equ	0xFE2
  4330                           fsr1l	equ	0xFE1
  4331                           postinc2	equ	0xFDE
  4332                           postdec2	equ	0xFDD
  4333                           fsr2h	equ	0xFDA
  4334                           fsr2l	equ	0xFD9
  4335                           status	equ	0xFD8
  4336                           
  4337 ;; *************** function _init_io *****************
  4338 ;; Defined at:
  4339 ;;		line 6 in file "io.c"
  4340 ;; Parameters:    Size  Location     Type
  4341 ;;		None
  4342 ;; Auto vars:     Size  Location     Type
  4343 ;;		None
  4344 ;; Return value:  Size  Location     Type
  4345 ;;                  1    wreg      void 
  4346 ;; Registers used:
  4347 ;;		None
  4348 ;; Tracked objects:
  4349 ;;		On entry : 0/0
  4350 ;;		On exit  : 0/0
  4351 ;;		Unchanged: 0/0
  4352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4353 ;;      Params:         0       0       0       0       0       0       0       0       0
  4354 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4355 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4356 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4357 ;;Total ram usage:        0 bytes
  4358 ;; Hardware stack levels used:    1
  4359 ;; Hardware stack levels required when called:    1
  4360 ;; This function calls:
  4361 ;;		Nothing
  4362 ;; This function is called by:
  4363 ;;		_init_tms
  4364 ;; This function uses a non-reentrant model
  4365 ;;
  4366                           
  4367                           	psect	text13
  4368  0023EA                     __ptext13:
  4369                           	opt stack 0
  4370  0023EA                     _init_io:
  4371                           	opt stack 28
  4372                           
  4373                           ;io.c: 8: TRISBbits.RB4 = OUTPUT;
  4374                           
  4375                           ;incstack = 0
  4376  0023EA  9893               	bcf	3987,4,c	;volatile
  4377                           
  4378                           ;io.c: 9: TRISCbits.RC1 = OUTPUT;
  4379  0023EC  9294               	bcf	3988,1,c	;volatile
  4380                           
  4381                           ;io.c: 10: TRISDbits.RD2 = OUTPUT;
  4382  0023EE  9495               	bcf	3989,2,c	;volatile
  4383                           
  4384                           ;io.c: 11: TRISAbits.RA4 = OUTPUT;
  4385  0023F0  9892               	bcf	3986,4,c	;volatile
  4386                           
  4387                           ;io.c: 14: TRISBbits.RB0 = OUTPUT;
  4388  0023F2  9093               	bcf	3987,0,c	;volatile
  4389                           
  4390                           ;io.c: 15: TRISBbits.RB1 = OUTPUT;
  4391  0023F4  9293               	bcf	3987,1,c	;volatile
  4392                           
  4393                           ;io.c: 18: TRISDbits.RD0 = INPUT;
  4394  0023F6  8095               	bsf	3989,0,c	;volatile
  4395                           
  4396                           ;io.c: 19: TRISDbits.RD1 = INPUT;
  4397  0023F8  8295               	bsf	3989,1,c	;volatile
  4398                           
  4399                           ;io.c: 22: TRISAbits.RA0 = INPUT;
  4400  0023FA  8092               	bsf	3986,0,c	;volatile
  4401                           
  4402                           ;io.c: 23: TRISAbits.RA1 = INPUT;
  4403  0023FC  8292               	bsf	3986,1,c	;volatile
  4404                           
  4405                           ;io.c: 26: TRISAbits.RA2 = INPUT;
  4406  0023FE  8492               	bsf	3986,2,c	;volatile
  4407                           
  4408                           ;io.c: 27: TRISAbits.RA3 = INPUT;
  4409  002400  8692               	bsf	3986,3,c	;volatile
  4410                           
  4411                           ;io.c: 28: TRISAbits.RA5 = INPUT;
  4412  002402  8A92               	bsf	3986,5,c	;volatile
  4413                           
  4414                           ;io.c: 29: TRISEbits.RE0 = INPUT;
  4415  002404  8096               	bsf	3990,0,c	;volatile
  4416                           
  4417                           ;io.c: 30: TRISEbits.RE1 = INPUT;
  4418  002406  8296               	bsf	3990,1,c	;volatile
  4419                           
  4420                           ;io.c: 31: TRISEbits.RE2 = INPUT;
  4421  002408  8496               	bsf	3990,2,c	;volatile
  4422                           
  4423                           ;io.c: 32: TRISBbits.RB2 = INPUT;
  4424  00240A  8493               	bsf	3987,2,c	;volatile
  4425                           
  4426                           ;io.c: 35: TRISCbits.RC2 = OUTPUT;
  4427  00240C  9494               	bcf	3988,2,c	;volatile
  4428                           
  4429                           ;io.c: 36: TRISBbits.RB3 = OUTPUT;
  4430  00240E  9693               	bcf	3987,3,c	;volatile
  4431                           
  4432                           ;io.c: 39: PORTEbits.RDPU = 1;
  4433  002410  8E84               	bsf	3972,7,c	;volatile
  4434                           
  4435                           ;io.c: 42: TRISCbits.RC6 = OUTPUT;
  4436  002412  9C94               	bcf	3988,6,c	;volatile
  4437                           
  4438                           ;io.c: 43: TRISCbits.RC7 = OUTPUT;
  4439  002414  9E94               	bcf	3988,7,c	;volatile
  4440  002416  0012               	return		;funcret
  4441  002418                     __end_of_init_io:
  4442                           	opt stack 0
  4443                           tblptru	equ	0xFF8
  4444                           tblptrh	equ	0xFF7
  4445                           tblptrl	equ	0xFF6
  4446                           tablat	equ	0xFF5
  4447                           intcon	equ	0xFF2
  4448                           intcon2	equ	0xFF1
  4449                           postinc0	equ	0xFEE
  4450                           wreg	equ	0xFE8
  4451                           postinc1	equ	0xFE6
  4452                           postdec1	equ	0xFE5
  4453                           fsr1h	equ	0xFE2
  4454                           fsr1l	equ	0xFE1
  4455                           postinc2	equ	0xFDE
  4456                           postdec2	equ	0xFDD
  4457                           fsr2h	equ	0xFDA
  4458                           fsr2l	equ	0xFD9
  4459                           status	equ	0xFD8
  4460                           
  4461 ;; *************** function _an_init *****************
  4462 ;; Defined at:
  4463 ;;		line 16 in file "analog.c"
  4464 ;; Parameters:    Size  Location     Type
  4465 ;;		None
  4466 ;; Auto vars:     Size  Location     Type
  4467 ;;		None
  4468 ;; Return value:  Size  Location     Type
  4469 ;;                  1    wreg      void 
  4470 ;; Registers used:
  4471 ;;		wreg, status,2
  4472 ;; Tracked objects:
  4473 ;;		On entry : 0/0
  4474 ;;		On exit  : 0/0
  4475 ;;		Unchanged: 0/0
  4476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4477 ;;      Params:         0       0       0       0       0       0       0       0       0
  4478 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4479 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4480 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4481 ;;Total ram usage:        0 bytes
  4482 ;; Hardware stack levels used:    1
  4483 ;; Hardware stack levels required when called:    1
  4484 ;; This function calls:
  4485 ;;		Nothing
  4486 ;; This function is called by:
  4487 ;;		_init_tms
  4488 ;; This function uses a non-reentrant model
  4489 ;;
  4490                           
  4491                           	psect	text14
  4492  002418                     __ptext14:
  4493                           	opt stack 0
  4494  002418                     _an_init:
  4495                           	opt stack 28
  4496                           
  4497                           ;analog.c: 17: ADCON1bits.VCFG = 0;
  4498                           
  4499                           ;incstack = 0
  4500  002418  0ECF               	movlw	-49
  4501  00241A  16C1               	andwf	4033,f,c	;volatile
  4502                           
  4503                           ;analog.c: 18: ADCON1bits.PCFG = 0x06;
  4504  00241C  50C1               	movf	4033,w,c	;volatile
  4505  00241E  0BF0               	andlw	-16
  4506  002420  0906               	iorlw	6
  4507  002422  6EC1               	movwf	4033,c	;volatile
  4508                           
  4509                           ;analog.c: 20: ADCON2bits.ADFM=0;
  4510  002424  9EC0               	bcf	4032,7,c	;volatile
  4511                           
  4512                           ;analog.c: 21: ADCON2bits.ACQT=7;
  4513  002426  86C0               	bsf	4032,3,c	;volatile
  4514  002428  88C0               	bsf	4032,4,c	;volatile
  4515  00242A  8AC0               	bsf	4032,5,c	;volatile
  4516                           
  4517                           ;analog.c: 22: ADCON2bits.ADCS=6;
  4518  00242C  50C0               	movf	4032,w,c	;volatile
  4519  00242E  0BF8               	andlw	-8
  4520  002430  0906               	iorlw	6
  4521  002432  6EC0               	movwf	4032,c	;volatile
  4522                           
  4523                           ;analog.c: 23: ADCON0bits.CHS=0;
  4524  002434  94C2               	bcf	4034,2,c	;volatile
  4525  002436  96C2               	bcf	4034,3,c	;volatile
  4526  002438  98C2               	bcf	4034,4,c	;volatile
  4527  00243A  9AC2               	bcf	4034,5,c	;volatile
  4528                           
  4529                           ;analog.c: 24: ADCON0bits.GODONE=0;
  4530  00243C  92C2               	bcf	4034,1,c	;volatile
  4531                           
  4532                           ;analog.c: 25: ADCON0bits.ADON=1;
  4533  00243E  80C2               	bsf	4034,0,c	;volatile
  4534  002440  0012               	return		;funcret
  4535  002442                     __end_of_an_init:
  4536                           	opt stack 0
  4537                           tblptru	equ	0xFF8
  4538                           tblptrh	equ	0xFF7
  4539                           tblptrl	equ	0xFF6
  4540                           tablat	equ	0xFF5
  4541                           intcon	equ	0xFF2
  4542                           intcon2	equ	0xFF1
  4543                           postinc0	equ	0xFEE
  4544                           wreg	equ	0xFE8
  4545                           postinc1	equ	0xFE6
  4546                           postdec1	equ	0xFE5
  4547                           fsr1h	equ	0xFE2
  4548                           fsr1l	equ	0xFE1
  4549                           postinc2	equ	0xFDE
  4550                           postdec2	equ	0xFDD
  4551                           fsr2h	equ	0xFDA
  4552                           fsr2l	equ	0xFD9
  4553                           status	equ	0xFD8
  4554                           
  4555 ;; *************** function _MotorsPWM *****************
  4556 ;; Defined at:
  4557 ;;		line 55 in file "config.c"
  4558 ;; Parameters:    Size  Location     Type
  4559 ;;		None
  4560 ;; Auto vars:     Size  Location     Type
  4561 ;;		None
  4562 ;; Return value:  Size  Location     Type
  4563 ;;                  1    wreg      void 
  4564 ;; Registers used:
  4565 ;;		wreg, status,2
  4566 ;; Tracked objects:
  4567 ;;		On entry : 0/0
  4568 ;;		On exit  : 0/0
  4569 ;;		Unchanged: 0/0
  4570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4571 ;;      Params:         0       0       0       0       0       0       0       0       0
  4572 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4573 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4574 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4575 ;;Total ram usage:        0 bytes
  4576 ;; Hardware stack levels used:    1
  4577 ;; Hardware stack levels required when called:    1
  4578 ;; This function calls:
  4579 ;;		Nothing
  4580 ;; This function is called by:
  4581 ;;		_init_tms
  4582 ;; This function uses a non-reentrant model
  4583 ;;
  4584                           
  4585                           	psect	text15
  4586  002374                     __ptext15:
  4587                           	opt stack 0
  4588  002374                     _MotorsPWM:
  4589                           	opt stack 28
  4590                           
  4591                           ;config.c: 57: T2OUTPS0 = 0;
  4592                           
  4593                           ;incstack = 0
  4594  002374  96CA               	bcf	4042,3,c	;volatile
  4595                           
  4596                           ;config.c: 58: T2OUTPS1 = 0;
  4597  002376  98CA               	bcf	4042,4,c	;volatile
  4598                           
  4599                           ;config.c: 59: T2OUTPS2 = 0;
  4600  002378  9ACA               	bcf	4042,5,c	;volatile
  4601                           
  4602                           ;config.c: 60: T2OUTPS3 = 0;
  4603  00237A  9CCA               	bcf	4042,6,c	;volatile
  4604                           
  4605                           ;config.c: 62: TMR2ON = 1;
  4606  00237C  84CA               	bsf	4042,2,c	;volatile
  4607                           
  4608                           ;config.c: 63: T2CKPS0 = 0;
  4609  00237E  90CA               	bcf	4042,0,c	;volatile
  4610                           
  4611                           ;config.c: 64: T2CKPS1 = 0;
  4612  002380  92CA               	bcf	4042,1,c	;volatile
  4613                           
  4614                           ;config.c: 66: TMR2ON = 1;
  4615  002382  84CA               	bsf	4042,2,c	;volatile
  4616                           
  4617                           ;config.c: 69: T2CONbits.TOUTPS=11;
  4618  002384  50CA               	movf	4042,w,c	;volatile
  4619  002386  0B87               	andlw	-121
  4620  002388  0958               	iorlw	88
  4621  00238A  6ECA               	movwf	4042,c	;volatile
  4622                           
  4623                           ;config.c: 70: T2CONbits.T2CKPS=1;
  4624  00238C  50CA               	movf	4042,w,c	;volatile
  4625  00238E  0BFC               	andlw	-4
  4626  002390  0901               	iorlw	1
  4627  002392  6ECA               	movwf	4042,c	;volatile
  4628                           
  4629                           ;config.c: 71: T2CONbits.TMR2ON=0;
  4630  002394  94CA               	bcf	4042,2,c	;volatile
  4631                           
  4632                           ;config.c: 72: PR2=249;
  4633  002396  0EF9               	movlw	249
  4634  002398  6ECB               	movwf	4043,c	;volatile
  4635                           
  4636                           ;config.c: 73: T2CONbits.TMR2ON=1;
  4637  00239A  84CA               	bsf	4042,2,c	;volatile
  4638                           
  4639                           ;config.c: 76: CCP1CONbits.CCP1M = 1100;
  4640  00239C  50BD               	movf	4029,w,c	;volatile
  4641  00239E  0BF0               	andlw	-16
  4642  0023A0  090C               	iorlw	12
  4643  0023A2  6EBD               	movwf	4029,c	;volatile
  4644                           
  4645                           ;config.c: 77: CCP2CONbits.CCP2M = 1100;
  4646  0023A4  50BA               	movf	4026,w,c	;volatile
  4647  0023A6  0BF0               	andlw	-16
  4648  0023A8  090C               	iorlw	12
  4649  0023AA  6EBA               	movwf	4026,c	;volatile
  4650                           
  4651                           ;config.c: 80: PR2 = 249;
  4652  0023AC  0EF9               	movlw	249
  4653  0023AE  6ECB               	movwf	4043,c	;volatile
  4654  0023B0  0012               	return		;funcret
  4655  0023B2                     __end_of_MotorsPWM:
  4656                           	opt stack 0
  4657                           tblptru	equ	0xFF8
  4658                           tblptrh	equ	0xFF7
  4659                           tblptrl	equ	0xFF6
  4660                           tablat	equ	0xFF5
  4661                           intcon	equ	0xFF2
  4662                           intcon2	equ	0xFF1
  4663                           postinc0	equ	0xFEE
  4664                           wreg	equ	0xFE8
  4665                           postinc1	equ	0xFE6
  4666                           postdec1	equ	0xFE5
  4667                           fsr1h	equ	0xFE2
  4668                           fsr1l	equ	0xFE1
  4669                           postinc2	equ	0xFDE
  4670                           postdec2	equ	0xFDD
  4671                           fsr2h	equ	0xFDA
  4672                           fsr2l	equ	0xFD9
  4673                           status	equ	0xFD8
  4674                           
  4675 ;; *************** function _init_cal *****************
  4676 ;; Defined at:
  4677 ;;		line 41 in file "analog.c"
  4678 ;; Parameters:    Size  Location     Type
  4679 ;;		None
  4680 ;; Auto vars:     Size  Location     Type
  4681 ;;  i               2   20[COMRAM] int 
  4682 ;; Return value:  Size  Location     Type
  4683 ;;                  1    wreg      void 
  4684 ;; Registers used:
  4685 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4686 ;; Tracked objects:
  4687 ;;		On entry : 0/0
  4688 ;;		On exit  : 0/0
  4689 ;;		Unchanged: 0/0
  4690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4691 ;;      Params:         0       0       0       0       0       0       0       0       0
  4692 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4693 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4694 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4695 ;;Total ram usage:        2 bytes
  4696 ;; Hardware stack levels used:    1
  4697 ;; Hardware stack levels required when called:    1
  4698 ;; This function calls:
  4699 ;;		Nothing
  4700 ;; This function is called by:
  4701 ;;		_main
  4702 ;; This function uses a non-reentrant model
  4703 ;;
  4704                           
  4705                           	psect	text16
  4706  0021F4                     __ptext16:
  4707                           	opt stack 0
  4708  0021F4                     _init_cal:
  4709                           	opt stack 29
  4710                           
  4711                           ;analog.c: 42: int i;
  4712                           ;analog.c: 44: for (i = 0;i < 9;i++) maxs[i] = 0;
  4713                           
  4714                           ;incstack = 0
  4715  0021F4  0E00               	movlw	0
  4716  0021F6  6E16               	movwf	init_cal@i+1,c
  4717  0021F8  0E00               	movlw	0
  4718  0021FA  6E15               	movwf	init_cal@i,c
  4719  0021FC                     l3197:
  4720  0021FC  BE16               	btfsc	init_cal@i+1,7,c
  4721  0021FE  D006               	goto	l136
  4722  002200  5016               	movf	init_cal@i+1,w,c
  4723  002202  E114               	bnz	l3207
  4724  002204  0E09               	movlw	9
  4725  002206  5C15               	subwf	init_cal@i,w,c
  4726  002208  B0D8               	btfsc	status,0,c
  4727  00220A  D010               	goto	u3610
  4728  00220C                     l136:
  4729  00220C  90D8               	bcf	status,0,c
  4730  00220E  3415               	rlcf	init_cal@i,w,c
  4731  002210  6ED9               	movwf	fsr2l,c
  4732  002212  3416               	rlcf	init_cal@i+1,w,c
  4733  002214  6EDA               	movwf	fsr2h,c
  4734  002216  0EA0               	movlw	low _maxs
  4735  002218  26D9               	addwf	fsr2l,f,c
  4736  00221A  0E00               	movlw	high _maxs
  4737  00221C  22DA               	addwfc	fsr2h,f,c
  4738  00221E  0E00               	movlw	0
  4739  002220  6EDE               	movwf	postinc2,c
  4740  002222  0E00               	movlw	0
  4741  002224  6EDD               	movwf	postdec2,c
  4742  002226  4A15               	infsnz	init_cal@i,f,c
  4743  002228  2A16               	incf	init_cal@i+1,f,c
  4744  00222A  D7E8               	goto	l3197
  4745  00222C                     u3610:
  4746  00222C                     l3207:
  4747                           
  4748                           ;analog.c: 45: for (i = 0;i < 9;i++) mins[i] = 1024;
  4749  00222C  0E00               	movlw	0
  4750  00222E  6E16               	movwf	init_cal@i+1,c
  4751  002230  0E00               	movlw	0
  4752  002232  6E15               	movwf	init_cal@i,c
  4753  002234                     l3209:
  4754  002234  BE16               	btfsc	init_cal@i+1,7,c
  4755  002236  D006               	goto	l138
  4756  002238  5016               	movf	init_cal@i+1,w,c
  4757  00223A  E114               	bnz	l140
  4758  00223C  0E09               	movlw	9
  4759  00223E  5C15               	subwf	init_cal@i,w,c
  4760  002240  B0D8               	btfsc	status,0,c
  4761  002242  0012               	return	
  4762  002244                     l138:
  4763  002244  90D8               	bcf	status,0,c
  4764  002246  3415               	rlcf	init_cal@i,w,c
  4765  002248  6ED9               	movwf	fsr2l,c
  4766  00224A  3416               	rlcf	init_cal@i+1,w,c
  4767  00224C  6EDA               	movwf	fsr2h,c
  4768  00224E  0E8E               	movlw	low _mins
  4769  002250  26D9               	addwf	fsr2l,f,c
  4770  002252  0E00               	movlw	high _mins
  4771  002254  22DA               	addwfc	fsr2h,f,c
  4772  002256  0E00               	movlw	0
  4773  002258  6EDE               	movwf	postinc2,c
  4774  00225A  0E04               	movlw	4
  4775  00225C  6EDD               	movwf	postdec2,c
  4776  00225E  4A15               	infsnz	init_cal@i,f,c
  4777  002260  2A16               	incf	init_cal@i+1,f,c
  4778  002262  D7E8               	goto	l3209
  4779  002264                     l140:
  4780  002264  0012               	return		;funcret
  4781  002266                     __end_of_init_cal:
  4782                           	opt stack 0
  4783                           tblptru	equ	0xFF8
  4784                           tblptrh	equ	0xFF7
  4785                           tblptrl	equ	0xFF6
  4786                           tablat	equ	0xFF5
  4787                           intcon	equ	0xFF2
  4788                           intcon2	equ	0xFF1
  4789                           postinc0	equ	0xFEE
  4790                           wreg	equ	0xFE8
  4791                           postinc1	equ	0xFE6
  4792                           postdec1	equ	0xFE5
  4793                           fsr1h	equ	0xFE2
  4794                           fsr1l	equ	0xFE1
  4795                           postinc2	equ	0xFDE
  4796                           postdec2	equ	0xFDD
  4797                           fsr2h	equ	0xFDA
  4798                           fsr2l	equ	0xFD9
  4799                           status	equ	0xFD8
  4800                           
  4801 ;; *************** function ___fttol *****************
  4802 ;; Defined at:
  4803 ;;		line 44 in file "/opt/microchip/xc8/v1.43/sources/common/fttol.c"
  4804 ;; Parameters:    Size  Location     Type
  4805 ;;  f1              3    6[BANK0 ] float 
  4806 ;; Auto vars:     Size  Location     Type
  4807 ;;  lval            4   16[BANK0 ] unsigned long 
  4808 ;;  exp1            1   20[BANK0 ] unsigned char 
  4809 ;;  sign1           1   15[BANK0 ] unsigned char 
  4810 ;; Return value:  Size  Location     Type
  4811 ;;                  4    6[BANK0 ] long 
  4812 ;; Registers used:
  4813 ;;		wreg, status,2, status,0
  4814 ;; Tracked objects:
  4815 ;;		On entry : 0/0
  4816 ;;		On exit  : 0/0
  4817 ;;		Unchanged: 0/0
  4818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4819 ;;      Params:         0       4       0       0       0       0       0       0       0
  4820 ;;      Locals:         0       6       0       0       0       0       0       0       0
  4821 ;;      Temps:          0       5       0       0       0       0       0       0       0
  4822 ;;      Totals:         0      15       0       0       0       0       0       0       0
  4823 ;;Total ram usage:       15 bytes
  4824 ;; Hardware stack levels used:    1
  4825 ;; Hardware stack levels required when called:    1
  4826 ;; This function calls:
  4827 ;;		Nothing
  4828 ;; This function is called by:
  4829 ;;		_main
  4830 ;; This function uses a non-reentrant model
  4831 ;;
  4832                           
  4833                           	psect	text17
  4834  0019E8                     __ptext17:
  4835                           	opt stack 0
  4836  0019E8                     ___fttol:
  4837                           	opt stack 29
  4838                           
  4839                           ;incstack = 0
  4840  0019E8  C0CC  F0CE         	movff	___fttol@f1+2,??___fttol
  4841  0019EC  0100               	movlb	0	; () banked
  4842  0019EE  6BCF               	clrf	(??___fttol+1)& (0+255),b
  4843  0019F0  6BD0               	clrf	(??___fttol+2)& (0+255),b
  4844  0019F2  0100               	movlb	0	; () banked
  4845  0019F4  35CB               	rlcf	(___fttol@f1+1)& (0+255),w,b
  4846  0019F6  0100               	movlb	0	; () banked
  4847  0019F8  37CE               	rlcf	??___fttol& (0+255),f,b
  4848  0019FA  E301               	bnc	u4211
  4849  0019FC  81CF               	bsf	(??___fttol+1)& (0+255),0,b
  4850  0019FE                     u4211:
  4851  0019FE  0100               	movlb	0	; () banked
  4852  001A00  51CE               	movf	??___fttol& (0+255),w,b
  4853  001A02  0100               	movlb	0	; () banked
  4854  001A04  6FD8               	movwf	___fttol@exp1& (0+255),b
  4855  001A06  0100               	movlb	0	; () banked
  4856  001A08  51D8               	movf	___fttol@exp1& (0+255),w,b
  4857  001A0A  A4D8               	btfss	status,2,c
  4858  001A0C  D00A               	goto	l728
  4859                           
  4860                           ; BSR set to: 0
  4861  001A0E  0E00               	movlw	0
  4862  001A10  0100               	movlb	0	; () banked
  4863  001A12  6FCA               	movwf	?___fttol& (0+255),b
  4864  001A14  0E00               	movlw	0
  4865  001A16  6FCB               	movwf	(?___fttol+1)& (0+255),b
  4866  001A18  0E00               	movlw	0
  4867  001A1A  6FCC               	movwf	(?___fttol+2)& (0+255),b
  4868  001A1C  0E00               	movlw	0
  4869  001A1E  6FCD               	movwf	(?___fttol+3)& (0+255),b
  4870                           
  4871                           ; BSR set to: 0
  4872  001A20  0012               	return	
  4873  001A22                     l728:
  4874                           
  4875                           ; BSR set to: 0
  4876                           
  4877                           ; BSR set to: 0
  4878  001A22  0E17               	movlw	23
  4879  001A24  0100               	movlb	0	; () banked
  4880  001A26  6FCE               	movwf	??___fttol& (0+255),b
  4881  001A28  C0CA  F0CF         	movff	___fttol@f1,??___fttol+1
  4882  001A2C  C0CB  F0D0         	movff	___fttol@f1+1,??___fttol+2
  4883  001A30  C0CC  F0D1         	movff	___fttol@f1+2,??___fttol+3
  4884  001A34  0100               	movlb	0	; () banked
  4885  001A36  29CE               	incf	??___fttol& (0+255),w,b
  4886  001A38  0100               	movlb	0	; () banked
  4887  001A3A  6FD2               	movwf	(??___fttol+4)& (0+255),b
  4888  001A3C  D005               	goto	u4230
  4889  001A3E                     u4235:
  4890  001A3E  0100               	movlb	0	; () banked
  4891  001A40  90D8               	bcf	status,0,c
  4892  001A42  33D1               	rrcf	(??___fttol+3)& (0+255),f,b
  4893  001A44  33D0               	rrcf	(??___fttol+2)& (0+255),f,b
  4894  001A46  33CF               	rrcf	(??___fttol+1)& (0+255),f,b
  4895  001A48                     u4230:
  4896  001A48  0100               	movlb	0	; () banked
  4897  001A4A  2FD2               	decfsz	(??___fttol+4)& (0+255),f,b
  4898  001A4C  D7F8               	goto	u4235
  4899  001A4E  0100               	movlb	0	; () banked
  4900  001A50  51CF               	movf	(??___fttol+1)& (0+255),w,b
  4901  001A52  0100               	movlb	0	; () banked
  4902  001A54  6FD3               	movwf	___fttol@sign1& (0+255),b
  4903                           
  4904                           ; BSR set to: 0
  4905  001A56  0100               	movlb	0	; () banked
  4906  001A58  8FCB               	bsf	(___fttol@f1+1)& (0+255),7,b
  4907                           
  4908                           ; BSR set to: 0
  4909  001A5A  0EFF               	movlw	255
  4910  001A5C  0100               	movlb	0	; () banked
  4911  001A5E  17CA               	andwf	___fttol@f1& (0+255),f,b
  4912  001A60  0EFF               	movlw	255
  4913  001A62  0100               	movlb	0	; () banked
  4914  001A64  17CB               	andwf	(___fttol@f1+1)& (0+255),f,b
  4915  001A66  0E00               	movlw	0
  4916  001A68  0100               	movlb	0	; () banked
  4917  001A6A  17CC               	andwf	(___fttol@f1+2)& (0+255),f,b
  4918                           
  4919                           ; BSR set to: 0
  4920  001A6C  0100               	movlb	0	; () banked
  4921  001A6E  51CA               	movf	___fttol@f1& (0+255),w,b
  4922  001A70  0100               	movlb	0	; () banked
  4923  001A72  6FD4               	movwf	___fttol@lval& (0+255),b
  4924  001A74  0100               	movlb	0	; () banked
  4925  001A76  51CB               	movf	(___fttol@f1+1)& (0+255),w,b
  4926  001A78  0100               	movlb	0	; () banked
  4927  001A7A  6FD5               	movwf	(___fttol@lval+1)& (0+255),b
  4928  001A7C  0100               	movlb	0	; () banked
  4929  001A7E  51CC               	movf	(___fttol@f1+2)& (0+255),w,b
  4930  001A80  0100               	movlb	0	; () banked
  4931  001A82  6FD6               	movwf	(___fttol@lval+2)& (0+255),b
  4932  001A84  0100               	movlb	0	; () banked
  4933  001A86  6BD7               	clrf	(___fttol@lval+3)& (0+255),b
  4934                           
  4935                           ; BSR set to: 0
  4936  001A88  0E8E               	movlw	142
  4937  001A8A  0100               	movlb	0	; () banked
  4938  001A8C  5FD8               	subwf	___fttol@exp1& (0+255),f,b
  4939                           
  4940                           ; BSR set to: 0
  4941  001A8E  0100               	movlb	0	; () banked
  4942  001A90  AFD8               	btfss	___fttol@exp1& (0+255),7,b
  4943  001A92  D01A               	goto	l730
  4944                           
  4945                           ; BSR set to: 0
  4946  001A94  0100               	movlb	0	; () banked
  4947  001A96  51D8               	movf	___fttol@exp1& (0+255),w,b
  4948  001A98  0A80               	xorlw	128
  4949  001A9A  0F8F               	addlw	143
  4950  001A9C  B0D8               	btfsc	status,0,c
  4951  001A9E  D00A               	goto	l731
  4952                           
  4953                           ; BSR set to: 0
  4954  001AA0  0E00               	movlw	0
  4955  001AA2  0100               	movlb	0	; () banked
  4956  001AA4  6FCA               	movwf	?___fttol& (0+255),b
  4957  001AA6  0E00               	movlw	0
  4958  001AA8  6FCB               	movwf	(?___fttol+1)& (0+255),b
  4959  001AAA  0E00               	movlw	0
  4960  001AAC  6FCC               	movwf	(?___fttol+2)& (0+255),b
  4961  001AAE  0E00               	movlw	0
  4962  001AB0  6FCD               	movwf	(?___fttol+3)& (0+255),b
  4963                           
  4964                           ; BSR set to: 0
  4965  001AB2  0012               	return	
  4966  001AB4                     l731:
  4967                           
  4968                           ; BSR set to: 0
  4969                           
  4970                           ; BSR set to: 0
  4971                           
  4972                           ; BSR set to: 0
  4973  001AB4  0100               	movlb	0	; () banked
  4974  001AB6  90D8               	bcf	status,0,c
  4975  001AB8  33D7               	rrcf	(___fttol@lval+3)& (0+255),f,b
  4976  001ABA  33D6               	rrcf	(___fttol@lval+2)& (0+255),f,b
  4977  001ABC  33D5               	rrcf	(___fttol@lval+1)& (0+255),f,b
  4978  001ABE  33D4               	rrcf	___fttol@lval& (0+255),f,b
  4979                           
  4980                           ; BSR set to: 0
  4981  001AC0  0100               	movlb	0	; () banked
  4982  001AC2  3FD8               	incfsz	___fttol@exp1& (0+255),f,b
  4983  001AC4  D7F7               	goto	l731
  4984                           
  4985                           ; BSR set to: 0
  4986  001AC6  D01B               	goto	u4270
  4987  001AC8                     l730:
  4988                           
  4989                           ; BSR set to: 0
  4990                           
  4991                           ; BSR set to: 0
  4992  001AC8  0E17               	movlw	23
  4993  001ACA  0100               	movlb	0	; () banked
  4994  001ACC  65D8               	cpfsgt	___fttol@exp1& (0+255),b
  4995  001ACE  D012               	goto	l736
  4996                           
  4997                           ; BSR set to: 0
  4998  001AD0  0E00               	movlw	0
  4999  001AD2  0100               	movlb	0	; () banked
  5000  001AD4  6FCA               	movwf	?___fttol& (0+255),b
  5001  001AD6  0E00               	movlw	0
  5002  001AD8  6FCB               	movwf	(?___fttol+1)& (0+255),b
  5003  001ADA  0E00               	movlw	0
  5004  001ADC  6FCC               	movwf	(?___fttol+2)& (0+255),b
  5005  001ADE  0E00               	movlw	0
  5006  001AE0  6FCD               	movwf	(?___fttol+3)& (0+255),b
  5007                           
  5008                           ; BSR set to: 0
  5009  001AE2  0012               	return	
  5010  001AE4                     
  5011                           ; BSR set to: 0
  5012                           
  5013                           ; BSR set to: 0
  5014  001AE4  0100               	movlb	0	; () banked
  5015  001AE6  90D8               	bcf	status,0,c
  5016  001AE8  37D4               	rlcf	___fttol@lval& (0+255),f,b
  5017  001AEA  37D5               	rlcf	(___fttol@lval+1)& (0+255),f,b
  5018  001AEC  37D6               	rlcf	(___fttol@lval+2)& (0+255),f,b
  5019  001AEE  37D7               	rlcf	(___fttol@lval+3)& (0+255),f,b
  5020  001AF0  0100               	movlb	0	; () banked
  5021  001AF2  07D8               	decf	___fttol@exp1& (0+255),f,b
  5022  001AF4                     l736:
  5023                           
  5024                           ; BSR set to: 0
  5025                           
  5026                           ; BSR set to: 0
  5027  001AF4  0100               	movlb	0	; () banked
  5028  001AF6  51D8               	movf	___fttol@exp1& (0+255),w,b
  5029  001AF8  0100               	movlb	0	; () banked
  5030  001AFA  A4D8               	btfss	status,2,c
  5031  001AFC  D7F3               	goto	l737
  5032  001AFE                     u4270:
  5033                           
  5034                           ; BSR set to: 0
  5035                           
  5036                           ; BSR set to: 0
  5037                           
  5038                           ; BSR set to: 0
  5039  001AFE  0100               	movlb	0	; () banked
  5040  001B00  51D3               	movf	___fttol@sign1& (0+255),w,b
  5041  001B02  0100               	movlb	0	; () banked
  5042  001B04  B4D8               	btfsc	status,2,c
  5043  001B06  D009               	goto	l739
  5044                           
  5045                           ; BSR set to: 0
  5046  001B08  0100               	movlb	0	; () banked
  5047  001B0A  1FD7               	comf	(___fttol@lval+3)& (0+255),f,b
  5048  001B0C  1FD6               	comf	(___fttol@lval+2)& (0+255),f,b
  5049  001B0E  1FD5               	comf	(___fttol@lval+1)& (0+255),f,b
  5050  001B10  6DD4               	negf	___fttol@lval& (0+255),b
  5051  001B12  0E00               	movlw	0
  5052  001B14  23D5               	addwfc	(___fttol@lval+1)& (0+255),f,b
  5053  001B16  23D6               	addwfc	(___fttol@lval+2)& (0+255),f,b
  5054  001B18  23D7               	addwfc	(___fttol@lval+3)& (0+255),f,b
  5055  001B1A                     l739:
  5056                           
  5057                           ; BSR set to: 0
  5058                           
  5059                           ; BSR set to: 0
  5060  001B1A  C0D4  F0CA         	movff	___fttol@lval,?___fttol
  5061  001B1E  C0D5  F0CB         	movff	___fttol@lval+1,?___fttol+1
  5062  001B22  C0D6  F0CC         	movff	___fttol@lval+2,?___fttol+2
  5063  001B26  C0D7  F0CD         	movff	___fttol@lval+3,?___fttol+3
  5064  001B2A  0012               	return	
  5065  001B2C                     __end_of___fttol:
  5066                           	opt stack 0
  5067                           tblptru	equ	0xFF8
  5068                           tblptrh	equ	0xFF7
  5069                           tblptrl	equ	0xFF6
  5070                           tablat	equ	0xFF5
  5071                           intcon	equ	0xFF2
  5072                           intcon2	equ	0xFF1
  5073                           postinc0	equ	0xFEE
  5074                           wreg	equ	0xFE8
  5075                           postinc1	equ	0xFE6
  5076                           postdec1	equ	0xFE5
  5077                           fsr1h	equ	0xFE2
  5078                           fsr1l	equ	0xFE1
  5079                           postinc2	equ	0xFDE
  5080                           postdec2	equ	0xFDD
  5081                           fsr2h	equ	0xFDA
  5082                           fsr2l	equ	0xFD9
  5083                           status	equ	0xFD8
  5084                           
  5085 ;; *************** function ___ftneg *****************
  5086 ;; Defined at:
  5087 ;;		line 15 in file "/opt/microchip/xc8/v1.43/sources/common/ftneg.c"
  5088 ;; Parameters:    Size  Location     Type
  5089 ;;  f1              3   20[COMRAM] float 
  5090 ;; Auto vars:     Size  Location     Type
  5091 ;;		None
  5092 ;; Return value:  Size  Location     Type
  5093 ;;                  3   20[COMRAM] float 
  5094 ;; Registers used:
  5095 ;;		wreg, status,2, status,0
  5096 ;; Tracked objects:
  5097 ;;		On entry : 0/0
  5098 ;;		On exit  : 0/0
  5099 ;;		Unchanged: 0/0
  5100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5101 ;;      Params:         3       0       0       0       0       0       0       0       0
  5102 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5103 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5104 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5105 ;;Total ram usage:        3 bytes
  5106 ;; Hardware stack levels used:    1
  5107 ;; Hardware stack levels required when called:    1
  5108 ;; This function calls:
  5109 ;;		Nothing
  5110 ;; This function is called by:
  5111 ;;		_main
  5112 ;; This function uses a non-reentrant model
  5113 ;;
  5114                           
  5115                           	psect	text18
  5116  002442                     __ptext18:
  5117                           	opt stack 0
  5118  002442                     ___ftneg:
  5119                           	opt stack 29
  5120                           
  5121                           ; BSR set to: 0
  5122                           ;incstack = 0
  5123  002442  5015               	movf	___ftneg@f1,w,c
  5124  002444  1016               	iorwf	___ftneg@f1+1,w,c
  5125  002446  1017               	iorwf	___ftneg@f1+2,w,c
  5126  002448  B4D8               	btfsc	status,2,c
  5127  00244A  D006               	goto	l718
  5128  00244C  0E00               	movlw	0
  5129  00244E  1A15               	xorwf	___ftneg@f1,f,c
  5130  002450  0E00               	movlw	0
  5131  002452  1A16               	xorwf	___ftneg@f1+1,f,c
  5132  002454  0E80               	movlw	128
  5133  002456  1A17               	xorwf	___ftneg@f1+2,f,c
  5134  002458                     l718:
  5135  002458  C015  F015         	movff	___ftneg@f1,?___ftneg
  5136  00245C  C016  F016         	movff	___ftneg@f1+1,?___ftneg+1
  5137  002460  C017  F017         	movff	___ftneg@f1+2,?___ftneg+2
  5138  002464  0012               	return		;funcret
  5139  002466                     __end_of___ftneg:
  5140                           	opt stack 0
  5141                           tblptru	equ	0xFF8
  5142                           tblptrh	equ	0xFF7
  5143                           tblptrl	equ	0xFF6
  5144                           tablat	equ	0xFF5
  5145                           intcon	equ	0xFF2
  5146                           intcon2	equ	0xFF1
  5147                           postinc0	equ	0xFEE
  5148                           wreg	equ	0xFE8
  5149                           postinc1	equ	0xFE6
  5150                           postdec1	equ	0xFE5
  5151                           fsr1h	equ	0xFE2
  5152                           fsr1l	equ	0xFE1
  5153                           postinc2	equ	0xFDE
  5154                           postdec2	equ	0xFDD
  5155                           fsr2h	equ	0xFDA
  5156                           fsr2l	equ	0xFD9
  5157                           status	equ	0xFD8
  5158                           
  5159 ;; *************** function ___ftmul *****************
  5160 ;; Defined at:
  5161 ;;		line 62 in file "/opt/microchip/xc8/v1.43/sources/common/ftmul.c"
  5162 ;; Parameters:    Size  Location     Type
  5163 ;;  f1              3   32[COMRAM] float 
  5164 ;;  f2              3   35[COMRAM] float 
  5165 ;; Auto vars:     Size  Location     Type
  5166 ;;  f3_as_produc    3   42[COMRAM] unsigned um
  5167 ;;  sign            1   46[COMRAM] unsigned char 
  5168 ;;  cntr            1   45[COMRAM] unsigned char 
  5169 ;;  exp             1   41[COMRAM] unsigned char 
  5170 ;; Return value:  Size  Location     Type
  5171 ;;                  3   32[COMRAM] float 
  5172 ;; Registers used:
  5173 ;;		wreg, status,2, status,0, cstack
  5174 ;; Tracked objects:
  5175 ;;		On entry : 0/0
  5176 ;;		On exit  : 0/0
  5177 ;;		Unchanged: 0/0
  5178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5179 ;;      Params:         6       0       0       0       0       0       0       0       0
  5180 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5181 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5182 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5183 ;;Total ram usage:       15 bytes
  5184 ;; Hardware stack levels used:    1
  5185 ;; Hardware stack levels required when called:    2
  5186 ;; This function calls:
  5187 ;;		___ftpack
  5188 ;; This function is called by:
  5189 ;;		_main
  5190 ;;		_twiddle_update
  5191 ;; This function uses a non-reentrant model
  5192 ;;
  5193                           
  5194                           	psect	text19
  5195  001B2C                     __ptext19:
  5196                           	opt stack 0
  5197  001B2C                     ___ftmul:
  5198                           	opt stack 28
  5199                           
  5200                           ;incstack = 0
  5201  001B2C  C023  F027         	movff	___ftmul@f1+2,??___ftmul
  5202  001B30  6A28               	clrf	(??___ftmul+1)& (0+255),c
  5203  001B32  6A29               	clrf	(??___ftmul+2)& (0+255),c
  5204  001B34  3422               	rlcf	___ftmul@f1+1,w,c
  5205  001B36  3627               	rlcf	??___ftmul& (0+255),f,c
  5206  001B38  E301               	bnc	u4101
  5207  001B3A  8028               	bsf	(??___ftmul+1)& (0+255),0,c
  5208  001B3C                     u4101:
  5209  001B3C  5027               	movf	??___ftmul,w,c
  5210  001B3E  6E2A               	movwf	___ftmul@exp,c
  5211  001B40  502A               	movf	___ftmul@exp,w,c
  5212  001B42  A4D8               	btfss	status,2,c
  5213  001B44  D007               	goto	l707
  5214  001B46  0E00               	movlw	0
  5215  001B48  6E21               	movwf	?___ftmul,c
  5216  001B4A  0E00               	movlw	0
  5217  001B4C  6E22               	movwf	?___ftmul+1,c
  5218  001B4E  0E00               	movlw	0
  5219  001B50  6E23               	movwf	?___ftmul+2,c
  5220  001B52  0012               	return	
  5221  001B54                     l707:
  5222  001B54  C026  F027         	movff	___ftmul@f2+2,??___ftmul
  5223  001B58  6A28               	clrf	(??___ftmul+1)& (0+255),c
  5224  001B5A  6A29               	clrf	(??___ftmul+2)& (0+255),c
  5225  001B5C  3425               	rlcf	___ftmul@f2+1,w,c
  5226  001B5E  3627               	rlcf	??___ftmul& (0+255),f,c
  5227  001B60  E301               	bnc	u4121
  5228  001B62  8028               	bsf	(??___ftmul+1)& (0+255),0,c
  5229  001B64                     u4121:
  5230  001B64  5027               	movf	??___ftmul,w,c
  5231  001B66  6E2F               	movwf	___ftmul@sign,c
  5232  001B68  502F               	movf	___ftmul@sign,w,c
  5233  001B6A  A4D8               	btfss	status,2,c
  5234  001B6C  D007               	goto	l709
  5235  001B6E  0E00               	movlw	0
  5236  001B70  6E21               	movwf	?___ftmul,c
  5237  001B72  0E00               	movlw	0
  5238  001B74  6E22               	movwf	?___ftmul+1,c
  5239  001B76  0E00               	movlw	0
  5240  001B78  6E23               	movwf	?___ftmul+2,c
  5241  001B7A  0012               	return	
  5242  001B7C                     l709:
  5243  001B7C  502F               	movf	___ftmul@sign,w,c
  5244  001B7E  0F7B               	addlw	123
  5245  001B80  262A               	addwf	___ftmul@exp,f,c
  5246  001B82  C023  F02F         	movff	___ftmul@f1+2,___ftmul@sign
  5247  001B86  5026               	movf	___ftmul@f2+2,w,c
  5248  001B88  1A2F               	xorwf	___ftmul@sign,f,c
  5249  001B8A  0E80               	movlw	128
  5250  001B8C  162F               	andwf	___ftmul@sign,f,c
  5251  001B8E  8E22               	bsf	___ftmul@f1+1,7,c
  5252  001B90  8E25               	bsf	___ftmul@f2+1,7,c
  5253  001B92  0EFF               	movlw	255
  5254  001B94  1624               	andwf	___ftmul@f2,f,c
  5255  001B96  0EFF               	movlw	255
  5256  001B98  1625               	andwf	___ftmul@f2+1,f,c
  5257  001B9A  0E00               	movlw	0
  5258  001B9C  1626               	andwf	___ftmul@f2+2,f,c
  5259  001B9E  0E00               	movlw	0
  5260  001BA0  6E2B               	movwf	___ftmul@f3_as_product,c
  5261  001BA2  0E00               	movlw	0
  5262  001BA4  6E2C               	movwf	___ftmul@f3_as_product+1,c
  5263  001BA6  0E00               	movlw	0
  5264  001BA8  6E2D               	movwf	___ftmul@f3_as_product+2,c
  5265  001BAA  0E07               	movlw	7
  5266  001BAC  6E2E               	movwf	___ftmul@cntr,c
  5267  001BAE  A021               	btfss	___ftmul@f1,0,c
  5268  001BB0  D006               	goto	l711
  5269  001BB2  5024               	movf	___ftmul@f2,w,c
  5270  001BB4  262B               	addwf	___ftmul@f3_as_product,f,c
  5271  001BB6  5025               	movf	___ftmul@f2+1,w,c
  5272  001BB8  222C               	addwfc	___ftmul@f3_as_product+1,f,c
  5273  001BBA  5026               	movf	___ftmul@f2+2,w,c
  5274  001BBC  222D               	addwfc	___ftmul@f3_as_product+2,f,c
  5275  001BBE                     l711:
  5276  001BBE  90D8               	bcf	status,0,c
  5277  001BC0  3223               	rrcf	___ftmul@f1+2,f,c
  5278  001BC2  3222               	rrcf	___ftmul@f1+1,f,c
  5279  001BC4  3221               	rrcf	___ftmul@f1,f,c
  5280  001BC6  90D8               	bcf	status,0,c
  5281  001BC8  3624               	rlcf	___ftmul@f2,f,c
  5282  001BCA  3625               	rlcf	___ftmul@f2+1,f,c
  5283  001BCC  3626               	rlcf	___ftmul@f2+2,f,c
  5284  001BCE  2E2E               	decfsz	___ftmul@cntr,f,c
  5285  001BD0  D7EE               	goto	l710
  5286  001BD2  0E09               	movlw	9
  5287  001BD4  6E2E               	movwf	___ftmul@cntr,c
  5288  001BD6  A021               	btfss	___ftmul@f1,0,c
  5289  001BD8  D006               	goto	l714
  5290  001BDA  5024               	movf	___ftmul@f2,w,c
  5291  001BDC  262B               	addwf	___ftmul@f3_as_product,f,c
  5292  001BDE  5025               	movf	___ftmul@f2+1,w,c
  5293  001BE0  222C               	addwfc	___ftmul@f3_as_product+1,f,c
  5294  001BE2  5026               	movf	___ftmul@f2+2,w,c
  5295  001BE4  222D               	addwfc	___ftmul@f3_as_product+2,f,c
  5296  001BE6                     l714:
  5297  001BE6  90D8               	bcf	status,0,c
  5298  001BE8  3223               	rrcf	___ftmul@f1+2,f,c
  5299  001BEA  3222               	rrcf	___ftmul@f1+1,f,c
  5300  001BEC  3221               	rrcf	___ftmul@f1,f,c
  5301  001BEE  90D8               	bcf	status,0,c
  5302  001BF0  322D               	rrcf	___ftmul@f3_as_product+2,f,c
  5303  001BF2  322C               	rrcf	___ftmul@f3_as_product+1,f,c
  5304  001BF4  322B               	rrcf	___ftmul@f3_as_product,f,c
  5305  001BF6  2E2E               	decfsz	___ftmul@cntr,f,c
  5306  001BF8  D7EE               	goto	l713
  5307  001BFA  C02B  F015         	movff	___ftmul@f3_as_product,___ftpack@arg
  5308  001BFE  C02C  F016         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  5309  001C02  C02D  F017         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  5310  001C06  C02A  F018         	movff	___ftmul@exp,___ftpack@exp
  5311  001C0A  C02F  F019         	movff	___ftmul@sign,___ftpack@sign
  5312  001C0E  ECEC  F00E         	call	___ftpack	;wreg free
  5313  001C12  C015  F021         	movff	?___ftpack,?___ftmul
  5314  001C16  C016  F022         	movff	?___ftpack+1,?___ftmul+1
  5315  001C1A  C017  F023         	movff	?___ftpack+2,?___ftmul+2
  5316  001C1E  0012               	return	
  5317  001C20                     __end_of___ftmul:
  5318                           	opt stack 0
  5319                           tblptru	equ	0xFF8
  5320                           tblptrh	equ	0xFF7
  5321                           tblptrl	equ	0xFF6
  5322                           tablat	equ	0xFF5
  5323                           intcon	equ	0xFF2
  5324                           intcon2	equ	0xFF1
  5325                           postinc0	equ	0xFEE
  5326                           wreg	equ	0xFE8
  5327                           postinc1	equ	0xFE6
  5328                           postdec1	equ	0xFE5
  5329                           fsr1h	equ	0xFE2
  5330                           fsr1l	equ	0xFE1
  5331                           postinc2	equ	0xFDE
  5332                           postdec2	equ	0xFDD
  5333                           fsr2h	equ	0xFDA
  5334                           fsr2l	equ	0xFD9
  5335                           status	equ	0xFD8
  5336                           
  5337 ;; *************** function ___ftge *****************
  5338 ;; Defined at:
  5339 ;;		line 4 in file "/opt/microchip/xc8/v1.43/sources/common/ftge.c"
  5340 ;; Parameters:    Size  Location     Type
  5341 ;;  ff1             3   20[COMRAM] float 
  5342 ;;  ff2             3   23[COMRAM] float 
  5343 ;; Auto vars:     Size  Location     Type
  5344 ;;		None
  5345 ;; Return value:  Size  Location     Type
  5346 ;;		None               void
  5347 ;; Registers used:
  5348 ;;		wreg, status,2, status,0
  5349 ;; Tracked objects:
  5350 ;;		On entry : 0/0
  5351 ;;		On exit  : 0/0
  5352 ;;		Unchanged: 0/0
  5353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5354 ;;      Params:         6       0       0       0       0       0       0       0       0
  5355 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5356 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5357 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5358 ;;Total ram usage:        9 bytes
  5359 ;; Hardware stack levels used:    1
  5360 ;; Hardware stack levels required when called:    1
  5361 ;; This function calls:
  5362 ;;		Nothing
  5363 ;; This function is called by:
  5364 ;;		_main
  5365 ;; This function uses a non-reentrant model
  5366 ;;
  5367                           
  5368                           	psect	text20
  5369  00206E                     __ptext20:
  5370                           	opt stack 0
  5371  00206E                     ___ftge:
  5372                           	opt stack 29
  5373                           
  5374                           ;incstack = 0
  5375  00206E  AE17               	btfss	___ftge@ff1+2,7,c
  5376  002070  D016               	goto	l700
  5377  002072  C015  F01B         	movff	___ftge@ff1,??___ftge
  5378  002076  C016  F01C         	movff	___ftge@ff1+1,??___ftge+1
  5379  00207A  C017  F01D         	movff	___ftge@ff1+2,??___ftge+2
  5380  00207E  1E1B               	comf	??___ftge,f,c
  5381  002080  1E1C               	comf	??___ftge+1,f,c
  5382  002082  1E1D               	comf	??___ftge+2,f,c
  5383  002084  2A1B               	incf	??___ftge,f,c
  5384  002086  0E00               	movlw	0
  5385  002088  221C               	addwfc	??___ftge+1,f,c
  5386  00208A  221D               	addwfc	??___ftge+2,f,c
  5387  00208C  0E00               	movlw	0
  5388  00208E  241B               	addwf	??___ftge,w,c
  5389  002090  6E15               	movwf	___ftge@ff1,c
  5390  002092  0E00               	movlw	0
  5391  002094  201C               	addwfc	??___ftge+1,w,c
  5392  002096  6E16               	movwf	___ftge@ff1+1,c
  5393  002098  0E80               	movlw	128
  5394  00209A  201D               	addwfc	??___ftge+2,w,c
  5395  00209C  6E17               	movwf	___ftge@ff1+2,c
  5396  00209E                     l700:
  5397  00209E  AE1A               	btfss	___ftge@ff2+2,7,c
  5398  0020A0  D016               	goto	l701
  5399  0020A2  C018  F01B         	movff	___ftge@ff2,??___ftge
  5400  0020A6  C019  F01C         	movff	___ftge@ff2+1,??___ftge+1
  5401  0020AA  C01A  F01D         	movff	___ftge@ff2+2,??___ftge+2
  5402  0020AE  1E1B               	comf	??___ftge,f,c
  5403  0020B0  1E1C               	comf	??___ftge+1,f,c
  5404  0020B2  1E1D               	comf	??___ftge+2,f,c
  5405  0020B4  2A1B               	incf	??___ftge,f,c
  5406  0020B6  0E00               	movlw	0
  5407  0020B8  221C               	addwfc	??___ftge+1,f,c
  5408  0020BA  221D               	addwfc	??___ftge+2,f,c
  5409  0020BC  0E00               	movlw	0
  5410  0020BE  241B               	addwf	??___ftge,w,c
  5411  0020C0  6E18               	movwf	___ftge@ff2,c
  5412  0020C2  0E00               	movlw	0
  5413  0020C4  201C               	addwfc	??___ftge+1,w,c
  5414  0020C6  6E19               	movwf	___ftge@ff2+1,c
  5415  0020C8  0E80               	movlw	128
  5416  0020CA  201D               	addwfc	??___ftge+2,w,c
  5417  0020CC  6E1A               	movwf	___ftge@ff2+2,c
  5418  0020CE                     l701:
  5419  0020CE  0E00               	movlw	0
  5420  0020D0  1A15               	xorwf	___ftge@ff1,f,c
  5421  0020D2  0E00               	movlw	0
  5422  0020D4  1A16               	xorwf	___ftge@ff1+1,f,c
  5423  0020D6  0E80               	movlw	128
  5424  0020D8  1A17               	xorwf	___ftge@ff1+2,f,c
  5425  0020DA  0E00               	movlw	0
  5426  0020DC  1A18               	xorwf	___ftge@ff2,f,c
  5427  0020DE  0E00               	movlw	0
  5428  0020E0  1A19               	xorwf	___ftge@ff2+1,f,c
  5429  0020E2  0E80               	movlw	128
  5430  0020E4  1A1A               	xorwf	___ftge@ff2+2,f,c
  5431  0020E6  5018               	movf	___ftge@ff2,w,c
  5432  0020E8  5C15               	subwf	___ftge@ff1,w,c
  5433  0020EA  5019               	movf	___ftge@ff2+1,w,c
  5434  0020EC  5816               	subwfb	___ftge@ff1+1,w,c
  5435  0020EE  501A               	movf	___ftge@ff2+2,w,c
  5436  0020F0  5817               	subwfb	___ftge@ff1+2,w,c
  5437  0020F2  B0D8               	btfsc	status,0,c
  5438  0020F4  D002               	goto	l2931
  5439  0020F6  90D8               	bcf	status,0,c
  5440  0020F8  0012               	return	
  5441  0020FA                     l2931:
  5442  0020FA  80D8               	bsf	status,0,c
  5443  0020FC  0012               	return	
  5444  0020FE                     __end_of___ftge:
  5445                           	opt stack 0
  5446                           tblptru	equ	0xFF8
  5447                           tblptrh	equ	0xFF7
  5448                           tblptrl	equ	0xFF6
  5449                           tablat	equ	0xFF5
  5450                           intcon	equ	0xFF2
  5451                           intcon2	equ	0xFF1
  5452                           postinc0	equ	0xFEE
  5453                           wreg	equ	0xFE8
  5454                           postinc1	equ	0xFE6
  5455                           postdec1	equ	0xFE5
  5456                           fsr1h	equ	0xFE2
  5457                           fsr1l	equ	0xFE1
  5458                           postinc2	equ	0xFDE
  5459                           postdec2	equ	0xFDD
  5460                           fsr2h	equ	0xFDA
  5461                           fsr2l	equ	0xFD9
  5462                           status	equ	0xFD8
  5463                           
  5464 ;; *************** function ___ftadd *****************
  5465 ;; Defined at:
  5466 ;;		line 86 in file "/opt/microchip/xc8/v1.43/sources/common/ftadd.c"
  5467 ;; Parameters:    Size  Location     Type
  5468 ;;  f1              3   47[COMRAM] float 
  5469 ;;  f2              3   50[COMRAM] float 
  5470 ;; Auto vars:     Size  Location     Type
  5471 ;;  exp1            1    5[BANK0 ] unsigned char 
  5472 ;;  exp2            1    4[BANK0 ] unsigned char 
  5473 ;;  sign            1    3[BANK0 ] unsigned char 
  5474 ;; Return value:  Size  Location     Type
  5475 ;;                  3   47[COMRAM] float 
  5476 ;; Registers used:
  5477 ;;		wreg, status,2, status,0, cstack
  5478 ;; Tracked objects:
  5479 ;;		On entry : 0/0
  5480 ;;		On exit  : 0/0
  5481 ;;		Unchanged: 0/0
  5482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5483 ;;      Params:         6       0       0       0       0       0       0       0       0
  5484 ;;      Locals:         0       3       0       0       0       0       0       0       0
  5485 ;;      Temps:          0       3       0       0       0       0       0       0       0
  5486 ;;      Totals:         6       6       0       0       0       0       0       0       0
  5487 ;;Total ram usage:       12 bytes
  5488 ;; Hardware stack levels used:    1
  5489 ;; Hardware stack levels required when called:    2
  5490 ;; This function calls:
  5491 ;;		___ftpack
  5492 ;; This function is called by:
  5493 ;;		_main
  5494 ;;		_twiddle_update
  5495 ;;		___ftsub
  5496 ;; This function uses a non-reentrant model
  5497 ;;
  5498                           
  5499                           	psect	text21
  5500  0017D2                     __ptext21:
  5501                           	opt stack 0
  5502  0017D2                     ___ftadd:
  5503                           	opt stack 28
  5504                           
  5505                           ;incstack = 0
  5506  0017D2  C032  F0C4         	movff	___ftadd@f1+2,??___ftadd
  5507  0017D6  0100               	movlb	0	; () banked
  5508  0017D8  6BC5               	clrf	(??___ftadd+1)& (0+255),b
  5509  0017DA  6BC6               	clrf	(??___ftadd+2)& (0+255),b
  5510  0017DC  3431               	rlcf	___ftadd@f1+1,w,c
  5511  0017DE  0100               	movlb	0	; () banked
  5512  0017E0  37C4               	rlcf	??___ftadd& (0+255),f,b
  5513  0017E2  E301               	bnc	u3891
  5514  0017E4  81C5               	bsf	(??___ftadd+1)& (0+255),0,b
  5515  0017E6                     u3891:
  5516  0017E6  0100               	movlb	0	; () banked
  5517  0017E8  51C4               	movf	??___ftadd& (0+255),w,b
  5518  0017EA  0100               	movlb	0	; () banked
  5519  0017EC  6FC9               	movwf	___ftadd@exp1& (0+255),b
  5520  0017EE  C035  F0C4         	movff	___ftadd@f2+2,??___ftadd
  5521  0017F2  0100               	movlb	0	; () banked
  5522  0017F4  6BC5               	clrf	(??___ftadd+1)& (0+255),b
  5523  0017F6  6BC6               	clrf	(??___ftadd+2)& (0+255),b
  5524  0017F8  3434               	rlcf	___ftadd@f2+1,w,c
  5525  0017FA  0100               	movlb	0	; () banked
  5526  0017FC  37C4               	rlcf	??___ftadd& (0+255),f,b
  5527  0017FE  E301               	bnc	u3901
  5528  001800  81C5               	bsf	(??___ftadd+1)& (0+255),0,b
  5529  001802                     u3901:
  5530  001802  0100               	movlb	0	; () banked
  5531  001804  51C4               	movf	??___ftadd& (0+255),w,b
  5532  001806  0100               	movlb	0	; () banked
  5533  001808  6FC8               	movwf	___ftadd@exp2& (0+255),b
  5534                           
  5535                           ; BSR set to: 0
  5536  00180A  0100               	movlb	0	; () banked
  5537  00180C  51C9               	movf	___ftadd@exp1& (0+255),w,b
  5538  00180E  0100               	movlb	0	; () banked
  5539  001810  B4D8               	btfsc	status,2,c
  5540  001812  D011               	goto	u3930
  5541                           
  5542                           ; BSR set to: 0
  5543  001814  0100               	movlb	0	; () banked
  5544  001816  51C8               	movf	___ftadd@exp2& (0+255),w,b
  5545  001818  0100               	movlb	0	; () banked
  5546  00181A  5DC9               	subwf	___ftadd@exp1& (0+255),w,b
  5547  00181C  B0D8               	btfsc	status,0,c
  5548  00181E  D012               	goto	l659
  5549                           
  5550                           ; BSR set to: 0
  5551  001820  0100               	movlb	0	; () banked
  5552  001822  51C9               	movf	___ftadd@exp1& (0+255),w,b
  5553  001824  0800               	sublw	0
  5554  001826  0100               	movlb	0	; () banked
  5555  001828  25C8               	addwf	___ftadd@exp2& (0+255),w,b
  5556  00182A  0100               	movlb	0	; () banked
  5557  00182C  6FC4               	movwf	??___ftadd& (0+255),b
  5558  00182E  0E18               	movlw	24
  5559  001830  0100               	movlb	0	; () banked
  5560  001832  65C4               	cpfsgt	??___ftadd& (0+255),b
  5561  001834  D007               	goto	l659
  5562  001836                     u3930:
  5563                           
  5564                           ; BSR set to: 0
  5565  001836  C033  F030         	movff	___ftadd@f2,?___ftadd
  5566  00183A  C034  F031         	movff	___ftadd@f2+1,?___ftadd+1
  5567  00183E  C035  F032         	movff	___ftadd@f2+2,?___ftadd+2
  5568  001842  0012               	return	
  5569  001844                     l659:
  5570                           
  5571                           ; BSR set to: 0
  5572                           
  5573                           ; BSR set to: 0
  5574  001844  0100               	movlb	0	; () banked
  5575  001846  51C8               	movf	___ftadd@exp2& (0+255),w,b
  5576  001848  0100               	movlb	0	; () banked
  5577  00184A  B4D8               	btfsc	status,2,c
  5578  00184C  D011               	goto	u3960
  5579                           
  5580                           ; BSR set to: 0
  5581  00184E  0100               	movlb	0	; () banked
  5582  001850  51C9               	movf	___ftadd@exp1& (0+255),w,b
  5583  001852  0100               	movlb	0	; () banked
  5584  001854  5DC8               	subwf	___ftadd@exp2& (0+255),w,b
  5585  001856  B0D8               	btfsc	status,0,c
  5586  001858  D012               	goto	l663
  5587                           
  5588                           ; BSR set to: 0
  5589  00185A  0100               	movlb	0	; () banked
  5590  00185C  51C8               	movf	___ftadd@exp2& (0+255),w,b
  5591  00185E  0800               	sublw	0
  5592  001860  0100               	movlb	0	; () banked
  5593  001862  25C9               	addwf	___ftadd@exp1& (0+255),w,b
  5594  001864  0100               	movlb	0	; () banked
  5595  001866  6FC4               	movwf	??___ftadd& (0+255),b
  5596  001868  0E18               	movlw	24
  5597  00186A  0100               	movlb	0	; () banked
  5598  00186C  65C4               	cpfsgt	??___ftadd& (0+255),b
  5599  00186E  D007               	goto	l663
  5600  001870                     u3960:
  5601                           
  5602                           ; BSR set to: 0
  5603  001870  C030  F030         	movff	___ftadd@f1,?___ftadd
  5604  001874  C031  F031         	movff	___ftadd@f1+1,?___ftadd+1
  5605  001878  C032  F032         	movff	___ftadd@f1+2,?___ftadd+2
  5606  00187C  0012               	return	
  5607  00187E                     l663:
  5608                           
  5609                           ; BSR set to: 0
  5610                           
  5611                           ; BSR set to: 0
  5612  00187E  0E06               	movlw	6
  5613  001880  0100               	movlb	0	; () banked
  5614  001882  6FC7               	movwf	___ftadd@sign& (0+255),b
  5615                           
  5616                           ; BSR set to: 0
  5617  001884  AE32               	btfss	___ftadd@f1+2,7,c
  5618  001886  D002               	goto	l666
  5619                           
  5620                           ; BSR set to: 0
  5621  001888  0100               	movlb	0	; () banked
  5622  00188A  8FC7               	bsf	___ftadd@sign& (0+255),7,b
  5623  00188C                     l666:
  5624                           
  5625                           ; BSR set to: 0
  5626                           
  5627                           ; BSR set to: 0
  5628  00188C  AE35               	btfss	___ftadd@f2+2,7,c
  5629  00188E  D002               	goto	l667
  5630                           
  5631                           ; BSR set to: 0
  5632  001890  0100               	movlb	0	; () banked
  5633  001892  8DC7               	bsf	___ftadd@sign& (0+255),6,b
  5634  001894                     l667:
  5635                           
  5636                           ; BSR set to: 0
  5637  001894  8E31               	bsf	___ftadd@f1+1,7,c
  5638                           
  5639                           ; BSR set to: 0
  5640  001896  0EFF               	movlw	255
  5641  001898  1630               	andwf	___ftadd@f1,f,c
  5642  00189A  0EFF               	movlw	255
  5643  00189C  1631               	andwf	___ftadd@f1+1,f,c
  5644  00189E  0E00               	movlw	0
  5645  0018A0  1632               	andwf	___ftadd@f1+2,f,c
  5646  0018A2  8E34               	bsf	___ftadd@f2+1,7,c
  5647                           
  5648                           ; BSR set to: 0
  5649  0018A4  0EFF               	movlw	255
  5650  0018A6  1633               	andwf	___ftadd@f2,f,c
  5651  0018A8  0EFF               	movlw	255
  5652  0018AA  1634               	andwf	___ftadd@f2+1,f,c
  5653  0018AC  0E00               	movlw	0
  5654  0018AE  1635               	andwf	___ftadd@f2+2,f,c
  5655                           
  5656                           ; BSR set to: 0
  5657  0018B0  0100               	movlb	0	; () banked
  5658  0018B2  51C8               	movf	___ftadd@exp2& (0+255),w,b
  5659  0018B4  0100               	movlb	0	; () banked
  5660  0018B6  5DC9               	subwf	___ftadd@exp1& (0+255),w,b
  5661  0018B8  B0D8               	btfsc	status,0,c
  5662  0018BA  D023               	goto	l668
  5663  0018BC                     u3990:
  5664                           
  5665                           ; BSR set to: 0
  5666                           
  5667                           ; BSR set to: 0
  5668  0018BC  90D8               	bcf	status,0,c
  5669  0018BE  3633               	rlcf	___ftadd@f2,f,c
  5670  0018C0  3634               	rlcf	___ftadd@f2+1,f,c
  5671  0018C2  3635               	rlcf	___ftadd@f2+2,f,c
  5672  0018C4  0100               	movlb	0	; () banked
  5673  0018C6  07C8               	decf	___ftadd@exp2& (0+255),f,b
  5674                           
  5675                           ; BSR set to: 0
  5676  0018C8  0100               	movlb	0	; () banked
  5677  0018CA  51C9               	movf	___ftadd@exp1& (0+255),w,b
  5678  0018CC  0100               	movlb	0	; () banked
  5679  0018CE  19C8               	xorwf	___ftadd@exp2& (0+255),w,b
  5680  0018D0  B4D8               	btfsc	status,2,c
  5681  0018D2  D010               	goto	l673
  5682                           
  5683                           ; BSR set to: 0
  5684  0018D4  0100               	movlb	0	; () banked
  5685  0018D6  07C7               	decf	___ftadd@sign& (0+255),f,b
  5686  0018D8  C0C7  F0C4         	movff	___ftadd@sign,??___ftadd
  5687  0018DC  0E07               	movlw	7
  5688  0018DE  0100               	movlb	0	; () banked
  5689  0018E0  17C4               	andwf	??___ftadd& (0+255),f,b
  5690  0018E2  B4D8               	btfsc	status,2,c
  5691  0018E4  D007               	goto	l673
  5692  0018E6  D7EA               	goto	u3990
  5693  0018E8                     
  5694                           ; BSR set to: 0
  5695                           
  5696                           ; BSR set to: 0
  5697  0018E8  90D8               	bcf	status,0,c
  5698  0018EA  3232               	rrcf	___ftadd@f1+2,f,c
  5699  0018EC  3231               	rrcf	___ftadd@f1+1,f,c
  5700  0018EE  3230               	rrcf	___ftadd@f1,f,c
  5701  0018F0  0100               	movlb	0	; () banked
  5702  0018F2  2BC9               	incf	___ftadd@exp1& (0+255),f,b
  5703  0018F4                     l673:
  5704                           
  5705                           ; BSR set to: 0
  5706                           
  5707                           ; BSR set to: 0
  5708  0018F4  0100               	movlb	0	; () banked
  5709  0018F6  51C8               	movf	___ftadd@exp2& (0+255),w,b
  5710  0018F8  0100               	movlb	0	; () banked
  5711  0018FA  19C9               	xorwf	___ftadd@exp1& (0+255),w,b
  5712  0018FC  B4D8               	btfsc	status,2,c
  5713  0018FE  D029               	goto	u4060
  5714  001900  D7F3               	goto	l674
  5715  001902                     l668:
  5716                           
  5717                           ; BSR set to: 0
  5718                           
  5719                           ; BSR set to: 0
  5720  001902  0100               	movlb	0	; () banked
  5721  001904  51C9               	movf	___ftadd@exp1& (0+255),w,b
  5722  001906  0100               	movlb	0	; () banked
  5723  001908  5DC8               	subwf	___ftadd@exp2& (0+255),w,b
  5724  00190A  B0D8               	btfsc	status,0,c
  5725  00190C  D022               	goto	u4060
  5726  00190E                     u4030:
  5727                           
  5728                           ; BSR set to: 0
  5729                           
  5730                           ; BSR set to: 0
  5731  00190E  90D8               	bcf	status,0,c
  5732  001910  3630               	rlcf	___ftadd@f1,f,c
  5733  001912  3631               	rlcf	___ftadd@f1+1,f,c
  5734  001914  3632               	rlcf	___ftadd@f1+2,f,c
  5735  001916  0100               	movlb	0	; () banked
  5736  001918  07C9               	decf	___ftadd@exp1& (0+255),f,b
  5737                           
  5738                           ; BSR set to: 0
  5739  00191A  0100               	movlb	0	; () banked
  5740  00191C  51C9               	movf	___ftadd@exp1& (0+255),w,b
  5741  00191E  0100               	movlb	0	; () banked
  5742  001920  19C8               	xorwf	___ftadd@exp2& (0+255),w,b
  5743  001922  B4D8               	btfsc	status,2,c
  5744  001924  D010               	goto	l682
  5745                           
  5746                           ; BSR set to: 0
  5747  001926  0100               	movlb	0	; () banked
  5748  001928  07C7               	decf	___ftadd@sign& (0+255),f,b
  5749  00192A  C0C7  F0C4         	movff	___ftadd@sign,??___ftadd
  5750  00192E  0E07               	movlw	7
  5751  001930  0100               	movlb	0	; () banked
  5752  001932  17C4               	andwf	??___ftadd& (0+255),f,b
  5753  001934  B4D8               	btfsc	status,2,c
  5754  001936  D007               	goto	l682
  5755  001938  D7EA               	goto	u4030
  5756  00193A                     
  5757                           ; BSR set to: 0
  5758                           
  5759                           ; BSR set to: 0
  5760  00193A  90D8               	bcf	status,0,c
  5761  00193C  3235               	rrcf	___ftadd@f2+2,f,c
  5762  00193E  3234               	rrcf	___ftadd@f2+1,f,c
  5763  001940  3233               	rrcf	___ftadd@f2,f,c
  5764  001942  0100               	movlb	0	; () banked
  5765  001944  2BC8               	incf	___ftadd@exp2& (0+255),f,b
  5766  001946                     l682:
  5767                           
  5768                           ; BSR set to: 0
  5769                           
  5770                           ; BSR set to: 0
  5771  001946  0100               	movlb	0	; () banked
  5772  001948  51C8               	movf	___ftadd@exp2& (0+255),w,b
  5773  00194A  0100               	movlb	0	; () banked
  5774  00194C  19C9               	xorwf	___ftadd@exp1& (0+255),w,b
  5775  00194E  A4D8               	btfss	status,2,c
  5776  001950  D7F4               	goto	l683
  5777  001952                     u4060:
  5778                           
  5779                           ; BSR set to: 0
  5780                           
  5781                           ; BSR set to: 0
  5782                           
  5783                           ; BSR set to: 0
  5784  001952  0100               	movlb	0	; () banked
  5785  001954  AFC7               	btfss	___ftadd@sign& (0+255),7,b
  5786  001956  D00C               	goto	l685
  5787                           
  5788                           ; BSR set to: 0
  5789  001958  0EFF               	movlw	255
  5790  00195A  1A30               	xorwf	___ftadd@f1,f,c
  5791  00195C  0EFF               	movlw	255
  5792  00195E  1A31               	xorwf	___ftadd@f1+1,f,c
  5793  001960  0EFF               	movlw	255
  5794  001962  1A32               	xorwf	___ftadd@f1+2,f,c
  5795  001964  0E01               	movlw	1
  5796  001966  2630               	addwf	___ftadd@f1,f,c
  5797  001968  0E00               	movlw	0
  5798  00196A  2231               	addwfc	___ftadd@f1+1,f,c
  5799  00196C  0E00               	movlw	0
  5800  00196E  2232               	addwfc	___ftadd@f1+2,f,c
  5801  001970                     l685:
  5802                           
  5803                           ; BSR set to: 0
  5804  001970  0100               	movlb	0	; () banked
  5805  001972  ADC7               	btfss	___ftadd@sign& (0+255),6,b
  5806  001974  D00C               	goto	l686
  5807                           
  5808                           ; BSR set to: 0
  5809  001976  0EFF               	movlw	255
  5810  001978  1A33               	xorwf	___ftadd@f2,f,c
  5811  00197A  0EFF               	movlw	255
  5812  00197C  1A34               	xorwf	___ftadd@f2+1,f,c
  5813  00197E  0EFF               	movlw	255
  5814  001980  1A35               	xorwf	___ftadd@f2+2,f,c
  5815  001982  0E01               	movlw	1
  5816  001984  2633               	addwf	___ftadd@f2,f,c
  5817  001986  0E00               	movlw	0
  5818  001988  2234               	addwfc	___ftadd@f2+1,f,c
  5819  00198A  0E00               	movlw	0
  5820  00198C  2235               	addwfc	___ftadd@f2+2,f,c
  5821  00198E                     l686:
  5822                           
  5823                           ; BSR set to: 0
  5824                           
  5825                           ; BSR set to: 0
  5826  00198E  0E00               	movlw	0
  5827  001990  0100               	movlb	0	; () banked
  5828  001992  6FC7               	movwf	___ftadd@sign& (0+255),b
  5829                           
  5830                           ; BSR set to: 0
  5831  001994  5030               	movf	___ftadd@f1,w,c
  5832  001996  2633               	addwf	___ftadd@f2,f,c
  5833  001998  5031               	movf	___ftadd@f1+1,w,c
  5834  00199A  2234               	addwfc	___ftadd@f2+1,f,c
  5835  00199C  5032               	movf	___ftadd@f1+2,w,c
  5836  00199E  2235               	addwfc	___ftadd@f2+2,f,c
  5837                           
  5838                           ; BSR set to: 0
  5839  0019A0  AE35               	btfss	___ftadd@f2+2,7,c
  5840  0019A2  D00F               	goto	l687
  5841                           
  5842                           ; BSR set to: 0
  5843  0019A4  0EFF               	movlw	255
  5844  0019A6  1A33               	xorwf	___ftadd@f2,f,c
  5845  0019A8  0EFF               	movlw	255
  5846  0019AA  1A34               	xorwf	___ftadd@f2+1,f,c
  5847  0019AC  0EFF               	movlw	255
  5848  0019AE  1A35               	xorwf	___ftadd@f2+2,f,c
  5849  0019B0  0E01               	movlw	1
  5850  0019B2  2633               	addwf	___ftadd@f2,f,c
  5851  0019B4  0E00               	movlw	0
  5852  0019B6  2234               	addwfc	___ftadd@f2+1,f,c
  5853  0019B8  0E00               	movlw	0
  5854  0019BA  2235               	addwfc	___ftadd@f2+2,f,c
  5855                           
  5856                           ; BSR set to: 0
  5857  0019BC  0E01               	movlw	1
  5858  0019BE  0100               	movlb	0	; () banked
  5859  0019C0  6FC7               	movwf	___ftadd@sign& (0+255),b
  5860  0019C2                     l687:
  5861                           
  5862                           ; BSR set to: 0
  5863                           
  5864                           ; BSR set to: 0
  5865  0019C2  C033  F015         	movff	___ftadd@f2,___ftpack@arg
  5866  0019C6  C034  F016         	movff	___ftadd@f2+1,___ftpack@arg+1
  5867  0019CA  C035  F017         	movff	___ftadd@f2+2,___ftpack@arg+2
  5868  0019CE  C0C9  F018         	movff	___ftadd@exp1,___ftpack@exp
  5869  0019D2  C0C7  F019         	movff	___ftadd@sign,___ftpack@sign
  5870  0019D6  ECEC  F00E         	call	___ftpack	;wreg free
  5871  0019DA  C015  F030         	movff	?___ftpack,?___ftadd
  5872  0019DE  C016  F031         	movff	?___ftpack+1,?___ftadd+1
  5873  0019E2  C017  F032         	movff	?___ftpack+2,?___ftadd+2
  5874  0019E6  0012               	return	
  5875  0019E8                     __end_of___ftadd:
  5876                           	opt stack 0
  5877                           tblptru	equ	0xFF8
  5878                           tblptrh	equ	0xFF7
  5879                           tblptrl	equ	0xFF6
  5880                           tablat	equ	0xFF5
  5881                           intcon	equ	0xFF2
  5882                           intcon2	equ	0xFF1
  5883                           postinc0	equ	0xFEE
  5884                           wreg	equ	0xFE8
  5885                           postinc1	equ	0xFE6
  5886                           postdec1	equ	0xFE5
  5887                           fsr1h	equ	0xFE2
  5888                           fsr1l	equ	0xFE1
  5889                           postinc2	equ	0xFDE
  5890                           postdec2	equ	0xFDD
  5891                           fsr2h	equ	0xFDA
  5892                           fsr2l	equ	0xFD9
  5893                           status	equ	0xFD8
  5894                           
  5895 ;; *************** function ___awtoft *****************
  5896 ;; Defined at:
  5897 ;;		line 32 in file "/opt/microchip/xc8/v1.43/sources/common/awtoft.c"
  5898 ;; Parameters:    Size  Location     Type
  5899 ;;  c               2   28[COMRAM] int 
  5900 ;; Auto vars:     Size  Location     Type
  5901 ;;  sign            1   31[COMRAM] unsigned char 
  5902 ;; Return value:  Size  Location     Type
  5903 ;;                  3   28[COMRAM] float 
  5904 ;; Registers used:
  5905 ;;		wreg, status,2, status,0, cstack
  5906 ;; Tracked objects:
  5907 ;;		On entry : 0/0
  5908 ;;		On exit  : 0/0
  5909 ;;		Unchanged: 0/0
  5910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5911 ;;      Params:         3       0       0       0       0       0       0       0       0
  5912 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5913 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5914 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5915 ;;Total ram usage:        4 bytes
  5916 ;; Hardware stack levels used:    1
  5917 ;; Hardware stack levels required when called:    2
  5918 ;; This function calls:
  5919 ;;		___ftpack
  5920 ;; This function is called by:
  5921 ;;		_main
  5922 ;; This function uses a non-reentrant model
  5923 ;;
  5924                           
  5925                           	psect	text22
  5926  0023B2                     __ptext22:
  5927                           	opt stack 0
  5928  0023B2                     ___awtoft:
  5929                           	opt stack 28
  5930                           
  5931                           ;incstack = 0
  5932  0023B2  0E00               	movlw	0
  5933  0023B4  6E20               	movwf	___awtoft@sign,c
  5934  0023B6  AE1E               	btfss	___awtoft@c+1,7,c
  5935  0023B8  D006               	goto	l609
  5936  0023BA  6C1D               	negf	___awtoft@c,c
  5937  0023BC  1E1E               	comf	___awtoft@c+1,f,c
  5938  0023BE  B0D8               	btfsc	status,0,c
  5939  0023C0  2A1E               	incf	___awtoft@c+1,f,c
  5940  0023C2  0E01               	movlw	1
  5941  0023C4  6E20               	movwf	___awtoft@sign,c
  5942  0023C6                     l609:
  5943  0023C6  C01D  F015         	movff	___awtoft@c,___ftpack@arg
  5944  0023CA  C01E  F016         	movff	___awtoft@c+1,___ftpack@arg+1
  5945  0023CE  6A17               	clrf	___ftpack@arg+2,c
  5946  0023D0  0E8E               	movlw	142
  5947  0023D2  6E18               	movwf	___ftpack@exp,c
  5948  0023D4  C020  F019         	movff	___awtoft@sign,___ftpack@sign
  5949  0023D8  ECEC  F00E         	call	___ftpack	;wreg free
  5950  0023DC  C015  F01D         	movff	?___ftpack,?___awtoft
  5951  0023E0  C016  F01E         	movff	?___ftpack+1,?___awtoft+1
  5952  0023E4  C017  F01F         	movff	?___ftpack+2,?___awtoft+2
  5953  0023E8  0012               	return	
  5954  0023EA                     __end_of___awtoft:
  5955                           	opt stack 0
  5956                           tblptru	equ	0xFF8
  5957                           tblptrh	equ	0xFF7
  5958                           tblptrl	equ	0xFF6
  5959                           tablat	equ	0xFF5
  5960                           intcon	equ	0xFF2
  5961                           intcon2	equ	0xFF1
  5962                           postinc0	equ	0xFEE
  5963                           wreg	equ	0xFE8
  5964                           postinc1	equ	0xFE6
  5965                           postdec1	equ	0xFE5
  5966                           fsr1h	equ	0xFE2
  5967                           fsr1l	equ	0xFE1
  5968                           postinc2	equ	0xFDE
  5969                           postdec2	equ	0xFDD
  5970                           fsr2h	equ	0xFDA
  5971                           fsr2l	equ	0xFD9
  5972                           status	equ	0xFD8
  5973                           
  5974 ;; *************** function ___ftpack *****************
  5975 ;; Defined at:
  5976 ;;		line 62 in file "/opt/microchip/xc8/v1.43/sources/common/float.c"
  5977 ;; Parameters:    Size  Location     Type
  5978 ;;  arg             3   20[COMRAM] unsigned um
  5979 ;;  exp             1   23[COMRAM] unsigned char 
  5980 ;;  sign            1   24[COMRAM] unsigned char 
  5981 ;; Auto vars:     Size  Location     Type
  5982 ;;		None
  5983 ;; Return value:  Size  Location     Type
  5984 ;;                  3   20[COMRAM] float 
  5985 ;; Registers used:
  5986 ;;		wreg, status,2, status,0
  5987 ;; Tracked objects:
  5988 ;;		On entry : 0/0
  5989 ;;		On exit  : 0/0
  5990 ;;		Unchanged: 0/0
  5991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5992 ;;      Params:         5       0       0       0       0       0       0       0       0
  5993 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5994 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5995 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5996 ;;Total ram usage:        8 bytes
  5997 ;; Hardware stack levels used:    1
  5998 ;; Hardware stack levels required when called:    1
  5999 ;; This function calls:
  6000 ;;		Nothing
  6001 ;; This function is called by:
  6002 ;;		___awtoft
  6003 ;;		___ftadd
  6004 ;;		___ftmul
  6005 ;; This function uses a non-reentrant model
  6006 ;;
  6007                           
  6008                           	psect	text23
  6009  001DD8                     __ptext23:
  6010                           	opt stack 0
  6011  001DD8                     ___ftpack:
  6012                           	opt stack 28
  6013                           
  6014                           ;incstack = 0
  6015  001DD8  5018               	movf	___ftpack@exp,w,c
  6016  001DDA  B4D8               	btfsc	status,2,c
  6017  001DDC  D005               	goto	u3440
  6018  001DDE  5015               	movf	___ftpack@arg,w,c
  6019  001DE0  1016               	iorwf	___ftpack@arg+1,w,c
  6020  001DE2  1017               	iorwf	___ftpack@arg+2,w,c
  6021  001DE4  A4D8               	btfss	status,2,c
  6022  001DE6  D00C               	goto	l628
  6023  001DE8                     u3440:
  6024  001DE8  0E00               	movlw	0
  6025  001DEA  6E15               	movwf	?___ftpack,c
  6026  001DEC  0E00               	movlw	0
  6027  001DEE  6E16               	movwf	?___ftpack+1,c
  6028  001DF0  0E00               	movlw	0
  6029  001DF2  6E17               	movwf	?___ftpack+2,c
  6030  001DF4  0012               	return	
  6031  001DF6  2A18               	incf	___ftpack@exp,f,c
  6032  001DF8  90D8               	bcf	status,0,c
  6033  001DFA  3217               	rrcf	___ftpack@arg+2,f,c
  6034  001DFC  3216               	rrcf	___ftpack@arg+1,f,c
  6035  001DFE  3215               	rrcf	___ftpack@arg,f,c
  6036  001E00                     l628:
  6037  001E00  0E00               	movlw	0
  6038  001E02  1415               	andwf	___ftpack@arg,w,c
  6039  001E04  6E1A               	movwf	??___ftpack& (0+255),c
  6040  001E06  0E00               	movlw	0
  6041  001E08  1416               	andwf	___ftpack@arg+1,w,c
  6042  001E0A  6E1B               	movwf	(??___ftpack+1)& (0+255),c
  6043  001E0C  0EFE               	movlw	254
  6044  001E0E  1417               	andwf	___ftpack@arg+2,w,c
  6045  001E10  6E1C               	movwf	(??___ftpack+2)& (0+255),c
  6046  001E12  501A               	movf	??___ftpack,w,c
  6047  001E14  101B               	iorwf	??___ftpack+1,w,c
  6048  001E16  101C               	iorwf	??___ftpack+2,w,c
  6049  001E18  B4D8               	btfsc	status,2,c
  6050  001E1A  D00C               	goto	l631
  6051  001E1C  D7EC               	goto	l629
  6052  001E1E  2A18               	incf	___ftpack@exp,f,c
  6053  001E20  0E01               	movlw	1
  6054  001E22  2615               	addwf	___ftpack@arg,f,c
  6055  001E24  0E00               	movlw	0
  6056  001E26  2216               	addwfc	___ftpack@arg+1,f,c
  6057  001E28  0E00               	movlw	0
  6058  001E2A  2217               	addwfc	___ftpack@arg+2,f,c
  6059  001E2C  90D8               	bcf	status,0,c
  6060  001E2E  3217               	rrcf	___ftpack@arg+2,f,c
  6061  001E30  3216               	rrcf	___ftpack@arg+1,f,c
  6062  001E32  3215               	rrcf	___ftpack@arg,f,c
  6063  001E34                     l631:
  6064  001E34  0E00               	movlw	0
  6065  001E36  1415               	andwf	___ftpack@arg,w,c
  6066  001E38  6E1A               	movwf	??___ftpack& (0+255),c
  6067  001E3A  0E00               	movlw	0
  6068  001E3C  1416               	andwf	___ftpack@arg+1,w,c
  6069  001E3E  6E1B               	movwf	(??___ftpack+1)& (0+255),c
  6070  001E40  0EFF               	movlw	255
  6071  001E42  1417               	andwf	___ftpack@arg+2,w,c
  6072  001E44  6E1C               	movwf	(??___ftpack+2)& (0+255),c
  6073  001E46  501A               	movf	??___ftpack,w,c
  6074  001E48  101B               	iorwf	??___ftpack+1,w,c
  6075  001E4A  101C               	iorwf	??___ftpack+2,w,c
  6076  001E4C  B4D8               	btfsc	status,2,c
  6077  001E4E  D006               	goto	l634
  6078  001E50  D7E6               	goto	l632
  6079  001E52  0618               	decf	___ftpack@exp,f,c
  6080  001E54  90D8               	bcf	status,0,c
  6081  001E56  3615               	rlcf	___ftpack@arg,f,c
  6082  001E58  3616               	rlcf	___ftpack@arg+1,f,c
  6083  001E5A  3617               	rlcf	___ftpack@arg+2,f,c
  6084  001E5C                     l634:
  6085  001E5C  BE16               	btfsc	___ftpack@arg+1,7,c
  6086  001E5E  D003               	goto	u3480
  6087  001E60  0E02               	movlw	2
  6088  001E62  6018               	cpfslt	___ftpack@exp,c
  6089  001E64  D7F6               	goto	l635
  6090  001E66                     u3480:
  6091  001E66  A018               	btfss	___ftpack@exp,0,c
  6092  001E68  9E16               	bcf	___ftpack@arg+1,7,c
  6093  001E6A  90D8               	bcf	status,0,c
  6094  001E6C  3218               	rrcf	___ftpack@exp,f,c
  6095  001E6E  5018               	movf	___ftpack@exp,w,c
  6096  001E70  1217               	iorwf	___ftpack@arg+2,f,c
  6097  001E72  5019               	movf	___ftpack@sign,w,c
  6098  001E74  A4D8               	btfss	status,2,c
  6099  001E76  8E17               	bsf	___ftpack@arg+2,7,c
  6100  001E78  C015  F015         	movff	___ftpack@arg,?___ftpack
  6101  001E7C  C016  F016         	movff	___ftpack@arg+1,?___ftpack+1
  6102  001E80  C017  F017         	movff	___ftpack@arg+2,?___ftpack+2
  6103  001E84  0012               	return	
  6104  001E86                     __end_of___ftpack:
  6105                           	opt stack 0
  6106                           tblptru	equ	0xFF8
  6107                           tblptrh	equ	0xFF7
  6108                           tblptrl	equ	0xFF6
  6109                           tablat	equ	0xFF5
  6110                           intcon	equ	0xFF2
  6111                           intcon2	equ	0xFF1
  6112                           postinc0	equ	0xFEE
  6113                           wreg	equ	0xFE8
  6114                           postinc1	equ	0xFE6
  6115                           postdec1	equ	0xFE5
  6116                           fsr1h	equ	0xFE2
  6117                           fsr1l	equ	0xFE1
  6118                           postinc2	equ	0xFDE
  6119                           postdec2	equ	0xFDD
  6120                           fsr2h	equ	0xFDA
  6121                           fsr2l	equ	0xFD9
  6122                           status	equ	0xFD8
  6123                           
  6124 ;; *************** function ___almod *****************
  6125 ;; Defined at:
  6126 ;;		line 8 in file "/opt/microchip/xc8/v1.43/sources/common/almod.c"
  6127 ;; Parameters:    Size  Location     Type
  6128 ;;  dividend        4   20[COMRAM] long 
  6129 ;;  divisor         4   24[COMRAM] long 
  6130 ;; Auto vars:     Size  Location     Type
  6131 ;;  sign            1   29[COMRAM] unsigned char 
  6132 ;;  counter         1   28[COMRAM] unsigned char 
  6133 ;; Return value:  Size  Location     Type
  6134 ;;                  4   20[COMRAM] long 
  6135 ;; Registers used:
  6136 ;;		wreg, status,2, status,0
  6137 ;; Tracked objects:
  6138 ;;		On entry : 0/0
  6139 ;;		On exit  : 0/0
  6140 ;;		Unchanged: 0/0
  6141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6142 ;;      Params:         8       0       0       0       0       0       0       0       0
  6143 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6144 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6145 ;;      Totals:        10       0       0       0       0       0       0       0       0
  6146 ;;Total ram usage:       10 bytes
  6147 ;; Hardware stack levels used:    1
  6148 ;; Hardware stack levels required when called:    1
  6149 ;; This function calls:
  6150 ;;		Nothing
  6151 ;; This function is called by:
  6152 ;;		_main
  6153 ;; This function uses a non-reentrant model
  6154 ;;
  6155                           
  6156                           	psect	text24
  6157  001E86                     __ptext24:
  6158                           	opt stack 0
  6159  001E86                     ___almod:
  6160                           	opt stack 29
  6161                           
  6162                           ;incstack = 0
  6163  001E86  0E00               	movlw	0
  6164  001E88  6E1E               	movwf	___almod@sign,c
  6165  001E8A  AE18               	btfss	___almod@dividend+3,7,c
  6166  001E8C  D00A               	goto	l482
  6167  001E8E  1E18               	comf	___almod@dividend+3,f,c
  6168  001E90  1E17               	comf	___almod@dividend+2,f,c
  6169  001E92  1E16               	comf	___almod@dividend+1,f,c
  6170  001E94  6C15               	negf	___almod@dividend,c
  6171  001E96  0E00               	movlw	0
  6172  001E98  2216               	addwfc	___almod@dividend+1,f,c
  6173  001E9A  2217               	addwfc	___almod@dividend+2,f,c
  6174  001E9C  2218               	addwfc	___almod@dividend+3,f,c
  6175  001E9E  0E01               	movlw	1
  6176  001EA0  6E1E               	movwf	___almod@sign,c
  6177  001EA2                     l482:
  6178  001EA2  AE1C               	btfss	___almod@divisor+3,7,c
  6179  001EA4  D008               	goto	l483
  6180  001EA6  1E1C               	comf	___almod@divisor+3,f,c
  6181  001EA8  1E1B               	comf	___almod@divisor+2,f,c
  6182  001EAA  1E1A               	comf	___almod@divisor+1,f,c
  6183  001EAC  6C19               	negf	___almod@divisor,c
  6184  001EAE  0E00               	movlw	0
  6185  001EB0  221A               	addwfc	___almod@divisor+1,f,c
  6186  001EB2  221B               	addwfc	___almod@divisor+2,f,c
  6187  001EB4  221C               	addwfc	___almod@divisor+3,f,c
  6188  001EB6                     l483:
  6189  001EB6  5019               	movf	___almod@divisor,w,c
  6190  001EB8  101A               	iorwf	___almod@divisor+1,w,c
  6191  001EBA  101B               	iorwf	___almod@divisor+2,w,c
  6192  001EBC  101C               	iorwf	___almod@divisor+3,w,c
  6193  001EBE  B4D8               	btfsc	status,2,c
  6194  001EC0  D024               	goto	l490
  6195  001EC2  0E01               	movlw	1
  6196  001EC4  6E1D               	movwf	___almod@counter,c
  6197  001EC6  D006               	goto	l485
  6198  001EC8  90D8               	bcf	status,0,c
  6199  001ECA  3619               	rlcf	___almod@divisor,f,c
  6200  001ECC  361A               	rlcf	___almod@divisor+1,f,c
  6201  001ECE  361B               	rlcf	___almod@divisor+2,f,c
  6202  001ED0  361C               	rlcf	___almod@divisor+3,f,c
  6203  001ED2  2A1D               	incf	___almod@counter,f,c
  6204  001ED4                     l485:
  6205  001ED4  AE1C               	btfss	___almod@divisor+3,7,c
  6206  001ED6  D7F8               	goto	l486
  6207  001ED8                     u3860:
  6208  001ED8  5019               	movf	___almod@divisor,w,c
  6209  001EDA  5C15               	subwf	___almod@dividend,w,c
  6210  001EDC  501A               	movf	___almod@divisor+1,w,c
  6211  001EDE  5816               	subwfb	___almod@dividend+1,w,c
  6212  001EE0  501B               	movf	___almod@divisor+2,w,c
  6213  001EE2  5817               	subwfb	___almod@dividend+2,w,c
  6214  001EE4  501C               	movf	___almod@divisor+3,w,c
  6215  001EE6  5818               	subwfb	___almod@dividend+3,w,c
  6216  001EE8  A0D8               	btfss	status,0,c
  6217  001EEA  D008               	goto	l489
  6218  001EEC  5019               	movf	___almod@divisor,w,c
  6219  001EEE  5E15               	subwf	___almod@dividend,f,c
  6220  001EF0  501A               	movf	___almod@divisor+1,w,c
  6221  001EF2  5A16               	subwfb	___almod@dividend+1,f,c
  6222  001EF4  501B               	movf	___almod@divisor+2,w,c
  6223  001EF6  5A17               	subwfb	___almod@dividend+2,f,c
  6224  001EF8  501C               	movf	___almod@divisor+3,w,c
  6225  001EFA  5A18               	subwfb	___almod@dividend+3,f,c
  6226  001EFC                     l489:
  6227  001EFC  90D8               	bcf	status,0,c
  6228  001EFE  321C               	rrcf	___almod@divisor+3,f,c
  6229  001F00  321B               	rrcf	___almod@divisor+2,f,c
  6230  001F02  321A               	rrcf	___almod@divisor+1,f,c
  6231  001F04  3219               	rrcf	___almod@divisor,f,c
  6232  001F06  2E1D               	decfsz	___almod@counter,f,c
  6233  001F08  D7E7               	goto	u3860
  6234  001F0A                     l490:
  6235  001F0A  501E               	movf	___almod@sign,w,c
  6236  001F0C  B4D8               	btfsc	status,2,c
  6237  001F0E  D008               	goto	l491
  6238  001F10  1E18               	comf	___almod@dividend+3,f,c
  6239  001F12  1E17               	comf	___almod@dividend+2,f,c
  6240  001F14  1E16               	comf	___almod@dividend+1,f,c
  6241  001F16  6C15               	negf	___almod@dividend,c
  6242  001F18  0E00               	movlw	0
  6243  001F1A  2216               	addwfc	___almod@dividend+1,f,c
  6244  001F1C  2217               	addwfc	___almod@dividend+2,f,c
  6245  001F1E  2218               	addwfc	___almod@dividend+3,f,c
  6246  001F20                     l491:
  6247  001F20  C015  F015         	movff	___almod@dividend,?___almod
  6248  001F24  C016  F016         	movff	___almod@dividend+1,?___almod+1
  6249  001F28  C017  F017         	movff	___almod@dividend+2,?___almod+2
  6250  001F2C  C018  F018         	movff	___almod@dividend+3,?___almod+3
  6251  001F30  0012               	return	
  6252  001F32                     __end_of___almod:
  6253                           	opt stack 0
  6254                           tblptru	equ	0xFF8
  6255                           tblptrh	equ	0xFF7
  6256                           tblptrl	equ	0xFF6
  6257                           tablat	equ	0xFF5
  6258                           intcon	equ	0xFF2
  6259                           intcon2	equ	0xFF1
  6260                           postinc0	equ	0xFEE
  6261                           wreg	equ	0xFE8
  6262                           postinc1	equ	0xFE6
  6263                           postdec1	equ	0xFE5
  6264                           fsr1h	equ	0xFE2
  6265                           fsr1l	equ	0xFE1
  6266                           postinc2	equ	0xFDE
  6267                           postdec2	equ	0xFDD
  6268                           fsr2h	equ	0xFDA
  6269                           fsr2l	equ	0xFD9
  6270                           status	equ	0xFD8
  6271                           
  6272 ;; *************** function _EnhancedRead *****************
  6273 ;; Defined at:
  6274 ;;		line 29 in file "analog.c"
  6275 ;; Parameters:    Size  Location     Type
  6276 ;;		None
  6277 ;; Auto vars:     Size  Location     Type
  6278 ;;  aux             2   29[COMRAM] unsigned int 
  6279 ;;  i               1   31[COMRAM] unsigned char 
  6280 ;; Return value:  Size  Location     Type
  6281 ;;                  1    wreg      void 
  6282 ;; Registers used:
  6283 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6284 ;; Tracked objects:
  6285 ;;		On entry : 0/0
  6286 ;;		On exit  : 0/0
  6287 ;;		Unchanged: 0/0
  6288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6289 ;;      Params:         0       0       0       0       0       0       0       0       0
  6290 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6291 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6292 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6293 ;;Total ram usage:        4 bytes
  6294 ;; Hardware stack levels used:    1
  6295 ;; Hardware stack levels required when called:    2
  6296 ;; This function calls:
  6297 ;;		___awdiv
  6298 ;; This function is called by:
  6299 ;;		_main
  6300 ;; This function uses a non-reentrant model
  6301 ;;
  6302                           
  6303                           	psect	text25
  6304  002266                     __ptext25:
  6305                           	opt stack 0
  6306  002266                     _EnhancedRead:
  6307                           	opt stack 28
  6308                           
  6309                           ;analog.c: 30: unsigned char i;
  6310                           ;analog.c: 31: unsigned int aux;
  6311                           ;analog.c: 32: for (i=0;i<9;i++){
  6312                           
  6313                           ;incstack = 0
  6314  002266  0E00               	movlw	0
  6315  002268  6E20               	movwf	EnhancedRead@i,c
  6316  00226A                     l3169:
  6317  00226A  0E08               	movlw	8
  6318  00226C  6420               	cpfsgt	EnhancedRead@i,c
  6319  00226E  D001               	goto	l128
  6320  002270  0012               	return	
  6321  002272                     l128:
  6322                           
  6323                           ;analog.c: 33: ADCON0bits.CHS=i;
  6324  002272  C020  F01D         	movff	EnhancedRead@i,??_EnhancedRead
  6325  002276  461D               	rlncf	??_EnhancedRead,f,c
  6326  002278  461D               	rlncf	??_EnhancedRead,f,c
  6327  00227A  50C2               	movf	4034,w,c	;volatile
  6328  00227C  181D               	xorwf	??_EnhancedRead,w,c
  6329  00227E  0BC3               	andlw	-61
  6330  002280  181D               	xorwf	??_EnhancedRead,w,c
  6331  002282  6EC2               	movwf	4034,c	;volatile
  6332                           
  6333                           ;analog.c: 34: ADCON0bits.GODONE=1;
  6334  002284  82C2               	bsf	4034,1,c	;volatile
  6335  002286  B2C2               	btfsc	4034,1,c	;volatile
  6336  002288  D7FE               	goto	l131
  6337                           
  6338                           ;analog.c: 36: aux=ADRESH*4;
  6339  00228A  50C4               	movf	4036,w,c	;volatile
  6340  00228C  0D04               	mullw	4
  6341  00228E  CFF3 F01E          	movff	prodl,EnhancedRead@aux
  6342  002292  CFF4 F01F          	movff	prodh,EnhancedRead@aux+1
  6343                           
  6344                           ;analog.c: 37: aux=aux+ADRESL/64;
  6345  002296  CFC3 F015          	movff	4035,___awdiv@dividend	;volatile
  6346  00229A  6A16               	clrf	___awdiv@dividend+1,c
  6347  00229C  0E00               	movlw	0
  6348  00229E  6E18               	movwf	___awdiv@divisor+1,c
  6349  0022A0  0E40               	movlw	64
  6350  0022A2  6E17               	movwf	___awdiv@divisor,c
  6351  0022A4  EC7F  F010         	call	___awdiv	;wreg free
  6352  0022A8  501E               	movf	EnhancedRead@aux,w,c
  6353  0022AA  2415               	addwf	?___awdiv,w,c
  6354  0022AC  6E1E               	movwf	EnhancedRead@aux,c
  6355  0022AE  501F               	movf	EnhancedRead@aux+1,w,c
  6356  0022B0  2016               	addwfc	?___awdiv+1,w,c
  6357  0022B2  6E1F               	movwf	EnhancedRead@aux+1,c
  6358                           
  6359                           ;analog.c: 38: an[i]=aux;
  6360  0022B4  5020               	movf	EnhancedRead@i,w,c
  6361  0022B6  0D02               	mullw	2
  6362  0022B8  0EB2               	movlw	low _an
  6363  0022BA  24F3               	addwf	prodl,w,c
  6364  0022BC  6ED9               	movwf	fsr2l,c
  6365  0022BE  0E00               	movlw	high _an
  6366  0022C0  20F4               	addwfc	prodh,w,c
  6367  0022C2  6EDA               	movwf	fsr2h,c
  6368  0022C4  C01E  FFDE         	movff	EnhancedRead@aux,postinc2
  6369  0022C8  C01F  FFDD         	movff	EnhancedRead@aux+1,postdec2
  6370  0022CC  2A20               	incf	EnhancedRead@i,f,c
  6371  0022CE  D7CD               	goto	l3169
  6372  0022D0                     __end_of_EnhancedRead:
  6373                           	opt stack 0
  6374                           tblptru	equ	0xFF8
  6375                           tblptrh	equ	0xFF7
  6376                           tblptrl	equ	0xFF6
  6377                           tablat	equ	0xFF5
  6378                           prodh	equ	0xFF4
  6379                           prodl	equ	0xFF3
  6380                           intcon	equ	0xFF2
  6381                           intcon2	equ	0xFF1
  6382                           postinc0	equ	0xFEE
  6383                           wreg	equ	0xFE8
  6384                           postinc1	equ	0xFE6
  6385                           postdec1	equ	0xFE5
  6386                           fsr1h	equ	0xFE2
  6387                           fsr1l	equ	0xFE1
  6388                           postinc2	equ	0xFDE
  6389                           postdec2	equ	0xFDD
  6390                           fsr2h	equ	0xFDA
  6391                           fsr2l	equ	0xFD9
  6392                           status	equ	0xFD8
  6393                           
  6394 ;; *************** function ___awdiv *****************
  6395 ;; Defined at:
  6396 ;;		line 8 in file "/opt/microchip/xc8/v1.43/sources/common/awdiv.c"
  6397 ;; Parameters:    Size  Location     Type
  6398 ;;  dividend        2   20[COMRAM] int 
  6399 ;;  divisor         2   22[COMRAM] int 
  6400 ;; Auto vars:     Size  Location     Type
  6401 ;;  quotient        2   26[COMRAM] int 
  6402 ;;  sign            1   25[COMRAM] unsigned char 
  6403 ;;  counter         1   24[COMRAM] unsigned char 
  6404 ;; Return value:  Size  Location     Type
  6405 ;;                  2   20[COMRAM] int 
  6406 ;; Registers used:
  6407 ;;		wreg, status,2, status,0
  6408 ;; Tracked objects:
  6409 ;;		On entry : 0/0
  6410 ;;		On exit  : 0/0
  6411 ;;		Unchanged: 0/0
  6412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6413 ;;      Params:         4       0       0       0       0       0       0       0       0
  6414 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6415 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6416 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6417 ;;Total ram usage:        8 bytes
  6418 ;; Hardware stack levels used:    1
  6419 ;; Hardware stack levels required when called:    1
  6420 ;; This function calls:
  6421 ;;		Nothing
  6422 ;; This function is called by:
  6423 ;;		_EnhancedRead
  6424 ;;		_MotorASpeed
  6425 ;;		_MotorBSpeed
  6426 ;; This function uses a non-reentrant model
  6427 ;;
  6428                           
  6429                           	psect	text26
  6430  0020FE                     __ptext26:
  6431                           	opt stack 0
  6432  0020FE                     ___awdiv:
  6433                           	opt stack 27
  6434                           
  6435                           ;incstack = 0
  6436  0020FE  0E00               	movlw	0
  6437  002100  6E1A               	movwf	___awdiv@sign,c
  6438  002102  AE18               	btfss	___awdiv@divisor+1,7,c
  6439  002104  D006               	goto	l581
  6440  002106  6C17               	negf	___awdiv@divisor,c
  6441  002108  1E18               	comf	___awdiv@divisor+1,f,c
  6442  00210A  B0D8               	btfsc	status,0,c
  6443  00210C  2A18               	incf	___awdiv@divisor+1,f,c
  6444  00210E  0E01               	movlw	1
  6445  002110  6E1A               	movwf	___awdiv@sign,c
  6446  002112                     l581:
  6447  002112  AE16               	btfss	___awdiv@dividend+1,7,c
  6448  002114  D006               	goto	l582
  6449  002116  6C15               	negf	___awdiv@dividend,c
  6450  002118  1E16               	comf	___awdiv@dividend+1,f,c
  6451  00211A  B0D8               	btfsc	status,0,c
  6452  00211C  2A16               	incf	___awdiv@dividend+1,f,c
  6453  00211E  0E01               	movlw	1
  6454  002120  1A1A               	xorwf	___awdiv@sign,f,c
  6455  002122                     l582:
  6456  002122  0E00               	movlw	0
  6457  002124  6E1C               	movwf	___awdiv@quotient+1,c
  6458  002126  0E00               	movlw	0
  6459  002128  6E1B               	movwf	___awdiv@quotient,c
  6460  00212A  5017               	movf	___awdiv@divisor,w,c
  6461  00212C  1018               	iorwf	___awdiv@divisor+1,w,c
  6462  00212E  B4D8               	btfsc	status,2,c
  6463  002130  D01C               	goto	l589
  6464  002132  0E01               	movlw	1
  6465  002134  6E19               	movwf	___awdiv@counter,c
  6466  002136  D004               	goto	l584
  6467  002138  90D8               	bcf	status,0,c
  6468  00213A  3617               	rlcf	___awdiv@divisor,f,c
  6469  00213C  3618               	rlcf	___awdiv@divisor+1,f,c
  6470  00213E  2A19               	incf	___awdiv@counter,f,c
  6471  002140                     l584:
  6472  002140  AE18               	btfss	___awdiv@divisor+1,7,c
  6473  002142  D7FA               	goto	l585
  6474  002144                     u3280:
  6475  002144  90D8               	bcf	status,0,c
  6476  002146  361B               	rlcf	___awdiv@quotient,f,c
  6477  002148  361C               	rlcf	___awdiv@quotient+1,f,c
  6478  00214A  5017               	movf	___awdiv@divisor,w,c
  6479  00214C  5C15               	subwf	___awdiv@dividend,w,c
  6480  00214E  5018               	movf	___awdiv@divisor+1,w,c
  6481  002150  5816               	subwfb	___awdiv@dividend+1,w,c
  6482  002152  A0D8               	btfss	status,0,c
  6483  002154  D005               	goto	l588
  6484  002156  5017               	movf	___awdiv@divisor,w,c
  6485  002158  5E15               	subwf	___awdiv@dividend,f,c
  6486  00215A  5018               	movf	___awdiv@divisor+1,w,c
  6487  00215C  5A16               	subwfb	___awdiv@dividend+1,f,c
  6488  00215E  801B               	bsf	___awdiv@quotient,0,c
  6489  002160                     l588:
  6490  002160  90D8               	bcf	status,0,c
  6491  002162  3218               	rrcf	___awdiv@divisor+1,f,c
  6492  002164  3217               	rrcf	___awdiv@divisor,f,c
  6493  002166  2E19               	decfsz	___awdiv@counter,f,c
  6494  002168  D7ED               	goto	u3280
  6495  00216A                     l589:
  6496  00216A  501A               	movf	___awdiv@sign,w,c
  6497  00216C  B4D8               	btfsc	status,2,c
  6498  00216E  D004               	goto	l590
  6499  002170  6C1B               	negf	___awdiv@quotient,c
  6500  002172  1E1C               	comf	___awdiv@quotient+1,f,c
  6501  002174  B0D8               	btfsc	status,0,c
  6502  002176  2A1C               	incf	___awdiv@quotient+1,f,c
  6503  002178                     l590:
  6504  002178  C01B  F015         	movff	___awdiv@quotient,?___awdiv
  6505  00217C  C01C  F016         	movff	___awdiv@quotient+1,?___awdiv+1
  6506  002180  0012               	return	
  6507  002182                     __end_of___awdiv:
  6508                           	opt stack 0
  6509                           tblptru	equ	0xFF8
  6510                           tblptrh	equ	0xFF7
  6511                           tblptrl	equ	0xFF6
  6512                           tablat	equ	0xFF5
  6513                           prodh	equ	0xFF4
  6514                           prodl	equ	0xFF3
  6515                           intcon	equ	0xFF2
  6516                           intcon2	equ	0xFF1
  6517                           postinc0	equ	0xFEE
  6518                           wreg	equ	0xFE8
  6519                           postinc1	equ	0xFE6
  6520                           postdec1	equ	0xFE5
  6521                           fsr1h	equ	0xFE2
  6522                           fsr1l	equ	0xFE1
  6523                           postinc2	equ	0xFDE
  6524                           postdec2	equ	0xFDD
  6525                           fsr2h	equ	0xFDA
  6526                           fsr2l	equ	0xFD9
  6527                           status	equ	0xFD8
  6528                           
  6529 ;; *************** function _enc *****************
  6530 ;; Defined at:
  6531 ;;		line 7 in file "timer.c"
  6532 ;; Parameters:    Size  Location     Type
  6533 ;;		None
  6534 ;; Auto vars:     Size  Location     Type
  6535 ;;		None
  6536 ;; Return value:  Size  Location     Type
  6537 ;;                  1    wreg      void 
  6538 ;; Registers used:
  6539 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6540 ;; Tracked objects:
  6541 ;;		On entry : 0/0
  6542 ;;		On exit  : 0/0
  6543 ;;		Unchanged: 0/0
  6544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6545 ;;      Params:         0       0       0       0       0       0       0       0       0
  6546 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6547 ;;      Temps:         20       0       0       0       0       0       0       0       0
  6548 ;;      Totals:        20       0       0       0       0       0       0       0       0
  6549 ;;Total ram usage:       20 bytes
  6550 ;; Hardware stack levels used:    1
  6551 ;; This function calls:
  6552 ;;		Nothing
  6553 ;; This function is called by:
  6554 ;;		Interrupt level 2
  6555 ;; This function uses a non-reentrant model
  6556 ;;
  6557                           
  6558                           	psect	intcode
  6559  000008                     __pintcode:
  6560                           	opt stack 0
  6561  000008                     _enc:
  6562                           	opt stack 27
  6563                           
  6564                           ;incstack = 0
  6565  000008  824B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6566  00000A  ED10  F00E         	call	int_func,f	;refresh shadow registers
  6567                           tblptru	equ	0xFF8
  6568                           tblptrh	equ	0xFF7
  6569                           tblptrl	equ	0xFF6
  6570                           tablat	equ	0xFF5
  6571                           prodh	equ	0xFF4
  6572                           prodl	equ	0xFF3
  6573                           intcon	equ	0xFF2
  6574                           intcon2	equ	0xFF1
  6575                           postinc0	equ	0xFEE
  6576                           wreg	equ	0xFE8
  6577                           postinc1	equ	0xFE6
  6578                           postdec1	equ	0xFE5
  6579                           fsr1h	equ	0xFE2
  6580                           fsr1l	equ	0xFE1
  6581                           postinc2	equ	0xFDE
  6582                           postdec2	equ	0xFDD
  6583                           fsr2h	equ	0xFDA
  6584                           fsr2l	equ	0xFD9
  6585                           status	equ	0xFD8
  6586                           
  6587                           	psect	intcode_body
  6588  001C20                     __pintcode_body:
  6589                           	opt stack 27
  6590  001C20                     int_func:
  6591                           	opt stack 27
  6592  001C20  0006               	pop		; remove dummy address from shadow register refresh
  6593  001C22  CFFA F003          	movff	pclath,??_enc+2
  6594  001C26  CFFB F004          	movff	pclatu,??_enc+3
  6595  001C2A  CFE9 F005          	movff	fsr0l,??_enc+4
  6596  001C2E  CFEA F006          	movff	fsr0h,??_enc+5
  6597  001C32  CFE1 F007          	movff	fsr1l,??_enc+6
  6598  001C36  CFE2 F008          	movff	fsr1h,??_enc+7
  6599  001C3A  CFD9 F009          	movff	fsr2l,??_enc+8
  6600  001C3E  CFDA F00A          	movff	fsr2h,??_enc+9
  6601  001C42  CFF3 F00B          	movff	prodl,??_enc+10
  6602  001C46  CFF4 F00C          	movff	prodh,??_enc+11
  6603  001C4A  CFF6 F00D          	movff	tblptrl,??_enc+12
  6604  001C4E  CFF7 F00E          	movff	tblptrh,??_enc+13
  6605  001C52  CFF8 F00F          	movff	tblptru,??_enc+14
  6606  001C56  CFF5 F010          	movff	tablat,??_enc+15
  6607  001C5A  C04B  F011         	movff	btemp,??_enc+16
  6608  001C5E  C04C  F012         	movff	btemp+1,??_enc+17
  6609  001C62  C04D  F013         	movff	btemp+2,??_enc+18
  6610  001C66  C04E  F014         	movff	btemp+3,??_enc+19
  6611                           
  6612                           ;timer.c: 8: if (TMR0IF){
  6613  001C6A  A4F2               	btfss	intcon,2,c	;volatile
  6614  001C6C  D029               	goto	i2l316
  6615                           
  6616                           ;timer.c: 9: for (i = 0;i < 10;i++) time[i]++;
  6617  001C6E  0E00               	movlw	0
  6618  001C70  6E4A               	movwf	_i+1,c
  6619  001C72  0E00               	movlw	0
  6620  001C74  6E49               	movwf	_i,c
  6621  001C76                     i2l2829:
  6622  001C76  BE4A               	btfsc	_i+1,7,c
  6623  001C78  D006               	goto	i2l317
  6624  001C7A  504A               	movf	_i+1,w,c
  6625  001C7C  E11C               	bnz	i2l2839
  6626  001C7E  0E0A               	movlw	10
  6627  001C80  5C49               	subwf	_i,w,c
  6628  001C82  B0D8               	btfsc	status,0,c
  6629  001C84  D018               	goto	i2u308_40
  6630  001C86                     i2l317:
  6631  001C86  0E60               	movlw	low _time
  6632  001C88  6E01               	movwf	??_enc& (0+255),c
  6633  001C8A  0E00               	movlw	high _time
  6634  001C8C  6E02               	movwf	(??_enc+1)& (0+255),c
  6635  001C8E  90D8               	bcf	status,0,c
  6636  001C90  3449               	rlcf	_i,w,c
  6637  001C92  6ED9               	movwf	fsr2l,c
  6638  001C94  344A               	rlcf	_i+1,w,c
  6639  001C96  6EDA               	movwf	fsr2h,c
  6640  001C98  90D8               	bcf	status,0,c
  6641  001C9A  36D9               	rlcf	fsr2l,f,c
  6642  001C9C  36DA               	rlcf	fsr2h,f,c
  6643  001C9E  5001               	movf	??_enc,w,c
  6644  001CA0  26D9               	addwf	fsr2l,f,c
  6645  001CA2  5002               	movf	??_enc+1,w,c
  6646  001CA4  22DA               	addwfc	fsr2h,f,c
  6647  001CA6  2ADE               	incf	postinc2,f,c
  6648  001CA8  0E00               	movlw	0
  6649  001CAA  22DE               	addwfc	postinc2,f,c
  6650  001CAC  22DE               	addwfc	postinc2,f,c
  6651  001CAE  22DE               	addwfc	postinc2,f,c
  6652  001CB0  4A49               	infsnz	_i,f,c
  6653  001CB2  2A4A               	incf	_i+1,f,c
  6654  001CB4  D7E0               	goto	i2l2829
  6655  001CB6                     i2u308_40:
  6656  001CB6                     i2l2839:
  6657                           
  6658                           ;timer.c: 10: TMR0H = 0xF8;
  6659  001CB6  0EF8               	movlw	248
  6660  001CB8  6ED7               	movwf	4055,c	;volatile
  6661                           
  6662                           ;timer.c: 11: TMR0L = 0x2F;
  6663  001CBA  0E2F               	movlw	47
  6664  001CBC  6ED6               	movwf	4054,c	;volatile
  6665                           
  6666                           ;timer.c: 12: TMR0IF = 0;
  6667  001CBE  94F2               	bcf	intcon,2,c	;volatile
  6668  001CC0                     i2l316:
  6669  001CC0  C014  F04E         	movff	??_enc+19,btemp+3
  6670  001CC4  C013  F04D         	movff	??_enc+18,btemp+2
  6671  001CC8  C012  F04C         	movff	??_enc+17,btemp+1
  6672  001CCC  C011  F04B         	movff	??_enc+16,btemp
  6673  001CD0  C010  FFF5         	movff	??_enc+15,tablat
  6674  001CD4  C00F  FFF8         	movff	??_enc+14,tblptru
  6675  001CD8  C00E  FFF7         	movff	??_enc+13,tblptrh
  6676  001CDC  C00D  FFF6         	movff	??_enc+12,tblptrl
  6677  001CE0  C00C  FFF4         	movff	??_enc+11,prodh
  6678  001CE4  C00B  FFF3         	movff	??_enc+10,prodl
  6679  001CE8  C00A  FFDA         	movff	??_enc+9,fsr2h
  6680  001CEC  C009  FFD9         	movff	??_enc+8,fsr2l
  6681  001CF0  C008  FFE2         	movff	??_enc+7,fsr1h
  6682  001CF4  C007  FFE1         	movff	??_enc+6,fsr1l
  6683  001CF8  C006  FFEA         	movff	??_enc+5,fsr0h
  6684  001CFC  C005  FFE9         	movff	??_enc+4,fsr0l
  6685  001D00  C004  FFFB         	movff	??_enc+3,pclatu
  6686  001D04  C003  FFFA         	movff	??_enc+2,pclath
  6687  001D08  924B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6688  001D0A  0011               	retfie		f
  6689  001D0C                     __end_of_enc:
  6690                           	opt stack 0
  6691                           pclatu	equ	0xFFB
  6692                           pclath	equ	0xFFA
  6693                           tblptru	equ	0xFF8
  6694                           tblptrh	equ	0xFF7
  6695                           tblptrl	equ	0xFF6
  6696                           tablat	equ	0xFF5
  6697                           prodh	equ	0xFF4
  6698                           prodl	equ	0xFF3
  6699                           intcon	equ	0xFF2
  6700                           intcon2	equ	0xFF1
  6701                           postinc0	equ	0xFEE
  6702                           fsr0h	equ	0xFEA
  6703                           fsr0l	equ	0xFE9
  6704                           wreg	equ	0xFE8
  6705                           postinc1	equ	0xFE6
  6706                           postdec1	equ	0xFE5
  6707                           fsr1h	equ	0xFE2
  6708                           fsr1l	equ	0xFE1
  6709                           postinc2	equ	0xFDE
  6710                           postdec2	equ	0xFDD
  6711                           fsr2h	equ	0xFDA
  6712                           fsr2l	equ	0xFD9
  6713                           status	equ	0xFD8
  6714                           pclatu	equ	0xFFB
  6715                           pclath	equ	0xFFA
  6716                           tblptru	equ	0xFF8
  6717                           tblptrh	equ	0xFF7
  6718                           tblptrl	equ	0xFF6
  6719                           tablat	equ	0xFF5
  6720                           prodh	equ	0xFF4
  6721                           prodl	equ	0xFF3
  6722                           intcon	equ	0xFF2
  6723                           intcon2	equ	0xFF1
  6724                           postinc0	equ	0xFEE
  6725                           fsr0h	equ	0xFEA
  6726                           fsr0l	equ	0xFE9
  6727                           wreg	equ	0xFE8
  6728                           postinc1	equ	0xFE6
  6729                           postdec1	equ	0xFE5
  6730                           fsr1h	equ	0xFE2
  6731                           fsr1l	equ	0xFE1
  6732                           postinc2	equ	0xFDE
  6733                           postdec2	equ	0xFDD
  6734                           fsr2h	equ	0xFDA
  6735                           fsr2l	equ	0xFD9
  6736                           status	equ	0xFD8
  6737                           
  6738                           	psect	rparam
  6739  0000                     pclatu	equ	0xFFB
  6740                           pclath	equ	0xFFA
  6741                           tblptru	equ	0xFF8
  6742                           tblptrh	equ	0xFF7
  6743                           tblptrl	equ	0xFF6
  6744                           tablat	equ	0xFF5
  6745                           prodh	equ	0xFF4
  6746                           prodl	equ	0xFF3
  6747                           intcon	equ	0xFF2
  6748                           intcon2	equ	0xFF1
  6749                           postinc0	equ	0xFEE
  6750                           fsr0h	equ	0xFEA
  6751                           fsr0l	equ	0xFE9
  6752                           wreg	equ	0xFE8
  6753                           postinc1	equ	0xFE6
  6754                           postdec1	equ	0xFE5
  6755                           fsr1h	equ	0xFE2
  6756                           fsr1l	equ	0xFE1
  6757                           postinc2	equ	0xFDE
  6758                           postdec2	equ	0xFDD
  6759                           fsr2h	equ	0xFDA
  6760                           fsr2l	equ	0xFD9
  6761                           status	equ	0xFD8
  6762                           
  6763                           	psect	temp
  6764  00004B                     btemp:
  6765                           	opt stack 0
  6766  00004B                     	ds	1
  6767  0000                     int$flags	set	btemp
  6768  0000                     wtemp6	set	btemp+1
  6769                           pclatu	equ	0xFFB
  6770                           pclath	equ	0xFFA
  6771                           tblptru	equ	0xFF8
  6772                           tblptrh	equ	0xFF7
  6773                           tblptrl	equ	0xFF6
  6774                           tablat	equ	0xFF5
  6775                           prodh	equ	0xFF4
  6776                           prodl	equ	0xFF3
  6777                           intcon	equ	0xFF2
  6778                           intcon2	equ	0xFF1
  6779                           postinc0	equ	0xFEE
  6780                           fsr0h	equ	0xFEA
  6781                           fsr0l	equ	0xFE9
  6782                           wreg	equ	0xFE8
  6783                           postinc1	equ	0xFE6
  6784                           postdec1	equ	0xFE5
  6785                           fsr1h	equ	0xFE2
  6786                           fsr1l	equ	0xFE1
  6787                           postinc2	equ	0xFDE
  6788                           postdec2	equ	0xFDD
  6789                           fsr2h	equ	0xFDA
  6790                           fsr2l	equ	0xFD9
  6791                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    12
    Data        32
    BSS         124
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     55      74
    BANK0           160     25     144
    BANK1           256     19      37
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    read_cal$514	PTR int  size(2) Largest target is 18
		 -> mins(BANK0[18]), an(BANK0[18]), 

    read_cal$512	PTR int  size(2) Largest target is 18
		 -> maxs(BANK0[18]), an(BANK0[18]), 

    read_cal$510	PTR int  size(2) Largest target is 18
		 -> mins(BANK0[18]), an(BANK0[18]), 

    read_cal$508	PTR int  size(2) Largest target is 18
		 -> maxs(BANK0[18]), an(BANK0[18]), 


Critical Paths under _main in COMRAM

    _main->___ftadd
    _mspeed->___ftadd
    _MotorBSpeed->___awdiv
    _MotorASpeed->___awdiv
    _line_cal->___aldiv
    ___aldiv->___lmul
    ___fttol->___ftadd
    ___ftmul->___awtoft
    ___ftadd->___ftmul
    ___awtoft->___ftpack
    _EnhancedRead->___awdiv

Critical Paths under _enc in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_mspeed
    _mspeed->___fttol
    ___fttol->___ftadd

Critical Paths under _enc in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _enc in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _enc in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _enc in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _enc in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _enc in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _enc in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _enc in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0   24599
                                             53 COMRAM     2     2      0
                                              0 BANK1     19    19      0
                       _EnhancedRead
                            ___almod
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           _init_cal
                           _init_tms
                           _line_cal
                             _mspeed
                           _read_cal
                               _setA
                               _setB
                               _setC
                               _setD
 ---------------------------------------------------------------------------------
 (1) _setD                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setC                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setB                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setA                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_cal                                            19    19      0    1040
                                             20 COMRAM    19    19      0
 ---------------------------------------------------------------------------------
 (1) _mspeed                                               4     0      4    4138
                                             21 BANK0      4     0      4
                        _MotorASpeed
                        _MotorBSpeed
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) _MotorBSpeed                                          3     1      2    1301
                                             28 COMRAM     3     1      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) _MotorASpeed                                          3     1      2    1335
                                             28 COMRAM     3     1      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _line_cal                                            28    28      0    2410
                                             46 COMRAM     4     4      0
                                              0 BANK0     24    24      0
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     816
                                             20 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     805
                                             32 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_tms                                             0     0      0       0
                          _MotorsPWM
                            _an_init
                            _init_io
 ---------------------------------------------------------------------------------
 (2) _init_io                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _an_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MotorsPWM                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_cal                                             2     2      0     198
                                             20 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     551
                                              6 BANK0     15    11      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftneg                                              3     0      3     155
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    4541
                                             32 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftge                                               9     3      6     378
                                             20 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             12     6      6    5246
                                             47 COMRAM     6     0      6
                                              0 BANK0      6     6      0
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    3506
                                             28 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2833
                                             20 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___almod                                             10     2      8     613
                                             20 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (1) _EnhancedRead                                         4     4      0    1183
                                             28 COMRAM     4     4      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     985
                                             20 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _enc                                                 20    20      0       0
                                              0 COMRAM    20    20      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EnhancedRead
     ___awdiv
   ___almod
   ___awtoft
     ___ftpack
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
   ___ftge
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___ftneg
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftneg (ARG)
   _init_cal
   _init_tms
     _MotorsPWM
     _an_init
     _init_io
   _line_cal
     ___aldiv
       ___lmul (ARG)
     ___lmul
   _mspeed
     _MotorASpeed
       ___awdiv
     _MotorBSpeed
       ___awdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftneg (ARG)
     ___fttol (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
   _read_cal
   _setA
   _setB
   _setC
   _setD

 _enc (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     13      25       7       14.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      90       5       90.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     37      4A       1       78.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FF      20        0.0%
DATA                 0      0      FF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Sat Aug 19 03:24:56 2017

                      _i 0049                       l50 0F84                       l51 0860  
                     l60 0990                       l52 088A                       l61 09C6  
                     l70 0BAC                       l54 08AC                       l63 0A2A  
                     l55 08BA                       l64 0A6C                       l56 0902  
                     l81 0CCE                       l65 0AAE                       l49 085A  
                     l90 0E7A                       l66 0AE0                       l91 0EF6  
                     l75 0C16                       l59 0942                       l92 0F48  
                     l84 0CFA                       l68 0B06                       l77 0C26  
                     l86 0D14                       l78 0CA4                       l87 0E58  
                     l79 0C8A                       l89 0E76             ___awdiv@sign 001A  
                     _an 00B2                       _cs 00E7                       _kd 003F  
                     _es 0038                       _kp 0042                       _lp 008C  
                     _ls 00DD              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
           ___ftadd@exp1 00C9             ___ftadd@exp2 00C8             ___ftadd@sign 00C7  
                    l131 2286                      l140 2264                      l143 0FDE  
                    l128 2272                      l136 220C                      l152 119C  
                    l161 1356                      l138 2244                      l170 14B6  
                    l146 1074                      l155 122E                      l180 16BE  
                    l164 13EC                      l181 17A6                      l173 153E  
                    l261 1F6A                      l149 1106                      l158 12C4  
                    l167 1462                      l184 17C6                      l280 2040  
                    l272 1FEC                      l425 22E0                      l177 158A  
                    l265 1FA4                      l257 1F52                      l426 22F4  
                    l700 209E                      l276 2004                      l701 20CE  
                    l710 1BAE                      l470 1D40                      l631 1E34  
                    l711 1BBE                      l632 1E1E                      l472 1D6E  
                    l609 23C6                      l713 1BD6                      l473 1D62  
                    l490 1F0A                      l482 1EA2                      l634 1E5C  
                    l714 1BE6                      l730 1AC8                      l491 1F20  
                    l483 1EB6                      l635 1E52                      l707 1B54  
                    l731 1AB4                      l628 1E00                      l476 1DA2  
                    l581 2112                      l485 1ED4                      l629 1DF6  
                    l709 1B7C                      l477 1DB0                      l469 1D28  
                    l590 2178                      l582 2122                      l486 1EC8  
                    l718 2458                      l478 1DC6                      l663 187E  
                    l584 2140                      l736 1AF4                      l728 1A22  
                    l585 2138                      l489 1EFC                      l673 18F4  
                    l737 1AE4                      l682 1946                      l674 18E8  
                    l666 188C                      l683 193A                      l667 1894  
                    l659 1844                      l739 1B1A                      l588 2160  
                    l668 1902                      l589 216A                      l685 1970  
                    l686 198E                      l687 19C2             __CFG_CPB$OFF 000000  
                    _PR2 000FCB             __CFG_CPD$OFF 000000             __CFG_BOR$OFF 000000  
                    _ckd 003C                      _ckp 00EB                      _enc 0008  
                    prod 000FF3                      wreg 000FE8             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     l3015 1FA4                     l3031 2040  
                   l3207 222C                     l3209 2234                     ?_enc 0001  
                   l3333 17C6                     l3325 1764                     l3237 10EA  
                   l3255 1212                     l3169 226A                     l3273 133A  
                   l3197 21FC                     l3641 0A2A                     l2931 20FA  
                   l3635 09E8                     l3717 0C92                     l3709 0C74  
                   l3653 0AAE                     l3647 0A6C                     l3683 0BCA  
                   l3689 0BF8                     u4101 1B3C                     u4030 190E  
                   u3400 2034                     u4121 1B64                     u3330 1F7E  
                   u4211 19FE                     u3331 1F78                     u4060 1952  
                   u4230 1A48                     u3350 1F98                     u4310 08EC  
                   u3280 2144                     u3440 1DE8                     u4400 0A08  
                   u3610 222C                     u4410 0A26                     u4235 1A3E  
                   u3540 1D72                     u3348 1F80                     u3380 2018  
                   u3700 122C                     u4420 0A4A                     u4340 092E  
                   u3381 2012                     u4270 1AFE                     u4430 0A68  
                   u3480 1E66                     u3800 1764                     u3720 133A  
                   u3640 0FDC                     u4440 0A8C                     u4360 0986  
                   u3730 1354                     u4530 0BF8                     u4450 0AAA  
                   u3820 17BA                     u3660 10EA                     u4620 0E38  
                   u4460 0ACE                     u4380 09BC                     u3901 1802  
                   u3398 201A                     u3670 1104                     u4630 0E4E  
                   u4550 0C6A                     u4390 09E4                     u3760 14B4  
                   u4640 0E70                     u4480 0B5E                     u4481 0B58  
                   u3930 1836                     u3690 1212                     u4570 0C92  
                   u3860 1ED8                     u3790 16B4                     u4670 0F70  
                   u3960 1870                     u4498 0B60                     u3891 17E6  
                   u3990 18BC                     _TXIF 007CF4                     _main 080E  
           ___ftpack@arg 0015                     _maxs 00A0                     _mode 0088  
                   _setA 24BE                     _setB 24B4                     _setC 24AA  
                   _setD 24A0                     _mins 008E             ___ftpack@exp 0018  
                   _time 0060                     fsr0h 000FEA                     fsr1h 000FE2  
                   fsr2h 000FDA                     fsr0l 000FE9                     fsr1l 000FE1  
                   fsr2l 000FD9                     btemp 004B                     prodh 000FF4  
                   prodl 000FF3                     start 000E            __CFG_IESO$OFF 000000  
           ___ftmul@cntr 002E             ___param_bank 000000             ___ftmul@sign 002F  
           ___fttol@exp1 00D8                    ??_enc 0001             ___fttol@lval 00D4  
          __CFG_PLLDIV$5 000000          __end_of___aldiv 1DD8          __end_of___almod 1F32  
                  ?_main 0001                    ?_setA 0001                    ?_setB 0001  
                  ?_setC 0001                    ?_setD 0001          __end_of___awdiv 2182  
        __end_of___ftadd 19E8                    _CMCON 000FB4          __end_of___ftneg 2466  
        __end_of___ftmul 1C20          ___awdiv@divisor 0017          __end_of___fttol 1B2C  
         __CFG_DEBUG$OFF 000000                    i2l316 1CC0                    i2l317 1C86  
        ___awdiv@counter 0019                    _TMR0H 000FD7                    _TMR1H 000FCF  
                  _TMR0L 000FD6                    _TMR1L 000FCE                    _SPBRG 000FAF  
          __CFG_USBDIV$2 000000                    _TXREG 000FAD          __end_of_an_init 2442  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000      ___lmul@multiplicand 0019            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
          ___awtoft@sign 0020          __end_of_init_io 2418            ___ftpack@sign 0019  
                  main@a 0102                    main@b 0104                    main@i 0106  
                  pclath 000FFA                    tablat 000FF5                    status 000FD8  
                  wtemp6 004C           __CFG_ICPRT$OFF 000000     __end_of_EnhancedRead 22D0  
         __CFG_MCLRE$OFF 000000          __initialization 2182             __end_of_main 0FC2  
           __end_of_setA 24C8             __end_of_setB 24BE             __end_of_setC 24B4  
           __end_of_setD 24AA                   ??_main 0036            ___fttol@sign1 00D3  
                 ??_setA 0015                   ??_setB 0015                   ??_setC 0015  
                 ??_setD 0015            __activetblptr 000002          __CFG_CCP2MX$OFF 000000  
                 _ADRESH 000FC4                   _ADRESL 000FC3                   _CCPR1L 000FBE  
                 _CCPR2L 000FBB         ___awdiv@dividend 0015         __end_of___awtoft 23EA  
       __end_of___ftpack 1E86                   i2l2829 1C76                   i2l2839 1CB6  
                 _TMR0IF 007F92                   _SPBRGH 000FB0                   _TMR2ON 007E52  
          ??_MotorASpeed 001F            ??_MotorBSpeed 001F           __CFG_XINST$OFF 000000  
            line_cal@aux 00D6                   ___ftge 206E                   ___lmul 22D0  
              ??___aldiv 0029                ??___almod 001D                ??___awdiv 0019  
              ??___ftadd 00C4           __CFG_STVREN$ON 000000                   _calval 0113  
              ??___ftneg 0018                ??___ftmul 0027                ??___fttol 00CE  
                 _kd_val 0801         __end_of_line_cal 17D2         __end_of_init_cal 2266  
                 _kp_val 0805         __end_of_read_cal 1464                   _old_lp 008A  
                 _intern 0045         __end_of_init_tms 2374                   clear_0 21C8  
                 clear_1 21D4                ??_an_init 0015         ___awdiv@quotient 001B  
                 _mspeed 2466                   _status 00EE                   main@fs 010A  
     __size_of_MotorsPWM 003E    ___ftmul@f3_as_product 002B                ??_init_io 0015  
           __pdataCOMRAM 0038             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8            _line_cal$2254 00C4  
             __accesstop 0060  __end_of__initialization 21E6          __CFG_PBADEN$OFF 000000  
             ___ftadd@f1 0030               ___ftadd@f2 0033               ___ftge@ff1 0015  
             ___ftge@ff2 0018            ___rparam_used 000001               ___ftneg@f1 0015  
             ___awtoft@c 001D               ___ftmul@f1 0021               ___ftmul@f2 0024  
             ___fttol@f1 00CA           __pcstackCOMRAM 0001             __pidataBANK0 2480  
    __end_of_MotorASpeed 1FD4      __end_of_MotorBSpeed 206E               __pbssBANK0 0060  
             __pbssBANK1 0113    __size_of_EnhancedRead 006A        __end_of_MotorsPWM 23B2  
                ?___ftge 0015                  ?___lmul 0015           ___lmul@product 001D  
              ?___awtoft 001D                ?___ftpack 0015                  ?_mspeed 00D9  
                _T2CKPS0 007E50                  _T2CKPS1 007E51             _EnhancedRead 2266  
        __CFG_VREGEN$OFF 000000                ?_line_cal 0001                ?_init_cal 0001  
              ?_read_cal 0001                ?_init_tms 0001              _MotorASpeed 1F32  
            _MotorBSpeed 1FD4                  __Hparam 0000                  __Lparam 0000  
                ___aldiv 1D0C                  ___almod 1E86          __size_of___ftge 0090  
                ___awdiv 20FE          __size_of___lmul 0056                  ___ftadd 17D2  
                ___ftneg 2442                  ___ftmul 1B2C                  ___fttol 19E8  
           __psmallconst 0800                  __pcinit 2182                  _an_init 2418  
             ??___awtoft 0020               ??___ftpack 001A                  __ramtop 0800  
                __ptext0 080E                  __ptext1 24A0                  __ptext2 24AA  
        __size_of_mspeed 001A                  __ptext3 24B4                  __ptext4 24BE  
                __ptext5 0FC2                  __ptext6 2466                  __ptext7 1FD4  
                __ptext8 1F32                  __ptext9 1464                _T0CONbits 000FD5  
              _T1CONbits 000FCD                _T2CONbits 000FCA             __size_of_enc 1D04  
                _init_io 23EA         ___aldiv@dividend 0021                  main@dif 010E  
                main@der 0100           __pintcode_body 1C20     end_of_initialization 21E6  
             ??_line_cal 002F               ??_init_cal 0015            __Lmediumconst 0000  
                int_func 1C20               ??_read_cal 0015               ??_init_tms 0015  
                mspeed@a 00D9                  mspeed@b 00DB                _RCSTAbits 000FAB  
       ___aldiv@quotient 002B                  postdec1 000FE5                  postdec2 000FDD  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
             _speed_vals 0809                _PORTAbits 000F80                _PORTBbits 000F81  
              _PORTCbits 000F82                _PORTDbits 000F83                _PORTEbits 000F84  
              _TRISAbits 000F92                _TRISBbits 000F93                _TRISCbits 000F94  
              _TRISDbits 000F95                _TRISEbits 000F96              _CCP1CONbits 000FBD  
            _CCP2CONbits 000FBA                _TXSTAbits 000FAC              ___ftmul@exp 002A  
         __end_of___ftge 20FE           __end_of___lmul 2326              _BAUDCONbits 000FB8  
          __pidataCOMRAM 2493           __end_of_kd_val 0805           __end_of_kp_val 0809  
         __end_of_mspeed 2480      start_initialization 2182              __end_of_enc 1D0C  
             line_cal@ok 00D0                _MotorsPWM 2374                 ??___ftge 001B  
               ??___lmul 001D              __pdataBANK0 00DD         __CFG_LPT1OSC$OFF 000000  
               ??_mspeed 0036        __size_of___awtoft 0038        __size_of___ftpack 00AE  
            __pbssCOMRAM 0045            __pcstackBANK0 00C4            __pcstackBANK1 0100  
           _read_cal$510 0020             _read_cal$512 0022             _read_cal$514 0024  
           _read_cal$508 001E             ?_MotorASpeed 001D             ?_MotorBSpeed 001D  
      __size_of_line_cal 036E        __size_of_init_cal 0072        __size_of_read_cal 04A2  
      __size_of_init_tms 004E               ?_MotorsPWM 0001                __pintcode 0008  
               ?___aldiv 0021                 ?___almod 0015                 ?___awdiv 0015  
               ?___ftadd 0030                 ?___ftneg 0015                 ?___ftmul 0021  
               ?___fttol 00CA                 ?_an_init 0001         ___almod@dividend 0015  
            __smallconst 0800                 ?_init_io 0001             MotorASpeed@S 001D  
           MotorBSpeed@S 001D          ___aldiv@divisor 0025                 _T2OUTPS0 007E53  
               _T2OUTPS1 007E54                 _T2OUTPS2 007E55                 _T2OUTPS3 007E56  
        ___aldiv@counter 0029            EnhancedRead@i 0020                 i2u308_40 1CB6  
               _UCFGbits 000F6F                 _RCONbits 000FD0         __CFG_WDTPS$32768 000000  
               _UCONbits 000F6D               _ADCON0bits 000FC2               _ADCON1bits 000FC1  
             _ADCON2bits 000FC0                main@i_343 0108                main@speed 0111  
      ___lmul@multiplier 0015              _INTCON2bits 000FF1                copy_data0 2196  
              copy_data1 21B6                 __Hrparam 0000                line_cal@a 00C8  
              line_cal@b 00CC                line_cal@i 00D8                line_cal@j 00DA  
               __Lrparam 0000                init_cal@i 0015              ??_MotorsPWM 0015  
          line_cal@value 00D2                read_cal@i 0026         __size_of___aldiv 00CC  
       __size_of___almod 00AC         __size_of___awdiv 0084         __size_of___ftadd 0216  
       __size_of___ftneg 0024         __size_of___ftmul 00F4         __size_of___fttol 0144  
               ___awtoft 23B2                 ___ftpack 1DD8         __size_of_an_init 002A  
       __size_of_init_io 002E                 _best_err 0047                 __ptext10 22D0  
               __ptext11 1D0C                 __ptext20 206E                 __ptext12 2326  
               __ptext21 17D2                 __ptext13 23EA                 __ptext22 23B2  
               __ptext14 2418                 __ptext23 1DD8                 __ptext15 2374  
               __ptext24 1E86                 __ptext16 21F4                 __ptext25 2266  
               __ptext17 19E8                 __ptext26 20FE                 __ptext18 2442  
               __ptext19 1B2C          ___almod@divisor 0019          ___almod@counter 001D  
               _line_cal 1464                 _init_cal 21F4            __size_of_main 07B4  
               _read_cal 0FC2            __size_of_setA 000A            __size_of_setB 000A  
          __size_of_setC 000A                 _init_tms 2326            __size_of_setD 000A  
   __size_of_MotorASpeed 00A2     __size_of_MotorBSpeed 009A                 int$flags 004B  
        EnhancedRead@aux 001E                 main@faux 010C    __CFG_CPUDIV$OSC1_PLL2 000000  
          ?_EnhancedRead 0001               _INTCONbits 000FF2                 intlevel2 0000  
     __end_of_speed_vals 080D               _OSCCONbits 000FD3           ??_EnhancedRead 001D  
           ___aldiv@sign 002A       __CFG_FOSC$HSPLL_HS 000000             ___almod@sign 001E  
